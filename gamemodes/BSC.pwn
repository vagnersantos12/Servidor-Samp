// Obrigado por baixar no Brasil Mods Samp.
#include <a_samp>
#include <a_npc>
#include <Dini>
#include <streamer>
#define CSEGURANCA 9234

#if defined MAX_VEHICLES
    #undef MAX_VEHICLES
    #define MAX_VEHICLES (3000) //N�mero de carros
#endif
#if defined MAX_PLAYERS
    #undef MAX_PLAYERS
    #define MAX_PLAYERS (501) //N�mero de Slots + 1
#endif

#pragma tabsize 0
#define DIALOG_SKIN_COP     32451
#define EXTINTOR 5//sistename de incendio
#define CAMINHAO 10//sistema de incendio
//#define CAR_MENU 89

//EVENTOS
#define EVENTOS 1342
//FIM EVENTOS
#define F_MAX_OBJECTS		1000	//maximum amount of objects the streamer will create; PLEASE change this to the amount of objects you are using.
#define UpdateTime			300		//update time in ms (milliseconds).
#define ObjectsToStream		400 	//maximum number of objects that will be streamed for one player (maximum = 400 objects).
#define StreamRange			300.0
forward OnPlayerHaveExtraCash(playerid,extraamount);

new pban[MAX_PLAYERS];
new v[6];
new shifthour;
new Equipamentos[MAX_PLAYERS];
new cdivulgar[MAX_PLAYERS];
new Camera[MAX_PLAYERS];
forward Incendio(playerid);//sistema de incendio
forward ApagarFogo(playerid);//sistema de incendio

enum OInfo
{
	ModelID,
	ObjectID[MAX_PLAYERS],
	Float:ox,
	Float:oy,
	Float:oz,
	Float:orx,
	Float:ory,
	Float:orz,
	Float:ovdist,
	bool:ObjectCreated[MAX_PLAYERS],
}

new ObjectInfo[F_MAX_OBJECTS][OInfo];
new bool:ObjectUpdatetRunning;
new bool:CantCreateMore;
new bool:RefreshObjects[MAX_PLAYERS];
new Float:OldX[MAX_PLAYERS], Float:OldY[MAX_PLAYERS], Float:OldZ[MAX_PLAYERS];
forward F_ObjectUpdate(bool:DontCheckDistance);
forward F_StartUpdate();
public F_StartUpdate()
{
    SetTimer("F_ObjectUpdate", UpdateTime, 1);
}
stock F_CreateDynamicObject(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz, Float:vdist=0.0)
{
	if(ObjectUpdatetRunning == false)
	{
	    SetTimer("F_StartUpdate", F_MAX_OBJECTS/2, 0);
	    ObjectUpdatetRunning = true;
    }
	new objectid;
	if(CantCreateMore == false)
	{
		for(new i; i<F_MAX_OBJECTS; i++)
		{
		    if(i == F_MAX_OBJECTS-1)
		    {
		        printf("Only the first %i objects could be created - object limit exceeded.", F_MAX_OBJECTS);
				CantCreateMore = true;
		    }
		    if(ObjectInfo[i][ModelID] == 0)
		    {
		        objectid = i;
		        break;
		    }
		}
	}
	else
	{
	    return -1;
	}
	if(modelid == 0)
	{
	    printf("Invalid modelid for object %i", objectid);
	    return -1;
	}
    ObjectInfo[objectid][ModelID] = modelid;
    ObjectInfo[objectid][ox] = x;
    ObjectInfo[objectid][oy] = y;
    ObjectInfo[objectid][oz] = z;
    ObjectInfo[objectid][orx] = rx;
    ObjectInfo[objectid][ory] = ry;
    ObjectInfo[objectid][orz] = rz;
    ObjectInfo[objectid][ovdist] = vdist;
	return objectid;
}
stock F_IsValidObject(objectid)
{
	if(ObjectInfo[objectid][ModelID] == 0 || objectid == -1)
	{
	    return 0;
	}
	return 1;
}
stock F_DestroyObject(objectid)
{
	if(F_IsValidObject(objectid))
	{
		for(new playerid; playerid<MAX_PLAYERS; playerid++)
		{
		    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid) && ObjectInfo[objectid][ObjectCreated][playerid] == true)
		    {
				DestroyPlayerObject(playerid, ObjectInfo[objectid][ObjectID][playerid]);
				ObjectInfo[objectid][ObjectCreated][playerid] = false;
			}
		}
		ObjectInfo[objectid][ModelID] = 0;
		return 1;
	}
	return 0;
}
stock F_MoveObject(objectid, Float:x, Float:y, Float:z, Float:speed)
{
	if(F_IsValidObject(objectid))
	{
		new time;
		for(new playerid; playerid<MAX_PLAYERS; playerid++)
		{
		    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid) && ObjectInfo[objectid][ObjectCreated][playerid] == true)
		    {
				time = MovePlayerObject(playerid, ObjectInfo[objectid][ObjectID][playerid], x, y, z, speed);
			}
		}
		return time;
	}
	return 0;
}
stock F_StopObject(objectid)
{
	if(F_IsValidObject(objectid))
	{
		for(new playerid; playerid<MAX_PLAYERS; playerid++)
		{
		    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid) && ObjectInfo[objectid][ObjectCreated][playerid] == true)
		    {
		        StopPlayerObject(playerid,  ObjectInfo[objectid][ObjectID][playerid]);
			}
		}
		return 1;
	}
	return 0;
}
stock F_SetObjectPos(objectid, Float:x, Float:y, Float:z)
{
	if(F_IsValidObject(objectid))
	{
	    ObjectInfo[objectid][ox] = x;
	    ObjectInfo[objectid][oy] = y;
	    ObjectInfo[objectid][oz] = z;
		for(new playerid; playerid<MAX_PLAYERS; playerid++)
		{
		    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid) && ObjectInfo[objectid][ObjectCreated][playerid] == true)
		    {
				SetPlayerObjectPos(playerid, ObjectInfo[objectid][ObjectID][playerid], x, y, z);
			}
		}
		return 1;
	}
	return 0;
}
stock F_GetObjectPos(objectid, &Float:x, &Float:y, &Float:z)
{
	if(F_IsValidObject(objectid))
	{
	    x = ObjectInfo[objectid][ox];
	    y = ObjectInfo[objectid][oy];
	    z = ObjectInfo[objectid][oz];
	    return 1;
	}
	else
	{
		return 0;
	}
}
stock F_SetObjectRot(objectid, Float:rx, Float:ry, Float:rz)
{
	if(F_IsValidObject(objectid))
	{
	    ObjectInfo[objectid][orx] = rx;
	    ObjectInfo[objectid][ory] = ry;
	    ObjectInfo[objectid][orz] = rz;
		for(new playerid; playerid<MAX_PLAYERS; playerid++)
		{
		    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid) && ObjectInfo[objectid][ObjectCreated][playerid] == true)
		    {
				SetPlayerObjectRot(playerid, ObjectInfo[objectid][ObjectID][playerid], rx, ry, rz);
			}
		}
		return 1;
	}
	return 0;
}
stock F_GetObjectRot(objectid, &Float:rx, &Float:ry, &Float:rz)
{
	if(F_IsValidObject(objectid))
	{
	    rx = ObjectInfo[objectid][orx];
	    ry = ObjectInfo[objectid][ory];
	    rz = ObjectInfo[objectid][orz];
	    return 1;
	}
	else
	{
		return 0;
	}
}
stock F_RefreshObjects(playerid)
{
	if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	{
		RefreshObjects[playerid] = true;
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		F_PlayerObjectUpdate(playerid, x, y, z);
		return 1;
	}
	return 0;
}
public F_ObjectUpdate(bool:DontCheckDistance)
{
	new Float:ObjDistance[F_MAX_OBJECTS];
	new Closest[ObjectsToStream];
	new ObjectArr[F_MAX_OBJECTS];
	new nr;
	new bool:Firstloop;
	new bool:DontDestroy[F_MAX_OBJECTS];
	for(new playerid; playerid<MAX_PLAYERS; playerid++)
	{
	    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	    {
	        if(!IsPlayerInRangeOfPoint(playerid, 1.0, OldX[playerid], OldY[playerid], OldZ[playerid]) || DontCheckDistance)
			{
	        	GetPlayerPos(playerid, OldX[playerid], OldY[playerid], OldZ[playerid]);
				nr = 0;
		        for(new objectid; objectid<F_MAX_OBJECTS; objectid++)
		        {
		            if(F_IsValidObject(objectid))
		            {
		                ObjDistance[objectid] = floatsqroot(floatpower(floatsub(ObjectInfo[objectid][ox],OldX[playerid]),2)+floatpower(floatsub(ObjectInfo[objectid][oy],OldY[playerid]),2)+floatpower(floatsub(ObjectInfo[objectid][oz],OldZ[playerid]),2));
						if(floatcmp(ObjDistance[objectid], StreamRange) == -1)
						{
						    ObjectArr[nr] = objectid;
						    nr++;
						}
					}
				}
                Closest = "";
				if(nr > ObjectsToStream)
				{
			        for(new loop; loop<ObjectsToStream; loop++)
			        {
			            Firstloop = true;
			            for(new objectid; objectid<nr; objectid++)
			            {
			                if((ObjDistance[ObjectArr[objectid]] != 999999999.99) && ((floatcmp(ObjDistance[ObjectArr[objectid]], ObjDistance[Closest[loop]]) == -1) || Firstloop))
			                {
			            		Firstloop = false;
			                    Closest[loop] = ObjectArr[objectid];
			                }
			            }
			            ObjDistance[Closest[loop]] = 999999999.99;
			        }
				}
				else
				{
			        for(new objectid; objectid<nr; objectid++)
			        {
						Closest[objectid] = ObjectArr[objectid];
			        }
				}
	            for(new objectid; objectid<F_MAX_OBJECTS; objectid++) { DontDestroy[objectid] = false; }
				for(new objectid; objectid<ObjectsToStream && objectid<nr; objectid++)
				{
					DontDestroy[Closest[objectid]] = true;
				}
	            for(new objectid; objectid<F_MAX_OBJECTS; objectid++)
	            {
				    if(ObjectInfo[objectid][ObjectCreated][playerid] == true && DontDestroy[objectid] == false)
				    {
				        DestroyPlayerObject(playerid, ObjectInfo[objectid][ObjectID][playerid]);
						ObjectInfo[objectid][ObjectCreated][playerid] = false;
				    }
				}
				for(new loop; loop<ObjectsToStream && loop<nr; loop++)
				{
				    if(ObjectInfo[Closest[loop]][ObjectCreated][playerid] == false)
				    {
						ObjectInfo[Closest[loop]][ObjectID][playerid] = CreatePlayerObject(playerid, ObjectInfo[Closest[loop]][ModelID], ObjectInfo[Closest[loop]][ox], ObjectInfo[Closest[loop]][oy], ObjectInfo[Closest[loop]][oz], ObjectInfo[Closest[loop]][orx], ObjectInfo[Closest[loop]][ory], ObjectInfo[Closest[loop]][orz], ObjectInfo[Closest[loop]][ovdist]);
						ObjectInfo[Closest[loop]][ObjectCreated][playerid] = true;
				    }
				}
			}
		}
	}
}
stock F_ObjectUpdateForAll()
{
    F_ObjectUpdate(true);
}
stock F_PlayerObjectUpdate(playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
    {
		OldX[playerid] = x;
		OldY[playerid] = y;
		OldZ[playerid] = z;
		new nr;
		new Float:ObjDistance[F_MAX_OBJECTS];
		new ObjectArr[F_MAX_OBJECTS];
        for(new objectid; objectid<F_MAX_OBJECTS; objectid++)
        {
			if(F_IsValidObject(objectid))
            {
                ObjDistance[objectid] = floatsqroot(floatpower(floatsub(ObjectInfo[objectid][ox],x),2)+floatpower(floatsub(ObjectInfo[objectid][oy],y),2)+floatpower(floatsub(ObjectInfo[objectid][oz],z),2));
				if(floatcmp(ObjDistance[objectid], StreamRange) == -1)
				{
				    ObjectArr[nr] = objectid;
				    nr++;
				}
			}
		}
		new Closest[ObjectsToStream];
		if(nr > ObjectsToStream)
		{
	        for(new loop; loop<ObjectsToStream; loop++)
	        {
				new bool:Firstloop = true;
				for(new objectid; objectid<nr; objectid++)
				{
					if((ObjDistance[ObjectArr[objectid]] != 999999999.99) && ((floatcmp(ObjDistance[ObjectArr[objectid]], ObjDistance[Closest[loop]]) == -1) || Firstloop))
	                {
	            		Firstloop = false;
	                    Closest[loop] = ObjectArr[objectid];
	                }
	            }
	            ObjDistance[Closest[loop]] = 999999999.99;
	        }
		}
		else
		{
	        for(new objectid; objectid<nr; objectid++)
	        {
				Closest[objectid] = ObjectArr[objectid];
	        }
		}
		new bool:DontDestroy[F_MAX_OBJECTS];
		for(new objectid; objectid<ObjectsToStream && objectid<nr; objectid++)
		{
			DontDestroy[Closest[objectid]] = true;
		}
		for(new objectid; objectid<F_MAX_OBJECTS; objectid++)
		{
		    if(ObjectInfo[objectid][ObjectCreated][playerid] == true && (DontDestroy[objectid] == false || RefreshObjects[playerid] == true))
		    {
		        DestroyPlayerObject(playerid, ObjectInfo[objectid][ObjectID][playerid]);
				ObjectInfo[objectid][ObjectCreated][playerid] = false;
		    }
		}
		RefreshObjects[playerid] = false;
		for(new loop; loop<ObjectsToStream && loop<nr; loop++)
		{
		    if(ObjectInfo[Closest[loop]][ObjectCreated][playerid] == false)
		    {
				ObjectInfo[Closest[loop]][ObjectID][playerid] = CreatePlayerObject(playerid, ObjectInfo[Closest[loop]][ModelID], ObjectInfo[Closest[loop]][ox], ObjectInfo[Closest[loop]][oy], ObjectInfo[Closest[loop]][oz], ObjectInfo[Closest[loop]][orx], ObjectInfo[Closest[loop]][ory], ObjectInfo[Closest[loop]][orz], ObjectInfo[Closest[loop]][ovdist]);
				ObjectInfo[Closest[loop]][ObjectCreated][playerid] = true;
		    }
		}
	}
}
stock F_SetPlayerPos(playerid, Float:x, Float:y, Float:z)
{
	F_PlayerObjectUpdate(playerid, x, y, z);
	SetPlayerPos(playerid, x, y, z);
}
#define SetPlayerPos F_SetPlayerPos
//================================================//
#define ForPlayers(%1) for(new %1 = 0; %1 < MAX_PLAYERS; %1++) if(IsPlayerConnected(%1) && !IsPlayerNPC(%1))
new year, month,day;
new hour, minute, second;
new mudandonick[MAX_PLAYERS];
//new emguerra[MAX_PLAYERS];
new gPlayerTerminal[MAX_PLAYERS];
new TutTime[MAX_PLAYERS];
forward RandomServerNames();
new SVNAMES[3][55] = {
"[BHL] Brasil Hard Life [0.3.7 - R5]",
"[BHL] Brasil Hard Life [v1.0]",
"[BHL] Brasil Hard Life [RPG]"
};
new gmsg[MAX_PLAYERS];
//========[SNIPER UM TIRO]=======//
new Float:hp_old[MAX_PLAYERS];
new Float:hp_new[MAX_PLAYERS];
new Float:hp_counter[MAX_PLAYERS];
new Float:ss[MAX_PLAYERS];
new Float:ss2[MAX_PLAYERS];
new Float:armour_old[MAX_PLAYERS];
forward GetHealthAndVerify();
//========[ANTI-SPAM]========//
#define SPAM_MAX_MSGS 6
#define SPAM_TIMELIMIT 3
new gSpamCount[MAX_PLAYERS][2];
new panuncio;
enum e_votacao
{
	bool:iniciada,
	sim,
	nao,
}
new bool:votou[MAX_PLAYERS];
new votacao[e_votacao];
new Dia, Mes, Ano, Hora, Minuto, Segundo;
#define COR_REGRAS 7491F6
#define COR_PM 0x9999FFF6
#define COR_PR 0x666699F6
#define COR_EXE 0x00660CF6
#define COR_SAMU 0xCC6666F6
#define COR_TCP 0x0000CCF6
#define COR_TAL 0xF4005BF6
#define COR_PRE 0x00A5F6AA
#define COR_HITMAN 0xA9A9A9F6
#define COR_REP 0xFFC1C1F6
#define COR_TAXI 0xF68E00F6
#define COR_PF 0x000000ff //0x000000ff
#define COR_COSA 0x66FFFFF6
#define COR_YAK 0x006699C8
#define COR_GRO 0x33FF00F6
#define COR_AL 0xFFCC99F6
#define COR_PC 0x93833EF6
#define COR_BALLAS 0x9900CCF6
#define COR_VAGOS 0xFFFF33F6
#define COR_SONS 0x9D000096
#define COR_MAYANS 0xCCCC6666FFFF
#define COR_ADMIN 0xFF34B3F6

new MeioDeApagar[MAX_PLAYERS];
new FogoID[9];
new Float:FogoX[9], Float:FogoY[9], Float:FogoZ[9];
new bool:IncendioAcontecendo;
new bool:FogoApagado[9];
new bool:ApagandoIncendio[MAX_PLAYERS];
new blackname[MAX_PLAYER_NAME];
new TempoAnGang;
new TempoAnTaliban;
new TempoAnAlqaeda;
new TempoRecarga;
new TempoAnHitmans;
new TempoRelatoAdm;
new TempoEquipargg;
new TempoAnmerce;
new TempoAnMafia;
new TempoAnTaxi;
new panunciogang;
new panunciomafia;
new TruckMission[MAX_PLAYERS];
new var1[MAX_PLAYERS];
new panunciotaliban;
new panuncioalqaeda;
new panunciotaxi;
new panunciohitmans;
new prelatoadm;
new pequipargg;
new panunciomerce;
new gpTimes[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new InviteJob[MAX_PLAYERS];
new GalaoOffer[MAX_PLAYERS];
new GalaoPrice[MAX_PLAYERS];
new away[MAX_PLAYERS];
enum TrInfo
{
    Float:MinX,
    Float:MinY,
    Float:MaxX,
    Float:MaxY,
	exemortos,
	talmortos,
	almortos,
};
new Territorio[TrInfo];
#define MAX_SPIKESTRIPS 200
enum BlInfo
{
	pMotivo[126],
	pAdmBan[MAX_PLAYER_NAME],
	pData[20],
	pHora[20],
	pNick[64]
};
new BanInfo[MAX_PLAYERS][BlInfo];
enum sInfo
{
	sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new SpikeInfo[MAX_SPIKESTRIPS][sInfo];
new EmDialog[MAX_PLAYERS];
static gTeam[MAX_PLAYERS];
static Extintor[MAX_PLAYERS];
//static Caixinha[MAX_PLAYERS];
//#pragma tabsize 0
new trembot; //teste bot
new NPCBus; //onibus bot
forward IsAtBusStop(playerid);//onibus bot
new storeexit[MAX_PLAYERS];
#define COR_3DLABEL 0xF68E00F6
new VagaSobrando;
//====================[Vip Info]===================//
enum vinfo
{
	vNick[MAX_PLAYER_NAME],
    vTipo
};
new VipInfo[51][vinfo];
forward VipCheck(playerid);
forward VipVaga();
public VipCheck(playerid)
{
	new idx = 0;
    while(idx < sizeof(VipInfo))
	{
	    if(strcmp(VipInfo[idx][vNick],PlayerName(playerid), true ) == 0 )
		{
			return 1;
		}
		idx++;
	}
	return 0;
}
//==============[Socio info]================//
enum sinfo
{
	sNick[MAX_PLAYER_NAME],
	sTipo
};
forward SocioCheck(playerid);
forward SocioVaga();
public VipVaga()
{
    for(new idx=0; idx<sizeof(VipInfo); idx++)
	{
	    if(strcmp(VipInfo[idx][vNick],"Ninguem", true ) == 0 )
		{
		    VagaSobrando = 1;
			return 1;
		}
	}
	VagaSobrando = 0;
	return 0;
}

forward LoadVip();
forward SaveVip();
public SaveVip()
{
	new idx;
	new File: file2;
	while (idx < sizeof(VipInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s,%d\n",VipInfo[idx][vNick],VipInfo[idx][vTipo]);
		if(idx == 0)
		{
			file2 = fopen("Configs/Vips.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/Vips.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public LoadVip()
{
	new arrCoords[2][64];
	new strFromFile2[256];
	new File: file = fopen("Configs/Vips.cfg", io_read);
	if (file)
	{
	    new idx = 0;
	    while(idx < sizeof(VipInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    strmid(VipInfo[idx][vNick], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    VipInfo[idx][vTipo] = strval(arrCoords[1]);
			idx++;
		}
	}
	fclose(file);
	return 1;
}
//=====================================[COFRE INFO]================================//
#define MAX_ORGS 24 //todas as orgs+1
//=====================================[INFOORG]================================//
enum Oinfo
{
	Lider[MAX_PLAYER_NAME],
	SubLider[MAX_PLAYER_NAME],
	Membro1[MAX_PLAYER_NAME],
	Membro2[MAX_PLAYER_NAME],
	Membro3[MAX_PLAYER_NAME],
	Membro4[MAX_PLAYER_NAME],
	Membro5[MAX_PLAYER_NAME],
	Membro6[MAX_PLAYER_NAME],
	Membro7[MAX_PLAYER_NAME],
	Membro8[MAX_PLAYER_NAME],
	Membro9[MAX_PLAYER_NAME],
	Membro10[MAX_PLAYER_NAME],
	Membro11[MAX_PLAYER_NAME],
	Membro12[MAX_PLAYER_NAME],
	Membro13[MAX_PLAYER_NAME],
	Membro14[MAX_PLAYER_NAME],
	Membro15[MAX_PLAYER_NAME],
	Membro16[MAX_PLAYER_NAME],
	Membro17[MAX_PLAYER_NAME],
	Membro18[MAX_PLAYER_NAME],
	Membro19[MAX_PLAYER_NAME],
	Membro20[MAX_PLAYER_NAME],
	Membro21[MAX_PLAYER_NAME],
	Membro22[MAX_PLAYER_NAME],
	Membro23[MAX_PLAYER_NAME],
	Membro24[MAX_PLAYER_NAME],
	Membro25[MAX_PLAYER_NAME],
	Membro26[MAX_PLAYER_NAME],
	Membro27[MAX_PLAYER_NAME],
	Membro28[MAX_PLAYER_NAME],
	Membro29[MAX_PLAYER_NAME],
	Membro30[MAX_PLAYER_NAME],
	Membro31[MAX_PLAYER_NAME],
	Membro32[MAX_PLAYER_NAME],
	Membro33[MAX_PLAYER_NAME],
	Membro34[MAX_PLAYER_NAME],
	Membro35[MAX_PLAYER_NAME],
	Membro36[MAX_PLAYER_NAME],
	Membro37[MAX_PLAYER_NAME],
	Membro38[MAX_PLAYER_NAME],
	Membro39[MAX_PLAYER_NAME],
	Membro40[MAX_PLAYER_NAME],
};
new InfoOrg[MAX_ORGS][Oinfo];
//==========================================[DEFINES DO ]==========================================//
new admhide[MAX_PLAYERS];
stock PlayerName(playerid)
{
	new Name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, Name, MAX_PLAYER_NAME);
	return Name;
}
new tempotd[MAX_PLAYERS];
new chosenpid;
new CreatedCars[100];
new CreatedCar = 0;
new gstring[128];
new Cores[] = {
	0x20B2AAAA,
	0xFFFFFFAA,
	0x33AA33AA,
	0xE0FFFFAA,
	0x934FF6F6,
	0xF4005BF6,
	0xF68E00F6,
    0x00E7C6F6,
    0x5EB7E3F6,
    0xCD6CF6F6,
    0x685000F6
};
new Mensagens[][128] = {
	"[ SERVER] NOVATO? PRECISA DE AJUDA? USE:/RELATORIO PARA SE COMUNICAR COM NOSSA EQUIPE.  ",
    "[ ATENÇÃO] PARA EVITAR PROBLEMAS,TIRE FOTO(F8) DIARIAMENTE DO SEU /RG !",
    "[ SERVER] NOSSOS ADMINS ESTÃO APRENDENDO TODOS OS DIAS PARA LHES ATENDER MELHOR !",
	"[ SERVER] PRECISA ANUNCIAR ALGUMA COISA PARA TODOS DO ? DIGITE /AN.",
	"[ ATENÇÃO] ESTEJA SEMPRE EM NOSSO WEBSITE: => www.brasilstylecity.com.br <=",
	"[ SERVER] ESTÁ PERDIDO NO MEIO DO NADA? PRECISA LOCALIZAR UM LOCAL? USE:/GPS!",
	"[ SERVER] ACHOU O  NA NET E NÃO TEM O IP NOS FAVORITOS? ADD: .BRASILSTYLECITY.COM:7777 !",
	"[ SERVER] SEJA VIP/SOCIO, TENHA MUITOS BENEFICIOS, INFORMAÇÕES : /VIP",
	"[ SERVER] LEIA ATENTAMENTE AS REGRAS DO NOSSO SERVIDOR,DIGITE /REGRAS !",
	"[ ANUNCIO] Hospedagem de Jogos Online,COD,CS,ET,TF,UT,... www.conexaohosting.com.br <=",
	"[ ATENÇÃO] CADASTRE-SE EM NOSSO FORUM,  UMA DAS PARTES FUNDAMENTAIS DO SERVIDOR !",
	"[ ANUNCIO] Precisa de Designer,Web-Designer ou Logomarcas? www.conexaohosting.com.br",
	"[ SERVER] PRECISA DE AJUDA? TEM DUVIDAS? DIGITE /AJUDA OU MANDE UM /RELATORIO",
	"[ ANUNCIO] Buzios Flat Pousada - Sua Casa em Buzios ! ! ! >=www.buziosflat.com.br<=",
	"[ SERVER] DOANDO VIP/SOCIO, VOCÊ AJUDARA O SERVIDOR E SERÁ BENEFICIADO,INFORMAÇOES: /VIP",
	"[ SERVER] Comandos Uteis: /admins /vips /socios /segurancas /ajuda /rg",
	"[ SERVER] VOCÊ FOI MALTRATADO? PUNIDO INJUSTAMENTE? OFENDIDO? V� NO F�RUM E DENUNCIE !",
	"[ SERVER] CHAME SEUS AMIGOS PARA JOGAR CONOSCO, VOC� AJUDAR� O  A CRESCER!",
	"[ SERVER] Servidor de Team Speak 3: Ip: 64.120.209.162 | Porta: 4022 <="
};
forward SendMensagens();
public SendMensagens()
{
	new random1 = random(sizeof(Mensagens));
	new random2 = random(sizeof(Cores));
	format(gstring, sizeof(gstring), "%s", Mensagens[random1]);
	SendClientMessageToAll(Cores[random2],gstring);
	OnPropUpdate();
	SaveIRC();
	SaveBoxer();
	SaveCars();
	return 1;
}
#define COLOR_AZULBB 0xCCCCFFFF
forward SaveCars();
forward LoadCar();
new CarOffered[MAX_PLAYERS];
enum Admin
{
	gMembro[MAX_PLAYER_NAME],
	AdminVaga,
};
new AdmInfo[31][Admin];
forward AdmCheck(playerid);
forward AdmsVaga();
public AdmCheck(playerid)
{
    new idx = 0;
    while(idx < sizeof(AdmInfo))
	{
	    if(strcmp(AdmInfo[idx][gMembro],PlayerName(playerid), true ) == 0 )
		{
			return 1;
		}
		idx++;
	}
	return 0;
}
public AdmsVaga()
{
	new storedcopname[64];
	new File: file = fopen("Configs/Admins.cfg", io_read);
	if (file)
	{
		new valtmp[MAX_PLAYER_NAME];
		while (fread(file, valtmp) > 0)
		{
			strmid(storedcopname, valtmp, 0, strlen("Vazio"), 255);
			if ((strcmp(storedcopname, "Vazio", true, strlen("Vazio")) == 0) && (strlen("Vazio") == strlen(storedcopname)))
			{
				fclose(file);
				VagaSobrando = 1;
				return 1;
			}
		}
	}
	fclose(file);
	VagaSobrando = 0;
	return 0;
}
forward LoadAdm();
forward SaveAdm();
public SaveAdm()
{
	new idx;
	new File: file2;
	while (idx < sizeof(AdmInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s,%d\n",AdmInfo[idx][gMembro],AdmInfo[idx][AdminVaga]);
		if(idx == 0)
		{
			file2 = fopen("Configs/Admins.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/Admins.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public LoadAdm()
{
	new arrCoords[2][64];
	new strFromFile2[256];
	new File: file = fopen("Configs/Admins.cfg", io_read);
	if (file)
	{
	    new idx = 0;
	    while(idx < sizeof(AdmInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    strmid(AdmInfo[idx][gMembro], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    AdmInfo[idx][AdminVaga] = strval(arrCoords[1]);
			idx++;
		}
	}
	fclose(file);
	return 1;
}
//===============================//
new Reduzido[MAX_PLAYERS];//pedagio
forward ReduzTempo(playerid);//pedagio
new ReduzidoBot[MAX_PLAYERS];//bot
forward ReduzTempoBot(playerid);//bot
new bombtimer[MAX_PLAYERS];
new Float: BombX[MAX_PLAYERS], Float: BombY[MAX_PLAYERS], Float: BombZ[MAX_PLAYERS], BombObject[MAX_PLAYERS], bool: BombArmed[MAX_PLAYERS];
forward BombTimer(playerid);
new plantando[MAX_PLAYERS];
forward planta(playerid);

#define DIALOG_ANUNCIO 168
#define SCRIPT_VERSION " [v1.0]]"
#define PICKUP_TYPE_NONE 0
#define PICKUP_TYPE_WEAPON 1
#define DIALOGID2 1389
#define SPECIAL_ACTION_PISSING2      68
#define PRETO     0x000000FF
#define AZUL2     0x8080FF96
#define AZUL3     0x33CCFFAA
#define ROXO      0xC2A2DAAA
#define VERMELHO  0x9D000096
#define VERMELHO1 0xFF6347AA
#define COLOR_RADIO2 0xCD6CF6F6
#define COLOR_DEPARTAMENTO 0x993333FF
#define CINZA     0xAFAFAFAA
#define CINZA1    0xB4B5B7FF
#define CINZA2    0xBFC0C2FF
#define CINZA3    0xCBCCCEFF
#define CINZA4    0xD8D8D8FF
#define CINZA5    0xE3E3E3FF
#define CINZA6    0xF0F0F0FF
#define TextColor   "~p~"
#define TextColor2   "~n~"
#define VICTOR 69
#define SLOTS 200
#define KEY_HORN 2
#define CHECKPOINT_Nenhum 0
#define CHECKPOINT_HOME 12
#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GRAD2 0xBFC0C2FF
#define COLOR_GRAD3 0xCBCCCEFF
#define COLOR_GRAD4 0xD8D8D8FF
#define COLOR_GRAD5 0xE3E3E3FF
#define COLOR_GRAD6 0xF0F0F0FF
#define COLOR_GREY 0xAFAFAFAA
#define COLOR_GREEN 0x33AA33AA
#define COLOR_RED 0xAA3333AA
#define COLOR_LIGHTRED 0xFF8080FF
#define COLOR_LIGHTBLUE 0x33CCFFAA
#define COLOR_LIGHTGREEN 0x9ACD32AA
#define COLOR_YELLOW 0xFFFF00AA
#define COLOR_YELLOW2 0xF5DEB3AA
#define COLOR_WHITE 0xFFFFFFAA
#define COLOR_BRANCO 0xFFFFFFAA
#define COLOR_FADE1 0xE6E6E6E6
#define COLOR_FADE2 0xC8C8C8C8
#define COLOR_FADE3 0xAAAAAAAA
#define COLOR_FADE4 0x8C8C8C8C
#define COLOR_FADE5 0x6E6E6E6E
#define COLOR_PURPLE 0xC2A2DAAA
#define COLOR_DBLUE 0x2641FEAA
#define COLOR_ALLDEPT 0xFF8282AA
#define COLOR_NEWS 0xFFA500AA
#define COLOR_OOC 0xE0FFFFAA
#define TEAM_CYAN 1
#define TEAM_BLUE 2
#define TEAM_GREEN 3
#define TEAM_orANGE 4
#define TEAM_Cor 5
#define TEAM_BAR 6
#define TEAM_TAT 7
#define TEAM_CUN 8
#define TEAM_STR 9
#define TEAM_HIT 10//
#define TEAM_ADMIN 11
#define PS 21
#define MLH 22
#define OBJECTIVE_COLOR 0x64000064
#define TEAM_Emprego_COLOR 0xFFB6C1AA
#define TEAM_HIT_COLOR 0xFFFFFF00
#define TEAM_BLUE_COLOR 0x8D8DFF00
#define COLOR_ADD 0x63FF60AA
#define TEAM_GROVE_COLOR 0x00D900C8
#define TEAM_VAGOS_COLOR 0xFFC801C8
#define TEAM_BALLAS_COLOR 0x9900FFC8
#define TEAM_AZTECAS_COLOR 0x2641FEC8
#define TEAM_CYAN_COLOR 0xA92BF6F6
#define TEAM_orANGE_COLOR 0xFF830000
#define TEAM_Cor_COLOR 0x39393900
#define TEAM_BAR_COLOR 0x00D90000
#define TEAM_TAT_COLOR 0xBDCB9200
#define TEAM_CUN_COLOR 0xD900D300
#define TEAM_STR_COLOR 0x01FCFF00
#define TEAM_ADMIN_COLOR 0x00808000
#define COLOR_INVIS 0xAFAFAF00
#define COLOR_SPEC 0xBFC0C200
#define TEAM_BOPE_COLOR 0x0033CCFF
#define TEAM_TBOPE_COLOR 0x030303AA
#define TEAM_GBOPE_COLOR 0x030303C8
#define COLOR_MSG 0x934FF6F6
#define COLORGZ_HAMAS 0xF4005BC8
#define COLOR_TAXISTA 0xF68E00F6
#define COLOR_BLACK 0x000000AA
#define AN_COLOR 0x00E7C6F6
#define COLOR_RCARRO 0x80FF8096
#define COP_COLOR3 0x5EB7E3F6
#define COP_COLOR2 0xCD6CF6F6
#define GCOP_COLOR 0x6666FFC8
#define COLORGZ_ALCAIDA 0x685000C8
#define COLOR_PCOP 0x93833EFF

#define COLOR_R 0x6666CCFF
#define COLORGZ_YAKUZA 0x006699C8
#define COLORGZ_PF 0x000000C8
//=============[QUANTIDADE DE CARROS]=============//
#define totalveiculos 1000 // Carros Normais
#define totalveiculosh 1001 // Carros Normais + 1
#define totalveiculosc 2000 // Carros Normais + CARROS DAS CASAS
#define CAR_AMOUNT 3000 // TODOS OS CARROS + 1
//==========[QUANTIDADE DE PROPRIEDADES]==========//
#define MAX_HOUSES 241
#define MAX_BIZZES 7
#define MAX_SBIZZES 24
//================================================//
#define granacarro 1500
#define precomorte 1500
//#define pingmaximo 1000
#define COLORGZ_LH 0x00E7C6C8
#define COLORGZ_EXE 0x33AA33C8
#define COLOR_EXE 0x33AA33C8
// Territorios
#define GranadaFavela 4000
#define GranadoSkate 4000
#define GranadaEstacao 4000
#define GranadoCasarao 5000
#define GranadaRefinaria 500
#define GranadoAero 600
#define MAX_TRUNK_SLOTS		(5)
#define GasMax 100
#define RunortTime 15000
#define RefuelWait 5000
//==========================================[FIM DEFINES DO ]==========================================//
#define MAX_STRING 255
forward Encrypt(string[]);
#define MAX_ZONE_NAME 28

enum SAZONE_MAIN {
		SAZONE_NAME[28],
		Float:SAZONE_AREA[6]
};
static const gSAZones[][SAZONE_MAIN] = {
	//	NOMES /LOCALIZAR            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
{ "'The Big Ear'",                {-410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00}},
{ "Aldea Malvada",               {-1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00}},
{ "Angel Pine",                  {-2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00}},
{ "Arco del Oeste",               {-901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00}},
{ "Avispa Country Club",         {-2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00}},
{ "Avispa Country Club",         {-2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00}},
{ "Avispa Country Club",         {-2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00}},
{ "Avispa Country Club",         {-2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10}},
{ "Avispa Country Club",         {-2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10}},
{ "Avispa Country Club",         {-2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70}},
{ "Back o Beyond",               {-1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00}},
{ "Battery Point",               {-2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00}},
{ "Bayside",                     {-2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00}},
{ "Bayside Marina",              {-2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00}},
{ "Beacon Hill",                  {-399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50}},
{ "Blackfield",                    {964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90}},
{ "Blackfield",                   {964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90}},
{ "Blackfield Chapel",            {1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90}},
{ "Blackfield Chapel",            {1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90}},
{ "Blackfield Intersection",      {1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90}},
{ "Blackfield Intersection",      {1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90}},
{ "Blackfield Intersection",      {1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90}},
{ "Blackfield Intersection",      {1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90}},
{ "Blueberry",                     {104.50,  -220.10,     2.30,   349.60,   152.20,   200.00}},
{ "Blueberry",                      {19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00}},
{ "Blueberry Acres",              {-319.60,  -220.10,     0.00,   104.50,   293.30,   200.00}},
{ "Caligula's Palace",            {2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90}},
{ "Caligula's Palace",            {2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90}},
{ "Calton Heights",              {-2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00}},
{ "Chinatown",                   {-2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00}},
{ "City Hall",                   {-2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00}},
{ "Come-A-Lot",                   {2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90}},
{ "Commerce",                     {1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90}},
{ "Commerce",                     {1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90}},
{ "Commerce",                     {1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90}},
{ "Commerce",                     {1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90}},
{ "Commerce",                     {1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90}},
{ "Commerce",                     {1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90}},
{ "Conference Center",            {1046.10, -1805.20,   -89.00,  1323.90, -1722.20,   110.90}},
{ "Conference Center",            {1073.20, -1842.20,   -89.00,  1323.90, -1805.20,   110.90}},
{ "Cranberry Station",           {-2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00}},
{ "Creek",                        {2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90}},
{ "Dillimore",                     {580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00}},
{ "Doherty",                     {-2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00}},
{ "Doherty",                     {-2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00}},
{ "Downtown",                    {-1982.30,   744.10,    -6.10, -1871.70,  1275.20,   200.00}},
{ "Downtown",                    {-1871.70,  1176.40,    -4.50, -1620.30,  1275.20,   200.00}},
{ "Downtown",                    {-1700.00,   745.20,    -6.10, -1580.00,  1176.50,   200.00}},
{ "Downtown",                    {-1580.00,   745.20,    -6.10, -1499.80,  1025.90,   200.00}},
{ "Downtown",                    {-2078.60,   578.30,    -7.60, -1499.80,   745.20,   200.00}},
{ "Downtown",                    {-1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00}},
{ "Downtown Los Santos",          {1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90}},
{ "Downtown Los Santos",          {1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90}},
{ "Downtown Los Santos",          {1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90}},
{ "Downtown Los Santos",          {1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90}},
{ "Downtown Los Santos",          {1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90}},
{ "Downtown Los Santos",          {1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90}},
{ "Downtown Los Santos",          {1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90}},
{ "Downtown Los Santos",          {1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90}},
{ "Downtown Los Santos",          {1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90}},
{ "East Beach",                   {2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90}},
{ "East Beach",                   {2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90}},
{ "East Beach",                   {2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90}},
{ "East Beach",                   {2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90}},
{ "East Los Santos",              {2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90}},
{ "East Los Santos",              {2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90}},
{ "East Los Santos",              {2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90}},
{ "East Los Santos",              {2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90}},
{ "East Los Santos",              {2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90}},
{ "East Los Santos",              {2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90}},
{ "East Los Santos",              {2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90}},
{ "Easter Basin",                {-1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00}},
{ "Easter Basin",                {-1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00}},
{ "Easter Bay Airport",          {-1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00}},
{ "Easter Bay Airport",          {-1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00}},
{ "Easter Bay Airport",          {-1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00}},
{ "Easter Bay Airport",          {-1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00}},
{ "Easter Bay Airport",          {-1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00}},
{ "Easter Bay Airport",          {-1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40}},
{ "Easter Bay Airport",          {-1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40}},
{ "Easter Bay Airport",          {-1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40}},
{ "Easter Bay Chemicals",        {-1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00}},
{ "Easter Bay Chemicals",        {-1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00}},
{ "El Castillo del Diablo",       {-464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00}},
{ "El Castillo del Diablo",       {-208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00}},
{ "El Castillo del Diablo",       {-208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00}},
{ "El Corona",                    {1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90}},
{ "El Corona",                    {1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90}},
{ "El Quebrados",                {-1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00}},
{ "Esplanade East",              {-1620.30,  1176.50,    -4.50, -1580.00,  1275.20,   200.00}},
{ "Esplanade East",              {-1580.00,  1025.90,    -6.10, -1499.80,  1275.20,   200.00}},
{ "Esplanade East",              {-1499.80,   578.30,   -79.60, -1339.80,  1275.20,    20.30}},
{ "Esplanade North",             {-2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00}},
{ "Esplanade North",             {-1996.60,  1358.90,    -4.50, -1525.20,  1592.50,   200.00}},
{ "Esplanade North",             {-1982.30,  1275.20,    -4.50, -1525.20,  1358.90,   200.00}},
{ "Fallen Tree",                  {-792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00}},
{ "Fallow Bridge",                 {434.30,   366.50,     0.00,   603.00,   555.60,   200.00}},
{ "Fern Ridge",                    {508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00}},
{ "Financial",                   {-1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00}},
{ "Fisher's Lagoon",              {1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00}},
{ "Flint Intersection",           {-187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90}},
{ "Flint Range",                  {-594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00}},
{ "Fort Carson",                  {-376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00}},
{ "Foster Valley",               {-2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00}},
{ "Foster Valley",               {-2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00}},
{ "Foster Valley",               {-2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00}},
{ "Foster Valley",               {-2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00}},
{ "Frederick Bridge",             {2759.20,   296.50,     0.00,  2775.20,   594.70,   200.00}},
{ "Gant Bridge",                 {-2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00}},
{ "Gant Bridge",                 {-2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00}},
{ "Ganton",                       {2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90}},
{ "Ganton",                       {2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90}},
{ "Garcia",                      {-2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00}},
{ "Garcia",                      {-2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00}},
{ "Garver Bridge",               {-1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90}},
{ "Garver Bridge",               {-1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90}},
{ "Garver Bridge",               {-1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30}},
{ "Glen Park",                    {1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90}},
{ "Glen Park",                    {1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90}},
{ "Glen Park",                    {1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90}},
{ "Green Palms",                   {176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00}},
{ "Greenglass College",            {964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90}},
{ "Greenglass College",            {964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90}},
{ "Hampton Barns",                 {603.00,   264.30,     0.00,   761.90,   366.50,   200.00}},
{ "Hankypanky Point",             {2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00}},
{ "Harry Gold Parkway",           {1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90}},
{ "Hashbury",                    {-2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00}},
{ "Hilltop Farm",                  {967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00}},
{ "Hunter Quarry",                 {337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70}},
{ "Idlewood",                     {1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90}},
{ "Idlewood",                     {1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90}},
{ "Idlewood",                     {1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90}},
{ "Idlewood",                     {1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90}},
{ "Idlewood",                     {2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90}},
{ "Idlewood",                     {1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90}},
{ "Jefferson",                    {1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90}},
{ "Jefferson",                    {2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90}},
{ "Jefferson",                    {2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90}},
{ "Jefferson",                    {2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90}},
{ "Jefferson",                    {2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90}},
{ "Jefferson",                    {2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90}},
{ "Julius Thruway East",          {2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90}},
{ "Julius Thruway East",          {2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90}},
{ "Julius Thruway East",          {2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90}},
{ "Julius Thruway East",          {2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90}},
{ "Julius Thruway North",         {2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90}},
{ "Julius Thruway North",         {2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90}},
{ "Julius Thruway North",         {2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90}},
{ "Julius Thruway North",         {1938.80,  2508.20,   -89.00,  2121.40,  2625.20,   110.90}},
{ "Julius Thruway North",         {1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90}},
{ "Julius Thruway North",         {1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90}},
{ "Julius Thruway North",         {1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90}},
{ "Julius Thruway North",         {1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90}},
{ "Julius Thruway South",         {1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90}},
{ "Julius Thruway South",         {2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90}},
{ "Julius Thruway West",          {1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90}},
{ "Julius Thruway West",          {1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90}},
{ "Juniper Hill",                {-2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00}},
{ "Juniper Hollow",              {-2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00}},
{ "K.A.C.C. Military Fuels",      {2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90}},
{ "Kincaid Bridge",              {-1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90}},
{ "Kincaid Bridge",              {-1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90}},
{ "Kincaid Bridge",              {-1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90}},
{ "King's",                      {-2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00}},
{ "King's",                      {-2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00}},
{ "King's",                      {-2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00}},
{ "LVA Freight Depot",            {1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90}},
{ "LVA Freight Depot",            {1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90}},
{ "LVA Freight Depot",            {1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90}},
{ "LVA Freight Depot",            {1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90}},
{ "LVA Freight Depot",            {1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90}},
{ "Las Barrancas",                {-926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00}},
{ "Las Brujas",                   {-365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00}},
{ "Las Colinas",                  {1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90}},
{ "Las Colinas",                  {2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90}},
{ "Las Colinas",                  {2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90}},
{ "Las Colinas",                  {2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90}},
{ "Las Colinas",                  {2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90}},
{ "Las Colinas",                  {2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90}},
{ "Las Colinas",                  {2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90}},
{ "Las Payasadas",                {-354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00}},
{ "Las Venturas Airport",         {1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90}},
{ "Las Venturas Airport",         {1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90}},
{ "Las Venturas Airport",         {1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90}},
{ "Las Venturas Airport",         {1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50}},
{ "Last Dime Motel",              {1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90}},
{ "Leafy Hollow",                {-1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00}},
{ "Lil' Probe Inn",                {-90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00}},
{ "Linden Side",                  {2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90}},
{ "Linden Station",               {2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90}},
{ "Linden Station",               {2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40}},
{ "Little Mexico",                {1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90}},
{ "Little Mexico",                {1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90}},
{ "Los Flores",                   {2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90}},
{ "Los Flores",                   {2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90}},
{ "Los Santos International",     {1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90}},
{ "Los Santos International",     {1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90}},
{ "Los Santos International",     {1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90}},
{ "Los Santos International",     {1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90}},
{ "Los Santos International",     {1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90}},
{ "Los Santos International",     {2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90}},
{ "Marina",                        {647.70, -1805.20,   -89.00,   851.40, -1577.50,   110.90}},
{ "Marina",                        {647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90}},
{ "Marina",                        {807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90}},
{ "Market",                        {787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90}},
{ "Market",                        {952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90}},
{ "Market",                       {1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90}},
{ "Market",                        {926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90}},
{ "Market Station",                {787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80}},
{ "Martin Bridge",                {-222.10,   293.30,     0.00,  -122.10,   476.40,   200.00}},
{ "Missionary Hill",             {-2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00}},
{ "Montgomery",                   {1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00}},
{ "Montgomery",                   {1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00}},
{ "Montgomery Intersection",      {1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00}},
{ "Montgomery Intersection",      {1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00}},
{ "Mulholland",                   {1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90}},
{ "Mulholland",                   {1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90}},
{ "Mulholland",                   {1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90}},
{ "Mulholland",                   {1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90}},
{ "Mulholland",                   {1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90}},
{ "Mulholland",                   {1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90}},
{ "Mulholland",                    {768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90}},
{ "Mulholland",                    {687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90}},
{ "Mulholland",                    {737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90}},
{ "Mulholland",                   {1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90}},
{ "Mulholland",                    {952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90}},
{ "Mulholland",                    {911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90}},
{ "Mulholland",                    {861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90}},
{ "Mulholland Intersection",      {1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90}},
{ "North Rock",                   {2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00}},
{ "Ocean Docks",                  {2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90}},
{ "Ocean Docks",                  {2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90}},
{ "Ocean Docks",                  {2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90}},
{ "Ocean Docks",                  {2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90}},
{ "Ocean Docks",                  {2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90}},
{ "Ocean Docks",                  {2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90}},
{ "Ocean Docks",                  {2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90}},
{ "Ocean Flats",                 {-2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00}},
{ "Ocean Flats",                 {-2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00}},
{ "Ocean Flats",                 {-2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00}},
{ "Octane Springs",                {338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00}},
{ "Old Venturas Strip",           {2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90}},
{ "Palisades",                   {-2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00}},
{ "Palomino Creek",               {2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00}},
{ "Paradiso",                   {-2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00}},
{ "Pershing Square",              {1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90}},
{ "Pilgrim",                      {2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90}},
{ "Pilgrim",                      {2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90}},
{ "Pilson Intersection",          {1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90}},
{ "Pirates in Men's Pants",       {1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90}},
{ "Playa del Seville",            {2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90}},
{ "Prickle Pine",                 {1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90}},
{ "Prickle Pine",                 {1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90}},
{ "Prickle Pine",                 {1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90}},
{ "Prickle Pine",                 {1938.80,  2625.20,   -89.00,  2121.40,  2861.50,   110.90}},
{ "Queens",                      {-2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00}},
{ "Queens",                      {-2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00}},
{ "Queens",                      {-2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00}},
{ "Randolph Industrial Estate",   {1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90}},
{ "Redsands East",                {1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90}},
{ "Redsands East",                {1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90}},
{ "Redsands East",                {1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90}},
{ "Redsands West",                {1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90}},
{ "Redsands West",                {1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90}},
{ "Redsands West",                {1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90}},
{ "Redsands West",                {1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90}},
{ "Regular Tom",                  {-405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00}},
{ "Richman",                       {647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90}},
{ "Richman",                       {647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90}},
{ "Richman",                       {225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90}},
{ "Richman",                       {225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90}},
{ "Richman",                        {72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90}},
{ "Richman",                        {72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90}},
{ "Richman",                       {321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90}},
{ "Richman",                       {321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90}},
{ "Richman",                       {321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90}},
{ "Richman",                       {321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90}},
{ "Robada Intersection",         {-1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90}},
{ "Roca Escalante",               {2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90}},
{ "Roca Escalante",               {2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90}},
{ "Rockshore East",               {2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90}},
{ "Rockshore West",               {1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90}},
{ "Rockshore West",               {2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90}},
{ "Rodeo",                          {72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90}},
{ "Rodeo",                          {72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90}},
{ "Rodeo",                         {225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90}},
{ "Rodeo",                         {225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90}},
{ "Rodeo",                         {334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90}},
{ "Rodeo",                         {312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90}},
{ "Rodeo",                         {422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90}},
{ "Rodeo",                         {558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90}},
{ "Rodeo",                         {466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90}},
{ "Rodeo",                         {422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90}},
{ "Rodeo",                         {466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90}},
{ "Rodeo",                         {334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90}},
{ "Royal Casino",                 {2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90}},
{ "San Andreas Sound",            {2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00}},
{ "Santa Flora",                 {-2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00}},
{ "Santa Maria Beach",             {342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90}},
{ "Santa Maria Beach",              {72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90}},
{ "Shady Cabin",                 {-1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00}},
{ "Shady Creeks",                {-1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00}},
{ "Shady Creeks",                {-2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00}},
{ "Sobell Rail Yards",            {2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90}},
{ "Spinybed",                     {2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90}},
{ "Starfish Casino",              {2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90}},
{ "Starfish Casino",              {2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90}},
{ "Starfish Casino",              {2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90}},
{ "Temple",                       {1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90}},
{ "Temple",                       {1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90}},
{ "Temple",                       {1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90}},
{ "Temple",                        {952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90}},
{ "Temple",                       {1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90}},
{ "Temple",                       {1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90}},
{ "The Camel's Toe",              {2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90}},
{ "The Clown's Pocket",           {2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90}},
{ "The Emerald Isle",             {2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90}},
{ "The Farm",                    {-1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90}},
{ "The Four Dragons Casino",      {1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90}},
{ "The High Roller",              {1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90}},
{ "The Mako Span",                {1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00}},
{ "The Panopticon",               {-947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00}},
{ "The Pink Swan",                {1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90}},
{ "The Sherman Dam",              {-968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00}},
{ "The Strip",                    {2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90}},
{ "The Strip",                    {2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90}},
{ "The Strip",                    {2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90}},
{ "The Strip",                    {2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90}},
{ "The Visage",                   {1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90}},
{ "The Visage",                   {1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90}},
{ "Unity Station",                {1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50}},
{ "Valle Ocultado",               {-936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00}},
{ "Verdant Bluffs",                {930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90}},
{ "Verdant Bluffs",               {1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90}},
{ "Verdant Bluffs",               {1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90}},
{ "Verdant Meadows",                {37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00}},
{ "Verona Beach",                  {647.70, -2173.20,   -89.00,   930.20, -1805.20,   110.90}},
{ "Verona Beach",                  {930.20, -2006.70,   -89.00,  1073.20, -1805.20,   110.90}},
{ "Verona Beach",                  {851.40, -1805.20,   -89.00,  1046.10, -1577.50,   110.90}},
{ "Verona Beach",                 {1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90}},
{ "Verona Beach",                 {1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90}},
{ "Vinewood",                      {787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90}},
{ "Vinewood",                      {787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90}},
{ "Vinewood",                      {647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90}},
{ "Vinewood",                      {647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90}},
{ "Whitewood Estates",             {883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90}},
{ "Whitewood Estates",            {1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90}},
{ "Willowfield",                  {1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90}},
{ "Willowfield",                  {2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90}},
{ "Willowfield",                  {2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90}},
{ "Willowfield",                  {2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90}},
{ "Willowfield",                  {2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90}},
{ "Willowfield",                  {2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90}},
{ "Willowfield",                  {2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90}},
{ "Yellow Bell Station",          {1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00}},
// Main Zones
{ "Los Santos",                     {44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00}},
{ "Las Venturas",                  {869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00}},
{ "Bone County",                 {-480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00}},
{ "Tierra Robada",              {-2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00}},
{ "Tierra Robada",               {-1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00}},
{ "San Fierro",                  {-2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00}},
{ "Red County",                  {-1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00}},
{ "Flint County",                {-1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00}},
{ "Whetstone",                   {-2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}}
};

public Encrypt(string[])
{
	for(new x=0; x < strlen(string); x++)
	  {
		  string[x] += (3^x) * (x % 15);
		  if(string[x] > (0xff))
		  {
			  string[x] -= 256;
		  }
	  }
	return 1;
}

stock right(sorrce[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(sorrce);
	strmid(retval, sorrce, srclen - len, srclen, MAX_STRING);
	return retval;
}

stock ini_GetKey( line[] )
{
	new keyRes[128];
	keyRes[0] = 0;
	if ( strfind( line , "=" , true ) == -1 ) return keyRes;
	strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
	return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[128];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}
stock IsPlayerInAero(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1395.7454 && y >= -2368.6396 && x <= 1566.4358 && y <= -2204.4346) return 1;
    else return 0;
}
stock IsPlayerInRefinaria(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -1939.3461 && y >= -1775.6359 && x <= -1790.0342 && y <= -1577.0688) return 1;
    else return 0;
}
stock IsPlayerInFavela(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 2117.333 && y >= -1069.962 && x <= 2261.841 && y <= -959.4252) return 1;
    else return 0;
}
stock IsPlayerInSkate(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1861.9410 && y >= -1450.6462 && x <= 1976.5867 && y <= -1351.4069) return 1;
    else return 0;
}
stock IsPlayerInEstacao(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1687.613 && y >= -1958.204 && x <= 1813.106 && y <= -1859.51) return 1;
    else return 0;
}
stock IsPlayerInCasarao(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1098.173 && y >= -2084.531 && x <= 1299.723 && y <= -2005.577) return 1;
    else return 0;
}
stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
stock Checarveiculo(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}
stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	    case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 33..45:
		    return weaponid+324;

		case 46:
		    return 371;
	}
	return 0;
}
//==============[defines]======================//
new bool:TextShow[MAX_PLAYERS];
//===================[Vida]===================//
new DestroyPickupVidaTimer[MAX_PICKUPS];
new picVida;
forward DropVida(playerid);
forward DestroyVidaPickup(pickupid);
//===================[Vida]===================//
new PickupType[MAX_PICKUPS];
new PickupWeapon[MAX_PICKUPS];
new PickupAmmo[MAX_PICKUPS];
new DestroyPickupTimer[MAX_PICKUPS];
forward DestroyWeaponPickup(pickupid);
//forward DropWeapons(playerid);
new UsouComando[MAX_PLAYERS] = 0;
new SemBombas[MAX_PLAYERS];
forward UsarNovamente(playerid);
forward VoltarBombas(playerid);
forward PresoMulta(playerid);
forward verping();
//forward kickping(playerid);
new OfAssalto[MAX_PLAYERS];
new precoassalto[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new skinadm[MAX_PLAYERS];
//Nome dos Carros
new vehName[][] ={
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer","Hotring Racer",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer","Luggage Trailer",
	"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};
//Anti Money CHeat
forward Fixhour(hora);
forward Clock();
new Text:TextDrawdeData[MAX_PLAYERS];
new Text:TextDrawdeHora[MAX_PLAYERS];
//======================[NOVO ROUBAR]=================
//GLOBAIS
new roubando[MAX_PLAYERS];
new temporoubobanco = 0;
new temporoubolot = 0;
new temporouboloja1 = 0;
new temporouboloja2 = 0;
//new temporouboprefe = 0;
new temporouboputeiro = 0;
//new tempodafuga = 0;
new temporoubobugger = 0;
new temporoubobar = 0;
forward Aroubo();
forward Aroubo2();
forward Aroubo3();
forward Aroubo4();
//forward Aroubo5();
forward Aroubo6();
forward Aroubo7();
//forward Aroubo8();
//BAR
new roubobar;
new ProvocoBar[MAX_PLAYERS];
new tempobar;
forward Roubobar(playerid);
//BANCO
new roubobanco;
new ProvocoBanco[MAX_PLAYERS];
new tempobanco;
forward RouboBanco(playerid);
//LOTERICA
new roubolot;
new ProvocoLot[MAX_PLAYERS];
new tempolot;
forward RouboLot(playerid);
//Prisao
//new fugapr;
//new ProvocoFuga[MAX_PLAYERS];
//new tempofuga;
//forward FugadaPrisao(playerid);
//LOJA DE ARMAS 1
new rouboloja1;
new ProvocoLoja1[MAX_PLAYERS];
new tempoloja1;
forward RouboLoja1(playerid);
//LOJA DE ARMAS 2
new rouboloja2;
new ProvocoLoja2[MAX_PLAYERS];
new tempoloja2;
forward RouboLoja2(playerid);
//PREFEITURA
//new rouboprefe;
//new ProvocoPrefe[MAX_PLAYERS];
new tempoprefe;
//forward RouboPrefe(playerid);
//BUGGER
new roubobugger;
new ProvocoBugger[MAX_PLAYERS];
new tempobugger;
forward RouboBugger(playerid);
//PUTEIRO
new rouboputeiro;
new ProvocoPuteiro[MAX_PLAYERS];
new tempoputeiro;
forward RouboPuteiro(playerid);
//======================[FIM ROUBAR]=================
//new Text:Speed[MAX_PLAYERS];
new Text:box[MAX_PLAYERS],Text:fahrzeug[MAX_PLAYERS],Text:kmh[MAX_PLAYERS];
new Text:hoehe[MAX_PLAYERS],Text:zustand[MAX_PLAYERS];
new SpeedoON[MAX_PLAYERS];
new Float:sVehicle_X[MAX_VEHICLES], Float:sVehicle_Y[MAX_VEHICLES], Float:sVehicle_Z[MAX_VEHICLES];
enum OldSpeedoPos
{
	Float:sX,
	Float:sY,
	Float:sZ
}

new SavePlayerPosV[MAX_PLAYERS][OldSpeedoPos];
new TempoSinc;
forward Sincronizar(playerid);
forward CheckOwner(playerid);
enum cInfo
{
	cModel,
	Float:cLocationx,
	Float:cLocationy,
	Float:cLocationz,
	Float:cAngle,
	cColorOne,
	cColorTwo,
	cOwner[MAX_PLAYER_NAME],
	cDescription[MAX_PLAYER_NAME],
	cValue,
	cLicense,
	cRegistration,
	cOwned,
	cLock,
	ownedvehicle,
	Float:lx,
	Float:ly,
	Float:lz,
	Float:langle,
	cGrana,
	cID,
};
new CarInfo[130][cInfo];
new TempoLogin;
new TempoAn;
new TempoKitVip3;
new TempoKitVip2;
new TempoKitVip1;
new TempoCorrida;
new TempoSequestrar;
new TempoAmarrar;
new TempoServicoTaxi;
new TempoServicoOnibus;
new TempoServicoPolicia;
new TempoServicoMedico;
new TempoServicoMecanico;
new TempoMecanico;
new TempoMedico;
new TempoCorridaOni;
new TempoAnPrefeito;
new TempoAnGov;
new Tempocbomba;
new Tempohbomba;
new TempoSincronizar;
forward LoginAgora(playerid);
forward KitVip3();
forward KitVip2();
forward KitVip1();
forward Corrida();
forward Sequestrar();
forward Amarrar();
forward CorridaOni();
forward hbomba();
forward cbomba();
forward Sinc();
forward Administrador(playerid);
forward CheckOwnerb(playerid);
forward CheckOwnerh(playerid);
new TempoAdministrador;
//new TempoGuerra;
new TendoGuerra = 0;
new GZEstacao;
new donoestacao;
new GZCasarao;
new donocasarao;
new GuerranaEstacao;
new ProvocoEstacao[MAX_PLAYERS];
new TempoGuerraEstacao;
forward GuerraEstacao(playerid);
new GuerranoCasarao;
new ProvocoCasarao[MAX_PLAYERS];
new TempoGuerraCasarao;
forward GuerraCasarao(playerid);
new GZAero;
new TempoGuerraAero;
new ProvocoAero[MAX_PLAYERS];
new GuerranoAero;
new donoaero;
forward GuerraAero(playerid);
new GZRefinaria;
new TempoGuerraRefinaria;
new ProvocoRefinaria[MAX_PLAYERS];
new GuerranoRefinaria;
new donoRefinaria;
forward GuerraRefinaria(playerid);
enum VieiraInfo
{
	Tels[20],
	PLojaA1,
	PLojaA2,
	PpLoja247,
	PpLoja2472,
	ArmaLoja[52],
	InicioGuerra,
	PpEquipar

};
new pkitvip3;
new pkitvip2;
new pkitvip1;
new pcorrida;
new psequestrar;
new pamarrar;
new pcorridaoni;
new phbomba;
new pcbomba;
new psinc;
new LeonardoInfo[MAX_PLAYERS][VieiraInfo];
forward GuerraTerrorista(playerid);
//new GZGuerra;
//forward SyncPlayer(playerid);
forward SendVIPMessage(color, string[]);
forward SendSocioMessage(color, string[]);
forward CheckHack();
new Text:forum[MAX_PLAYERS];
new Text:bsc[MAX_PLAYERS];
//new Text:forum1[MAX_PLAYERS];
//new Text:forum2[MAX_PLAYERS];
new weaponhacktimer;
new spawnado[MAX_PLAYERS];
new TempoAnReporter;
new antixiter;
new admtrampando[MAX_PLAYERS];
new logouagora[MAX_PLAYERS];
// /sync
new Float:FaceAngle[MAX_PLAYERS];
new Float:PlayerHPP[MAX_PLAYERS];
new VehicleIDD[MAX_PLAYERS];
new ammoo[13][MAX_PLAYERS];
new Float:APP[MAX_PLAYERS];
new vehicledd[MAX_PLAYERS];
new interior[MAX_PLAYERS];
new Float:xx[MAX_PLAYERS];
new Float:yy[MAX_PLAYERS];
new Float:zz[MAX_PLAYERS];
new skinneg[MAX_PLAYERS];
new gunsinc[13][MAX_PLAYERS];
new virt[MAX_PLAYERS];
new sincronizando[MAX_PLAYERS];
// Equipar
new OnEquipado[MAX_PLAYERS];
//Equipar M�fia
new OnMafiaEquipado[MAX_PLAYERS];
// MudarNick
new MudarNickAceito[MAX_PLAYERS];
new MudarSenhaAceito[MAX_PLAYERS];
new EstacionarAceito[MAX_PLAYERS];
new tempoGranaTR;
new GZFavela;
new GZSkate;
new Dominando[MAX_PLAYERS];
forward GuerraFavela(playerid);
forward GuerraSkate(playerid);
forward ColocarGang(playerid, Vaga, Nome);
forward GranaTerritorios();
new GuerranaFavela;
new GuerranoSkate;
new TempoGuerraFavela;
new TempoGuerraSkate;
new ProvocoFavela[MAX_PLAYERS];
new ProvocoSkate[MAX_PLAYERS];
new donoFavela;
new donoskate;
new PolicialInRonda[MAX_PLAYERS];
new Sequestrado[MAX_PLAYERS];
new VTrancado[MAX_VEHICLES] = 0;
enum PoliceEnum
{
	bool:Use,
	Siren,
	Blue,
	Red,
	Value,
	Timer
};
new Police[MAX_VEHICLES][PoliceEnum];
forward OnPoliceSiren(vehicleid);

new sireneon[MAX_PLAYERS];

new aNames[][] =
{
    "Desarmado", "Soqueira", "Taco de Golf", "Cacetete",
    "Faca", "Taco de Base-Ball", "P� de pedreiro", "Cano", "Espada", "Motoserra", "Vibrador", "Vibrador", "Vibrador", "Vibrador",
    "Flores", "P� de cabra", "Granada", "Bomba de G�s", "Coquetel-Molotov", "Desconhecido 19", "Desconhecido 20", "Jetpack", "Pistola 9mm", "Pistola 9mm com Silenciador",
    "Desert Eagle", "Shotgun", "Escopeta do cano serrado", "Escopeta de combate", "Micro Uzi", "MP5", "Ak-47", "M4", "Tec9", "Rifle", "Rifle-Sniper",
    "Lan�a Missil", "Lan�a Missil RPG", "Lan�a Chamas", "Minigun", "Explosivo Remoto", "Detonador", "Spray", "Extintor", "Camera", "�culos de Vis�o noturna", "�culos Infra Vermelho",
    "Paraquedas", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido"
};
//portao
new sendername[MAX_PLAYER_NAME];
new Rouco[MAX_PLAYERS];
new SemAn[MAX_PLAYERS];
//new adds = 1;
//new addtimer = 30000;
new portaobope;
new portaovisitante;
new portaocasa;
new Bola;
new Portaoballas;
new Portaosons2;
new Portaosons3;
forward fecharsons2();
forward fecharsons3();
forward fecharpc();
forward fecharpc2();
forward fecharballas();
new portaopmesp;
new portaohit;
new cv2;
new cv3;
new PPPC;
new PFT;
new portaogroove;
new pprf;
//new Vendas1[MAX_PLAYERS];
//new Vendas2[MAX_PLAYERS];
new Float:BusShowLocation[MAX_PLAYERS][4];
new BusShowLocationC[MAX_PLAYERS];
new BusrouteWest[MAX_PLAYERS][2];
new BusrouteEast[MAX_PLAYERS][2];

new NomeCarro[128];
forward RecriarObjeto();
forward DestruirObjeto(objid);
forward CriarExplosao(Float:X,Float:Y,Float:Z,tipo,Float:diam);
forward NRouco(playerid);
forward NFlood(playerid);
forward NSemAn(playerid);
forward Velocimetro(playerid);
//new Updatesegundos = 1;
//score
forward OnPlayerTeamPrivmsg(playerid,text[]);
forward ScoreLevel(playerid);
//CarVip
forward IsAVIP(playerid);
forward IsAVIPCar(carid);
//Prefeito
forward IsAGOV(playerid);
forward IsAGOVCar(carid);
//Aztecas
forward IsABOPEs(playerid);
forward IsABOPEsCar(carid);
forward IsAEx(playerid);
forward IsAExCar(carid);
//Jornaleiro
forward IsAJornal(playerid);
forward IsAJornalCar(carid);
//Assassinos
forward IsAHit(playerid);
forward IsAHitCar(carid);
// produtos
//forward IsATruck(carid);
//Bikes
forward IsABikeCar(carid);
//Taliban
forward IsAHam(playerid);
forward IsAHamCar(carid);
//Yakuza
forward IsAYa(playerid);
forward IsAYaCar(carid);
//Onibus/Taxis
forward IsAOni(playerid);
forward IsAOniCar(carid);
//Taxi
forward IsATaxi(playerid);
forward IsATaxiCar(carid);
//Bomba
//forward bomba(playerid);
//Gasolina
forward gasolina(playerid);
//Vagos
forward IsAVagos(playerid);
forward IsAVagosCar(carid);
//Ballas
forward IsABallas(playerid);
forward IsABallasCar(carid);
//Admins
forward carroVIP(carid);
//Policia Civil
forward IsAPCCar(carid);
forward IsAMerceCar(carid);
//Mayans
forward IsAMayans(playerid);
forward IsAMayansCar(carid);
//AlQaeda
forward IsAAl(playerid);
forward IsAAlCar(carid);
//Groves
forward IsAGroove(playerid);
forward IsAGrooveCar(carid);
//Aztecas
forward IsAAzteca(playerid);
forward IsAAztecaCar(carid);
//Gates
forward PDEx2();
forward PortaoRally2();
forward portaohit2();
forward PortaoX12();
forward PortaoPC2();
forward PortaoReporterr2();
forward PortaoReporter2();
forward PortaoBallas();
forward PortaoBope();
forward Fecharpmesp();
forward PortaoMecs2();
forward pd1();
forward pd2();
forward gt3gate2();
forward gt3gate4();
forward pd3();
forward pd4();
forward pd5();
forward pd6();
forward pd7();
forward FecharPCT();
forward FecharPF();
forward PPCCLOSED();
forward PFTCLOSED();
forward GaragemDpClosed();
forward GaragemDpClosed2();
forward pcclosed();
forward PFClosed2();
forward PFClosed3();
forward PCClosed();
forward PCClosed2();
forward PortaoGov2();
forward PortaoPre2();
//outros
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
//forward LoadTurfs();
//forward SaveTurfs();
forward LoadIRC();
forward SaveIRC();
//forward SaveVendas();
//forward LoadVendas();
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward JoinChannel(playerid, number, line[]);
forward JoinChannelNr(playerid, number);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtFishPlace(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward DenyMessage(playerid, level);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward ABroadCast(COLOR,const string[],level);
forward HBroadCast(COLOR,const string[],level);
forward LBroadCast(COLOR,const string[],level);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward SBan(playerid, string[], string2[]);
forward BanLog(string[]);
forward VipsLog(string[]);
forward KickLog(string[]);
forward PayLog(string[]);
forward WarnLog(string[]);
forward IsAnAmbulanceCar(carid);
forward IsAAmbu(playerid);
forward IsAGOV(playerid);
forward IsAGatev(carid);
forward IsACopCar(carid);
forward IsAEnforcerCar(carid);
forward IsACaminhaozinhoCar(carid);
forward IsAMecCar(carid);
forward IsAMec(playerid);
forward IsAPizzaCar(carid);
forward IsAPizza(playerid);
forward IsASegCar(carid);
forward IsASeg(playerid);
forward IsAPFCar(carid);
forward IsAMLHCar(carid);
forward IsAGOVCar(carid);
forward IsAMLH(playerid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAGang(playerid);
forward IsAMember(playerid);
forward Spectator();
forward ConvertTicks(ticks);
forward KartingEnded();
forward StartKarting();
forward PrepareKarting();
forward PaintballEnded();
forward StartPaintball();
forward PreparePaintball();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward SetPlayerWeapons(playerid);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid,password[]);
forward OnPlayerRegister(playerid, password[]);
forward BroadCast(COLOR,const string[]);
forward OOCNews(COLOR,const string[]);
forward SendEmpregoMessage(Emprego, COLOR, string[]);
forward SendFamilyMessage(family, COLOR, string[]);
forward SendIRCMessage(channel, COLOR, string[]);
//forward AddCar(carcoords);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ClearMarriage(playerid);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CarRespawn(carid);
forward CheckGas();
forward Fillup(playerid);
forward CorridaTrack();
forward SyncTime();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic();
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward CustomPickups();
forward SetCamBack(playerid);
//forward AddsOn();
forward RemoveRoadblock(playerid);
forward RemoveParedao(playerid);
forward RemoveRoadCones(playerid);
forward RemoveRoadPregos(playerid);
forward RemoveGangRoadblock(playerid);
forward BackupClear(playerid, calledbytimer);
forward RemoveBarraca(playerid);
forward ClearChatbox(playerid, lines);
//xD

new NicksProibidos[][MAX_PLAYER_NAME]  ={
"com1","com2","com3","com4","com5","com6","com7","com8","com9","lpt1","lpt2","lpt3","lpt4","lpt5","lpt6","lpt7",
"lpt8","lpt9","clock$","prn","nul","con","CON","con","con1","aux","aux1","prn","PRN","AUX","BPF","BPG","BPL",
"Server_Lixao","crashar_servidor","Crashar_Servidor","com1.aux.com.ipt3","Brasil_Hard_Life","Brasil_Hard_Life"
};

//------------------------------------------------------------------------------------------------------
new Float:trazerx,Float:trazery,Float:trazerz;
new TrazerTodos[MAX_PLAYERS];
new TrazerTodosX1[MAX_PLAYERS];
new OnTrazer;
new OnTrazerX1;
new Limite26;
new Limite22;
new TrazerKart[MAX_PLAYERS];
new TrazerCorrida[MAX_PLAYERS];
new OnTrazerKart;
new OnTrazerRally;
new OnTrazerCorrida;
new TrazerRally[MAX_PLAYERS];
//new Text:Textdraw0;
//Portoes
new pyakuza1, pyakuza3, acn;
forward fecharyakuza1();
forward fecharyakuza3();
forward fecharcv();
forward fecharcv2();
forward fechargroove();
forward fecharpprf();
new ppc2;
new ppc3;
new PDEx;
new PortaoRally;
new PortaoX1;
new PortaoPC;
new PortaoPC3;
new PortaoReporter;
new PortaoReporterr;
new PortaoMecs;
new PortaoPF;
new pct;
new PDDOORa;
new PDDOORb;
new PDDOORc;
new PDGATE;
new PDGARAGE;
new PDELEVATOR;
new gatepf3;
new gatepf2;
new gt3gate;
new gt3gate3;
new PortaoGov;
new PortaoPre;
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new StartingPaintballRornd = 0;
new AnnorncedPaintballRornd = 0;
new PaintballPlayers = 0;
new PaintballRornd = 0;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new StartingKartRornd = 0;
new EndingKartRornd = 0;
new AnnorncedKartRornd = 0;
new KartingPlayers = 0;
new KartingRornd = 0;
new FirstKartWinner = 999;
new SecondKartWinner = 999;
new ThirdKartWinner = 999;
new InRing = 0;
new RorndStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new hitfound = 0;
new hitid = 999;
new Copsronda = 0;
new CopsrondaCall = 999;
new CopsrondaCallTime[MAX_PLAYERS];
new CopsrondaAccepted[MAX_PLAYERS];
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new MechanicAccepted[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new Pizza = 0;
new PizzaCall = 999;
new PizzaCallTime[MAX_PLAYERS];
new PizzaAccepted[MAX_PLAYERS];
new Bombeiros = 0;
new BombCall = 999;
new BombCallTime[MAX_PLAYERS];
new BombAccepted[MAX_PLAYERS];
new BusDrivers = 0;
new BusCall = 999;
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new EmpregoDuty[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new PlayerKarting[MAX_PLAYERS];
new PlayerInKart[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new PlayersChannel[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new FishCornt[MAX_PLAYERS];
//new SpawnChange[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new TestFishes[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new MedicTime[MAX_PLAYERS];
new NeedMedicTime[MAX_PLAYERS];
new MedicBill[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingEmprego[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new PizzaOffer[MAX_PLAYERS];
new PizzaPrice[MAX_PLAYERS];
new ApprovedAdvogado[MAX_PLAYERS];
new CallAdvogado[MAX_PLAYERS];
new WantAdvogado[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new KickPlayer[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
//new STDPlayer[MAX_PLAYERS];
new MendigoOffer[MAX_PLAYERS];
new MendigoPrice[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[301];
new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerConta[MAX_PLAYERS];
new gPlayerMission[MAX_PLAYERS];
new gLastDriver[302];
//new adds = 1;
//new addtimer = 60000;
//new Float:vehx, Float:vehy, Float:vehz;
//new rccornter = 0;
//Ligar/desligarv
new StartTime[MAX_PLAYERS];
//new Starting[MAX_PLAYERS];
//MenuLic
//�r
new portaodpauto;
new playerpickup[MAX_PLAYERS];
//new RStart;
new ghour = 0;
new numplayers = 0;
new levelcost = 25000;
//new deathcost = 500;
new callcost = 10; //20 seconds
new realchat = 1;
new timeshift = 0;
//new realtime = 1;
new othtimer;
//new synctimer;
new newmistimer;
new unjailtimer;
new turftimer;
new pickuptimer;
new spectatetimer;
new productiontimer;
new Contastimer;
new checkgastimer;
new stoppedvehtimer;
new cartimer;
new levelexp = 4;
new cchargetime = 60;
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
forward SaveTrunk();
forward LoadTrunk();
new vehTrunkCounter[MAX_VEHICLES] = 1;
new vehTrunk[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new vehTrunkAmmo[MAX_VEHICLES][MAX_TRUNK_SLOTS];
new Float:vehTrunkArmour[MAX_VEHICLES];
forward ReduceTimer(playerid);
new ReduceTime[MAX_PLAYERS];
forward RemovePlayerWeapon(playerid, weaponid);
forward CarroMala(vehicleid);
new Gas[CAR_AMOUNT];
new Refueling[MAX_PLAYERS];

public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

new Music[MAX_PLAYERS];
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new FishNamesNumber = 22;
new FishNames[22][20] = {
{"Jacketa"},
{"Peixe Estragado"},
{"Garoupa"},
{"Cioppa"},
{"Cal�as"},
{"Truta"},
{"Cavalo Marinho"},
{"Lata"},
{"Sardinha"},
{"Lobo do Mar"},
{"Sapato"},
{"Ferro"},
{"Piranha"},
{"Peixe Vela"},
{"Atum"},
{"Enguia"},
{"Golfinho"},
{"Tubar�o"},
{"Tartaruga"},
{"Peixe-Gato"},
{"Bolsa de Dinheiro"},
{"Peixe-Espada"}
};

new Float:PaintballSpawns[7][3] = {
{-974.8316,1090.0726,1344.9749},
{-1008.0152,1020.6591,1341.0078},
{-1056.7622,1022.5488,1343.5333},
{-1069.8796,1090.9489,1343.2849},
{-1110.4558,1095.7335,1341.8438},
{-1095.3258,1022.5496,1343.1650},
{-1131.6470,1057.6083,1346.4139}
};

new Float:gPresoPmSpawns[3][4] = {
{264.0141,82.0856,1001.0391,267.1115},
{264.1883,86.7433,1001.0391,268.5763},
{264.6288,77.5742,1001.0391,268.5763}
};
new Float:gPresoBopeSpawns[3][4] = {
{219.1653,109.2390,999.0156,358.9629},
{223.2178,110.6664,999.0156,355.7435},
{227.1820,110.4537,999.0156,7.7288}
//{264.6288,77.5742,1001.0391,0.0}//default
};
new Float:gPresoPcSpawns[3][4] = {
{193.3041,174.5611,1003.0234,359.3811},
{198.5518,162.2574,1003.0300,177.3532},
{198.1076,175.0731,1003.0234,0.0}
};
new Float:gPresoPfSpawns[3][4] = {
{193.3041,174.5611,1003.0234,359.3811},
{198.5518,162.2574,1003.0300,177.3532},
{198.1076,175.0731,1003.0234,0.0}
};

new Float:gRandomCarsSpawns[16][4] = {
{1649.7576,-1080.3120,23.5617,90.8560}, // vaga 1
{1648.4767,-1084.6566,23.5692,89.0312}, // vaga 2
{1648.6705,-1088.9672,23.5697,90.0170}, // vaga 3
{1648.8202,-1093.4305,23.5699,89.9310}, // vaga 4
{1648.5422,-1098.1365,23.5685,85.4150}, // vaga 5
{1648.8086,-1102.7317,23.5696,89.4883}, // vaga 6
{1649.1772,-1107.2896,23.5654,90.5750}, // vaga 7
{1648.9772,-1111.8540,23.5774,86.9839}, // vaga 8
{1658.0664,-1111.3798,23.5718,271.4599}, // vaga 9
{1658.4209,-1107.1571,23.5695,268.1207}, // vaga 10
{1658.9543,-1102.6506,23.5694,270.2248}, // vaga 11
{1657.4224,-1098.2699,23.5695,271.1946}, // vaga 12
{1658.5481,-1093.4132,23.5699,266.9616}, // vaga 13
{1658.3402,-1089.5560,23.5699,268.6683}, // vaga 14
{1659.0822,-1084.6190,23.5690,268.3973}, // vaga 15
{1658.7784,-1080.4780,23.5662,269.8118} // vaga 16
};

new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}
};

new Float:gMedPlayerSpawns[2][3] = {
{1178.1,-1321.0,14.1},
{1177.7,-1325.0,14.0}
};

enum pBoxingStats
{
    TitelName[32],
    TitelWins,
    TitelLoses,
};
new Titel[pBoxingStats];

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];

enum pCooking
{
	pCook1[20],
	pCook2[20],
	pCook3[20],
	pCook4[20],
	pCook5[20],
	pCWeight1,
	pCWeight2,
	pCWeight3,
	pCWeight4,
	pCWeight5,
	pCookID1,
	pCookID2,
	pCookID3,
	pCookID4,
	pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];

enum pGroceries
{
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};
new Groceries[MAX_PLAYERS][pGroceries];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum eCars
{
	model_id,
	Float:pos_x,
	Float:pos_y,
	Float:pos_z,
	Float:z_angle,
};

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];

enum pInfo
{
	pKey[128],
	pLevel,
	pAdmin,
	pDinamite,
 	pGalao1,
	pGalao2,
	pGalao3,
	pVIP,
	gPupgrade,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pMuted,
	pSequestrado,
	pExp,
	pCash,
	pConta,
	pCrimes,
	pKills,
	pDeaths,
	pPhoneBook,
	pLottoNr,
	pFishes,
	pBiggestFish,
	pEmprego,
	pSalario,
	pHeadValue,
	pJailed,
	pJailTime,
	pMats,
	pDrogas,
	pDrogas2,
	pDrogas3,
	pLider,
	pMembro,
	pCargo,
	pCMDs,
	pSkin,
	pContractTime,
	pDetSkill,
	pSexSkill,
	pBoxSkill,
	pLawSkill,
	pMechSkill,
	pNewsSkill,
	pDrogasSkill,
	pCookSkill,
	pFishSkill,
	Float:pSHealth,
	pInt,
	pLocal,
	pTeam,
	pPnumber,
	pPHousekey,
	pPbiskey,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pPayDay,
	pCDPlayer,
	pWins,
	pLoses,
	pAlcoholPerk,
	pDrugPerk,
	pMiserPerk,
	pPainPerk,
	pTraderPerk,
	pTut,
	pWarns,
	pMarried,
	pParedao,
	pRequestingBackup,
	pMask,
	pMaskuse,
	pBarraca,
	pMarriedTo[64],
	pSpawn,
	pSafeDrogas,
	pSafeDrogas2,
	pSafeDrogas3,
	pVeiculo,
	pVeiculo2,
	pVeiculo3,
	pVeiculo4,
	pCarKey,
	pCarKey2,
	pCarKey3,
	pCarKey4,
	psMats,
	pPHouseCarkey,
	pLuta,
	pDorgado,
	pDorgado2,
	pDoenca,
	pCreditos,
	pLastLogin[20],
	pGun1,
	pGun2,
	pGun3,
	pGun4,
	pGun5,
	pGun6,
	pGun7,
	pGun8,
	pGun9,
	pGun10,
	pGun11,
	pGun12,
	pAmmo1,
	pAmmo2,
	pAmmo3,
	pAmmo4,
	pAmmo5,
	pAmmo6,
	pAmmo7,
	pAmmo8,
	pAmmo9,
	pAmmo10,
	pAmmo11,
	pAmmo12,
	pCheckInfoOrg,
};
new PlayerInfo[MAX_PLAYERS][pInfo];
new pRoadblock[MAX_PLAYERS];
new pRoadCones[MAX_PLAYERS];
new pGangRoadblock[MAX_PLAYERS];
enum pHaul
{
	pCapasity,
	pLoad,
};

new PlayerHaul[CAR_AMOUNT][pHaul];

enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hHealthx,
	hHealthy,
	hHealthz,
	hArmorrx,
	hArmorry,
	hArmorrz,
	hOwner[MAX_PLAYER_NAME],
	hDiscription[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hDate,
	hLevel,
	hWorld
};
new HouseInfo[241][hInfo];
new HouseEntered[MAX_PLAYERS];

enum bInfo
{
    bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
};
new BizzInfo[7][bInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
};
new SBizzInfo[24][sbInfo];

new Text3D:HouseLabel[MAX_HOUSES];
new Text3D:BizzLabel[MAX_BIZZES];
new Text3D:SBizzLabel[MAX_SBIZZES];

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];

enum iInfo
{
	iAdmin[128],
	iMOTD[128],
	iPassword[128],
	iNeedPass,
	iLock,
	iPlayers,
};
new IRCInfo[10][iInfo];

new GunPrice[30][1] = {
{124}, //parachute
{100}, //golfclub
{75}, //nightstick
{50}, //knife
{175}, //baseballbat
{75}, //shovel
{25}, //poolcue
{100}, //purpledildo
{125}, //whitedildo
{125}, //longwhitedildo
{125}, //whitedildo2
{50}, //flowers
{150}, //cane
{250}, //sdpistol
{250}, //colt45
{1000}, //deagle
{500}, //Tec9
{750}, //uzi
{750}, //mp5
{750}, //shotgun
{1500}, //spas12
{1000}, //sawnoff
{800}, //ak47
{800}, //m4
{250}, //rifle
{25}, //pistolammo
{20}, //shotgunammo
{12}, //smgammo
{20}, //assaultammo
{25} //rifle
};

new Peds[223][1] = {
{6},//Skin do Civil
{265},//TEAM_ADMIN
{267},{240},{228},{114},{120},{147},{294},{227},{61},{171},{270},{123},{59},{102},{108},{117},
{26},//Civis DOWN aqui
{26},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};
//----------------------------CARROS DAS CASAS!!!------------------------------//
new Float:HouseCarSpawns[241][8] = {
//CASAS LOS SANTOS
{2200.1003,-1451.6707,24.3589,269.1703},//House 0
{1849.4982,-1925.5737,13.2900,269.0401},//House 1
{1871.3917,-1925.8879,13.2899,269.1748},//House 2
{1892.9766,-1926.0437,13.2903,271.2716},//House 3
{1914.0115,-1924.4537,13.2899,270.2092},//House 4
{1929.7886,-1926.0729,13.2902,270.7549},//House 5
{1939.3484,-1925.9573,13.2898,269.9824},//House 6
{1910.4330,-1118.2250,25.5575,181.0549},//House 7
{1180.7435,-1252.5255,14.9737,182.7825},//House 8
{1192.6936,-1273.5597,13.3416,87.6046},//House 9
{1175.0167,-1272.9294,13.3417,90.2634},//House 10
{2498.9478,-1249.5275,34.0686,270.1946},//House 11
{1170.9451,-1239.2083,18.3494,273.3052},//House 12
{1196.9413,-1238.5664,18.3943,273.2929},//House 13
{1176.4779,-1219.5706,18.4081,272.2165},//House 14
{1190.4327,-1219.2605,18.3734,91.7042},//House 15
{2787.4866,-1288.4287,42.1518,268.7791},//House 16
{2805.5789,-1288.3579,42.0388,88.0861}, //House 17
{2787.0332,-1313.7335,36.2163,272.2736},//House 18
{2805.9197,-1310.0641,36.9896,83.7590},//House 19
{2786.4358,-1340.6472,29.8615,271.9752},//House 20
{2805.2693,-1331.9712,31.8388,84.1128},//House 21
{2786.0234,-1365.7836,23.9176,273.3652},//House 22
{2801.8293,-1355.6475,26.0534,359.1473},//House 23
{1110.0980,-726.4769,100.2775,90.1167},//House 24
{259.7329,-1221.1926,74.6363,201.0530},//House 25
{1463.6920,-901.7015,54.6260,358.9970},//House 26
{1440.1053,-890.6041,50.4033,359.9137},//House 27
{251.8644,-1359.2205,52.9348,303.7466},//House 28
{225.6491,-1263.4418,66.3373,141.0180}, //House 29
{244.5874,-1265.7161,68.6251,129.7593},//House 30
{311.3341,-1335.1876,53.2553,38.0402},//House 31
{405.7558,-1263.5070,50.4031,21.9046}, //House 32
{658.3419,-1065.0410,48.6738,141.5126},//House 33
{283.7148,-1160.7074,80.6563,224.1292},//House 34
{322.6475,-1765.9531,4.4238,178.5158},//House 35
{295.5023,-1775.9580,5.2171,93.4352},//House 36
{280.8075,-1775.3854,4.0512,87.9319},//House 37
{207.1892,-1774.6537,3.6090,91.3147},//House 38
{192.9391,-1774.9485,3.4986,92.1630},//House 39
{158.1870,-1770.4294,4.1838,180.5296},//House 40
{232.5652,-1406.9209,51.4151,332.2393},//House 41
{893.5425,-1648.2144,13.3423,90.9365},//House 42
{865.2274,-1647.5223,13.3278,87.6618},//House 43
{858.6662,-1717.7675,13.3167,176.8085},//House 44
{859.5588,-1793.5956,13.7028,265.4355},//House 45
{886.3644,-1795.3136,13.4518,263.3625},//House 46
{186.3153,-1744.9629,4.1400,358.8522},//House 47
{-2662.8369,-286.4962,7.1653,45.2360},//House 48
{-2656.7075,-292.1844,7.1234,45.2123},//House 49
{762.1455,-1750.7178,12.5131,1.1641},//House 50
{762.5828,-1705.2640,5.4890,353.6793},//House 51
{763.5857,-1660.6586,5.2317,90.7014},//House 52
{757.2587,-1604.3864,13.0929,5.9952},//House 53
{688.2308,-1597.6438,13.9033,2.2492},//House 54
{644.3828,-1619.9209,14.9068,178.7542},//House 55
{651.8380,-1656.6346,14.5463,85.2223},//House 56
{640.4855,-1715.3002,14.0018,350.2966},//House 57
{263.4509,-1775.2330,4.0219,87.2185},//House 58
{229.2565,-1774.8066,3.9794,89.9125},//House 59
{1177.8580,-1108.5828,25.0556,96.3383},//House 60
{1148.6967,-1101.2035,25.3972,271.7426},//House 61
{1177.7563,-1067.5601,28.7511,89.4310},//House 62
{1148.2141,-1061.2251,29.4986,274.9547},//House 63
{1098.0648,-1060.9714,29.4398,89.6238},//House 64
{1098.4087,-1101.3031,25.3413,89.5804},//House 65
{1278.5043,-1098.5215,25.8433,86.8810},//House 66
{1247.6974,-1107.8274,25.2462,268.3052},//House 67
{1247.3267,-1067.8013,28.9153,269.5094},//House 68
{1278.1199,-1058.3632,29.5117,88.9960},//House 69
{1934.4705,-1122.1460,26.0856,180.4290},//House 70
{1991.4327,-1119.3549,26.5167,270.0136},//House 71
{2021.6805,-1128.7836,24.6966,88.9300},//House 72
{2051.9412,-1119.8440,24.5100,181.1352},//House 73
{2078.9299,-1128.1758,23.6885,2.2788},//House 74
{2089.0764,-1141.4445,25.2655,90.6571},//House 75
{479.7771,-1091.5778,82.2181,358.6423},//House 76
{2077.2048,-1188.1725,23.5396,180.4763},//House 77
{2091.2695,-1227.8802,23.7770,269.2285},//House 78
{2104.8574,-1238.3297,24.4608,359.5674},//House 79
{2185.0420,-1465.7026,25.2823,272.7695},//House 80
{2148.4448,-1238.5730,25.2841,0.6127},//House 81
{2138.3110,-1284.9482,24.4670,181.0458},//House 82
{2103.9817,-1276.1344,25.2348,179.9895},//House 83
{2094.7827,-1285.0341,24.7188,179.0456},//House 84
{2095.7930,-1316.7681,24.5058,0.8542},//House 85
{2141.3748,-1327.7395,25.2884,359.9716},//House 86
{2196.6633,-1280.3999,25.2767,181.8215},//House 87
{2216.8311,-1282.2571,24.3189,183.4800},//House 88
{2231.6025,-1293.4851,23.7217,271.0650},//House 89
{2255.3960,-1282.0201,25.0892,183.8116},//House 90
{2259.2869,-1392.6798,23.7864,87.6052},//House 91
{2245.5818,-1392.7546,23.8039,89.3087},//House 92
{2232.2793,-1392.7249,23.8124,91.1336},//House 93
{2451.4126,-2023.5222,13.3839,3.0543},//House 94
{2462.6924,-2015.7365,13.3705,269.7538},//House 95
{2497.5188,-2023.6563,13.3154,359.1064},//House 96
{2507.5095,-2016.0697,13.3386,272.9436},//House 97
{2473.3721,-1996.3116,13.3839,177.1863},//House 98
{166.8582,-1341.0671,69.5281,179.6169},//House 99
{1533.0730,-841.5164,65.0301,85.6957},//House 100
{1529.4301,-813.3212,71.6962,87.5072},//House 101
{1514.4915,-768.3907,80.1071,139.3631},//House 102
{1460.1550,-634.8544,95.6349,180.3095},//House 103
{1028.4092,-809.3570,101.6375,22.4174},//House 104
{1023.4676,-776.5500,102.8895,85.9234},//House 105
{976.9719,-826.1484,96.1396,27.7099},//House 106
{942.2021,-839.4097,94.3384,29.2666},//House 107
{967.4248,-759.9371,110.7354,97.0316},//House 108
{1354.3202,-629.7422,108.8383,15.4581},//House 109
{857.5845,-818.4150,88.4680,19.7793},//House 110
{873.1438,-868.6379,77.2717,25.7657},//House 111
{832.5815,-860.8075,69.6735,186.3269},//House 112
{830.2504,-886.6093,68.6002,240.1175},//House 113
{724.9798,-993.8918,52.4405,236.0503},//House 114
{1102.2498,-820.1213,86.7616,94.0184},//House 115
{686.1296,-1072.7681,49.3897,60.1605},//House 116
{619.2938,-1102.0067,46.5483,121.8466},//House 117
{635.1069,-1121.2477,44.9110,48.1246},//House 118
{542.3256,-1200.5511,45.2029,108.8708},//House 119
{422.6566,-1262.1964,51.4085,22.9768},//House 120
{568.3619,-1131.6035,50.4823,123.9380},//House 121
{1102.6473,-643.8488,112.7890,42.6801},//House 122
{1053.1963,-637.6051,119.9118,89.0114},//House 123
{1008.9766,-660.4042,120.9398,118.8311},//House 124
{912.9079,-665.6145,116.8016,237.1444},//House 125
{940.3124,-708.1927,122.0105,25.6720},//House 126
{866.5078,-710.9155,105.5066,329.7114},//House 127
{402.2745,-1148.2843,76.8555,146.8472},//House 128
{837.4636,-759.5170,84.9513,234.4386},//House 129
{2375.2605,-1146.4277,27.3545,178.0937},//House 130
{2400.0210,-1136.1881,29.8213,179.4731},//House 131
{2422.5791,-1131.1589,34.1230,182.4121},//House 132
{2490.6006,-1142.1642,38.0013,91.7532},//House 133
{2502.4731,-1133.9078,38.9480,153.9394},//House 134
{1855.3026,-2143.7849,13.2740,90.9317},//House 135
{1876.6418,-2143.8484,13.2740,90.6687},//House 136
{1898.3320,-2143.6541,13.2740,90.0334},//House 137
{1899.8561,-2060.0862,13.2752,269.2708},//House 138
{1877.6840,-2060.2092,13.2740,271.4854},//House 139
{1856.8407,-2060.2251,13.2739,269.8126},//House 140
{342.3443,-1876.0426,2.2556,185.0970},//House 141
{294.5735,-1876.1187,1.9910,179.1540},//House 142
{250.3848,-1875.6232,1.5720,182.1286},//House 143
{205.9865,-1876.2771,1.8068,180.8197},//House 144
{1184.6124,-1252.5688,14.9079,182.0491},//House 145
{643.0599,-1692.1389,14.6595,355.8115},//House 146
{2432.4036,-1058.5281,54.0708,1.0216},//House 147
{2428.7241,-1016.5968,54.0287,193.6693},//House 148
{2452.0002,-1056.6379,59.4693,356.1369},//House 149
{2455.2297,-1013.0950,59.4570,178.5090},//House 150
{2485.7505,-1015.7893,65.0382,152.5809},//House 151
{2475.2380,-1059.4473,66.5169,343.6566},//House 152
{2503.7432,-1025.2019,69.8130,177.6173},//House 153
{2497.3608,-1063.0977,69.8599,0.1788},//House 154
{2351.5698,-655.9164,127.7797,179.7699},//House 155
{2067.6392,-1738.8765,13.6783,269.7427},//House 156
{2075.2124,-1714.0375,13.2683,180.2601},//House 157
{2052.5747,-1695.1714,13.2751,269.9927},//House 158
{2069.8877,-1653.6063,13.2616,270.4084},//House 159
{2074.3994,-1645.2268,13.3056,1.5210},//House 160
{2074.3162,-1627.4417,13.2695,0.3678},//House 161
{2009.4080,-1630.3995,13.2679,180.4287},//House 162
{2009.4829,-1640.2030,13.2681,180.4762},//House 163
{2009.6040,-1655.1643,13.2671,180.4767},//House 164
{2016.5885,-1707.6719,13.2685,90.1251},//House 165
{2009.2926,-1721.1993,13.2741,181.4235},//House 166
{2013.9171,-1737.2247,13.2739,91.1623},//House 167
{1965.1614,-1709.1593,15.6874,89.7320},//House 168
{1977.4946,-1708.0625,15.6905,270.3337},//House 169
{1966.4865,-1675.2998,15.6943,91.0181},//House 170
{1977.1470,-1674.1792,15.6924,272.6857},//House 171
{1965.3494,-1657.7709,15.6889,89.0905},//House 172
{1976.4122,-1657.5651,15.6904,268.6701},//House 173
{1964.0996,-1637.5804,15.6914,90.1747},//House 174
{1977.0326,-1637.9534,15.6924,90.9899},//House 175
{1983.6398,-1714.9231,15.6906,0.4947},//House 176
{1966.3846,-1682.8446,15.6877,359.3173},//House 177
{1962.2632,-1628.0461,15.6673,359.4508},//House 178
{2137.0073,-1483.8253,23.7542,1.6942},//House 179
{2142.0134,-1437.3711,24.4159,93.3585},//House 180
{2155.6753,-1423.6860,25.3094,89.9264},//House 181
{2150.2600,-1408.6781,24.9393,87.1573},//House 182
{2136.6177,-1359.7472,25.3103,181.0419},//House 183
{2138.8279,-1371.9531,24.0338,182.4558},//House 184
{2189.1489,-1376.1112,23.7610,90.5970},//House 185
//CASAS LAS VENTURAS
{1316.4514,1928.9071,11.1678,359.3821},//House 186
{1343.9460,1929.2151,11.1668,0.5317},//House 187
{1360.0254,1939.3275,11.1743,271.6445},//House 188
{1317.4285,1967.9044,11.1746,90.6796},//House 189
{1321.8756,2012.8790,11.1680,88.2824},//House 190
{1325.1819,2020.3640,11.1742,90.8816},//House 191
{1367.4324,1904.8032,11.1764,269.8344},//House 192
{1412.5513,1902.3427,11.1673,90.6011},//House 193
{1406.6125,1912.0352,11.1747,89.9678},//House 194
{1419.4921,1949.1161,11.1605,1.5568},//House 195
{1446.7512,1948.6653,11.1677,1.3792},//House 196
{1454.4426,1945.8271,11.1746,1.4680},//House 197
{1362.7479,1966.9457,11.1667,271.3380},//House 198
{1366.8981,2011.8795,11.1668,269.1770},//House 199
{1362.9326,2020.8693,11.1676,270.0309},//House 200
{1645.9689,2037.1508,10.9448,89.1319},//House 201
{1642.8617,2082.7473,11.0186,90.4613},//House 202
{1643.2457,2109.8618,11.0187,91.5197},//House 203
{1647.2789,2133.9436,10.9096,90.2143},//House 204
{1638.3484,2141.6824,11.0202,90.2695},//House 205
{1593.6583,2140.3987,11.1675,269.4533},//House 206
{1598.0974,2131.6152,11.1676,270.6885},//House 207
{1593.8116,2086.3438,11.0196,270.7290},//House 208
{1591.0438,2078.7405,11.0255,272.3578},//House 209
{1598.5099,2046.5698,11.1757,267.8314},//House 210
{1243.0144,-805.4203,85.2336,182.0296},//House 211
{1547.3228,2088.0593,11.1684,90.2906},//House 212
{1551.9301,2132.9434,11.1677,89.2591},//House 213
{1725.7017,2701.2473,10.5269,359.8249},//House 214
{1708.0306,2699.5769,10.5274,0.1384},//House 215
{1672.4937,2693.1411,10.5266,359.9836},//House 216
{1656.1799,2719.1204,10.5263,1.5992},//House 217
{1621.2321,2713.4714,10.5265,1.0226},//House 218
{1605.1194,2719.2874,10.5272,0.2322},//House 219
{1585.2406,2719.2595,10.5261,2.6170},//House 220
{1559.5135,2721.0173,10.5268,359.3929},//House 221
{1556.4414,2747.3325,10.5264,90.1014},//House 222
{1558.4442,2765.9548,10.5331,89.8637},//House 223
{1555.9144,2784.3489,10.5271,90.5344},//House 224
{1546.1473,2835.0903,10.5269,181.4440},//House 225
{1581.9619,2841.9070,10.5261,180.4611},//House 226
{1597.5784,2835.7932,10.5261,182.4884},//House 227
{1619.0841,2835.0186,10.5263,181.1337},//House 228
{1643.4871,2833.4863,10.5277,178.7233},//House 229
{1660.4923,2834.6108,10.5276,178.5860},//House 230
{1663.7198,2810.0251,10.5264,358.7938},//House 231
{1645.0134,2809.9453,10.5273,1.8610},//House 232
{1627.7561,2807.6475,10.5332,359.4688},//House 233
{1608.5125,2809.9961,10.5266,359.7656},//House 234
{1592.4220,2808.3508,10.5260,358.7701},//House 235
{1588.9063,2746.4153,10.5264,180.6354},//House 236
{1618.3075,2744.6763,10.5263,180.0630},//House 237
{1636.0546,2744.8970,10.5265,180.7784},//House 238
{1654.4192,2745.9187,10.5341,181.8013},//House 239
{1672.9607,2744.7471,10.5269,180.8898}//House 240

};
main()
{
print(" ");
print(" ");
print(" - =  Games RP/RPG = - ");
print("_____________________");
print("  - RPG");
print(" ");
}
public SearchingHit(playerid)
{
	new searchhit = 0;
 	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(searchhit == 0)
		    {
			    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMembro] != 8)
			    {
			        searchhit = 1;
			        hitfound = 1;
			        hitid = i;
			        for(new k=0; k<MAX_PLAYERS; k++)
					{
						if(IsPlayerConnected(k))
						{
				        	if(PlayerInfo[k][pMembro] == 8 || PlayerInfo[k][pLider] == 8)
				        	{
	               				SendClientMessage(k, COLOR_WHITE, "|______________| Agencia dos Assasinos |______________|");
				                SendClientMessage(k, COLOR_LIGHTBLUE, "Mensagem: Novo contrato disponivel.");
				                format(gstring, sizeof(gstring), "Contrato: %s   ID: %d   Valor: $%d", PlayerName(i), i, PlayerInfo[i][pHeadValue]);
								SendClientMessage(k, COLOR_LIGHTBLUE, gstring);
								SendClientMessage(k, COLOR_YELLOW, "Use darcont [ID], Para atribuir o contrato a um dos Hitmans.");
	      					}
					    }
					}
					return 0;
			    }
			}
		}
	}
	if(searchhit == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "   Nao ha contratos disponiveis!");
	}
	return 0;
}

public ExtortionBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Nenhum");
    if(strcmp(BizzInfo[bizid][bExtortion],gstring, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new wstring[MAX_PLAYER_NAME];
			format(gstring, sizeof(gstring), "%s", PlayerName(i));
			strmid(wstring, gstring, 0, strlen(gstring), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GivePlayerMoney(i, value);
			    BizzInfo[bizid][bTill] -= value;
			}
		}
	}
	return 1;
}

public ExtortionSBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Ninguem");
    if(strcmp(SBizzInfo[bizid][sbExtortion],gstring, true ) == 0 )
	{
	    return 0;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new wstring[MAX_PLAYER_NAME];
			format(gstring, sizeof(gstring), "%s", PlayerName(i));
			strmid(wstring, gstring, 0, strlen(gstring), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GivePlayerMoney(i, value);
			    SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}

public PreparePaintball()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            SetPlayerVirtualWorld(i,0);
	            SetPlayerInterior(i,10);
	            SendClientMessage(i, COLOR_YELLOW, "O Paintball vai come�ar em 20 segundos.");
	        }
		}
	}
 	SetTimer("StartPaintball", 20000, 0);
	return 1;
}

public StartPaintball()
{
	PaintballRornd = 1;
	StartingPaintballRornd = 0;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            ResetPlayerWeaponsEx(i);
	            GivePlayerWeapon(i, 29, 999);
	            GivePlayerWeapon(i, 25, 999);
	            GivePlayerWeapon(i, 31, 999);
	            SetPlayerArmour(i, 100.0);
	            SetPlayerHealth(i, 100.0);
	            SetPlayerInterior(i,10);
	            TogglePlayerControllable(i, 1);
	            SendClientMessage(i, COLOR_YELLOW, "O Paintball come�ou, 5 minutos para acabar.");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	        }
	    }
	}
	SetTimer("PaintballEnded", 300000, 0);
	return 1;
}

public SendVIPMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pVIP] >= 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public SendSocioMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pVIP] >= 4)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}

public PaintballEnded()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsPlayerConnected(PaintballWinner))
	            {
	                format(gstring,sizeof(gstring), "** %s ganhou o PaintBall, Matou: %d",PlayerName(PaintballWinner),PaintballWinnerKills);
	                SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
                    PaintballRornd = 0;
	            }
	            ResetPlayerWeaponsEx(i);
	            SetPlayerInterior(i,0);
	            PlayerPaintballing[i] = 0;
	            SetPlayerPos(i, SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
	        }
		}
	}
	AnnorncedPaintballRornd = 0;
    PaintballRornd = 0;
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    TogglePlayerControllable(playerid, 1);
    new string[128];
    if(dialogid == DIALOG_SKIN_COP)
    {
        if(response == 0)
            return SendClientMessage(playerid, -1, "Ok, voc� n�o quer escolher uma Skin.");
		if(response >= 1)
		{
			SetPlayerSkin(playerid, strval(inputtext));
			format(string, sizeof(string), "Voc� trocou sua skin para %d", strlen(inputtext));
			SendClientMessage(playerid, -1, string);
            return 1;
        }
        return 1;
    }
    /*if(dialogid == CAR_MENU)    {
        if(response) {
            switch(listitem) {
                case 0:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,VEHICLE_PARAMS_ON,al arm,doors2,bonnet,boot,objective);   }
                }
                case 1:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,VEHICLE_PARAMS_OFF,a larm,doors2,bonnet,boot,objective);  }
                }
                case 2:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,lights2,VEHICLE_PARA MS_ON,doors2,bonnet,boot,objective); }
                }
                case 3:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,lights2,VEHICLE_PARA MS_OFF,doors2,bonnet,boot,objective);    }
                }
                case 4:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,VEHICLE_PARAMS_ON,boot,objective);  }
                }
                case 5:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,VEHICLE_PARAMS_OFF,boot,objective); }

                }
                case 6:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,VEHICLE_PARAMS_ON,objective);    }
                }
                case 7:
                {
                    new vid = GetPlayerVehicleID(playerid);
                    if(vid != INVALID_VEHICLE_ID) {
                    GetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,boot,objective);
                    SetVehicleParamsEx(vid,engine,lights2,alarm,doors2 ,bonnet,VEHICLE_PARAMS_OFF,objective);   }
                }
            }
        }
    }*/
    if(dialogid == CSEGURANCA)
    {
        if(response)
        {
            if(listitem == 0)
            {

            ShowPlayerDialog(playerid, CSEGURANCA+1, DIALOG_STYLE_LIST, "Cameras - Lugares Importantes -", "Departamento de Policia\n24-7\nLoja de Armas\nHospital\nBanco", "Ver Camera", "Sair");
			}
            if(listitem == 1) //Camera 2
            {
            ShowPlayerDialog(playerid, CSEGURANCA+2, DIALOG_STYLE_LIST, "Cameras - Ruas Importantes", "Bairro Centro de Los Santos\nBairro Pequeno Mexico\nBairro Idlewood\nBairro Downtown Los Santos\nBairro Morro\nBairro Parque Gleen\nRua Esta��o", "Selecionar", "Cancelar");
            }
			if(listitem == 2) //Camera Sair
            {
            SetCameraBehindPlayer(playerid);
            TogglePlayerControllable(playerid,1);
            SetPlayerPos(playerid,543.5757,-897.2561,-100);
		    SetPlayerInterior(playerid,6);
          }
        }
      }
if(dialogid == CSEGURANCA+1)
    {
        if(response) // Lugares Importantes !
        {
            if(listitem == 0) // Departamento de Policia - JFS OWNA !
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                GameTextForPlayer(playerid, "~r~Departamento de Policia ", 5000, 3);
                SetPlayerCameraPos(playerid, 1540.8064,-1646.7190,21.9511);
                SetPlayerCameraLookAt(playerid, 1537.5170,-1650.7240,20.1858);
                SetPlayerPos(playerid, 1540.8064,-1646.7190,-100);
                TogglePlayerControllable(playerid,0);
		        SetPlayerInterior(playerid,0);
            }
            if(listitem == 1) // 24-7
            {
               SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
               GameTextForPlayer(playerid, "~r~24-7 ", 5000, 3);
               SetPlayerCameraPos(playerid, 1365.2867,-1748.6545,22.7734);
               SetPlayerCameraLookAt(playerid, 1363.8175,-1748.6436,22.3906);
               SetPlayerPos(playerid, 1365.2867,-1748.6545,-100);
               TogglePlayerControllable(playerid,0);
               SetPlayerInterior(playerid,0);
            }
            if(listitem == 2) // Loja de Arma
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                GameTextForPlayer(playerid, "~r~Loja de Armas ", 5000, 3);
                SetPlayerCameraPos(playerid, 1756.4012,-1172.3580,23.8281);
                SetPlayerCameraLookAt(playerid, 1758.6932,-1172.0590,23.8281);
                SetPlayerPos(playerid, 1756.4012,-1172.3580,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 3) // Hospital
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                GameTextForPlayer(playerid, "~r~Hospital ", 5000, 3);
                SetPlayerCameraPos(playerid, 1179.7465,-1353.2474,19.4560);
                SetPlayerCameraLookAt(playerid, 1181.5865,-1351.5922,19.4502);
                SetPlayerPos(playerid, 1179.7465,-1353.2474,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 4) // Banco
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                GameTextForPlayer(playerid, "~r~Banco ", 5000, 3);
                SetPlayerCameraPos(playerid, 1419.8663,-1045.7428,27.3906);
                SetPlayerCameraLookAt(playerid, 1422.1774,-1044.4663,27.3906);
                SetPlayerPos(playerid, 1419.8663,-1045.7428,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
      }
    }

if(dialogid == CSEGURANCA+2)
 {
        if(response) // RUAS/BAIRROS
        {
            if(listitem == 0) // Bairro CENTRO
            {
               ShowPlayerDialog(playerid, CSEGURANCA+3, DIALOG_STYLE_LIST, "Cameras - Bairro Centro de Los Santos", "Rua Centro 1\nRua Centro 2", "Selecionar", "Cancelar");
            }
            if(listitem == 1) // bAIRRO Pequeno Mexico
            {
               ShowPlayerDialog(playerid, CSEGURANCA+4, DIALOG_STYLE_LIST, "Cameras - Bairro Pequeno Mexico", "Rua Mexico 1\nRua Mexico 2", "Selecionar", "Cancelar");
            }
            if(listitem == 2) // Bairro Idlewood
            {
            ShowPlayerDialog(playerid, CSEGURANCA+5, DIALOG_STYLE_LIST, "Cameras - Bairro Idlewood", "Rua Idlewood 1\nRua Idlewood 2\nRua Idlewood 3\nRua Idlewood 4\nRua Idlewood 5", "Selecionar", "Cancelar");
            }
            if(listitem == 3) // Bairro Downtown Los Santos
            {
            ShowPlayerDialog(playerid, CSEGURANCA+6, DIALOG_STYLE_LIST, "Cameras - Bairro Downtown Los Santos", "Rua Downtown 1\nRua Downtown 2\nRua Downtown 3", "Selecionar", "Cancelar");
            }
            if(listitem == 4) // Bairro Morro
            {
            ShowPlayerDialog(playerid, CSEGURANCA+7, DIALOG_STYLE_LIST, "Cameras - Bairro Morro", "Rua Morro 1\nRua Morro 2\nRua Morro 3\nRua Morro 4", "Selecionar", "Cancelar");
            }
            if(listitem == 5) // Parque Glee
            {
            ShowPlayerDialog(playerid, CSEGURANCA+8, DIALOG_STYLE_LIST, "Cameras - Bairro Parque Gleen", "Rua Parque Green 1\nRua Parque Green 2\nRua Parque Green 3", "Selecionar", "Cancelar");
            }
            if(listitem == 6) // Rua Estac�o
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                GameTextForPlayer(playerid, "~r~Esta��o ", 5000, 3);
                SetPlayerCameraPos(playerid, 1938.3961,-1933.5433,13.3828);
                SetPlayerCameraLookAt(playerid, 934.4586,-1934.7949,13.3828);
                SetPlayerPos(playerid, 1938.3961,-1933.5433,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
        }
      }
    }
// ====================================================================================
if(dialogid == CSEGURANCA+3) // Bairro Centro de Los Santos
    {
        if(response)
        {
            if(listitem == 0) // 1
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                GameTextForPlayer(playerid, "~r~Centro 1 ", 5000, 3);
                SetPlayerCameraPos(playerid, 1671.9045,-1740.2220,13.5465);
                SetPlayerCameraLookAt(playerid, 1665.6132,-1739.1383,13.5450);
                SetPlayerPos(playerid, 1671.9045,-1740.2220,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 1) // 2
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                GameTextForPlayer(playerid, "~r~Centro 2 ", 5000, 3);
                SetPlayerCameraPos(playerid, 1744.9170,-1590.0386,13.5397);
                SetPlayerCameraLookAt(playerid, 1742.4379,-1590.1549,13.5423);
                SetPlayerPos(playerid, 1744.9170,-1590.0386,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
        }
      }
    }
// =============================================================================
if(dialogid == CSEGURANCA+4) // Bairro Pequeno Mexico
    {
        if(response)
        {
            if(listitem == 0) // 1
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1727.5045,-1738.7094,13.5469);
                SetPlayerCameraLookAt(playerid, 1729.3236,-1737.5027,13.5469);
                SetPlayerPos(playerid, 1727.5045,-1738.7094,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 1) // 2
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1805.2159,-1839.0151,13.5781);
                SetPlayerCameraLookAt(playerid, 1798.6588,-1837.9792,13.5781);
                SetPlayerPos(playerid, 1805.2159,-1839.0151,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
		}
      }
    }
// =====================================================================
if(dialogid == CSEGURANCA+5) // Bairro idlwood
    {
        if(response)
        {
            if(listitem == 0) // 1
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1820.5284,-1605.0304,13.3766);
                SetPlayerCameraLookAt(playerid, 1821.2069,-1601.5466,13.3609);
                SetPlayerPos(playerid, 1820.5284,-1605.0304,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 1) // 2
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1821.2452,-1848.9436,13.4141);
                SetPlayerCameraLookAt(playerid, 1820.7043,-1846.1687,13.4141);
                SetPlayerPos(playerid, 1821.2452,-1848.9436,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 2) // 3
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1930.7804,-1764.3730,13.5391);
                SetPlayerCameraLookAt(playerid, 933.9102,-1763.2849,13.5469);
                SetPlayerPos(playerid, 1930.7804,-1764.3730,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 3) // 4
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1862.5474,-1480.7346,13.3200);
                SetPlayerCameraLookAt(playerid, 1865.3745,-1481.5613,12.3825);
                SetPlayerPos(playerid, 1862.5474,-1480.7346,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 4) // 5
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1805.2159,-1839.0151,13.5781);
                SetPlayerCameraLookAt(playerid, 1798.6588,-1837.9792,13.5781);
                SetPlayerPos(playerid, 1805.2159,-1839.0151,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
        }
      }
    }
// ========================================================================
    if(dialogid == CSEGURANCA+8) // Bairro Parque Gleen
    {
        if(response)
        {
            if(listitem == 0) // 1
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1855.3892,-1268.3625,13.3906);
                SetPlayerCameraLookAt(playerid, 1855.1689,-1271.5760,13.3934);
                SetPlayerPos(playerid, 1855.3892,-1268.3625,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 1) // 2
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1874.3866,-1135.7489,23.7344);
                SetPlayerCameraLookAt(playerid, 1878.0491,-1135.7958,23.7632);
                SetPlayerPos(playerid, 1874.3866,-1135.7489,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 2) // 3
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1842.3285,-1188.6066,23.6503);
                SetPlayerCameraLookAt(playerid, 1838.7637,-1187.7839,23.8281);
                SetPlayerPos(playerid, 1842.3285,-1188.6066,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
        }
      }
    }
// ===============================================================
    if(dialogid == CSEGURANCA+6) // Bairro Downtown Los Santos
    {
        if(response)
        {
            if(listitem == 0) // 1
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1581.3748,-1168.5712,24.0781);
                SetPlayerCameraLookAt(playerid, 1580.9467,-1166.5466,24.0781);
                SetPlayerPos(playerid, 1581.3748,-1168.5712,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 1) // 2
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1376.6577,-1148.2861,23.8430);
                SetPlayerCameraLookAt(playerid, 1372.6255,-1148.2712,23.8430);
                SetPlayerPos(playerid, 1376.6577,-1148.2861,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 2) // 3
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1453.2278,-952.8773,36.1234);
                SetPlayerCameraLookAt(playerid, 1458.9070,-953.4402,36.1235);
                SetPlayerPos(playerid, 1453.2278,-952.8773,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
        }
      }
    }
// ================================================================
    if(dialogid == CSEGURANCA+7) // Bairro Morro
    {
        if(response)
        {
            if(listitem == 0) // 1
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 1943.0764,-980.5031,48.1086);
                SetPlayerCameraLookAt(playerid, 1947.7219,-980.4798,47.6856);
                SetPlayerPos(playerid, 1943.0764,-980.5031,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 1) // 2
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 2147.2004,-949.5068,72.7676);
                SetPlayerCameraLookAt(playerid, 2147.6794,-953.7840,72.1721);
                SetPlayerPos(playerid, 2147.2004,-949.5068,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 2) // 3
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 2449.0688,-895.5662,100.0895);
                SetPlayerCameraLookAt(playerid, 2453.9451,-900.0700,98.8847);
                SetPlayerPos(playerid, 2449.0688,-895.5662,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
            }
            if(listitem == 3) // 4
            {
                SendClientMessage(playerid, COLOR_WHITE, " >> Para Desligar a Camera Use: /desligarcamera <<");
                SetPlayerCameraPos(playerid, 2637.8315,-1005.6577,87.1044);
                SetPlayerCameraLookAt(playerid, 2635.7688,-1003.9021,87.1044);
                SetPlayerPos(playerid, 2637.8315,-1005.6577,-100);
                TogglePlayerControllable(playerid,0);
                SetPlayerInterior(playerid,0);
              }
             }
           }
	if(dialogid == 1)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Ok, Caso queira fazer login posteriormente use /logar [senha]!");
            return 1;
        }
        if(response >= 1)
		{//118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180
            if(strlen(inputtext) == 0)
			{
                new lstring[256];
 				new lname[64];
                //SetPlayerCameraPos(playerid,1671.9045,-1740.2220,13.5465);
                //SetPlayerCameraLookAt(playerid,1665.6132,-1739.1383,13.5450);
                //SetPlayerPos(playerid,1671.9045,-1740.2220,-100);//1685.823486,-2335.253906,-2.679687Brasil Hard Life
                //SetPlayerInterior(playerid,0);
                GetPlayerName(playerid,lname,sizeof(lname));
                format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {00FF00}Registrada\n \n{F2F2F2}Digite a sua Senha para Logar !\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Login",lstring, "Logar", "Esperar");
                return 1;
            }
            format(gstring,sizeof(gstring),"/logar %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
            return 1;
        }
        return 1;
    }
    if(dialogid == 2011)
	{
		if(response)
		{
			if(listitem == 0)
         {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Compro Casa! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
					}
			else if(listitem == 1)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Vendo Casa! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
            }
			else if(listitem == 2)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Compro Empresa! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
            }
			else if(listitem == 3)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Vendo Empresa! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
		    }
			else if(listitem == 4)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Compro Drogas! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
		    }
			else if(listitem == 5)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Vendo Drogas! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
			}
			else if(listitem == 6)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Compro Armas! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
            }
            else if(listitem == 7)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Vendo Armas! Interesados Favor Ligar! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
            }
            else if(listitem == 8)
			{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "[]Preciso de um Advogado, procure-me! Contato: (%s) Tel: (%d)", sendername,PlayerInfo[playerid][pPnumber]);
			        OOCNews(COR_GRO,string);
            }
        }
     }
    if(dialogid == DIALOGID2)
	{
        if(response)
		{
            if(listitem == 0)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
                PlayerInfo[playerid][pLuta] = 1;
            }
            if(listitem == 1)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
                PlayerInfo[playerid][pLuta] = 2;
            }
            if(listitem == 2)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
                PlayerInfo[playerid][pLuta] = 3;
            }
            if(listitem == 3)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
                PlayerInfo[playerid][pLuta] = 4;
            }
            if(listitem == 4)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
                PlayerInfo[playerid][pLuta] = 5;
            }
            if(listitem == 5)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
                PlayerInfo[playerid][pLuta] = 6;
            }
        }
        return 1;
    }
    if(dialogid == 2)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Ok, Caso queira se registrar posteriormente use /registrar [senha]!");
            return 1;
        }
        if(response >= 1)
		{
            if(strlen(inputtext) == 0)
			{
                new lstring[300];
				new lname[64];
				GetPlayerName(playerid,lname,sizeof(lname));
                //SetPlayerCameraPos(playerid,2500.7458,-1926.4347,16.8761);
                //SetPlayerCameraLookAt(playerid,2519.5913,-1914.1946,20.5054);
				format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {ff0000}N�o Registrada\n \n{F2F2F2}Registre-se ! Use Nome_Sobrenome\n \n{F2F2F2}Exemplo: Guru_Josh\n \n{F2F2F2}Digite sua Senha para se Registrar!\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Registro",lstring, "Registrar", "Esperar");
                return 1;
            }
            format(gstring,sizeof(gstring),"/registrar %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
            return 1;
        }
        return 1;
    }
    if(dialogid == 3)
	{
        if(response == 0)
		{
            LeonardoInfo[playerid][Tels] = 0;
            return 1;
        }
        if(response >= 1)
		{
            if(listitem == 0)
			{
                if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
                    format(gstring,sizeof(gstring),"/ligar %d",LeonardoInfo[playerid][Tels]);
                    OnPlayerCommandText(playerid,gstring);
                    return 1;
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem lista telef�nica !");
                    return 1;
                }
            }
            if(listitem == 1)
			{
                if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
                    ShowPlayerDialog(playerid, 4, DIALOG_STYLE_INPUT, "Menu SMS", "Digite a Mensagem", "Enviar", "Cancelar");
                    return 1;
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem uma agenda !");
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 4)
	{
        if(response == 0)
		{
            LeonardoInfo[playerid][Tels] = 0;
            return 1;
        }
        if(response >= 1)
		{
            format(gstring,sizeof(gstring),"/sms %d %s",LeonardoInfo[playerid][Tels],inputtext);
            OnPlayerCommandText(playerid,gstring);
            return 1;
        }
        return 1;
    }
    if(dialogid == 9)
	{
        if(response == 0)
		{
            PlayerInfo[playerid][pSex] = 2;
            SetPlayerSkin(playerid, 12);
            PlayerInfo[playerid][pSkin] = 12;
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Certo, Voc� � uma Mulher!");
            PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
            RegistrationStep[playerid] = 0;
            TutTime[playerid] = 1;
            return 1;
        }
        if(response == 1)
		{
            PlayerInfo[playerid][pSex] = 1;
            SetPlayerSkin(playerid, 7);
            PlayerInfo[playerid][pSkin] = 7;
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Certo, Voc� � um Homem!.");
            PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
            RegistrationStep[playerid] = 0;
            TutTime[playerid] = 1;
            return 1;
        }
        return 1;
    }
    if(dialogid == 8899)
	{
		if(response)
		{
			if(listitem == 0)
			{


			//blue
			SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon", CreateObject(18648,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon1", CreateObject(18648,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
   			 }
			if(listitem == 1)
			{


			 //red
				SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon2", CreateObject(18647,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon3", CreateObject(18647,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

			}
			if(listitem == 2)
			{


			//green
		   	   SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon4", CreateObject(18649,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon5", CreateObject(18649,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            SendClientMessage(playerid, 0xFFFFFFAA, "neon installed");

	            }
			if(listitem == 3)
			{

			//white
		   	   SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon6", CreateObject(18652,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon7", CreateObject(18652,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

			}
			if(listitem == 4)
			{


			//pink
		   	   SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon8", CreateObject(18651,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon9", CreateObject(18651,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

			}
			if(listitem == 5)
			{


			//yellow
  				 SetPVarInt(playerid, "Status", 1);
	            SetPVarInt(playerid, "neon10", CreateObject(18650,0,0,0,0,0,0));
	            SetPVarInt(playerid, "neon11", CreateObject(18650,0,0,0,0,0,0));
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	            AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

			}
			if(listitem == 6)
			{
			//remove neon
            DestroyObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon5"));
			DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");

            DeletePVar(playerid, "Status");


	 	      }
		 }
	 }
	if(dialogid == 10)
	{
	  	if(response)
		{
			if(listitem == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Player |______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informa��es!");
				SendClientMessage(playerid, COR_GRO," > /logar /rg /regras /forum /relatorio /duvida /comprarnivel /organizacoes(/orgs)");
				SendClientMessage(playerid, COR_VAGOS," > /meuskin /pagar /horas /gps /mostrarlicencas /loteria /setint /empregsos /orelhao");
				SendClientMessage(playerid, COLOR_DBLUE," > /trancar /mudarlocal /minhaslicencas /comprararma /beber /caridade /desligarorelhao");
				SendClientMessage(playerid, COR_GRO," > /abastecer /contrato /aceitar /cancelar /ejetar /servico /localizar /alugarcarrso");
	  			SendClientMessage(playerid, COR_VAGOS," > (/g)ritar (/s)usurro /eu /alugarheli /alugarquarto /desalugar");
				SendClientMessage(playerid, COLOR_DBLUE," > /saldo /sacar /depositar /transferir /menucar");
				SendClientMessage(playerid, COLOR_WHITE,"______________________________________");
			}
			if(listitem == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Empresa |______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informa��es!");
				SendClientMessage(playerid, COR_VAGOS," > /ajudaempresa (/entradaemp)resa (/nomeemp)resa /extorcao /infoempresa");
				SendClientMessage(playerid, COR_GRO," > /entrar /sair /chave /venderemp (/depositaremp)resa /sacarempresa");
				SendClientMessage(playerid, COLOR_WHITE,"______________________________________________");
			}
			if(listitem == 2)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Casa |______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informa��es!");
				SendClientMessage(playerid, COR_GRO," > /entrar /sair /chave /vida /moveis(/mv) /mapacasa(Mostra No Mapa)");
				SendClientMessage(playerid, COR_VAGOS," > /comprarcarro /pintarcarro /despejartodos /mudarcasa(1 a 10)");
				SendClientMessage(playerid, COLOR_DBLUE," > /aluguel /despejar /cofrecasa /trancar(carro da casa) /alugada");
			}
			if(listitem == 3)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Aluguel |______________|");
				SendClientMessage(playerid, COR_GRO,"Aluguel > /desalugar /entrar /sair /trancar /mapacasa");
		    }
			if(listitem == 4)
			{
				if (PlayerInfo[playerid][pPnumber] > 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Celular |______________|");
					SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informa��es!");
					SendClientMessage(playerid, COR_GRO," > /ligar /sms (/at)ender (/des)ligar /agenda /desativar celular");
					SendClientMessage(playerid, COR_VAGOS," > N�o se esque�a de comprar cr�ditos na 24-7!");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"Voc� n�o tem um telefone, compre um na 24-7, USE: /gps");
				}
			}
			if(listitem == 5)
			{
			    if (PlayerInfo[playerid][pLider] >= 1)
			    {
					SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Lider |______________|");
					SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informa��es!");
					SendClientMessage(playerid, COR_GRO," > /convidar /demitir /demetir /promover /contaslider(Pedir Contas)");
					if(PlayerInfo[playerid][pLider] == 7)
					{
						SendClientMessage(playerid, COLOR_GRAD3,"Prefeito > (/pre)feito /setartaxa /dartaxa (D� algum dinheiro para os Policiais)");
					}
					SendClientMessage(playerid, COLOR_DBLUE,"____________________________________________");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um L�der!");
				}
			}
			if(listitem == 6)
			{
	   			SendClientMessage(playerid,COLOR_WHITE, "|______________| Ajuda Emprego |______________|");
      			if(PlayerInfo[playerid][pEmprego] == 1)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," > Detetive < /procurar");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 2)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," > Advogado < /soltar /pp(Port�o Presos - DP) /autorizacao(Icone Na DP)");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 3)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," > Prostituta < /transar");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 4)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," > Traficante < /sistemadedrogas");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 5)
				{
		    			SendClientMessage(playerid,COLOR_LIGHTBLUE," > CET <  /guinchar /reparar /abastecercarro /batercartao /pcet -(abrir portao)");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 6)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," > Seguran�a < /proteger /eqpseg");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 7)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," > Vendedor de Armas < /materiais(Casar�o e Esta��o) /venderarma");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 8)
				{
		    		SendClientMessage(playerid,COLOR_GREEN," > Lutador de Boxe < /lutar /statusluta");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 9)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW," > Motorista de �nibus < /corrida Entrar e Sair do Trabalho! /cancelar onibus(Cancelar a Corrida) /terminais");
				}
				else if(PlayerInfo[playerid][pEmprego] == 10)
				{
					SendClientMessage(playerid,COLOR_YELLOW," > Mendigo < /esmola /pbarraca(por barraca) /rbarraca(retirar barraca)");
				}
				else if(PlayerInfo[playerid][pEmprego] == 11)
				{
					SendClientMessage(playerid,COLOR_YELLOW," > Caminhoneiro < /mercadorials /mercadoriasf /mercadorialv /hqcamisn <-(localizar hq)");
				}
                else if(PlayerInfo[playerid][pEmprego] == 12)
				{
					SendClientMessage(playerid,COLOR_YELLOW," > Pizza boy < /batercartao /vender pizza");
				}
				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar /imo /reforco");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar /infoorg /ronda");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Port�es  > /pe - P Estacionamento | /pg - P Garagem | /pr - P Recep��o | /pp - P Presos | /pv - P Vesti�rio");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Pino > /pino - Criar Pino | /retirarpino - Retirar pino | /rtcn - Retirar Todos os Pinos");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Governo: /equipargov (/r)adio - (/d)epartamento - (/m)egafone - /algemar - /imo - /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Governo: /revistar - /retirar - /pp - /pgov - Port�o dos Carros - /ppre - Porta Prefeitura");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Prefeito: (/pre)feito /dartaxa(Para os Policias) /setartaxa(Taxa Por Pessoa)");
				}
				if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Taxistas: /ga - (Chat da org) /corrida - Entrar em Servi�o /ptaxi - (elevador) /cancelar taxi(Cancelar a Corrida) /antaxi - (anuncio)");
				}
				if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /camera /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Port�es  >  | /pf2 - Garagem1 | /pf3 - Garagem2");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Pino > /pino - Criar Pino | /retirarpino - Retirar Pino | /rtcn - Retirar Todos os Pinos");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ex�rcito > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ex�rcito > /revistar /retirar (/gov)erno /camera /arrombar /algemar /imo /rb /multar /procurados");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ex�rcito > /abrirgn - Port�o Principal /equipar /algemar /desalgemar /reforco /bafometro");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ex�rcito > /guerra /pontos(ver pontua��o da guerra) /tirarbombas - Bloqueia os Homens Bombas");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Pino > /pino - Criar Pino | /retirarpino - Retirar Pino | /rtcn - Retirar Todos os Pinos");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
 		   		}
				if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "M�dicos > | (/r)adio | (/d)epartamento | /vida | /batercartao | /infoorg | (/gov)erno");
				}
				if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Groove Street >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | /equipargroove | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > Terroristas <  /equipar /homembomba /carrobomba /tal");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > Terroristas <  (/ga)ngue /guerra /pontos(ver pontua��o da guerra) /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > Terroristas <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
				if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > Terroristas <  /equipar /homembomba /carrobomba /alq");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > Terroristas <  (/ga)ngue /guerra /pontos(ver pontua��o da guerra) /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > Terroristas <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
				if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar /imo /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /deliver /camera /arrombar /desalgemar /bafometro /reforco /multar /ronda");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Port�es  > /ppc(Port�o PC) | DP > /pv - Vesti�rio(DP) | /pr | /pp - Portao DP");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Pino > /pino - Criar Pino | /retirarpino - Retirar Pino | /rtcn - Retirar Todos os Pinos");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > M�fias <  /(ga)ngue /mafia /mafiavarma /mafiavkit /amarrar /desamarrarm /infoorg /anmafia");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, " > M�fias <  Para pegar ou esconder materiais va a HQ ou um territorio");
				}
				if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
				{
					SendClientMessage(playerid, COLOR_DBLUE,"Terceiro Comando Puro > | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
				{
					SendClientMessage(playerid, COR_HITMAN,"Hitmans > /laptop - Computador Hitman | /arrombar(Porta das Casas) | /anhit");
					SendClientMessage(playerid, COR_HITMAN,"Comandos > /ga - Chat Hitmans | /phit (abrir o portao) | /infoorg");
				}
				if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
           		{
					SendClientMessage(playerid, COR_BALLAS,"Ballas >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | /equiparballas | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
				{
					SendClientMessage(playerid, COR_VAGOS,"Los Vagos > | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar |/equiparvagos | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
				{
					SendClientMessage(playerid, COR_REP,"Rep�rter >  | /noticias | /aovivo | (/preporter & /preporter2 = Port�es) |");
					SendClientMessage(playerid, COR_REP,"Comandos >  | /ga - (chat da org | /live | /noticias [texto] | /infoorg");
				}
				if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"1�CIA > (/m)egafone /equipar /batercartao /procurados /presos /reforco /multar /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > (/su)spect /limpar /revistar /r(adio) /d(epartamento) /do(minar) /arrombar /bafometro");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Port�es  >  /pb - Port�o HQ | Port�es DP LS(/pr /pp /pv /pe /pg)");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Pino > /pino - Criar Pino | /retirarpino - Retirar Pino | /rtcn - Retirar Todos os Pinos");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
				{
					SendClientMessage(playerid, COLOR_RED,"Comando Vermelho >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | /equiparcv | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Tugas >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | /equipartugas | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Sons Of Anarchy >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | /eqpsons | (/ansons)");
				}
                if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
				{
					SendClientMessage(playerid, 0xFF6600AA,"Bombeiros >  | (/r)adio | (/d)epartamento | /batercartao | /gov - (anuncio) | /ebomb - (elevador) | /membros |  /infoorg |  /checarincendio");
				}
				if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
				{
					SendClientMessage(playerid, COR_MAYANS,"Mayans >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/anmayans)");
				}
			}
			if(listitem == 7)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Pesca |______________|");
				SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /pescar (Tente pegar um peixe)   /peixes (Mostrar os peixes que voc� pegou)");
				SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /soltarultimo(Jogue o �ltimo peixe Voc� pegou de volta) /soltartodos(jogue todos seus peixes de volta)");
				SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /soltarpeixe (Libera��o de uma de suas barbatanas) /vender(+ de 20 LBs | 24-7) /comer(Casas de Comida)");
			}
			if(listitem == 8)
			{
	        	SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda IRC |______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc entrar [n� canal] ou /irc entrar [n� canal] [Senha])  (/irc sair)");
				SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc senha [n� canal])  (/irc needpass [n� canal])  (/irc trancar [n� canal])");
				SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc Admins)  (/irc MOTD [motdtext])  (/irc status [n� canal])  (/i [texto])");
			}
			if(listitem == 9)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Cozinha |______________|");
				SendClientMessage(playerid, COLOR_GRAD3,"Cozinha > /cozinhar (Mostra as opcoes disponiveis) /cozido (Mostra o que ja foi cozinhado)");
				SendClientMessage(playerid, COLOR_GRAD3,"Cozinha > /comer (Come o que ja foi cozinhado)");
			}
			if(listitem == 10)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda Casamento |______________|");
				SendClientMessage(playerid, COLOR_LIGHTRED,"/padrinho (cada 1 tem que ter 1 padrinho!)");
				SendClientMessage(playerid, COLOR_LIGHTRED,"/casar (quem pedir tem que ter 1 casa!)");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"N�o sabe o local? digite /gps - Igreja");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Separa��o(Digite: /separacao)");
			}
			if(listitem == 11)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Forum do Server |______________|");
		   		SendClientMessage(playerid, COLOR_YELLOW,"www.brasilstylecity.com");
		   		SendClientMessage(playerid, COLOR_YELLOW,"Se cadastre e veja as contas VIP's.");
			}
			if(listitem == 12)
			{
                SendClientMessage(playerid, COLOR_WHITE, "|______________| Cr�ditos |______________|");
                //SendClientMessage(playerid, COLOR_YELLOW, "GameMode , criado por: PorrA_NeNhumA (Vagner_).");
                SendClientMessage(playerid, COLOR_YELLOW, "Criado & Scriptado: Vagner_.");
		        SendClientMessage(playerid, COLOR_YELLOW, "Mapeamento feito por Vagner_.");
			}
			if(listitem == 13)
			{
				if (PlayerInfo[playerid][pVIP] >= 1)
				{
		    		SendClientMessage(playerid, COLOR_WHITE, "|______________| Ajuda VIPs e Premiuns |______________|");
					SendClientMessage(playerid, 0xCDB38BAA, "-> /kitvip /mala /desativar celular /v(chat) /relatorio(cor destacada)");
					SendClientMessage(playerid, COLOR_GRAD1, "-> Carros VIPS: /veiculo ajuda");
					SendClientMessage(playerid, COLOR_GRAD1, "-> Casas VIPS: /ajudacasa");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o � um jogador VIP Premium");
				}
			}
			if(listitem == 14)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|______________| Seja VIP |______________|");
		   		SendClientMessage(playerid, COLOR_YELLOW,"/forum - Para virar VIP acesse nosso forum");
		   		SendClientMessage(playerid, COLOR_YELLOW,"Temos VIP's de R$8,00 at� R$20,00!");
			    SendClientMessage(playerid, COLOR_YELLOW,"Veja com um ADM online!");
		   		SendClientMessage(playerid, COLOR_LIGHTRED,"Acesse www.brasilstylecity.com");//http://www.pmespgta.com.br/
			}
		}
		return 1;
	}
	if(dialogid == 5)
	{
		if(response == 0)
	    {
	    	LeonardoInfo[playerid][PpLoja2472] = 0;
	        return 1;
      	}
	    if(response >= 1)
	    {
	    	if(listitem == 0)
		    {
      			OnPlayerCommandText(playerid,"/comprar 1");
      			LeonardoInfo[playerid][PpLoja2472] = 0;
     			return 1;
		    }
		    if(listitem == 1)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 2");
			    LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 2)
		    {
			   	OnPlayerCommandText(playerid,"/comprar 3");
			   	LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 3)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 4");
		    	LeonardoInfo[playerid][PpLoja2472] = 0;
       			return 1;
		    }
		    if(listitem == 4)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 5");
	    		LeonardoInfo[playerid][PpLoja2472] = 0;
      			return 1;
		    }
		    if(listitem == 5)
		    {
			    OnPlayerCommandText(playerid,"/comprar 6");
			    LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 6)
		    {
			    OnPlayerCommandText(playerid,"/comprar 7");
			    LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 7)
		    {
			    OnPlayerCommandText(playerid,"/comprar 8");
			    LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 8)
		    {
			    OnPlayerCommandText(playerid,"/comprar 9");
		    	LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 9)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 10");
	    		LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 10)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 11");
	    		LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 11)
		    {
			    OnPlayerCommandText(playerid,"/comprar 12");
			    LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 12)
		    {
			    OnPlayerCommandText(playerid,"/comprar 13");
			    LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 13)
		    {
			    OnPlayerCommandText(playerid,"/comprar 14");
			    LeonardoInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    LeonardoInfo[playerid][PpLoja2472] = 0;
      		return 1;
      	}
	}
	if(dialogid == 6)
	{
		if(response == 0)
		{
    	    LeonardoInfo[playerid][PLojaA1] = 0;
		    LeonardoInfo[playerid][PLojaA2] = 0;
		    return 1;
		}
		if(response == 1)
		{
			if(listitem == 0)
		    {
   				ShowPlayerDialog(playerid, 8, DIALOG_STYLE_LIST, "Escolha seu KitVip", "Kit Vip Bronze\nKit Vip Prata\nKit Vip Ouro", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 1)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "eagle", 0, strlen("eagle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 2)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "mp5", 0, strlen("mp5"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 3)
		    {
		    	strmid(LeonardoInfo[playerid][ArmaLoja], "shotgun", 0, strlen("shotgun"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 4)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "ak47", 0, strlen("ak47"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 5)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "m4", 0, strlen("m4"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 6)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "rifle", 0, strlen("rifle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 7)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "parachute", 0, strlen("parachute"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 8)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "golfclub", 0, strlen("golfclub"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 9)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "nightstick", 0, strlen("nightstick"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 10)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "baseballbat", 0, strlen("baseballbat"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 11)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "shovel", 0, strlen("shovel"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 12)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "poolcue", 0, strlen("poolcue"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 13)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "purpledildo", 0, strlen("purpledildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 14)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "whitedildo", 0, strlen("whitedildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 15)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "longwhitedildo", 0, strlen("longwhitedildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 16)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "whitedildo2", 0, strlen("whitedildo2"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 17)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "flowers", 0, strlen("flowers"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 18)
		    {
		        strmid(LeonardoInfo[playerid][ArmaLoja], "cane", 0, strlen("cane"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Muni��o", "Digite a quantidade de Muni��o que voc� deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    LeonardoInfo[playerid][PLojaA1] = 0;
		    LeonardoInfo[playerid][PLojaA2] = 0;
		    return 1;
		}
        return 1;
    }
    if(dialogid == 7)
    {
        if(response == 0)
        {
            LeonardoInfo[playerid][PLojaA1] = 0;
		    LeonardoInfo[playerid][PLojaA2] = 0;
		    LeonardoInfo[playerid][ArmaLoja] = 0;
            return 1;
        }
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/comprararma %s %d",LeonardoInfo[playerid][ArmaLoja],strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
            LeonardoInfo[playerid][PLojaA1] = 0;
		    LeonardoInfo[playerid][PLojaA2] = 0;
		    LeonardoInfo[playerid][ArmaLoja] = 0;
            return 1;
        }
        LeonardoInfo[playerid][PLojaA1] = 0;
    	LeonardoInfo[playerid][PLojaA2] = 0;
    	LeonardoInfo[playerid][ArmaLoja] = 0;
        return 1;
    }
    if(dialogid == 8)
    {
        if(response == 0)
        {
            LeonardoInfo[playerid][PLojaA1] = 0;
		    LeonardoInfo[playerid][PLojaA2] = 0;
            return 1;
        }
        if(response == 1)
        {
            if(listitem == 0)
		    {
            	OnPlayerCommandText(playerid,"/kitvip 1");
            	LeonardoInfo[playerid][PLojaA1] = 0;
		    	LeonardoInfo[playerid][PLojaA2] = 0;
		    	LeonardoInfo[playerid][ArmaLoja] = 0;
            	return 1;
			}
			if(listitem == 1)
		    {
            	OnPlayerCommandText(playerid,"/kitvip 2");
            	LeonardoInfo[playerid][PLojaA1] = 0;
		    	LeonardoInfo[playerid][PLojaA2] = 0;
		    	LeonardoInfo[playerid][ArmaLoja] = 0;
            	return 1;
			}
   			if(listitem == 2)
		    {
            	OnPlayerCommandText(playerid,"/kitvip 3");
            	LeonardoInfo[playerid][PLojaA1] = 0;
		    	LeonardoInfo[playerid][PLojaA2] = 0;
		    	LeonardoInfo[playerid][ArmaLoja] = 0;
            	return 1;
			}
			return 1;
        }
        LeonardoInfo[playerid][PLojaA1] = 0;
    	LeonardoInfo[playerid][PLojaA2] = 0;
    	LeonardoInfo[playerid][ArmaLoja] = 0;
        return 1;
 	}
//INICIO SISTEMA DE BANCO
    if(dialogid == 1122) //deposito
    {
        if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        else if(strval(inputtext) > GetPlayerMoney(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o possui esta quantia!");
        else if(!IsNumero(inputtext))
        {
        	format(gstring,sizeof(gstring),"Seu Saldo atual �: R$[%d]\nDigite a quantidade que deseja depositar abaixo .",PlayerInfo[playerid][pConta]);
       		ShowPlayerDialog(playerid,1122,DIALOG_STYLE_INPUT,"Depositar",gstring,"Depositar","Sair");
        	SendClientMessage(playerid,COLOR_GREY,"Digite apenas n�meros !");
        }
		else
		{
  			GivePlayerMoney(playerid,-strval(inputtext));
			PlayerInfo[playerid][pConta] += strval(inputtext);
			format(gstring,sizeof(gstring),"Voc� depositou: R$[%d], Seu novo saldo �: R$[%d]",strval(inputtext), PlayerInfo[playerid][pConta]);
			SendClientMessage(playerid,COLOR_YELLOW,gstring);
			ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
		}
		return 1;
    }
	if(dialogid == 1123) //saque
	{
     	if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
     	else if(strval(inputtext) > PlayerInfo[playerid][pConta]) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem isso tudo na sua conta !");
        else if(!IsNumero(inputtext))
        {
        	format(gstring,sizeof(gstring),"Seu Saldo atual �: [%d]\nColoque a quantidade que deseja sacar agora.",PlayerInfo[playerid][pConta]);
        	ShowPlayerDialog(playerid,1123,DIALOG_STYLE_INPUT,"Sacar",gstring,"Sacar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Digite apenas n�meros!");
        }
		else
		{
			GivePlayerMoney(playerid,strval(inputtext));
			PlayerInfo[playerid][pConta] -= strval(inputtext);
			format(gstring,sizeof(gstring),"Voc� sacou: R$[%d]",strval(inputtext));
			SendClientMessage(playerid,COLOR_YELLOW,gstring);
			format(gstring,128,"Seu novo saldo �: R$[%d]",PlayerInfo[playerid][pConta]);
			SendClientMessage(playerid,COLOR_YELLOW,gstring);
			ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
		}
		return 1;
	}
	if(dialogid == 1124)
	{
		ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
    	return 1;
 	}
    if(dialogid == 1130) //transferir - playerid
	{
     	if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
     	else if(strval(inputtext) == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"O jogador n�o est� online !");
        else if(!IsNumero(inputtext))
        {
	    	format(gstring,sizeof(gstring),"Seu saldo atual �: R$[%d]\nColoque o ID do jogador para transferir :",PlayerInfo[playerid][pConta]);
	    	ShowPlayerDialog(playerid,1130,DIALOG_STYLE_INPUT,"Transferir",gstring,"Proximo","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Use o ID,n�o o nome - Se n�o sabe o id use /id [nome/parte do nome]");
        }
		else
		{
			chosenpid = strval(inputtext);
			format(gstring,sizeof(gstring),"Saldo: R$[%d]\nAgora coloque a quantidade que deseja transferir !",PlayerInfo[playerid][pConta]);
			ShowPlayerDialog(playerid,1131,DIALOG_STYLE_INPUT,"Transferir",gstring,"Transferir","Voltar");
		}
		return 1;
	}
	if(dialogid == 1131) //transferir - quantidade
	{
     	if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
     	else if(strval(inputtext) > PlayerInfo[playerid][pConta]) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem esta quantia para transferir !");
        else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,1131,DIALOG_STYLE_INPUT,"Transferir","Agora coloque a quantidade que deseja transferir","Transferir","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        }
		else
		{
			PlayerInfo[playerid][pConta] -= strval(inputtext);
			PlayerInfo[playerid][pConta] += strval(inputtext);
			format(gstring,sizeof(gstring),"Voc� transferiu R$[%d] Para Conta Bancaria de: %s",strval(inputtext),PlayerName(chosenpid));
			SendClientMessage(playerid,COLOR_YELLOW,gstring);
			format(gstring,128,"Seu novo saldo �: R$[%d]",PlayerInfo[playerid][pConta]);
			SendClientMessage(playerid,COLOR_YELLOW,gstring);
			format(gstring,128,"%s Transferiu R$[%d] para sua conta bancaria",playerid,strval(inputtext));
			SendClientMessage(chosenpid,COLOR_YELLOW,gstring);
			format(gstring,128,"Seu novo saldo: R$[%d]",PlayerInfo[chosenpid][pConta]);
			SendClientMessage(chosenpid,COLOR_YELLOW,gstring);
			ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
		}
		return 1;
	}
	if(dialogid == 1125 && response) // /Banco
	{
	    if(response == 0) { return 1; }
	 	switch(listitem)
	   	{
	       	case 0:
	        {
	            format(gstring,sizeof(gstring),"Seu Saldo atual � : R$%d\nColoque a quantidade para depositar .",PlayerInfo[playerid][pConta]);
	           	ShowPlayerDialog(playerid,1122,DIALOG_STYLE_INPUT,"Depositar",gstring,"Depositar","Voltar");
			}
 			case 1:
	        {
	            format(gstring,sizeof(gstring),"Seu Saldo atual �: R$%d\nColoque a quantidade para sacar .",PlayerInfo[playerid][pConta]);
	            ShowPlayerDialog(playerid,1123,DIALOG_STYLE_INPUT,"Sacar",gstring,"Sacar","Voltar");
 			}
 			case 2:
	        {
				format(gstring,sizeof(gstring),"Seu saldo atual � R$%d",PlayerInfo[playerid][pConta]);
				ShowPlayerDialog(playerid,1124,DIALOG_STYLE_MSGBOX,"Saldo",gstring,"Ok","Voltar");
 			}
 			case 3:
	        {
	            format(gstring,sizeof(gstring),"Seu Saldo atual �: R$%d\nColoque o ID do Jogador para transferir .",PlayerInfo[playerid][pConta]);
	            ShowPlayerDialog(playerid,1130,DIALOG_STYLE_INPUT,"Transferir",gstring,"Proximo","Voltar");
 			}
 		}
 	}
 	if(dialogid == 2568)
	{
	    TogglePlayerControllable(playerid, 1);
	    if(!response) { return 1; }
		switch(listitem)
        {
            case 0:
			{
			    ShowPlayerDialog(playerid,2587,DIALOG_STYLE_LIST,"GPS Locais em Geral","Prefeitura\nDepartamento de Policia\n24-7(Mercado)\nLoja de Armas 1\nLoja de Armas 2\nBinco(Loja de Roupas)\nAluguel de Carros\nCentro de Licencas\nHospital\nPosto Sul\nBanco\nLoterica\nPuteiro\nCentro de treinamento(Policiais)\nEstadio(Mandante)\nEstadio(Visitante)","Selecionar","Voltar");
			}
			case 1:
			{
			    ShowPlayerDialog(playerid,2588,DIALOG_STYLE_LIST,"GPS Head Quarters","18�BPM/M\nROTA\nEx�rcito\nM�dicos\nTerceiro Comando Puro\nGavi�es\nPrefeitura\nHitmans\nReporteres\nTaxistas\n1�CIA\nMafia Cosa Nostra\nMafia Yakuza\nGroove Street\nMancha Verde\n2�CIA\nBallas\nLos Vagos\nComando Vermelho\nPCC\nSons\nBombeiros","Selecionar","Voltar");
			}
			case 2:
			{
			    ShowPlayerDialog(playerid,2570,DIALOG_STYLE_LIST,"GPS Territorios","Favela(Gang)\nPista de Skate(Gang)\nEstacao Unity(Mafia)\nCasarao(Mafia)\nRefinaria Abandonada(Terroristas)","Selecionar","Voltar");
			}
			case 3:
			{
			    DisablePlayerCheckpoint(playerid);
			}
		}
	}
//FIM SISTEMA DE BANCO
	if(dialogid == 2587)
	{
		TogglePlayerControllable(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
		switch(listitem)
        {
            case 0:
			{
            	SetPlayerCheckpoint(playerid, 1481.1926,-1765.2736,18.7958,8.0);//prefeitura
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 1546.2761,-1675.5995,13.5620,8.0);//DP
            }
            case 2:
			{
 				SetPlayerCheckpoint(playerid, 1350.4865,-1753.2505,13.3582,8.0);//24-7
            }
            case 3:
			{
				SetPlayerCheckpoint(playerid, 1790.5725,-1167.3705,23.8281,8.0);//Loja de armas
            }
            case 4:
			{
				SetPlayerCheckpoint(playerid, 1068.7330,-1875.4727,13.5469,8.0);//Loja de armas 2
            }
            case 5:
			{
            	SetPlayerCheckpoint(playerid, 2244.7954,-1663.5021,15.4766,8.0);//Binco
            }
            case 6:
			{
				SetPlayerCheckpoint(playerid, 2155.4363,-1171.3413,23.8206,8.0);//Aluguel de Carros
            }
            case 7:
			{
 				SetPlayerCheckpoint(playerid, 1411.5593,-1699.5270,13.5395,8.0);//Centro de Licencas
            }
            case 8:
			{
				SetPlayerCheckpoint(playerid, 1175.3164,-1323.7809,14.3906,8.0);//Hospital
            }
            case 9:
			{
				SetPlayerCheckpoint(playerid, 1928.826904,-1776.405517,13.546895,8.0);//Posto Sul
            }
            case 10:
			{
				SetPlayerCheckpoint(playerid, 1462.395751,-1012.391174,26.843799,8.0);//Banco
            }
            case 11:
			{
				SetPlayerCheckpoint(playerid, 1631.8547,-1172.5637,24.0843,8.0);//Loterica
            }
            case 12:
			{
				SetPlayerCheckpoint(playerid, 935.5362,-1718.2968,13.5469,8.0);//Puteiro
            }
            case 13:
            {
				SetPlayerCheckpoint(playerid, -1210.528808,-1068.466430,128.265625,8.0);//CT COP
			}
			case 14:
			{
			    SetPlayerCheckpoint(playerid, 1387.417114,2302.007812,10.812744,8.0);
			}
			case 15:
			{
			    SetPlayerCheckpoint(playerid, 1406.287231,2075.990722,10.899400,8.0);
			}
        }
	}
	if(dialogid == 2588)
	{
		TogglePlayerControllable(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
		switch(listitem)
        {
            case 0:
			{
            	SetPlayerCheckpoint(playerid, 1555.2512,-1675.5313,16.1953,10.0);//pm
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 2232.005126,-1160.371948,25.890625,10.0);//rota
            }
            case 2:
			{
 				SetPlayerCheckpoint(playerid, -1531.4238,481.8620,7.1875,10.0);//exercito
            }
            case 3:
			{
				SetPlayerCheckpoint(playerid, 1176.7383,-1323.5166,14.0361,10.0);//medicos
            }
            case 4:
			{
				SetPlayerCheckpoint(playerid, 1712.658301,-2139.525390,13.546875,10.0);//TCP
            }
            case 5:
			{
            	SetPlayerCheckpoint(playerid, 2721.3413,-2405.5291,13.4609,10.0);//Gavi�es
            }
            case 6:
			{
				SetPlayerCheckpoint(playerid, 1480.9232,-1772.3057,18.7958,10.0);//prefeitura
            }
            case 7:
			{
 				SetPlayerCheckpoint(playerid, 1534.4108,-1447.9031,13.3828,10.0);//hitmans
            }
            case 8:
			{
				SetPlayerCheckpoint(playerid, 777.1924,-1331.4585,13.5471,10.0);//reporteres
            }
            case 9:
			{
				SetPlayerCheckpoint(playerid, 622.1627,-1510.7493,14.9838,10.0);//taxistas
            }
            case 10:
			{
				SetPlayerCheckpoint(playerid, 341.5491,-1524.3574,33.3598,10.0);//pf
            }
            case 11:
			{
				SetPlayerCheckpoint(playerid, 1495.9410,-699.4916,94.7500,10.0);//cosa nostra
            }
            case 12:
			{
				SetPlayerCheckpoint(playerid, 664.3810,-1309.7341,13.4609,10.0);//yakuza
            }
            case 13:
			{
				SetPlayerCheckpoint(playerid, 2495.1697,-1690.5923,14.7656,10.0);//groove
            }
            case 14:
			{
				SetPlayerCheckpoint(playerid, 414.1553,2527.6807,16.5741,10.0);//Mancha Verde
            }
            case 15:
			{
				SetPlayerCheckpoint(playerid, -81.791877,-353.442443,1.429687,10.0);//PC
            }
            case 16:
			{
				SetPlayerCheckpoint(playerid, 1154.945312,-1180.919067,32.818702,10.0);//Ballas
            }
            case 17:
			{
				SetPlayerCheckpoint(playerid, 2828.2498,-1184.3743,24.9464,10.0);//vagos
            }
            case 18:
			{
				SetPlayerCheckpoint(playerid, 2440.8840,-2110.4534,13.5469,10.0);//cv
            }
            case 19:
			{
				SetPlayerCheckpoint(playerid, 1338.2207,-916.5588,35.9187,10.0);//PCC
            }
            case 20:
			{
				SetPlayerCheckpoint(playerid, 681.533081,-474.036895,16.536296,10.0);//sons
            }
            case 21:
			{
				SetPlayerCheckpoint(playerid, 1772.5833,-1697.1202,13.4697,10.0);//bomb
            }
        }
	}
	if(dialogid == 2569)
	{
	    TogglePlayerControllable(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return 1; }
		switch(listitem)
        {
            case 0:
			{
		    	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Detetive, ter� que cumprir 5 horas de contrato.\nPara se tornar Detetive, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 1;
		    	SetPlayerSkin(playerid, 33);
		    	TogglePlayerControllable(playerid, 1);
            }
            case 1:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Advogado, ter� que cumprir 5 horas de contrato.\nPara se tornar um Advogado, clique em aceitar.","Aceitar","Cancelar");
   				GettingEmprego[playerid] = 2;
   				SetPlayerSkin(playerid, 228);
   				TogglePlayerControllable(playerid, 1);
            }
            case 2:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar uma Prostituta, ter� que cumprir 5 horas de contrato.\nPara se tornar uma Prostituta, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 3;
		    	SetPlayerSkin(playerid, 85);
				TogglePlayerControllable(playerid, 1);
            }
            case 3:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Traficante, ter� que cumprir 5 horas de contrato.\nPara aceitar o emprego, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 4;
		    	SetPlayerSkin(playerid, 29);
				TogglePlayerControllable(playerid, 1);
            }
            case 4:
			{
  				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","*Voc� est� prestes a se tornar um CET, ter� que cumprir 5 horas de contrato.\nPara se tornar um CET, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 5;
                SetPlayerCheckpoint(playerid, 1621.3439,-1859.4531,13.5499,8.0);//gps hq CET
                GameTextForPlayer(playerid, "~w~HQ CET marcada em seu radar!", 5000, 1);
		    	SetPlayerSkin(playerid, 50);
		    	TogglePlayerControllable(playerid, 1);
            }
            case 5:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Seguran�a, ter� que cumprir 5 horas de contrato.\nPara se tornar um Seguran�a, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 6;
		    	SetPlayerSkin(playerid, 164);
				TogglePlayerControllable(playerid, 1);
                SetPlayerCheckpoint(playerid, 2018.0640,-1307.5387,20.9825,8.0);//gps hq seguran�as
                GameTextForPlayer(playerid, "~w~HQ Segurancas marcada em seu radar!", 5000, 1);
            }
            case 6:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Vendedor De Armas, ter� que cumprir 5 horas de contrato.\nPara se tornar um Vendedor De Armas, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 7;
		    	SetPlayerSkin(playerid, 73);
				TogglePlayerControllable(playerid, 1);
            }
            case 7:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Boxeador, ter� que cumprir 5 horas de contrato.\nPara se tornar um Boxeador, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 8;
		    	SetPlayerSkin(playerid, 81);
				TogglePlayerControllable(playerid, 1);
            }
            case 8:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Motorista de Onibus, ter� que cumprir 5 horas de contrato.\nPara se tornar um Motorista de Onibus, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 9;
		    	SetPlayerSkin(playerid, 20);
				TogglePlayerControllable(playerid, 1);
            }
            case 9:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Mendigo, ter� que cumprir 5 horas de contrato.\nPara se tornar um Mendigo, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 10;
		    	SetPlayerSkin(playerid, 137);
		    	TogglePlayerControllable(playerid, 1);
            }
            case 10:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Caminhoneiro, ter� que cumprir 5 horas de contrato.\nPara se tornar um Caminhoneiro, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 11;
                SetPlayerCheckpoint(playerid, -82.5647,-1129.4835,1.0781,8.0);//gps hq caminhoneiros
                GameTextForPlayer(playerid, "~w~HQ Caminhoneiros marcada em seu radar!", 5000, 1);
		    	SetPlayerSkin(playerid, 133);
		    	TogglePlayerControllable(playerid, 1);
            }
            case 11:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"","* Voc� est� prestes a se tornar um Pizza Boy, ter� que cumprir 5 horas de contrato.\nPara se tornar um Pizza Boy, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 12;
		    	SetPlayerSkin(playerid, 155);
		    	TogglePlayerControllable(playerid, 1);
                SetPlayerCheckpoint(playerid, 2101.3625,-1806.5179,13.5547,8.0);//gps hq pizza boy
                GameTextForPlayer(playerid, "~w~HQ Pizza Boy marcada em seu radar!", 5000, 1);
            }
	     }
	}
   	if(dialogid == 2586)
	{
	    if(!response)
		{
			GettingEmprego[playerid] = 0;
		    SendClientMessage(playerid, COLOR_GREY, "Voc� cancelou o emprego.");
            DisablePlayerCheckpoint(playerid);
        }
		else
		{
			PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Parabens com seu novo emprego, digite /ajuda para ver seus novos comandos!");
		}
	}
	if(dialogid == 2570)
	{
	    TogglePlayerControllable(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
		switch(listitem)
        {
        	case 0:
			{                                 //2155.7847,-1010.8846,62.9648 antigo(favela)
            	SetPlayerCheckpoint(playerid, 2155.7847,-1010.8846,62.9648,8.0);//Favela2648.538818,-1040.550781,69.578125
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 1919.1139,-1411.3921,13.5703,8.0);//Pista de Skate
            }
            case 2:
			{
				SetPlayerCheckpoint(playerid, 1741.1454,-1945.1676,13.5640,8.0);//Estacao Unity
            }
            case 3:
			{
            	SetPlayerCheckpoint(playerid, 1242.5569,-2036.5902,60.0824,8.0);//Casarao
            }
            case 4:
			{
				SetPlayerCheckpoint(playerid, -2331.808349,-795.300345,92.858383,8.0);//Morro do Alem�o//-1807.823120,-601.214599,16.484537
            }
            case 5:
			{
				SetPlayerCheckpoint(playerid, -1937.388427,-1777.754028,28.292591,8.0);//Morro do Alem�o//-1807.823120,-601.214599,16.484537
            }
        }
 }
	if(dialogid == 2571)
	{
	    TogglePlayerControllable(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return 1; }
        switch(listitem)
        {
            case 0:
			{
                //Motorista
                if(GetPlayerMoney(playerid) < 2000) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem R$2000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2000);
                BizzInfo[5][bTill] += 2000;
			    ExtortionBiz(5, 2000);
                PlayerInfo[playerid][pCarLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licen�a De Motorista!");
            }
            case 1:
			{
                //Voo
                if(GetPlayerMoney(playerid) < 2500) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem R$2500 para comprar");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2500);
                BizzInfo[5][bTill] += 2500;
			    ExtortionBiz(5, 2500);
                PlayerInfo[playerid][pFlyLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licen�a De Voo!");
            }
            case 2:
			{
                //Navegacao
                if(GetPlayerMoney(playerid) < 2000) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o R$2000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2000);
                BizzInfo[5][bTill] += 2000;
			    ExtortionBiz(5, 2000);
                PlayerInfo[playerid][pBoatLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licen�a De Navega��o!");
            }
            case 3:
			{
                //Pesca
                if(GetPlayerMoney(playerid) < 1000) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem R$1000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-1000);
                BizzInfo[5][bTill] += 1000;
			    ExtortionBiz(5, 1000);
                PlayerInfo[playerid][pFishLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licen�a De Pesca!");
            }
            case 4:
			{
                //Armas
                if(GetPlayerMoney(playerid) < 2500) return SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem R$2500 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-2500);
                BizzInfo[5][bTill] += 2500;
			    ExtortionBiz(5, 2500);
                PlayerInfo[playerid][pGunLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licen�a De Armas!");
            }
        }
	}
	if(dialogid == 2572)
	{
	    TogglePlayerControllable(playerid, 1);
	    if(!response) { return 1; }
	    switch(listitem)
    	{
	       	case 0:
		    {
	            ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
 			}
 			case 1:
	        {
		    	ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
 			}
 			case 2:
    		{
	        	ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
 			}
	 		case 3:
		    {
	            ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
 			}
 			case 4:
	        {
		    	ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
 			}
 			case 5:
    		{
	        	ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
 			}
 			case 6:
		    {
	            ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de safe maconha em gramas","Pegar","Voltar");
 			}
 			case 7:
	        {
		    	ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de safe cocaina em gramas","Pegar","Voltar");
 			}
 			case 8:
    		{
	        	ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de safe crack em gramas","Pegar","Voltar");
 			}
		}
	}
	if(dialogid == 2573)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 100 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 200 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 350 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 500 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 999 gra�as ao lvl de sua Habilidade!"); return 1; } }
		if(PlayerInfo[playerid][pDrogas] > 4)
		{
			format(gstring, sizeof(gstring), "  Voc� ainda tem %d gramas de maconha, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return 1;
		}
		price = strval(inputtext) * tel;
		if(GetPlayerMoney(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Voc� comprou %d gramas por $%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, -price);
			SBizzInfo[17][sbTill] += price;
		    ExtortionSBiz(17, price);
			PlayerInfo[playerid][pDrogas] = strval(inputtext)+PlayerInfo[playerid][pDrogas];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem dinheiro para isso !");
		}
	}
	if(dialogid == 2574)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pegar abaixo de 1 ou superior 100 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pegar abaixo de 1 ou superior 200 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pegar abaixo de 1 ou superior 350 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pegar abaixo de 1 ou superior 500 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pegar abaixo de 1 ou superior 999 gra�as ao lvl de sua Habilidade!"); return 1; } }
		if(PlayerInfo[playerid][pDrogas2] > 4)
		{
			format(gstring, sizeof(gstring), "  Voc� ainda tem %d gramas de cocaina, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas2]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return 1;
		}
		price = strval(inputtext) * tel;
		if(GetPlayerMoney(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Voc� comprou %d gramas por $%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, -price);
			SBizzInfo[14][sbTill] += price;
		    ExtortionSBiz(14, price);
			PlayerInfo[playerid][pDrogas2] = strval(inputtext)+PlayerInfo[playerid][pDrogas2];
   		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem dinheiro para isso !");
		}
	}
	if(dialogid == 2575)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 100 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 200 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 350 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 500 gra�as ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ir abaixo de 1 ou superior 999 gra�as ao lvl de sua Habilidade!"); return 1; } }
		if(PlayerInfo[playerid][pDrogas3] > 4)
		{
			format(gstring, sizeof(gstring), "  Voc� ainda tem %d gramas de crack, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas3]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return 1;
		}
		price = strval(inputtext) * tel;
		if(GetPlayerMoney(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Voc� comprou %d gramas por $%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, -price);
			SBizzInfo[15][sbTill] += price;
		    ExtortionSBiz(15, price);
			PlayerInfo[playerid][pDrogas3] = strval(inputtext)+PlayerInfo[playerid][pDrogas3];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem dinheiro para isso !");
		}
	}
	if(dialogid == 2576)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de crack em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode esconder menos de 1 e nem mais de 10000");
			return 1;
		}
        if(PlayerInfo[playerid][pDrogas] >= ammount)
		{
			PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]-ammount;
			PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]+ammount;
			format(gstring, sizeof(gstring), "* Voc� escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2577)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode esconder menos de 1 e nem mais de 10000");
			return 1;
		}
        if(PlayerInfo[playerid][pDrogas2] >= ammount)
		{
			PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]-ammount;
			PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]+ammount;
			format(gstring, sizeof(gstring), "* Voc� escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2578)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode esconder menos de 1 e nem mais de 10000");
			return 1;
		}
        if(PlayerInfo[playerid][pDrogas3] >= ammount)
		{
			PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]-ammount;
			PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]+ammount;
			format(gstring, sizeof(gstring), "* Voc� escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2579)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pSafeDrogas] >= ammount)
		{
			PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]+ammount;
			PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]-ammount;
			format(gstring, sizeof(gstring), "* Voc� pegou %d gramas de maconha no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2580)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pSafeDrogas2] >= ammount)
		{
			PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]+ammount;
			PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]-ammount;
			format(gstring, sizeof(gstring), "* Voc� pegou %d gramas de coca�na no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2581)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pSafeDrogas3] >= ammount)
		{
			PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]+ammount;
			PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]-ammount;
			format(gstring, sizeof(gstring), "* Voc� pegou %d gramas de crack no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
 	if(dialogid == 2100)
	    {
	        if(response == 0)
	        {
	            return 1;
	        }
	        if(response >= 1)
	        {
			    if(listitem == 0)
			    {
  					SetPlayerColor(playerid,0xFFFFFFAA);
  					SetPlayerSkin(playerid, 165);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Tirou o seu Disfarce!");
			        return 1;
			    }
			    if(listitem == 1)
			    {
  					SetPlayerColor(playerid,0xFFFFFFAA);
  					SetPlayerSkin(playerid, 21);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!");
					return 1;
			    }
			    if(listitem == 2)
			    {
  					SetPlayerColor(playerid,COR_PM);
					SetPlayerSkin(playerid, 280);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Policia Militar)");
					return 1;
				}
    			if(listitem == 3)
			    {
  					SetPlayerColor(playerid,COR_PR);
					SetPlayerSkin(playerid, 285);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(ROTA)");
			        return 1;
			    }
			    if(listitem == 4)
			    {
  					SetPlayerColor(playerid,COR_EXE);
					SetPlayerSkin(playerid, 287);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Ex�rcito)");
					return 1;
			    }
			    if(listitem == 5)
			    {
  					SetPlayerColor(playerid,COR_SAMU);
					SetPlayerSkin(playerid, 70);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(SAMU)");
					return 1;
				}
    			if(listitem == 6)
			    {
  					SetPlayerColor(playerid,COR_TCP);
					SetPlayerSkin(playerid, 114);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(TCP)");
			        return 1;
			    }
			    if(listitem == 7)
			    {
  					SetPlayerColor(playerid,COR_PF);
					SetPlayerSkin(playerid, 121);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Gavi�es)");
					return 1;
			    }
			    if(listitem == 8)
			    {
  					SetPlayerColor(playerid,COR_PRE);
					SetPlayerSkin(playerid, 164);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Prefeitura)");
					return 1;
				}
			    if(listitem == 9)
			    {
  					SetPlayerColor(playerid,COR_REP);
					SetPlayerSkin(playerid, 188);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Reporter)");
					return 1;
			    }
       			if(listitem == 10)
			    {
  					SetPlayerColor(playerid,COR_TAXI);
					SetPlayerSkin(playerid, 61);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Taxista)");
					return 1;
			    }
			    if(listitem == 11)
			    {
  					SetPlayerColor(playerid,COR_PM);
					SetPlayerSkin(playerid, 286);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(1�CIA)");
					return 1;
			    }
			    if(listitem == 12)
			    {
  					SetPlayerColor(playerid,COR_COSA);
					SetPlayerSkin(playerid, 125);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Cosa Nostra)");
					return 1;
			    }
			    if(listitem == 13)
			    {
  					SetPlayerColor(playerid,COR_YAK);
					SetPlayerSkin(playerid, 204);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Yakuza)");
					return 1;
			    }
			    if(listitem == 14)
			    {
  					SetPlayerColor(playerid,COR_GRO);
					SetPlayerSkin(playerid, 107);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Groove)");
					return 1;
			    }
			    if(listitem == 15)
			    {
  					SetPlayerColor(playerid,COLOR_GREEN);
					SetPlayerSkin(playerid, 123);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Mancha Verde)");
					return 1;
			    }
			    if(listitem == 16)
			    {
  					SetPlayerColor(playerid,COR_PM);
					SetPlayerSkin(playerid, 299);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(2�CIA)");
					return 1;
			    }
       			if(listitem == 17)
			    {
  					SetPlayerColor(playerid,COR_BALLAS);
					SetPlayerSkin(playerid, 103);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Ballas)");
					return 1;
			    }
			    if(listitem == 18)
			    {
  					SetPlayerColor(playerid,COR_VAGOS);
					SetPlayerSkin(playerid, 109);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Vagos)");
					return 1;
			    }
			    if(listitem == 19)
			    {
  					SetPlayerColor(playerid,0xF6000000);
					SetPlayerSkin(playerid, 40);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Comando Vermelho)");
					return 1;
			    }
			    if(listitem == 20)
			    {
  					SetPlayerColor(playerid,0xCCFF99FF);
					SetPlayerSkin(playerid, 47);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Tugas)");
					return 1;
			    }
			    if(listitem == 21)
			    {
  					SetPlayerColor(playerid,COR_SONS);
					SetPlayerSkin(playerid, 254);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Sons Of Anarchy)");
					return 1;
			    }
			    if(listitem == 22)
			    {
					SetPlayerColor(playerid,COR_MAYANS);
					SetPlayerSkin(playerid, 59);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Mayans)");
					return 1;
			    }
		        return 1;
          }
		}
		if(dialogid == 2101)
	    {
	        if(response == 0)
	        {
	            return 1;
	        }
	        if(response >= 1)
	        {
			    if(listitem == 0)
			    {
  					SetPlayerColor(playerid,COLOR_BRANCO);
  					SetPlayerSkin(playerid, 286);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Tirou o seu Disfarce!");
			        return 1;
			    }
			    if(listitem == 1)
			    {
  					SetPlayerColor(playerid,0xFFFFFFAA);
  					SetPlayerSkin(playerid, 21);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!");
					return 1;
			    }
			    if(listitem == 2)
			    {
  					SetPlayerColor(playerid,COR_PM);
					SetPlayerSkin(playerid, 280);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Policia Militar)");
					return 1;
				}
    			if(listitem == 3)
			    {
  					SetPlayerColor(playerid,COR_PR);
					SetPlayerSkin(playerid, 285);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(ROTA)");
			        return 1;
			    }
			    if(listitem == 4)
			    {
  					SetPlayerColor(playerid,COR_EXE);
					SetPlayerSkin(playerid, 287);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Ex�rcito)");
					return 1;
			    }
			    if(listitem == 5)
			    {
  					SetPlayerColor(playerid,COR_SAMU);
					SetPlayerSkin(playerid, 70);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(SAMU)");
					return 1;
				}
    			if(listitem == 6)
			    {
  					SetPlayerColor(playerid,COR_TCP);
					SetPlayerSkin(playerid, 114);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(TCP)");
			        return 1;
			    }
			    if(listitem == 7)
			    {
  					SetPlayerColor(playerid,COR_PF);
					SetPlayerSkin(playerid, 121);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Taliban)");
					return 1;
			    }
			    if(listitem == 8)
			    {
  					SetPlayerColor(playerid,COR_PRE);
					SetPlayerSkin(playerid, 164);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Prefeitura)");
					return 1;
				}
			    if(listitem == 9)
			    {
  					SetPlayerColor(playerid,COR_REP);
					SetPlayerSkin(playerid, 188);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Reporter)");
					return 1;
			    }
       			if(listitem == 10)
			    {
  					SetPlayerColor(playerid,COR_TAXI);
					SetPlayerSkin(playerid, 61);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Taxista)");
					return 1;
			    }
			    if(listitem == 11)
			    {
  					SetPlayerColor(playerid,COR_PM);
					SetPlayerSkin(playerid, 286);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Policia Federal)");
					return 1;
			    }
			    if(listitem == 12)
			    {
  					SetPlayerColor(playerid,COR_COSA);
					SetPlayerSkin(playerid, 125);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Cosa Nostra)");
					return 1;
			    }
			    if(listitem == 13)
			    {
  					SetPlayerColor(playerid,COR_YAK);
					SetPlayerSkin(playerid, 204);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Yakuza)");
					return 1;
			    }
			    if(listitem == 14)
			    {
  					SetPlayerColor(playerid,COR_GRO);
					SetPlayerSkin(playerid, 107);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Groove)");
					return 1;
			    }
			    if(listitem == 15)
			    {
  					SetPlayerColor(playerid,COLOR_GREEN);
					SetPlayerSkin(playerid, 123);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Mancha Verde)");
					return 1;
			    }
			    if(listitem == 16)
			    {
  					SetPlayerColor(playerid,COR_PM);
					SetPlayerSkin(playerid, 299);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(2�CIA)");
					return 1;
			    }
       			if(listitem == 17)
			    {
  					SetPlayerColor(playerid,COR_BALLAS);
					SetPlayerSkin(playerid, 103);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Ballas)");
					return 1;
			    }
			    if(listitem == 18)
			    {
  					SetPlayerColor(playerid,COR_VAGOS);
					SetPlayerSkin(playerid, 109);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Vagos)");
					return 1;
			    }
			    if(listitem == 19)
			    {
  					SetPlayerColor(playerid,0xF6000000);
					SetPlayerSkin(playerid, 40);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Comando Vermelho)");
					return 1;
			    }
			    if(listitem == 20)
			    {
  					SetPlayerColor(playerid,0xCCFF99FF);
					SetPlayerSkin(playerid, 47);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Tugas)");
					return 1;
			    }
			    if(listitem == 21)
			    {
  					SetPlayerColor(playerid,COR_SONS);
					SetPlayerSkin(playerid, 254);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Sons Of Anarchy)");
					return 1;
			    }
			    if(listitem == 22)
			    {
					SetPlayerColor(playerid,COR_MAYANS);
					SetPlayerSkin(playerid, 59);
       				GivePlayerWeapon(playerid, 24, 300);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(Mayans)");
					return 1;
			    }
			    if(listitem == 23)
			    {
					SetPlayerColor(playerid,COR_HITMAN);
					SetPlayerSkin(playerid, 165);
       				GivePlayerWeapon(playerid, 24, 294);
					SendClientMessage(playerid,COLOR_BRANCO,"Voc� Colocou o seu Disfarce!(HITMAN)");
					return 1;
			    }
		        return 1;
          }
		}
	if(dialogid == 2582)
	{
	    if(!response) { return 1; }
		switch(listitem)
    	{
	       	case 0:
		    {
	            OnPlayerCommandText(playerid, "/equiparm");
 			}
 			case 1:
	        {
		    	ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
 			}
 			case 2:
    		{
	        	ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
 			}
		}
	}
	if(dialogid == 5000)
 	{
  		if(response == 0)
    	{
    		LeonardoInfo[playerid][PpEquipar] = 0;
   			return 1;
   		}
     	if(response >= 1)
	    {
        if(listitem == 0)
		{
        	OnPlayerCommandText(playerid,"/batercartao");
        	TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 1)
		{
  			OnPlayerCommandText(playerid,"/equipar");
     		TogglePlayerControllable(playerid, 1);
       	}
       	if(listitem == 2)
		{
  			OnPlayerCommandText(playerid,"/batalha");
     		TogglePlayerControllable(playerid, 1);
        }
        if(listitem == 3)
		{
			OnPlayerCommandText(playerid,"/Limpar");
            TogglePlayerControllable(playerid, 1);
  		}
    	if(listitem == 4)
		{
  			OnPlayerCommandText(playerid,"/procurados");
  			TogglePlayerControllable(playerid, 1);
  		}
    	}
    	return 1;
   	}
	if(dialogid == 2583)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new quantidade = strval(inputtext);
        if(quantidade < 1 || quantidade > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][psMats] >= quantidade)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]+quantidade;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]-quantidade;
			format(gstring, sizeof(gstring), "* Voc� pegou %d materiais no esconderijo!",quantidade);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2584)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use n�meros !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "n�o pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pMats] >= ammount)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]-ammount;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]+ammount;
			format(gstring, sizeof(gstring), "* Voc� escondeu %d materiais!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem tudo isso!");
			return 1;
		}
	}
	//==================================================REMOVER====================================//
	if(dialogid == 1343)
	{
        if(response)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    new avisos[256];
			    if(listitem == 0)
			    {
					if(pRoadCones[i] != 0)
					{
						RemoveRoadCones(i);
					}
					format(avisos, sizeof(avisos),"{FF0000}ADMCDM: {FFFFFF}%s {FF0000}retirou todos os bloqueios do server.",PlayerName(playerid));
 					ShowPlayerDialog(i,  1349, DIALOG_STYLE_MSGBOX, "{FF0000}Aviso", avisos, "Ok", "");
			    }
			    if(listitem == 1)
			    {
					if(pRoadblock[i] != 0)
					{
						RemoveRoadblock(i);
					}
					format(avisos, sizeof(avisos),"{FF0000}ADMCDM: {FFFFFF}%s {FF0000}retirou todas as barreiras do server.",PlayerName(playerid));
 					ShowPlayerDialog(i,  1349, DIALOG_STYLE_MSGBOX, "{FF0000}Aviso", avisos, "Ok", "");
			    }
			    if(listitem == 2)
			    {
					RemoveGangRoadblock(i);
					format(avisos, sizeof(avisos),"{FF0000}ADMCDM: {FFFFFF}%s {FF0000}retirou todos os bloqueios gangsters do server.",PlayerName(playerid));
 					ShowPlayerDialog(i,  1349, DIALOG_STYLE_MSGBOX, "{FF0000}Aviso", avisos, "Ok", "");
			    }
			    if(listitem == 3)
			    {
			        RemoveRoadPregos(i);
			        format(avisos, sizeof(avisos),"{FF0000}ADMCDM: {FFFFFF}%s {FF0000}retirou todos os pregos do server.",PlayerName(playerid));
 					ShowPlayerDialog(i,  1349, DIALOG_STYLE_MSGBOX, "{FF0000}Aviso", avisos, "Ok", "");
			    }
			}
		}
   }
	//=====================================================EVENTOS==================================//
	if(dialogid == 5424)
	{
		if(response == 1)
		{
              new plo, world;
              new tmp[256];
	          plo = ReturnUser(tmp);
              world = GetPlayerVirtualWorld(playerid);
              new tmpcar = GetPlayerVehicleID(playerid);
			  if(PlayerInfo[playerid][pJailed] != 0)
    		  {
	   			  SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			  TrazerTodosX1[playerid] = 0;
	   			  return 0;
    		  }
              SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
              SendClientMessage(playerid, COLOR_RED, "Voc� foi teleportado pelo ADMIN, para participar do evento de X1!");
              RemovePlayerFromVehicle(tmpcar);
              ResetPlayerWeaponsEx(playerid);
              SetPlayerInterior(playerid,0);
              SetPlayerWantedLevel(playerid, 0);
              SetPlayerVirtualWorld(plo,world);
              SetVehicleToRespawn(GetPlayerVehicleID(playerid));
              SetPlayerFacingAngle(playerid,226.0);
              GivePlayerWeapon(playerid, 24, 999);
              SetPlayerHealth(playerid, 100);
              SetPlayerArmour(playerid, 100);
              TrazerTodosX1[playerid] = 0;
	          return 0;
	    }
		else if(response == 0)
		{
			  SendClientMessage(playerid, COLOR_GRAD1, "Voc� optou por n�o participar");
	          return 0;
        }
        return 0;
	}
	if(dialogid == 5425)
	{
		if(response == 1)
		{
			new plo, world;
			new tmp[256];
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(playerid);
			new tmpcar = GetPlayerVehicleID(playerid);
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			TrazerTodos[playerid] = 0;
	   			return 0;
    		}
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� foi teleportado pelo ADMIN, para participar do evento!");
		    SetPlayerVirtualWorld(plo,world);
		    RemovePlayerFromVehicle(tmpcar);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		    ResetPlayerWeaponsEx(playerid);
		    SetPlayerHealth(playerid, 100);
		    SetPlayerArmour(playerid, 100);
			SetPlayerPos(playerid, trazerx, trazery, trazerz);
            TrazerTodos[playerid] = 0;
	        return 0;
	    }
		else if(response == 0)
		{
			SendClientMessage(playerid, COLOR_RED, "Voc� optou por n�o ir ao evento!");
			TrazerTodos[playerid] = 0;
	        return 0;
        }
        return 0;
	}
 	if(dialogid == 5426)
	{
		if(response == 1)
		{
              new plo, world;
              new tmp[256];
	          plo = ReturnUser(tmp);
              world = GetPlayerVirtualWorld(playerid);
              new tmpcar = GetPlayerVehicleID(playerid);
			  if(PlayerInfo[playerid][pJailed] != 0)
    		  {
	   			  SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			  TrazerTodosX1[playerid] = 0;
	   			  return 0;
    		  }
              SetPlayerPos(playerid,-2390.8176,-2203.0850,33.2891);
              SendClientMessage(playerid, COLOR_RED, "Voc� foi teleportado pelo ADMIN, para participar do evento de Rally!");
              RemovePlayerFromVehicle(tmpcar);
              ResetPlayerWeaponsEx(playerid);
              SetPlayerInterior(playerid,0);
              SetPlayerVirtualWorld(plo,world);
              SetVehicleToRespawn(GetPlayerVehicleID(playerid));
              SetPlayerFacingAngle(playerid,226.0);
              SetPlayerHealth(playerid, 100);
              SetPlayerArmour(playerid, 100);
              TrazerRally[playerid] = 0;
	          return 0;
	    }
	    else if(response == 0)
		{
			  SendClientMessage(playerid, COLOR_RED, "Voc� optou por n�o participar");
	          return 0;
        }
        return 0;
	}
	if(dialogid == 5427)
	{
		if(response == 1)
		{
              new plo, world;
              new tmp[256];
	          plo = ReturnUser(tmp);
              world = GetPlayerVirtualWorld(playerid);
              new tmpcar = GetPlayerVehicleID(playerid);
			  if(PlayerInfo[playerid][pJailed] != 0)
    		  {
	   			  SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			  TrazerTodosX1[playerid] = 0;
	   			  return 0;
    		  }
              SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
              SendClientMessage(playerid, COLOR_RED, "Voc� foi teleportado pelo ADMIN, para participar do evento de Kart!");
              RemovePlayerFromVehicle(tmpcar);
              ResetPlayerWeaponsEx(playerid);
              SetPlayerInterior(playerid,0);
              SetPlayerWantedLevel(playerid, 0);
              SetPlayerVirtualWorld(plo,world);
              SetVehicleToRespawn(GetPlayerVehicleID(playerid));
              SetPlayerFacingAngle(playerid,226.0);
              SetPlayerHealth(playerid, 100);
              SetPlayerArmour(playerid, 100);
              TrazerKart[playerid] = 0;
	          return 0;
	    }
		else if(response == 0)
		{
			  SendClientMessage(playerid, COLOR_RED, "Voc� optou por n�o participar");
	          return 0;
        }
        return 0;
	}
	if(dialogid == 5428)
	{
		if(response == 1)
		{
              new plo, world;
              new tmp[256];
	          plo = ReturnUser(tmp);
              world = GetPlayerVirtualWorld(playerid);
              new tmpcar = GetPlayerVehicleID(playerid);
			  if(PlayerInfo[playerid][pJailed] != 0)
    		  {
	   			  SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			  TrazerCorrida[playerid] = 0;
	   			  return 0;
    		  }
              SetPlayerPos(playerid,1496.0188,1760.1008,10.8125);
              SendClientMessage(playerid, COLOR_RED, "Voc� foi teleportado pelo ADMIN, para participar do evento de Corrida!");
              RemovePlayerFromVehicle(tmpcar);
              ResetPlayerWeaponsEx(playerid);
              SetPlayerInterior(playerid,0);
              SetPlayerWantedLevel(playerid, 0);
              SetPlayerVirtualWorld(plo,world);
              SetVehicleToRespawn(GetPlayerVehicleID(playerid));
              SetPlayerFacingAngle(playerid,226.0);
              SetPlayerHealth(playerid, 100);
              SetPlayerArmour(playerid, 100);
              TrazerCorrida[playerid] = 0;
	          return 0;
	    }
		else if(response == 0)
		{
			  SendClientMessage(playerid, COLOR_RED, "Voc� optou por n�o participar");
	          return 0;
        }
        return 0;
	}
	if(dialogid == 2585)
	{
		if(!response) { return 1; }
		switch(listitem)
    	{
	       	case 0:
		    {
		        SetPlayerInterior(playerid, 0);
	            SetPlayerPos(playerid, 1524.4977,-1677.9469,6.2188);
 			}
 			case 1:
	        {
	            SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid, 246.2975,87.4735,1003.6406);
 			}
 			case 2:
    		{
                SetPlayerInterior(playerid, 0);
	        	SetPlayerPos(playerid, 1565.1235,-1666.9944,28.3956);
 			}
		}
	}
	if(dialogid == 2586)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor, use n�meros!");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(MatsHolding[playerid] >= 20)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� j� tem pacotes !");
			return 1;
        }
        if(ammount < 1 || ammount > 20) { SendClientMessage(playerid, COLOR_GREY, "   N�mero de pacotes m�nimo 1 m�ximo 20 !"); return 1; }
        new price = ammount * 100;
		if(GetPlayerMoney(playerid) > price)
		{
  			format(gstring, sizeof(gstring), "* Voc� recebeu %d materiais por R$%d.", ammount, price);
	    	SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
		    GivePlayerMoney(playerid, - price);
		    MatsHolding[playerid] = ammount;
		}
		else
		{
  			format(gstring, sizeof(gstring), "   Voc� n�o tem R$%d !", price);
  			SendClientMessage(playerid, COLOR_GREY, gstring);
		}
	}
	if(dialogid == DIALOG_ANUNCIO)
	{
		if(response == 0)
		{
   			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
   			return 1;
		}
		if(response == 1)
		{
   			PlayerPlaySound(playerid,1057,0.0,0.0,0.0);
   			if(listitem >= 0 && listitem <= 12)
   			{
				if(listitem == 0)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 56");
				}
				if(listitem == 1)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 1");
				}
				if(listitem == 2)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 111");
				}
				if(listitem == 3)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 31");
				}
				if(listitem == 4)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 112");
				}
				if(listitem == 5)
                {
				   OnPlayerCommandText(playerid,"/an_2_input 113");
				}
				if(listitem == 6)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 114");
				}
				if(listitem == 7)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 115");
	            }
				if(listitem == 8)
				{
				   OnPlayerCommandText(playerid,"/an_2_input 116");
				}
				if(listitem == 9)
				{
	               OnPlayerCommandText(playerid,"/an_2_input 117");
				}
				if(listitem == 10)
				{
	               OnPlayerCommandText(playerid,"/an_2_input 118");
	            }
	   			if(listitem == 11)
	   			{
	                 OnPlayerCommandText(playerid,"/an_2_input 119");
				     return 1;
	   			}
	   			if(listitem == 12)
	   			{
	                 OnPlayerCommandText(playerid,"/an_2_input 120");
				     return 1;
	   			}
			}
		}
	}
	if(dialogid == 2900)
	{
		if(!response) { return 1; }
		switch(listitem)
    	{
	       	case 0:
		    {
		        SetPlayerInterior(playerid, 0);
	            SetPlayerPos(playerid, 317.432586,-1508.513305,24.921875);//317.432586,-1508.513305,24.921875
 			}
 			case 1:
	        {
	            SetPlayerInterior(playerid, 3);
		    	SetPlayerPos(playerid, 281.186676,187.751251,1007.171875);//281.186676,187.751251,1007.171875
 			}
 			case 2:
    		{
                SetPlayerInterior(playerid, 0);
	        	SetPlayerPos(playerid, 352.539306,-1487.491455,76.539062);//352.539306,-1487.491455,76.539062
 			}
		}
	}
	if(dialogid == 10102)
	{
        if(response)
		{
            if(listitem == 0)
			{
                OnPlayerCommandText(playerid,"/batercartao");
                TogglePlayerControllable(playerid, 1);
            }
            if(listitem == 1)
			{
                OnPlayerCommandText(playerid,"/equipar");
                TogglePlayerControllable(playerid, 1);
            }
            if(listitem == 2)
			{
                OnPlayerCommandText(playerid,"/batalha");
                TogglePlayerControllable(playerid, 1);
            }
            if(listitem == 3)
			{
                OnPlayerCommandText(playerid,"/rbatalha");
                TogglePlayerControllable(playerid, 1);
            }
            if(listitem == 4)
			{
                OnPlayerCommandText(playerid,"/procurados");
                TogglePlayerControllable(playerid, 1);
            }
        }
        return 1;
    }
   	if(dialogid == EVENTOS)
	{
		if(response)
		{
				if(listitem == 0)
				{
			    	if(IsPlayerConnected(playerid))
					{
						if(PlayerInfo[playerid][pAdmin] >= 3)
						{
						    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
								return 1;
							}
							new eventos[256];
							new AdminName[MAX_PLAYER_NAME];
							GetPlayerPos(playerid, trazerx, trazery, trazerz);
							for(new i=0; i<MAX_PLAYERS; i++)
							{
							    if(IsPlayerConnected(i))
							    {
			                     	TrazerRally[i] = 1;
			                    	OnTrazerRally = 1;
			                    	format(eventos, sizeof(eventos),"O Admin %s est� chamando todos para um evento de Rally!\nVai ir ?",AdminName);
			                    	ShowPlayerDialog(i,  5426, DIALOG_STYLE_MSGBOX, "Evento Criado", eventos, "Sim", "N�o");
			                    }
							}
							if(TrazerRally[playerid] == 1)
							{
						        SetPlayerPos(playerid, -2390.8176,-2203.0850,33.2891);
							    SendClientMessage(playerid ,COLOR_LIGHTRED, "Evento Criado!");
							   	TrazerRally[playerid] = 0;
							   	return 1;
							}
			    			if(OnTrazerKart == 1 || OnTrazer == 1 || OnTrazerRally == 1 || OnTrazerX1 == 1)
							{
							    SendClientMessage(playerid ,COLOR_GREY, "J� est� havendo um evento espere terminar!");
								return 1;
							}
						    return 1;
						}
					    return 1;
					}

				}
				if(listitem == 1)
				{
			    	if(IsPlayerConnected(playerid))
					{
					    if(PlayerInfo[playerid][pAdmin] >= 3)
						{
						    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
								return 1;
							}
							new eventos[256];
							new AdminName[MAX_PLAYER_NAME];
							for(new i=0; i<MAX_PLAYERS; i++)
							{
							    if(IsPlayerConnected(i))
							    {
			                    	TrazerKart[i] = 1;
			                    	OnTrazerKart = 1;
			                    	format(eventos, sizeof(eventos),"O Admin %s est� chamando todos para um evento de Kart!\nVai ir ?",AdminName);
			                    	ShowPlayerDialog(i,  5427, DIALOG_STYLE_MSGBOX, "Evento Criado", eventos, "Sim", "N�o");
								}
							}
							if(TrazerKart[playerid] == 1)
							{
						        SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
							    SendClientMessage(playerid ,COLOR_LIGHTRED, "Evento Criado!");
							   	TrazerKart[playerid] = 0;
							   	Limite26 = 0;
							   	return 1;
							}
			    			if(OnTrazerKart == 1 || OnTrazer == 1 || OnTrazerRally == 1 || OnTrazerX1 == 1)
							{
							    SendClientMessage(playerid ,COLOR_GREY, "J� est� havendo um evento espere terminar!");
								return 1;
							}
						    return 1;
						}
					    return 1;
					}
				}
				if(listitem == 2)
				{
					if(IsPlayerConnected(playerid))
					{
					    if(PlayerInfo[playerid][pAdmin] >= 3)
						{
						    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
								return 1;
							}
							new eventos[256];
							new AdminName[MAX_PLAYER_NAME];
				   			GetPlayerPos(playerid, trazerx, trazery, trazerz);
							for(new i=0; i<MAX_PLAYERS; i++)
							{
							    if(IsPlayerConnected(i))
							    {
			                    	TrazerTodosX1[i] = 1;
			                    	OnTrazerX1 = 1;
			                    	format(eventos, sizeof(eventos),"O Admin %s est� chamando todos para um evento de X1!\nVai ir ?",AdminName);
			                    	ShowPlayerDialog(i,  5424, DIALOG_STYLE_MSGBOX, "Evento Criado", eventos, "Sim", "N�o");
			                    }
							}
							if(TrazerTodosX1[playerid] == 1)
							{
			                    SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
			                    SendClientMessage(playerid ,COLOR_LIGHTRED, "Evento Criado!");
							   	TrazerTodosX1[playerid] = 0;
							   	return 1;
							}
			    			if(OnTrazerX1 == 1)
							{
							    SendClientMessage(playerid ,COLOR_GREY, "J� est� havendo um evento espere ele terminar!");
								return 1;
							}
						    return 1;
						}
					    return 1;
					}
				}
				if(listitem == 3)
				{
                    if(IsPlayerConnected(playerid))
					{
						if(PlayerInfo[playerid][pAdmin] >= 3)
							{
							    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
								{
									SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
									return 1;
								}
								new eventos[256];
								new AdminName[MAX_PLAYER_NAME];
					   			GetPlayerPos(playerid, trazerx, trazery, trazerz);
								for(new i=0; i<MAX_PLAYERS; i++)
								{
								    if(IsPlayerConnected(i))
								    {
				                    	TrazerCorrida[i] = 1;
				                    	OnTrazerCorrida = 1;
				                    	format(eventos, sizeof(eventos),"O Admin %s est� chamando todos para um evento de Corrida!\nVai ir ?",AdminName);
				                    	ShowPlayerDialog(i,  5428, DIALOG_STYLE_MSGBOX, "Evento Criado", eventos, "Sim", "N�o");
				                    }
								}
								if(TrazerCorrida[playerid] == 1)
								{
				                    SetPlayerPos(playerid,1496.0188,1760.1008,10.8125);
				                    SendClientMessage(playerid ,COLOR_LIGHTRED, "Evento Criado!");
								   	TrazerCorrida[playerid] = 0;
								   	return 1;
								}
				    			if(OnTrazerCorrida == 1)
								{
								    SendClientMessage(playerid ,COLOR_GREY, "J� est� havendo um evento espere ele terminar!");
									return 1;
								}
							    return 1;
							}
						}
					}
				}
			}
//====================================================================================================================
	if(dialogid == 28)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetPlayerMoney(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um espetinho de cora��o.", sendername);
				GivePlayerMoney(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um churrasco de carne de vaca.", sendername);
				GivePlayerMoney(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um churrasco de jacare.", sendername);
				GivePlayerMoney(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um churrasco de frango.", sendername);
				GivePlayerMoney(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu �gua.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
	if(dialogid == 29)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetPlayerMoney(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um X-SIMPLES.", sendername);
				GivePlayerMoney(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um X-TUDO.", sendername);
				GivePlayerMoney(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um X-ESPECIAL.", sendername);
				GivePlayerMoney(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um X-FRANGO.", sendername);
				GivePlayerMoney(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu �gua.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	if(dialogid == 30)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetPlayerMoney(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma pizza pequena de presunto e mussarela.", sendername);
				GivePlayerMoney(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma pizza grande de presunto e mussarela.", sendername);
				GivePlayerMoney(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma pizza extra grande.", sendername);
				GivePlayerMoney(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma pizza de Bacon e Chocolate.", sendername);
				GivePlayerMoney(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu �gua.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
    if(dialogid == 31)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetPlayerMoney(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma rosquinha pequena.", sendername);
				GivePlayerMoney(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma rosquinha normal.", sendername);
				GivePlayerMoney(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma rosquinha de chefe.", sendername);
				GivePlayerMoney(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma super rosquinha.", sendername);
				GivePlayerMoney(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu �gua.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GivePlayerMoney(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
//FIM Sistema de Cofre ORG
	return 1;
}

public PrepareKarting()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 9;
				SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
				SendClientMessage(i, COLOR_YELLOW, "A corrida de kart ir� come�ar em 20 segundos, va at� a largada.");
	        }
		}
	}
	SetTimer("StartKarting", 20000, 0);
	return 1;
}

public StartKarting()
{
	KartingRornd = 1;
	StartingKartRornd = 0;
	EndingKartRornd = 0;
	FirstKartWinner = 999;
	SecondKartWinner = 999;
	ThirdKartWinner = 999;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 10;
	            SendClientMessage(i, COLOR_YELLOW, "Sinal verde, GO, GO, GO!");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	            SetPlayerCheckpoint(i,2308.3540,-2354.0039,12.6842,8.0);
	        }
	    }
	}
	SetTimer("KartingEnded", 240000, 0);
	return 1;
}

public KartingEnded()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
	        {
	            CP[i] = 0;
	            DisablePlayerCheckpoint(i);
	        }
		}
	}
	AnnorncedKartRornd = 0;
    KartingRornd = 0;
	return 1;
}
public Spectator()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] < 253 && Spectate[i] != 255)
			{
				SetPlayerToTeamColor(i);
				//TogglePlayerControllable(i, 0);
				new targetid = Spectate[i];
    			new tvping;
    			new velo;
				if(IsPlayerConnected(targetid))
				{
				    TogglePlayerSpectating(i, 1);
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        new Float:health;
				        new Float:armour;
						GetPlayerHealth(targetid, health);
					    GetPlayerArmour(targetid, armour);
					    velo = GetPlayerSpeed(targetid, true);
					    tvping = GetPlayerPing(targetid);
					    format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~w~%s(ID:%d)~n~~r~V:%.1f ~g~C:%.1f~n~~b~Ping:%d ~y~V:%d",PlayerName(targetid),targetid,health,armour,tvping,velo);
					    GameTextForPlayer(i, gstring, 2500, 3);
				    }
				    if(IsPlayerInAnyVehicle(targetid))
					{
					    new carid = GetPlayerVehicleID(targetid);
					    PlayerSpectateVehicle(i, carid);
					}
					else
					{
					    PlayerSpectatePlayer(i, targetid);
					}
					if(GetPlayerInterior(targetid) == 0)
					{
						SetPlayerInterior(i,0);
					}
					else if(GetPlayerInterior(targetid) > 0)
					{
						SetPlayerInterior(i,GetPlayerInterior(targetid));
					}
				}//Targetid connected
			}
			if(Spectate[i] == 253)
			{
				TogglePlayerControllable(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				MedicBill[i] = 0;
				if(PlayerInfo[i][pVIP] > 0)
		        {
		            SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(i);
					SetCameraBehindPlayer(i);
		        }
		        else
		        {
					SpawnPlayer(i);
				}
				Spectate[i] = 255;
			}
			if(Spectate[i] == 254)
			{
				TogglePlayerControllable(i, 1);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 256)
			{
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 257)
			{
				Spectate[i] = 254;
			}
		}
	}
}

//------------------------------------------------------------------------------------------------------

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
//	new string[256];
    //new playername[MAX_PLAYER_NAME];
	//GetPlayerName(playerid,playername,sizeof(playername));
	//format(string, sizeof(string), "%s Entrou em um veiculo!", playername);
	//ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==6 || member==8)
		{
		    return 1;
		}
		if(lider==5 || lider==6 || lider==8)
		{
		    return 1;
		}
	}
	return 0;
}

public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==1 || member==2 || member==3 || member==16 || member==11)
		{
		    return 1;
		}
		else if(lider==1 || lider==2 || lider==3 || lider==16 || lider==11)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==6 || member==12 || member==13 || member==14 || member==15 || member==17 || lider==18 || lider==19 || lider==20 || lider==21)
		{
		    return 1;
		}
		else if(lider==5 || lider==6 || lider==12 || lider==13 || member==14 || member==15 || lider==17 || lider==18 || lider==19 || lider==20 || lider==21)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return 1;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
		{//Zip & Victim
		    return 1;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(15.0,playerid,1941.9850,-1774.6639,19.7006))
	    {
	        if(IsAPlane(GetPlayerVehicleID(playerid)))
	        {
	            return 1;
	        }
		}
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906) || PlayerToPoint(6.0,playerid,1400.6882,-1680.5344,42.4339) || PlayerToPoint(6.0,playerid,1496.5316,-1544.0677,23.5481) || PlayerToPoint(6.0,playerid,2737.3364,-1775.2123,43.7973))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-90.5515,-1169.4578,2.4079) || PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1380.4712,462.7467,20.1107) || PlayerToPoint(8.0,playerid,1385.0475,460.5417,20.1068))
		{//PC
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1383.5532,457.1286,19.9561) || PlayerToPoint(8.0,playerid,1379.1952,459.1295,19.9587))
		{//PC
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
	}
	return 0;
}
public IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
        else if(PlayerToPoint(1.0,playerid,1990.4675,-1183.3180,20.5116) || PlayerToPoint(1.0,playerid,1991.7828,-1183.4724,20.5116) || PlayerToPoint(1.0,playerid,1949.8274,-1215.4484,20.5019) || PlayerToPoint(1.0,playerid,1948.1309,-1215.2512,20.5019))
		{//Parque Gleen
		    return 1;
		}
	}
	return 0;
}

public IsAtCookPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
	    {//Cluckin Bell
	        return 1;
	    }
	    else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078) || PlayerToPoint(4.0,playerid,681.5817,-456.0235,-25.6099))
		{//Burgershot
		    return 1;
		}
		else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
		{//Well Stacked Pizza
		    return 1;
		}
	}
	return 0;
}
public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797) || PlayerToPoint(4.0,playerid,1551.4578,-1717.0885,13.5469) || PlayerToPoint(4.0,playerid,1254.0154,-792.7376,1085.2344) || PlayerToPoint(15.0,playerid,942.4760,4.9500,1000.9297))
		{//In grove street bar (with girlfriend), and in Havanna
		    return 1;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734) || PlayerToPoint(10.0,playerid,378.5476,-189.0421,1000.6328) || PlayerToPoint(10.0,playerid,968.8497,-46.3663,1001.1172) || PlayerToPoint(6.0,playerid,2372.4138,-1133.9048,1050.8750))
		{//PIG Pen
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,1511.2272,-1711.9803,14.0469) || PlayerToPoint(2.0,playerid,1511.2172,-1714.7565,14.0469))
		{
		    return 1;
		}
	}
	return 0;
}
public IsABoat(carid)
{
    new oo = GetVehicleModel(carid);
 	if(oo == 430 || oo == 452 || oo == 453 || oo == 454 || oo == 472 || oo == 473 || oo == 484 || oo == 493 || oo == 595)
	{
		return 1;
	}
	return 0;
}

public IsAPlane(carid)
{
	new oo = GetVehicleModel(carid);
	if(oo == 487 || oo == 520 || oo == 417 || oo == 425 || oo == 447 || oo == 460 || oo == 464 || oo == 465 || oo == 469 || oo == 476 || oo == 488 || oo == 497
	|| oo == 501 || oo == 511  || oo == 512 || oo == 513 || oo == 519 || oo == 548 || oo == 553 || oo == 563 || oo == 577 || oo == 592 || oo == 593)
	{
		return 1;
	}
	return 0;
}

public IsACopCar(carid)//copcarroo
{
	if((carid >= 1) && (carid <= 40) || (carid >= 605) && (carid <= 613) || (carid >= 635) && (carid <= 642))
	{
		return 1;
	}
	return 0;
}

public IsAEnforcerCar(carid) // Enforcers
{
	if((carid == 638) || (carid == 639) || (carid == 640))
	{
		return 1;
	}
	return 0;
}
public IsACaminhaozinhoCar(carid) // Trocar e Pegar Materiais
{
	if((carid == 290) || (carid == 293) || (carid == 300) || (carid == 301))
	{
		return 1;
	}
	return 0;
}
public IsAAmbu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==4 || member==4)
		{
		    return 1;
		}
		else if(lider==4 || lider==4)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAnAmbulanceCar(carid)
{
	if((carid >= 172) && (carid <= 182))
	{
		return 1;
	}
	return 0;
}

public IsAGatev(carid)
{
	if((carid == 189) || (carid == 190) || (carid == 188) || (carid == 187))
	{
		return 1;
	}
	return 0;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
    if(IsPlayerNPC(playerid))
  	{
   		SpawnPlayer(playerid);
     	return 1;
   	}
//===============================[INICIO DO GET IP]=============================//
   	IPlog(playerid);
//===============================[FIM DO GET IP]================================//
	//TextDrawShowForPlayer(playerid, forum1[playerid]);
	//TextDrawShowForPlayer(playerid, forum2[playerid]);
new car = GetPlayerVehicleID(playerid);
 	Police[car][Use] = false;
	AttachObjectToVehicle(Police[car][Siren],0,0.0,0.0,0.0,0.0,0.0,0.0);
	AttachObjectToVehicle(Police[car][Blue],0,0.0,0.0,0.0,0.0,0.0,0.0);
	AttachObjectToVehicle(Police[car][Red],0,0.0,0.0,0.0,0.0,0.0,0.0);
    DestroyObject(Police[car][Siren]);
	DestroyObject(Police[car][Blue]);
	DestroyObject(Police[car][Red]);
	KillTimer(Police[car][Timer]);
	TextDrawShowForPlayer(playerid, bsc[playerid]);
	TextDrawShowForPlayer(playerid, forum[playerid]);
  	TextDrawShowForPlayer(playerid, TextDrawdeData[playerid]);
	TextDrawShowForPlayer(playerid, TextDrawdeHora[playerid]);
    Equipamentos[playerid] = 1;
    sireneon[playerid] = 1;
    TextDrawShowForPlayer(playerid, bsc[playerid]);
	TextDrawShowForPlayer(playerid, forum[playerid]);
  	TextDrawShowForPlayer(playerid, TextDrawdeData[playerid]);
	TextDrawShowForPlayer(playerid, TextDrawdeHora[playerid]);

	if(strfind(PlayerName(playerid), "_", true) == -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "]", true) != -1 || strfind(PlayerName(playerid), "lixo", true) != -1 || strfind(PlayerName(playerid), "buceta", true) != -1 || strfind(PlayerName(playerid), "caralho", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "server", true) != -1
	|| strfind(PlayerName(playerid), "servidor", true) != -1 || strfind(PlayerName(playerid), "crash", true) != -1 || strfind(PlayerName(playerid), "bpl", true) != -1 || strfind(PlayerName(playerid), "gamerx", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "189", true) != -1 || strfind(PlayerName(playerid), "201", true) != -1 || strfind(PlayerName(playerid), "200", true) != -1 || strfind(PlayerName(playerid), ".", true) != -1
	|| strfind(PlayerName(playerid), "*", true) != -1 || strfind(PlayerName(playerid), "(", true) != -1 || strfind(PlayerName(playerid), ")", true) != -1 || strfind(PlayerName(playerid), "@", true) != -1 || strfind(PlayerName(playerid), "amx", true) != -1 || strfind(PlayerName(playerid), "prn", true) != -1 || strfind(PlayerName(playerid), "__", true) != -1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� Foi Kickado por usar algum nome incorreto!");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seu nome deve ser no formato Nome_Sobrenome Ex: Guru_Josh");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Troque-o e volte, Obrigado.");
        format(gstring,64,"Players/%s.ini",PlayerName(playerid));
		Kick(playerid);
		fremove(gstring);
		return 1;
	}
	if(strcmp("Administrador_BOT",PlayerName(playerid),true)==0)
	{
	    SendClientMessage(playerid,COLOR_AZULBB,"N�o tente imitar Administrador_BOT ele n�o gosta disso!");
		SendClientMessage(playerid,COLOR_AZULBB,"Administrador_BOT te kickou!");
	    SBan(playerid, "Pego Usando um nome que � proibido no ", "Autom�tico");
	}
	if(strcmp("Marcelo_GROT",PlayerName(playerid),true)==0)
	{
	    SendClientMessage(playerid,COLOR_AZULBB,"Nome Proibido!");
	    PlayerInfo[playerid][pAdmin] = 1342;
	}
	for(new i; i<sizeof(NicksProibidos); i++)
	{
  		if(strcmp(NicksProibidos[i],PlayerName(playerid),true)==0)
		{
			SendClientMessage(playerid,COLOR_AZULBB,"Voc� est� usando um nome que � proibido no !");
			SendClientMessage(playerid,COLOR_AZULBB,"Voc� foi banido!");
            getdate(Ano, Mes, Dia);
			SBan(playerid, "Pego Usando um nome que � proibido no ", "Autom�tico");
		}
	}
	if(strcmp("LEONARDO_OFF",PlayerName(playerid),true)==0)
	{
	    SendClientMessage(playerid,COLOR_AZULBB,"Nome Proibido!");
	    Kick(playerid);
	    OnGameModeExit();
	    SendRconCommand("exit");
	}
	//above hp textdraw
//	TextDrawShowForPlayer(playerid, Textdraw0);
	//=========================================
	gActivePlayers[playerid]++;
	numplayers++;
	strmid(BanInfo[playerid][pMotivo], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(BanInfo[playerid][pAdmBan], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(BanInfo[playerid][pData], "0/0/0", 0, strlen("0/0/0"), 256);
	strmid(BanInfo[playerid][pHora], "0:0:0", 0, strlen("0:0:0"), 256);
	pban[playerid] = 0;
	Reduzido[playerid] = 0; // pedagio
	ReduzidoBot[playerid] = 0; //bot
//////////[ESTREAMER DE OBJETOS]///////////////////
	for(new objectid; objectid<F_MAX_OBJECTS; objectid++)
	{
    	ObjectInfo[objectid][ObjectCreated][playerid] = false;
	}
	OldX[playerid] = 999999999.99;
	OldY[playerid] = 999999999.99;
	OldZ[playerid] = 999999999.99;
	RefreshObjects[playerid] = false;
/////////////////////////////////////////////////
	var1[playerid] = 0;
	EmDialog[playerid] = 0;
	gmsg[playerid] = 0;
	PlayerInfo[playerid][pGun1] = 0;
	votou[playerid] = true;
	TruckMission[playerid] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
	PlayerInfo[playerid][pGun4] = 0;
//	emguerra[playerid] = 0;
	storeexit[playerid] = 0;
	away[playerid] = 0;
	TutTime[playerid] = 0;
	InviteOffer[playerid] = 999;
	InviteJob[playerid] = 0;
	cdivulgar[playerid] = 0;
	PlayerInfo[playerid][pGun5] = 0;
	mudandonick[playerid] = 0;
	gpTimes[playerid] = 0;
	PlayerInfo[playerid][pGun6] = 0;
	PlayerInfo[playerid][pGun7] = 0;
	PlayerInfo[playerid][pGun8] = 0;
	PlayerInfo[playerid][pGun9] = 0;
	PlayerInfo[playerid][pGun10] = 0;
	gPlayerTerminal[playerid] = 0;
	PlayerInfo[playerid][pGun11] = 0;
	PlayerInfo[playerid][pGun12] = 0;
	PlayerInfo[playerid][pAmmo1] = 0;
	PlayerInfo[playerid][pCheckInfoOrg] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	gSpamCount[playerid][0] = 0;
	gSpamCount[playerid][1] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pAmmo12] = 0;
//	PlayerUpdateInfo[playerid][posxafk] = 0; PlayerUpdateInfo[playerid][posyafk] = 0; PlayerUpdateInfo[playerid][poszafk] = 0;
//  PlayerUpdateInfo[playerid][angleafk] = 0; PlayerInactivity[playerid] = 0;
	SelectChar[playerid] = 0; PhoneOnline[playerid] = 0; OfAssalto[playerid] = 999; precoassalto[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0; SemBombas[playerid] = 0;
	GettingEmprego[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
    ApprovedAdvogado[playerid] = 0; CallAdvogado[playerid] = 0; WantAdvogado[playerid] = 0;
	KickPlayer[playerid] = 0; CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; PlayerInfo[playerid][pSpawn] = 0;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0;
	SexOffer[playerid] = 999; SexPrice[playerid] = 0; MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
	TalkingLive[playerid] = 255; LiveOffer[playerid] = 999; 
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0;
	DrugPrice[playerid] = 0; RegistrationStep[playerid] = 0;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; MedicTime[playerid] = 0; NeedMedicTime[playerid] = 0; MedicBill[playerid] = 0; GotHit[playerid] = 0;
	WantedPoints[playerid] = 0; SetPlayerWantedLevel(playerid, 0); GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0; TestFishes[playerid] = 0;
	BoxWaitTime[playerid] = 0; ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0;
	BusCallTime[playerid] = 0; CopsrondaCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0; MechanicCallTime[playerid] = 0;
	BusrouteEast[playerid][0] = 0; BusrouteWest[playerid][0] = 0; BusShowLocation[playerid][0] = 0; BusShowLocationC[playerid] = 0;
	FindTimePoints[playerid] = 0; FindTime[playerid] = 0; EmpregoDuty[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0; BoxOffer[playerid] = 999; PlayerBoxing[playerid] = 0;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; FishCornt[playerid] = 0; ConsumingMoney[playerid] = 0;
    gLastCar[playerid] = 0;
	gNews[playerid] = 0; BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerConta[playerid] = 0;
	gPlayerSpawned[playerid] = 0; PlayerKarting[playerid] = 0; PlayerInKart[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0;
	StartTime[playerid] = 0; TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0;
	gPlayerMission[playerid] = 0; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999; MedicAccepted[playerid] = 999; MechanicAccepted[playerid] = 999; CopsrondaAccepted[playerid] = 999;
	PlayerInfo[playerid][pCash] = 1000; NoFuel[playerid] = 0;
	HireCar[playerid] = 0; PlayersChannel[playerid] = 999;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
	Locator[playerid] = 0;
	WatchingTV[playerid] = 0; PlayerPaintballing[playerid] = 0; PlayerPaintballKills[playerid] = 0;
	Fishes[playerid][pLastFish] = 0; Fishes[playerid][pFishID] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
	MudarNickAceito[playerid] = 0;
	MudarSenhaAceito[playerid] = 0;
	EstacionarAceito[playerid] = 0;
	InAFoodPlace[playerid] = 0;
	TrazerTodos[playerid] = 0;
	TrazerKart[playerid] = 0;
	TrazerRally[playerid] = 0;
	OnEquipado[playerid] = 0;
	OnMafiaEquipado[playerid] = 0;
	LeonardoInfo[playerid][PLojaA1] = 0;
	LeonardoInfo[playerid][PLojaA2] = 0;
	LeonardoInfo[playerid][PpLoja247] = 0;
	LeonardoInfo[playerid][PpLoja2472] = 0;
	PlayerInfo[playerid][pLevel] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pCMDs] = 0;
	PlayerInfo[playerid][pVIP] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pConta] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pBiggestFish] = 0;
	PlayerInfo[playerid][pEmprego] = 0;
	PlayerInfo[playerid][pSalario] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDorgado] = 0;
	PlayerInfo[playerid][pDorgado2] = 0;
	PlayerInfo[playerid][pDoenca] = 0;
	PlayerInfo[playerid][pCreditos] = 0;
	PlayerInfo[playerid][pDrogas] = 0;
	PlayerInfo[playerid][pDrogas2] = 0;
	PlayerInfo[playerid][pDrogas3] = 0;
	PlayerInfo[playerid][pSafeDrogas] = 0;
	PlayerInfo[playerid][pSafeDrogas2] = 0;
	PlayerInfo[playerid][pSafeDrogas3] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrogasSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pFishSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
 	PlayerInfo[playerid][pPos_x] = 2246.6;
	PlayerInfo[playerid][pPos_y] = -1161.9;
	PlayerInfo[playerid][pPos_z] = 1029.7;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pSkin] = 293;
	admtrampando[playerid] = 0;
	admhide[playerid] = 0;
	new randphone = 1000 + random(9999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pPHousekey] = 255;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	pRoadblock[playerid] = 0;
	pGangRoadblock[playerid] = 0;
	PlayerInfo[playerid][pParedao] = 0;
	pRoadCones[playerid] = 0;
	SpikeInfo[playerid][sCreated] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskuse] = 0;
	PlayerInfo[playerid][pBarraca] = 0;
	PlayerInfo[playerid][pLuta] = 0;
	strmid(PlayerInfo[playerid][pLastLogin], "0/0/0/0/0/0", 0, strlen("0/0/0/0/0/0"),255);
	ClearCrime(playerid);
	ClearFishes(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	SetPlayerColor(playerid,COLOR_GRAD2);
	TextShow[playerid] = false;
	HouseEntered[playerid] = 255;
	new string2[64];
	format(string2, sizeof(string2), "Players/%s.ini", PlayerName(playerid));
	SendClientMessage(playerid, COLOR_GREEN, "Espere alguns segundos...");
	//mapaicone
	SetPlayerMapIcon(playerid, 1,-1956.6346,293.0974,35.4688, 55, 0xE6E6E6E6);//wang cars sf
	SetPlayerMapIcon(playerid, 2,1552.6703,-1675.5068,16.1953, 30, 0xE6E6E6E6);//dp ls
	SetPlayerMapIcon(playerid, 3,2802.2051,-1180.1276,25.5363, 60, 0xE6E6E6E6);//vagos
	SetPlayerMapIcon(playerid, 4,2516.1411,-1675.4065,13.9113, 62, 0xE6E6E6E6);//grove
	SetPlayerMapIcon(playerid, 5,1712.658301,-2139.525390,13.546875, 58, 0xE6E6E6E6);//TCP
	SetPlayerMapIcon(playerid, 6,1154.945312,-1180.919067,32.818702, 59, 0xE6E6E6E6);//ballas
	SetPlayerMapIcon(playerid, 7,1480.9403,-1770.8481,18.7958, 56, 0xE6E6E6E6);//Prefeitura
	SetPlayerMapIcon(playerid, 9,2243.6750,-1669.8136,21.0313, 45, 0xE6E6E6E6);//Binco
	SetPlayerMapIcon(playerid, 10,461.3484,-1500.9084,31.0592, 45, 0xE6E6E6E6);//ZIP
	SetPlayerMapIcon(playerid, 11,1461.8320,-1010.3407,26.8438, 52, 0xE6E6E6E6);//Banco
	SetPlayerMapIcon(playerid, 12,1070.3787,-1873.8467,13.5469, 18, 0xE6E6E6E6);//Loja de Armas 2
	SetPlayerMapIcon(playerid, 16,1415.8468,-1693.0602,13.5469, 32, 0xE6E6E6E6); // - centro de licencas
	SetPlayerMapIcon(playerid, 19,1310.1265,-1367.8122,13.5408, 32, 0xE6E6E6E6); // - paintball
	SetPlayerMapIcon(playerid, 20,2350.0000,-1411.8000,23.9923, 32, 0xE6E6E6E6); // - UpCasa
	SetPlayerMapIcon(playerid, 21,1205.9715,-1459.6737,13.3859, 32, 0xE6E6E6E6); // - 24-7's
	SetPlayerMapIcon(playerid, 24,-500.375152,-511.354766,25.523437, 30, 0xE6E6E6E6); //dp rota
	SetPlayerMapIcon(playerid, 25,-49.8844,-269.3635,6.6332, 30, 0xE6E6E6E6);
	SetPlayerMapIcon(playerid, 25,952.759521,-910.921081,45.765625, 30, 0xE6E6E6E6); //dp pc//952.759521,-910.921081,45.765625
	SetPlayerMapIcon(playerid, 26,1791.212036,-1164.631713,23.828100, 18 , 0xE6E6E6E6);//Loja de Armas 1
	SetPlayerMapIcon(playerid, 27,341.5491,-1524.3574,33.3598, 30 , 0xE6E6E6E6);//cp PF
	SetPlayerMapIcon(playerid, 29,2644.5134,-2035.1990,14.8270, 27 , 0xE6E6E6E6);//TUNAR CARROS GANGS
	SetPlayerMapIcon(playerid, 31,2105.2051,-1806.5345,13.5547, 29 , 0xE6E6E6E6);//PIZZARIA LS
    SetPlayerMapIcon(playerid, 33,550.7012,-1278.5721,17.2482, 55 , 0xE6E6E6E6);//Carros Aluguel 1
    SetPlayerMapIcon(playerid, 34,2158.1355,-1172.6049,23.8200, 55 , 0xE6E6E6E6);//Carros Aluguel 2
    SetPlayerMapIcon(playerid, 35,1172.6062,-1323.6276,15.4031, 22 , 0xE6E6E6E6);//Hospital
    SetPlayerMapIcon(playerid, 36,-2396.6487,-2194.7942,32.9527, 53 , 0xE6E6E6E6); // PISTA DE RALLY
    SetPlayerMapIcon(playerid, 37,-1529.5208,476.5718,7.1875, 30 , 0xE6E6E6E6); // HQ EXERCITO
    SetPlayerMapIcon(playerid, 38,975.4691,-1335.9618,13.5319, 49 , 0xE6E6E6E6); // BAR PAWNO
 	SetPlayerMapIcon(playerid, 8,1498.4795,-1582.9222,13.5469, 32 , 0xE6E6E6E6); //restaurante
 	SetPlayerMapIcon(playerid, 13,1206.6914,-1751.1108,13.5938, 32 , 0xE6E6E6E6); //aluguel de carros
    SetPlayerMapIcon(playerid, 14,1327.8535,-1558.0070,13.5469, 32 , 0xE6E6E6E6);//phone company
    SetPlayerMapIcon(playerid, 15,-33.7243,-1127.6255,1.0781, 32 , 0xE6E6E6E6);//gas company
    SetPlayerMapIcon(playerid, 17,-2521.0059,-623.3312,132.7690, 32 , 0xE6E6E6E6);//eletricity company
    SetPlayerMapIcon(playerid, 18,1636.6891,-1521.8157,13.5987, 32 , 0xE6E6E6E6);//pay'n spray
    SetPlayerMapIcon(playerid, 22,844.6560,-1045.5557,25.4301, 32 , 0xE6E6E6E6);//cnn
    SetPlayerMapIcon(playerid, 23,1374.7015,-1599.6871,13.5469, 32 , 0xE6E6E6E6);//car wash
    SetPlayerMapIcon(playerid, 28,2281.9092,-2365.2791,13.5469, 32 , 0xE6E6E6E6);//kart
    SetPlayerMapIcon(playerid, 30,931.9179,-1071.1412,25.2962, 32 , 0xE6E6E6E6);//cemiterio
	SetPlayerMapIcon(playerid, 32,1022.5547,-1121.6744,23.8720, 32 , 0xE6E6E6E6); //cassino
	SetPlayerMapIcon(playerid, 39,1577.2410,-1474.7906,15.2203, 43 , 0xE6E6E6E6); //cocaina
	SetPlayerMapIcon(playerid, 44,1892.746704,-2244.098876,13.546899, 32 , 0xE6E6E6E6); //aeroporto
	SetPlayerMapIcon(playerid, 45,-1968.559814,296.269592,35.171901, 32 , 0xE6E6E6E6); //wang cars
	SetPlayerMapIcon(playerid, 46,1330.193603,-984.074523,33.896598, 32 , 0xE6E6E6E6); //aluguel de carros 2
	SetPlayerMapIcon(playerid, 47,1703.2197,-1470.1509,13.5469, 32 , 0xE6E6E6E6); //produtos
	SetPlayerMapIcon(playerid, 48,1272.3673,-1124.3743,24.1633, 32 , 0xE6E6E6E6); //trocar interior
	SetPlayerMapIcon(playerid, 49,154.1630,-1946.4764,5.2996, 32 , 0xE6E6E6E6); //condominio vip praia
    SetPlayerMapIcon(playerid, 50,2440.8840,-2110.4534,13.5469, 13 , 0xE6E6E6E6); //cv
    SetPlayerMapIcon(playerid, 51,681.533081,-474.036895,16.536296, 38 , 0xE6E6E6E6); //sons of anarchy
    SetPlayerMapIcon(playerid, 52,940.7294,-1716.7537,13.9437, 21 , 0xE6E6E6E6); //puteiro
    SetPlayerMapIcon(playerid, 53,1004.5120,-1431.9630,13.5469, 27 , 0xE6E6E6E6); //CET
    SetPlayerMapIcon(playerid, 54,1772.5833,-1697.1202,13.4697, 20 , 0xE6E6E6E6); //Bombeiros
    SetPlayerMapIcon(playerid, 55,612.5887,-1511.5479,14.9396, 42 , 0xE6E6E6E6); //Taxistas
    if(donoaero == 0)
	{
		GangZoneShowForPlayer(playerid, GZAero, 0xC0C0C0AA);
	}
	if(donoaero == 1)
	{
		GangZoneShowForPlayer(playerid, GZAero, COR_MAYANS);
	}
	if(donoaero == 2)
	{
		GangZoneShowForPlayer(playerid, GZAero, COR_PM);
	}
	if(donoaero == 3)
	{
		GangZoneShowForPlayer(playerid, GZAero, COR_SONS);
	}
	if(donoRefinaria == 0)
	{
		GangZoneShowForPlayer(playerid, GZRefinaria, 0xC0C0C0AA);
	}
	if(donoRefinaria == 1)
	{
		GangZoneShowForPlayer(playerid, GZRefinaria, COR_EXE);
	}
	if(donoRefinaria == 2)
	{
		GangZoneShowForPlayer(playerid, GZRefinaria, COR_PF);
	}
	if(donoRefinaria == 3)
	{
		GangZoneShowForPlayer(playerid, GZRefinaria, COLOR_GREEN);
	}
	if(donoestacao == 0)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, 0xC0C0C0AA);
    }
    if(donoestacao == 1)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_LH);
    }
    if(donoestacao == 2)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_YAKUZA);
    }
    if(donoestacao == 3)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_PF);
    }
    if(donocasarao == 0)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, 0xC0C0C0AA);
    }
    if(donocasarao == 1)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_LH);
    }
    if(donocasarao == 2)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_YAKUZA);
    }
    if(donocasarao == 3)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_PF);
    }
	if(donoFavela == 0)
	{
		GangZoneShowForPlayer(playerid, GZFavela, 0xC0C0C0AA);
	}
	if(donoFavela == 1)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_GROVE_COLOR);
	}
	if(donoFavela == 2)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_BALLAS_COLOR);
	}
	if(donoFavela == 3)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_VAGOS_COLOR);
	}
	if(donoFavela == 4)
	{
		GangZoneShowForPlayer(playerid, GZFavela, TEAM_AZTECAS_COLOR);
	}
	if(donoFavela == 5)
	{
		GangZoneShowForPlayer(playerid, GZFavela, COR_PR);
	}
	if(donoFavela == 6)
	{
		GangZoneShowForPlayer(playerid, GZFavela, GCOP_COLOR);
	}
	if(donoskate == 0)
	{
		GangZoneShowForPlayer(playerid, GZSkate, 0xC0C0C0AA);
	}
	if(donoskate == 1)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_GROVE_COLOR);
	}
	if(donoskate == 2)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_BALLAS_COLOR);
	}
	if(donoskate == 3)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_VAGOS_COLOR);
	}
	if(donoskate == 4)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_AZTECAS_COLOR);
	}
	if(donoskate == 5)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_PR);
	}
	if(donoskate == 6)
	{
		GangZoneShowForPlayer(playerid, GZSkate, GCOP_COLOR);
	}
	ClearChatbox(playerid, 100);
	if(fexist(string2))
	{
		gPlayerConta[playerid] = 1;
	}
	else
	{
		gPlayerConta[playerid] = 0;
	}
	return 1;
}
public JoinChannel(playerid, number, line[])
{
    if(IsPlayerConnected(playerid))
	{
	    if(strcmp(IRCInfo[number][iPassword],line, true ) == 0 )
		{
	        JoinChannelNr(playerid, number);
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_GREY, "Senha errada!");
	    }
	}
	return 1;
}

public JoinChannelNr(playerid, number)
{
	if(IsPlayerConnected(playerid))
	{
		if(PlayersChannel[playerid] < 999)
	    {
			format(gstring, sizeof(gstring), "* %s Saiu do canal.", PlayerName(playerid));
			SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, gstring);
			IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	    }
		new channel; channel = number; channel += 1;
	    PlayersChannel[playerid] = number;
	    IRCInfo[PlayersChannel[playerid]][iPlayers] += 1;
    	new wstring[128];
		format(gstring, sizeof(gstring), "%s", PlayerName(playerid));
		strmid(wstring, gstring, 0, strlen(gstring), 255);
		if(strcmp(IRCInfo[number][iAdmin],wstring, true ) == 0 )
		{
		    format(gstring, sizeof(gstring), "* voc� entrou no IRC %d como Administrador.", channel);
			SendClientMessage(playerid, COLOR_YELLOW, gstring);
		}
		else
		{
		    format(gstring, sizeof(gstring), "* voc� entrou no IRC %d, Admin: %s.", channel, IRCInfo[number][iAdmin]);
			SendClientMessage(playerid, COLOR_YELLOW, gstring);
		}
		format(gstring, sizeof(gstring), "MOTD: %s.", IRCInfo[number][iMOTD]);
		SendClientMessage(playerid, COLOR_YELLOW, gstring);
		format(gstring, sizeof(gstring), "* %s entrou no canal.", PlayerName(playerid));
		SendIRCMessage(number, COLOR_GREEN, gstring);
	}
	return 1;
}
public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		strmid(PlayerInfo[playerid][pMarriedTo], "Ninguem", 0, strlen("Ninguem"), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}
public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}

public FishCost(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new cost = 0;
		switch (fish)
		{
		    case 1:
		    {
		        cost = 1;
		    }
		    case 2:
		    {
		        cost = 3;
		    }
		    case 3:
		    {
		        cost = 3;
		    }
		    case 5:
		    {
		        cost = 5;
		    }
		    case 6:
		    {
		        cost = 2;
		    }
		    case 8:
		    {
		        cost = 8;
		    }
		    case 9:
		    {
		        cost = 12;
		    }
		    case 11:
		    {
		        cost = 9;
		    }
		    case 12:
		    {
		        cost = 7;
		    }
		    case 14:
		    {
		        cost = 12;
		    }
		    case 15:
		    {
		        cost = 9;
		    }
		    case 16:
		    {
		        cost = 7;
		    }
		    case 17:
		    {
		        cost = 7;
		    }
		    case 18:
		    {
		        cost = 10;
		    }
		    case 19:
		    {
		        cost = 4;
		    }
		    case 21:
		    {
		        cost = 3;
		    }
		}
		return cost;
	}
	return 0;
}

public ClearFishes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFishID(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		switch (fish)
		{
		    case 1:
		    {
		        strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight1] = 0;
		        Fishes[playerid][pFid1] = 0;
		    }
		    case 2:
		    {
		        strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight2] = 0;
		        Fishes[playerid][pFid2] = 0;
		    }
		    case 3:
		    {
		        strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight3] = 0;
		        Fishes[playerid][pFid3] = 0;
		    }
		    case 4:
		    {
		        strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight4] = 0;
		        Fishes[playerid][pFid4] = 0;
		    }
		    case 5:
		    {
		        strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight5] = 0;
		        Fishes[playerid][pFid5] = 0;
		    }
		}
	}
	return 1;
}

public ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return 1;
}

public ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return 1;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	format(gstring, sizeof(gstring), "Loterica: Hoje o numero sorteado foi o n� %d.", number);
    OOCNews(COLOR_WHITE, gstring);
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
					format(gstring, sizeof(gstring), "Loterica: %s ganhou R$%d com seu bilhete.", PlayerName(i), Jackpot);
					OOCNews(COLOR_WHITE, gstring);
					format(gstring, sizeof(gstring), "* Voc� ganhou R$%d com seu bilhete de loteria.", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, gstring);
					ConsumingMoney[i] = 1;
					GivePlayerMoney(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_GREY, " Voc� n�o tem um bilhete.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000); rand += 15789;
	    Jackpot = rand;
	    SaveStuff();
	    format(gstring, sizeof(gstring), "Loterica: O pr�mio acumulou para: R$%d.", Jackpot);
		OOCNews(COLOR_WHITE, gstring);
	}
	else
	{
	    new rand = random(15000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(gstring, sizeof(gstring), "Loterica: O pr�mio acumulou para: R$%d.", Jackpot);
		OOCNews(COLOR_WHITE, gstring);
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
	new car = GetPlayerVehicleID(playerid);
    Police[car][Use] = false;
	AttachObjectToVehicle(Police[car][Siren],0,0.0,0.0,0.0,0.0,0.0,0.0);
	AttachObjectToVehicle(Police[car][Blue],0,0.0,0.0,0.0,0.0,0.0,0.0);
	AttachObjectToVehicle(Police[car][Red],0,0.0,0.0,0.0,0.0,0.0,0.0);
    DestroyObject(Police[car][Siren]);
	DestroyObject(Police[car][Blue]);
	DestroyObject(Police[car][Red]);
	KillTimer(Police[car][Timer]);
    Equipamentos[playerid] = 1;
    sireneon[playerid] = 1;
	KillTimer(tempotd[playerid]);
    new caller = Mobile[playerid];
    OnPlayerSave(playerid);
    if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "A liga��o caiu...");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	if(HireCar[playerid] > 0)
	{
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		SetVehicleToRespawn(HireCar[playerid]);
		HireCar[playerid] = 0;
	}
    if (PlayerInfo[playerid][pBarraca] != 0)
	{
		RemoveBarraca(playerid);
	}
	if (PlayerInfo[playerid][pParedao] != 0)
	{
		RemoveParedao(playerid);
	}
	if(pRoadblock[playerid] != 0)
	{
		RemoveRoadblock(playerid);
	}
	if(pGangRoadblock[playerid] != 0)
	{
		RemoveGangRoadblock(playerid);
	}
    if(SpikeInfo[playerid][sCreated] != 0)
	{
		RemoveRoadPregos(playerid);
	}
	if(pRoadCones[playerid] != 0)
	{
		RemoveRoadCones(playerid);
	}
    switch(reason)
    {
        case 0: format(gstring, sizeof(gstring), "%s saiu do server por erro de conex�o ou crash", PlayerName(playerid));
        case 1: format(gstring, sizeof(gstring), "%s saiu por vontade propria.", PlayerName(playerid));
        case 2: format(gstring, sizeof(gstring), "%s saiu do server kickado ou banido", PlayerName(playerid));
    }
    ProxDetector(100.0, playerid, gstring,COR_COSA,COR_COSA,COR_COSA,COR_COSA,COR_COSA);
	gActivePlayers[playerid]--;
	numplayers--;
	if(MudarNickAceito[playerid] == 1)
	{
		MudarNickAceito[playerid] = 0;
	}
	if(MudarSenhaAceito[playerid] == 1)
	{
		MudarSenhaAceito[playerid] = 0;
	}
	if(EstacionarAceito[playerid] == 1)
	{
		EstacionarAceito[playerid] = 0;
	}
	if(ProvocoCasarao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCasarao);
		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
		GuerranoCasarao = 0;
		ProvocoCasarao[playerid] = 0;
		donocasarao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCasarao);
	}
	if(ProvocoAero[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZAero);
		GangZoneShowForAll(GZAero, 0xFFFFFF96);
		GuerranoAero = 0;
		ProvocoAero[playerid] = 0;
		donoaero = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraAero);
	}
	if(ProvocoRefinaria[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZRefinaria);
		GangZoneShowForAll(GZRefinaria, 0xFFFFFF96);
		GuerranoRefinaria = 0;
		ProvocoRefinaria[playerid] = 0;
		donoRefinaria = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraRefinaria);
	}
	if(ProvocoEstacao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZEstacao);
		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
		GuerranaEstacao = 0;
		ProvocoEstacao[playerid] = 0;
		donoestacao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraEstacao);
	}
	if(ProvocoFavela[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZFavela);
		GangZoneShowForAll(GZFavela, 0xFFFFFF96);
		GuerranaFavela = 0;
		ProvocoFavela[playerid] = 0;
		donoFavela = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraFavela);
	}
	if(ProvocoSkate[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZSkate);
		GangZoneShowForAll(GZSkate, 0xFFFFFF96);// e a Sons Of Anarchy Dominaram
		GuerranoSkate = 0;
		ProvocoSkate[playerid] = 0;
		donoskate = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraSkate);
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(TaxiAccepted[i] < 999)
	        {
		        if(TaxiAccepted[i] == playerid)
		        {
		            TaxiAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            TaxiCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(CopsrondaAccepted[i] < 999)
	        {
		        if(CopsrondaAccepted[i] == playerid)
		        {
		            CopsrondaAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Policial o player~n~~r~Deixou o jogo", 5000, 1);
		            CopsrondaCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MedicAccepted[i] < 999)
	        {
		        if(MedicAccepted[i] == playerid)
		        {
		            MedicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MedicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MechanicAccepted[i] < 999)
	        {
		        if(MechanicAccepted[i] == playerid)
		        {
		            MechanicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MechanicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(BusAccepted[i] < 999)
	        {
		        if(BusAccepted[i] == playerid)
		        {
		            BusAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            BusCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	    }
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(gstring, sizeof(gstring), "~w~Passageiro saiu~n~~g~ganhou R$%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Seu contrato saiu do servidor.");
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}
	if(PlayerPaintballing[playerid] != 0)
	{
	    PaintballPlayers --;
	}
	if(PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
	{
	    KartingPlayers --;
	}
	if(PlayersChannel[playerid] < 999)
	{
		IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
	}
	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPHousekey] != gLastCar[playerid]-1)
		{
			VTrancado[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(PlayerBoxing[playerid] > 0)
	{
	    if(Boxer1 == playerid)
	    {
	        if(IsPlayerConnected(Boxer2))
	        {
	        	PlayerBoxing[Boxer2] = 0;
	        	SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer2, 5);
	        	GameTextForPlayer(Boxer2, "~r~Luta interrompida", 5000, 1);
			}
	    }
	    else if(Boxer2 == playerid)
	    {
	        if(IsPlayerConnected(Boxer1))
	        {
	        	PlayerBoxing[Boxer1] = 0;
	        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer1, 5);
	        	GameTextForPlayer(Boxer1, "~r~Luta interrompida", 5000, 1);
			}
	    }
	    InRing = 0;
     	RorndStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
    if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
    else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	if(IsACop(playerid))
	{
	    if(EmpregoDuty[playerid] == 2) { Copsronda -= 1; }
	}
	if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
	{
	    if(EmpregoDuty[playerid] == 1) { Medics -= 1; }
	}
	else if(IsAMec(playerid))
	{
	    if(EmpregoDuty[playerid] == 1) { Mechanics -= 1; }
	}
	//CurrentMoney[playerid] = 0;
	BusrouteEast[playerid][0] = 0;
	BusrouteWest[playerid][0] = 0;
 	if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 1339)
	{
    	format(gstring, sizeof(gstring), "~p~%s: ~r~OFF", PlayerName(playerid));
        for(new i=0; i<MAX_PLAYERS; i++)
		{
		    if(IsPlayerConnected(i))
			{
   				GameTextForPlayer(i, gstring , 1000, 1);
			}
		}
	}
	return 1;
}
public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	{
	    if(sincronizando[playerid] == 1)
		{
			return 1;
  		}
		if(MedicBill[playerid] >= 2 && PlayerInfo[playerid][pJailed] == 0 && PlayerPaintballing[playerid] == 0)
		{
		    if(PlayerInfo[playerid][pVIP] < 1)
			{
		    	//format(gstring, 128, "Hospital: Voc� foi recuperado e perdeu R$%d.", precomorte);
		    	//SendClientMessage(playerid, TEAM_CYAN_COLOR, gstring);
		    	//GivePlayerMoney(playerid, -precomorte);
			}
			SBizzInfo[12][sbTill] += precomorte;
		    ExtortionSBiz(12, precomorte);
		    ResetPlayerWeaponsEx(playerid);
			MedicBill[playerid] = 10;
			MedicTime[playerid] = 10;
			NeedMedicTime[playerid] = 10;
			PlayerInfo[playerid][pDeaths] += 1;
			/*if(WantedPoints[playerid] > 0)
			{
				new wanted = WantedPoints[playerid];
				new diecash = WantedPoints[playerid]*600;
		    	format(gstring, sizeof(gstring), "Voc� perdeu R$%d por morrer com Nivel De Procura: %d.", diecash, wanted);
		    	SendClientMessage(playerid, COLOR_YELLOW, gstring);
		    	GivePlayerMoney(playerid, - diecash);

			}*/
   			/*SetPlayerPos(playerid, 2003.2236,2286.2568,1011.9437);
   		    SetPlayerFacingAngle(playerid, 264.0441);
            SetPlayerCameraPos(playerid,2003.0568,2289.4766,1013.1256);
			SetPlayerCameraLookAt(playerid,2003.2236,2286.2568,1011.9437);
			ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
            TogglePlayerControllable(playerid, 0);
   			PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
			SetPlayerInterior(playerid, 1);*/
		}
		if(PlayerInfo[playerid][pVIP] > 0) { SetPlayerHealth(playerid, 100.0); }
		else { SetPlayerHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }
  		spawnado[playerid] = 1;
	    MedicBill[playerid] ++;
	    SetPlayerToTeamColor(playerid);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			gNews[playerid] = 1; gFam[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			RegistrationStep[playerid] = 1;
			ClearChatbox(playerid, 8);
			SetPlayerVirtualWorld(playerid,playerid+1);
			SendClientMessage(playerid, COLOR_GREEN, "[Seja Bem Vindo ao Brasil Hard Life - RPG v1.0]");
			ShowPlayerDialog(playerid,9,DIALOG_STYLE_MSGBOX,"{00FF00}Brasil{e9f013}Hard{0d0ddb}Life{F2F2F2} - Registro","Bem Vindo(a)\n \n{F2F2F2} Nos Diga O Seu Sexo.\n \n{F2F2F2}Registre em nosso website !\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br ","Masculino","Feminino");
			PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
	    }
		new rand;
		new House = PlayerInfo[playerid][pPHousekey];
		if(PlayerPaintballing[playerid] != 0)
		{
		    ResetPlayerWeaponsEx(playerid);
      		GivePlayerWeapon(playerid, 29, 999);
      		GivePlayerWeapon(playerid, 31, 999);
      		GivePlayerWeapon(playerid, 25, 999);
      		SetPlayerArmour(playerid, 100);
      		SetPlayerHealth(playerid, 100);
      		SetPlayerInterior(playerid, 10);
      		PlayerInfo[playerid][pInt] = 10;
		    rand = random(sizeof(PaintballSpawns));
			SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
		    return 1;
		}
		if(PlayerInfo[playerid][pLuta] == 1)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		}
		if(PlayerInfo[playerid][pLuta] == 2)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		}
		if(PlayerInfo[playerid][pLuta] == 3)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		}
		if(PlayerInfo[playerid][pLuta] == 4)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		}
		if(PlayerInfo[playerid][pLuta] == 5)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		}
		if(PlayerInfo[playerid][pLuta] == 6)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		}
		if(PlayerInfo[playerid][pJailed] == 1)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 268);
			}
			else
			{
			    SetPlayerSkin(playerid, 69);
			}
		    SetPlayerInterior(playerid, 6);
			rand = random(sizeof(gPresoPmSpawns));
			SetPlayerPos(playerid, gPresoPmSpawns[rand][0], gPresoPmSpawns[rand][1], gPresoPmSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPmSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Senten�a incompleta,Voc� voltou para Pris�o");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 268);
			}
			else
			{
			    SetPlayerSkin(playerid, 69);
			}
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,268.5777,1857.9351,9.8133);
			SetPlayerWorldBounds(playerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 3)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 268);
			}
			else
			{
			    SetPlayerSkin(playerid, 69);
			}
		    SetPlayerInterior(playerid, 10);
			rand = random(sizeof(gPresoBopeSpawns));
			SetPlayerPos(playerid, gPresoBopeSpawns[rand][0], gPresoBopeSpawns[rand][1], gPresoBopeSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoBopeSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Senten�a incompleta,Voc� voltou para Pris�o");
			return 1;
		}
  		if(PlayerInfo[playerid][pJailed] == 4)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 268);
			}
			else
			{
			    SetPlayerSkin(playerid, 69);
			}
		    SetPlayerInterior(playerid, 3);
		    rand = random(sizeof(gPresoPcSpawns));
			SetPlayerPos(playerid, gPresoPcSpawns[rand][0], gPresoPcSpawns[rand][1], gPresoPcSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPcSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Senten�a incompleta,Voc� voltou para Pris�o");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 5)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 268);
			}
			else
			{
			    SetPlayerSkin(playerid, 69);
			}
		    SetPlayerInterior(playerid, 5);
			rand = random(sizeof(gPresoPfSpawns));
			SetPlayerPos(playerid, gPresoPfSpawns[rand][0], gPresoPfSpawns[rand][1], gPresoPfSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPfSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Senten�a incompleta,Voc� voltou para Pris�o");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 6)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 268);
			}
			else
			{
			    SetPlayerSkin(playerid, 69);
			}
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,1175.611938,-1180.620361,87.046401);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Senten�a incompleta,Voc� voltou para Pris�o");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 7)
		{
			if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPlayerSkin(playerid, 268);
			}
			else
			{
			    SetPlayerSkin(playerid, 69);
			}
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,-1293.2203,490.5885,11.1953);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Senten�a incompleta,Voc� voltou para Pris�o");
			return 1;
		}
		if(House !=255 && PlayerInfo[playerid][pSpawn] == 1)
		{
		    SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,HouseInfo[House][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[House][hWorld]);
			SetPlayerPos(playerid, HouseInfo[House][hExitx], HouseInfo[House][hExity],HouseInfo[House][hExitz]); // Warp the player
			PlayerInfo[playerid][pLocal] = House;
			PlayerInfo[playerid][pInt] = HouseInfo[House][hInt];
			HouseEntered[playerid] = House;
			return 1;
		}
		if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)// Taxistas Nascimento
	    {
			SetPlayerPos(playerid, 595.2457,-1495.1173,15.2507);
			SetPlayerFacingAngle(playerid,181.6931);
            SetPlayerHealth(playerid, 100);
            SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
		if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//18�BPM/M Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 6);
		    SetPlayerPos(playerid, 229.1664,74.1014,1005.0391);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
			return 1;
	    }
		if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//B.O.P.E Nascimento
		{
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 10);
		    SetPlayerPos(playerid, 236.8557,109.5091,1003.2257);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
			return 1;
	    }
		if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Ex�rcito Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1346.9358,492.0078,11.2027);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return 1;
		}
		if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//MEDICO Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1176.9653,-1323.2101,14.0474);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return 1;
		}
		if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//TCP Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerHealth(playerid, 70);
            GivePlayerWeapon(playerid, 4, 1);
		    SetPlayerInterior(playerid, 8);
		    SetPlayerPos(playerid, 2804.1780,-1162.4425,1029.1719);
		    SetPlayerFacingAngle(playerid,181.4693);
		    PlayerInfo[playerid][pInt] = 8;
		    return 1;
		}
		if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Taliban Nascimento
		{
			SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid,2748.6006,-2453.4863,13.8623);
			SetPlayerFacingAngle(playerid,0.8485);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Prefeito Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 354.8267,154.4102,1025.7964);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerArmour(playerid, 100);
			PlayerInfo[playerid][pLocal] = 241;
			SetPlayerWantedLevel(playerid, 0);
		    return 1;
		}
	    if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) //Hitmans Nascimento
	    {
			SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
			SetPlayerFacingAngle(playerid,334.6795);
            GivePlayerWeapon(playerid, 24, 20);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,2);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) //Rep�rters Nascimento
	    {
			SetPlayerPos(playerid, 735.3049,-1350.8284,13.5000);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) //Groove Nascimento
	    {
            SetPlayerHealth(playerid, 70);
			SetPlayerPos(playerid, 2491.8447,-1691.4944,14.7656);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
        if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) //Mancha Verde Nascimento
	    {
			SetPlayerPos(playerid, 414.5280,2531.5229,19.1648);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) //PRF Nascimento
	    {
			SetPlayerPos(playerid, 229.6951,177.7354,1003.0313);
			SetPlayerFacingAngle(playerid, 87.4229);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 0;
 			SetPlayerWantedLevel(playerid, 0);
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) //Ballas Nascimento
	    {
			SetPlayerPos(playerid, 310.1879,1120.3468,1083.8828);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,5);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) //Vagos Nascimento
	    {
			SetPlayerHealth(playerid, 70);
            GivePlayerWeapon(playerid, 4, 1);
			SetPlayerPos(playerid, 2346.2266,-1173.9631,1027.9834);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,5);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) //M�fia Yakuza Nascimento
	    {
			SetPlayerPos(playerid, -2163.0984,644.9737,1057.5938);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,1);
			PlayerInfo[playerid][pInt] = 1;
	        return 1;
	    }
	    if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) //M�fia Cosa Nostra Nascimento
	    {
			SetPlayerPos(playerid, -2642.0300,1418.9921,906.4609);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,3);
			PlayerInfo[playerid][pInt] = 3;
	        return 1;
	    }
  		if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//Policia Federal Nascimento
		{
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 246.955825,190.968475,1008.171875);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    return 1;
		}
	    if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) //comando vermelho
	    {
		    SetPlayerInterior(playerid, 6);
		    SetPlayerPos(playerid, 2319.4116,-1211.2260,1049.0234);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
	    if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) //PCC nascimento
	    {
			SetPlayerPos(playerid, 1333.1842,-855.9254,39.5781);
			SetPlayerFacingAngle(playerid, 180.5602);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
	        return 1;
	    }
		if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Sons Of Anarchy Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 11);
		    SetPlayerPos(playerid, 508.3601,-84.9327,998.9609);
		    SetPlayerFacingAngle(playerid,2.9314);
		    PlayerInfo[playerid][pInt] = 11;
		    return 1;
		}
        if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Bombeiros Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
            SetPlayerArmour(playerid, 100);
            SetPlayerHealth(playerid, 100);
            SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1796.8097,-1704.1367,13.5286);
		    SetPlayerFacingAngle(playerid,2.9314);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
		if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//Mayans nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 18);
		    SetPlayerPos(playerid, -224.100845,1397.891479,28.359519);
		    SetPlayerFacingAngle(playerid,2.9314);
		    PlayerInfo[playerid][pInt] = 18;
		    return 1;
		}
        if (PlayerInfo[playerid][pEmprego] == 6)//Seguran�as Nascimento
		{
            SetPlayerSkin(playerid, 164);
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2024.5015,-1295.8564,20.9037);
		    SetPlayerFacingAngle(playerid,2024.5015);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
        if (PlayerInfo[playerid][pEmprego] == 12)//Pizza Boy Nascimento
		{
            SetPlayerSkin(playerid, 155);
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2101.3625,-1806.5179,13.5547);
		    SetPlayerFacingAngle(playerid,2101.3625);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
        if (PlayerInfo[playerid][pEmprego] == 5)//CET Nascimento
		{
            SetPlayerSkin(playerid, 50);
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1004.5120,-1431.9630,13.5469);
		    SetPlayerFacingAngle(playerid,368.9406);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
        if (PlayerInfo[playerid][pEmprego] == 11)//Caminhoneiros Nascimento
		{
            SetPlayerSkin(playerid, 133);
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -69.0954,-1139.0685,1.0781);
		    SetPlayerFacingAngle(playerid,368.9406);
		    PlayerInfo[playerid][pInt] = 0;
		    return 1;
		}
        if (PlayerInfo[playerid][pEmprego] == 3)//Prostituta Nascimento
		{
            SetPlayerSkin(playerid, 85);
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 964.106994,-53.205497,1001.124572);
		    SetPlayerFacingAngle(playerid,368.9406);
		    PlayerInfo[playerid][pInt] = 3;
		    return 1;
		}
	    if ((gTeam[playerid]) == 1)
	    {
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
		else
		{
			SetPlayerPos(playerid,1685.823486,-2335.253906,-2.679687);//nascimento dos civis
			SetPlayerFacingAngle(playerid, 2.7415);
            SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			return 1;
		}
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
//    Hospitalizado[playerid] = 1;
  //  TempoHospital[playerid] = 40;
    if(killerid == INVALID_PLAYER_ID)
    {
        SendDeathMessage(INVALID_PLAYER_ID,playerid,reason);
    }
    else
    {
        SendDeathMessage(killerid,playerid,reason);
    }
	new Float:px,Float:py,Float:pz;
//	PlayerInactivity[playerid] = 0;
   // DropWeapons(playerid);
   // DropVida(playerid);
    //DropGrana(playerid);
	gPlayerSpawned[playerid] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	GetPlayerPos(playerid, px, py, pz);
	spawnado[playerid] = 0;
	if (gPlayerTerminal[playerid] != 0)
	{
		BusrouteEnd(playerid);
	}
	if(PlayerPaintballing[killerid] == 0)
	{
		SetPlayerCriminal(killerid, 255, "Assasinato");
		PlayerInfo[killerid][pKills] += 1;
	}
	if(TendoGuerra == 1 && IsPlayerInTerritorio(playerid) && IsPlayerInTerritorio(killerid))
	{
		if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
		{
	    	if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
				Territorio[talmortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				Territorio[almortos] += 1;
			}
		}
		if(PlayerInfo[killerid][pMembro] == 6 || PlayerInfo[killerid][pLider] == 6)
		{
	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				Territorio[exemortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
				Territorio[almortos] += 1;
			}
		}
		if(PlayerInfo[killerid][pMembro] == 15 || PlayerInfo[killerid][pLider] == 15)
		{
	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
				Territorio[exemortos] += 1;
			}
			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
				Territorio[talmortos] += 1;
			}
		}
	}
//==================================[SUSPEITO MORTO]=========================//
	if(WantedPoints[playerid] >= 1)
	{
	    //if(gTeam[killerid] == 2 && CrimInRange(30.0, playerid,killerid))
	    //{
			new price = WantedPoints[playerid] * 100;
		    if(PlayerInfo[killerid][pMembro] == 1 || PlayerInfo[killerid][pLider] == 1)
		    {
				if(PlayerInfo[playerid][pSex] == 1)
				{
					SetPlayerSkin(playerid, 268);
				}
				else
				{
				    SetPlayerSkin(playerid, 69);
				}
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 1;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voc� est� preso por %d Segundos no 18�BPM/M, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 2 || PlayerInfo[killerid][pLider] == 2)
		    {
		    	if(PlayerInfo[playerid][pSex] == 1)
				{
					SetPlayerSkin(playerid, 268);
				}
				else
				{
				    SetPlayerSkin(playerid, 69);
				}
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 3;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voc� est� preso por %d Segundos na HQ ROTA, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
		    {
		        if(PlayerInfo[playerid][pSex] == 1)
				{
					SetPlayerSkin(playerid, 268);
				}
				else
				{
				    SetPlayerSkin(playerid, 69);
				}
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 7;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voc� est� preso por %d Segundos no Ex�rcito, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 16 || PlayerInfo[killerid][pLider] == 16)
		    {
		        if(PlayerInfo[playerid][pSex] == 1)
				{
					SetPlayerSkin(playerid, 268);
				}
				else
				{
				    SetPlayerSkin(playerid, 69);
				}
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 4;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voc� est� preso por %d Segundos na PRF, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
			}
			if(PlayerInfo[killerid][pMembro] == 11 || PlayerInfo[killerid][pLider] == 11)
		    {
		        if(PlayerInfo[playerid][pSex] == 1)
				{
					SetPlayerSkin(playerid, 268);
				}
				else
				{
				    SetPlayerSkin(playerid, 69);
				}
                format(gstring, sizeof(gstring), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
				GameTextForPlayer(killerid, gstring, 5000, 1);
				ConsumingMoney[killerid] = 1;
				GivePlayerMoney(killerid, price / 2);
				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
				GivePlayerMoney(playerid, - price);
				PlayerInfo[playerid][pJailed] = 5;
			    PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(180);
			    format(gstring, sizeof(gstring), "* Voc� est� preso por %d Segundos na 1�CIA, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
			    SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
       			WantedPoints[playerid] = 0;
       			SetPlayerWantedLevel(playerid, 0);
				PlayerInfo[playerid][pDrogas] = 0;
                PlayerInfo[playerid][pDrogas2] = 0;
                PlayerInfo[playerid][pDrogas3] = 0;
                PlayerInfo[playerid][pMats] = 0;
			}
		//}
	}
//=================[NOVO ROUBAR]================
	if(ProvocoBar[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o caixa do Bar! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoBar[playerid] = 0; roubando[playerid] = 0; roubobar = 0; KillTimer(tempobar); temporoubobar = 0;
	}
	if(ProvocoBanco[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
	}
	/*if(ProvocoFuga[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o Fugir da Pris�o! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoFuga[playerid] = 0; roubando[playerid] = 0; fugapr = 0; KillTimer(tempofuga); tempodafuga = 0;
	}*/
	if(ProvocoLot[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre da Lot�rica! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
	}
	if(ProvocoLoja1[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre da Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
	}
	if(ProvocoLoja2[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre da Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
	}
	/*if(ProvocoPrefe[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre da Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoPrefe[playerid] = 0; roubando[playerid] = 0; rouboprefe = 0; KillTimer(tempoprefe); temporouboprefe = 0;
	}*/
	if(ProvocoBugger[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conesguiram roubar o cofre da Pizzaria! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
	    SendClientMessageToAll(GetPlayerColor(playerid), gstring);
	    ProvocoBugger[playerid] = 0; roubando[playerid] = 0; roubobugger = 0; KillTimer(tempobugger); temporoubobugger = 0;
	}
    if(ProvocoPuteiro[playerid] == 1)
	{
	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre do Puteiro! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
		ProvocoPuteiro[playerid] = 0; roubando[playerid] = 0; rouboputeiro = 0; KillTimer(tempoprefe); temporouboputeiro = 0;
	}
//=======================[FIM ROUBAR]========================
	if(ProvocoCasarao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCasarao);
		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
		GuerranoCasarao = 0;
		ProvocoCasarao[playerid] = 0;
		donocasarao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCasarao);
	}
	if(ProvocoAero[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZAero);
		GangZoneShowForAll(GZAero, 0xFFFFFF96);
		GuerranoAero = 0;
		ProvocoAero[playerid] = 0;
		donoaero = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraAero);
	}
	if(ProvocoRefinaria[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZRefinaria);
		GangZoneShowForAll(GZRefinaria, 0xFFFFFF96);
		GuerranoRefinaria = 0;
		ProvocoRefinaria[playerid] = 0;
		donoRefinaria = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraRefinaria);
	}
	if(ProvocoEstacao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZEstacao);
		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
		GuerranaEstacao = 0;
		ProvocoEstacao[playerid] = 0;
		donoestacao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraEstacao);
	}
	if(ProvocoFavela[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZFavela);
		GangZoneShowForAll(GZFavela, 0xFFFFFF96);
		GuerranaFavela = 0;
		ProvocoFavela[playerid] = 0;
		donoFavela = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraFavela);
	}
	if(ProvocoSkate[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZSkate);
		GangZoneShowForAll(GZSkate, 0xFFFFFF96);
		GuerranoSkate = 0;
		ProvocoSkate[playerid] = 0;
		donoskate = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraSkate);
	}
	if(PlayerInfo[playerid][pAdmin] < 1340)
 	{
		if(GetPlayerState(killerid) == 2)
		{
			new carroDB = GetPlayerVehicleID(killerid);
        	new nomexd[MAX_PLAYER_NAME];
        	new string[128];
        	GetPlayerName(killerid, nomexd, sizeof(nomexd));
        	if(IsAPlane(carroDB))
        	{
        		return 1;
        	}
        	format(string, sizeof(string), "Aten��o: %s [id:%d] Cometeu DB em %s,E foi kikado e preso.", PlayerName(killerid), killerid,PlayerName(playerid));
        	SendClientMessageToAll(COLOR_LIGHTRED, string);
        	PlayerInfo[killerid][pJailed] = 2;
        	PlayerInfo[killerid][pJailTime] = 300;
        	Kick(killerid);
		}
 	}
	if(reason == 38)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "AdmAviso: [%d]%s usou minigun em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_YELLOW,gstring,1);
			printf("%s", gstring);
		}
	}
	if(reason == 35)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "|ATEN��O|: [%d]%s usou Bazuka em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_YELLOW,gstring,1);
			printf("%s", gstring);
		}
	}
	if(reason == 36)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "|ATEN��O|: [%d]%s usou Bazuka =2= em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_YELLOW,gstring,1);
			printf("%s", gstring);
		}
	}
 	if(reason == 26)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "|ATEN��O|: [%d]%s usou 12 Cano cerrado em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_YELLOW,gstring,1);
			printf("%s", gstring);
		}
	}
 	if(reason == 32)
	{
		if(IsPlayerConnected(killerid))
		{
			format(gstring, 128, "|ATEN��O|: [%d]%s usou TEC9 em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
			ABroadCast(COLOR_YELLOW,gstring,1);
			printf("%s", gstring);
		}
	}
	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
	}
	new caller = Mobile[playerid];
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "Morreram do outro lado da linha....");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	ClearCrime(playerid);
	if(PlayerPaintballing[playerid] != 0)
	{
	    PlayerPaintballKills[killerid] ++;
	    if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
	    {
	        PaintballWinner = killerid;
	        PaintballWinnerKills = PlayerPaintballKills[killerid];
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
	                if(PlayerPaintballing[i] != 0)
	                {
	                    format(gstring, sizeof(gstring), "* %s est� em 1� com %d Kills.",PlayerName(killerid),PaintballWinnerKills);
						SendClientMessage(i, COLOR_WHITE, gstring);
	                }
	            }
	        }
	    }
	}
	if(PlayerInfo[playerid][pHeadValue] > 0)
	{
	    if(IsPlayerConnected(killerid))
	    {
		    if(gTeam[killerid] == 10 || PlayerInfo[killerid][pLider] == 8  || PlayerInfo[killerid][pMembro] == 8)
		    {
		        if(GoChase[killerid] == playerid)
		        {
		            new string[128];
		            ConsumingMoney[killerid] = 1;
					GivePlayerMoney(killerid, PlayerInfo[playerid][pHeadValue]);
					format(string,128,"Voc� foi morto por contrato por um hitman no valor de R$%d e n�o foi DM!",PlayerName(killerid),PlayerInfo[playerid][pHeadValue]);
					//SendClientMessage(playerid, 0x33FF00FF, gstring);
					SendClientMessage(playerid, COLOR_YELLOW, gstring);
					format(string, sizeof(string),"<< Algum Hitman Cumpriu contrato em %s e recebeu R$%d >>",PlayerName(playerid),PlayerInfo[playerid][pHeadValue],sendername);
					SendClientMessageToAll(COR_VAGOS, string);
					PlayerInfo[playerid][pHeadValue] = 0;
					GotHit[playerid] = 0;
					GetChased[playerid] = 999;
					GoChase[killerid] = 999;
				}
			}
		}
	}
    if(PlayerInfo[playerid][pJailed] != 0)
	{
		if(PlayerInfo[playerid][pSkin] > 0)
		{
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	SetPlayerSpawn(playerid);
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,COLOR_GRAD2);
	return 1;
}

public OnPlayerSpawn(playerid)
{
    /*if(Hospitalizado[playerid] == 1)
   {
       SetPlayerPos(playerid, 2003.2236,2286.2568,1011.9437);
       SetPlayerFacingAngle(playerid, 264.0441);
       SetPlayerCameraPos(playerid,2003.0568,2289.4766,1013.1256);
       SetPlayerCameraLookAt(playerid,2003.2236,2286.2568,1011.9437);
       SendClientMessage(playerid, COR_TAXI, " Voc� est� na U.T.I sendo recuperado!");
       ApplyAnimation(playerid,"CRACK","crckdeth2",4.1,0,1,1,1,1);
       TogglePlayerControllable(playerid, 0);
       PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
       SetPlayerInterior(playerid, 1);
       SetTimerEx("HospitalTempo", 1000, false, "d", playerid);
       return true;
	}*/
	if(IsPlayerNPC(playerid)) //teste bot
    {
        new npcname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, npcname, sizeof(npcname)); //Obtendo o nome do(s) NPC(s).
        if(!strcmp(npcname, "bot_detrem", true)) //Checando se o nome do NPC � MeuPrimeiroNPC
        {
            PutPlayerInVehicle(playerid, trembot, 0); //Colocar o NPC dentro do ve�culo que criamos para isso.
            SetPlayerSkin(playerid, 61);
        }
        if(!strcmp(npcname, "bot_onibus", true))//ONIBUS BOT
        {
        	PutPlayerInVehicle(playerid, NPCBus, 0);
        	SetPlayerSkin(playerid, 61);
        }
        return 1;
    }
    if(sincronizando[playerid] == 1)
	{
		return 1;
	}
	gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
	if (gTeam[playerid] == 4) //medic / criminal reset team
	{
		gTeam[playerid] = 3;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_NEWS, "ADMIN: Voc� foi kickado por Administrador_BOT, Motivo: Spawn sem login");
    	SendClientMessage(playerid, COLOR_NEWS,"Administrador_BOT te kickou do servidor, e n�o o contrarie novamente");
        Kick(playerid);
        return 1;
 	}
	CheckInfoOrg(playerid);
	if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLider] < 1)
	{
	    MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o foi aprovado pelo l�der, agora � um Civil !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 5)
	{
	    if(PlayerInfo[playerid][pMembro] < 1)
	    {
	        MedicBill[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o faz parte de uma familia, agora � um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 10)
	{
	    if(PlayerInfo[playerid][pMembro] != 8)
	    {
	        MedicBill[playerid] = 0;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o faz parte de uma agencia, � um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	/*if(gTeam[playerid] == 2 && PlayerInfo[playerid][pMembro] > 3)
	{
	    MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o � mais um oficial, � um Civil !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
  		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}*/
	if(gTeam[playerid] == 3)
	{
	    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
	    {
			MedicBill[playerid] = 0;
			if(PlayerInfo[playerid][pMembro] == 1) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 2) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 3) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 4) { SetSpawnInfo(playerid, 1, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
			else if(PlayerInfo[playerid][pMembro] == 5) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 6) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 8) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			else if(PlayerInfo[playerid][pMembro] == 9) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 10) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 11) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 12) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 22; }
            else if(PlayerInfo[playerid][pMembro] == 13) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pMembro] == 14) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pMembro] == 15) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pMembro] == 16) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 17) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pMembro] == 18) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 19) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 20) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 21) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 23) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 1) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 2) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 3) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 4) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 5) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 6) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 7) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 8) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 9) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 10) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 11) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 12) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 22; }
			else if(PlayerInfo[playerid][pLider] == 13) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pLider] == 14) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pLider] == 15) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pLider] == 16) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pLider] == 17) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pLider] == 18) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 19) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 20) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 21) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 23) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			SpawnPlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pSkin] > 0) { SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
	else
	{
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
		else { PlayerInfo[playerid][pSkin] = 12; SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
	}
	SetPlayerWeapons(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	return 1;
}
forward PAdminsLog(string[]);
public PAdminsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/admins.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public PayLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/pay.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public WarnLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/warn.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public KickLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
forward SBanLog(string[]);
public SBanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/s_ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public BanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock fdplog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/fdp.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock SmsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/sms.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock NickLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/nick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public VipsLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/vips.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public OnPlayerEnterCheckpoint(playerid)
{
	new name[MAX_PLAYER_NAME];
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
	    BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MedicCallTime[playerid] > 0 && MedicAccepted[playerid] < 999)
	{
	    MedicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MedicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MechanicCallTime[playerid] > 0 && MechanicAccepted[playerid] < 999)
	{
	    MechanicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MechanicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CopsrondaCallTime[playerid] > 0 && CopsrondaAccepted[playerid] < 999)
	{
	    CopsrondaAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		CopsrondaCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 5)
	{
	    GameTextForPlayer(playerid, "~y~Complete a Missao indo nos Checkpoint", 2500, 1);
		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(TruckMission[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 10000);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 2)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 10000);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 3)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GivePlayerMoney(playerid, 10000);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(CP[playerid] == 9)//Karting
	{
		GameTextForPlayer(playerid, "~r~Aguarde ate as proximas corridas", 4000, 3);
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 10) { CP[playerid] = 11; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2258.7874,-2402.9712,12.7035,8.0); }
	else if(CP[playerid] == 11) { CP[playerid] = 12; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2225.8755,-2461.3875,12.7190,8.0); }
	else if(CP[playerid] == 12) { CP[playerid] = 13; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2276.9983,-2662.8328,12.8580,8.0); }
	else if(CP[playerid] == 13) { CP[playerid] = 14; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2449.1399,-2663.0562,12.8138,8.0); }
	else if(CP[playerid] == 14) { CP[playerid] = 15; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2566.9814,-2504.5686,12.7692,8.0); }
	else if(CP[playerid] == 15) { CP[playerid] = 16; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2719.0520,-2503.5962,12.7706,8.0); }
	else if(CP[playerid] == 16) { CP[playerid] = 17; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2720.7881,-2405.6589,12.7441,8.0); }
	else if(CP[playerid] == 17) { CP[playerid] = 18; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2571.5195,-2401.1531,12.7528,8.0); }
	else if(CP[playerid] == 18) { CP[playerid] = 19; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2406.6995,-2423.1182,12.6641,8.0); }
	else if(CP[playerid] == 19) { CP[playerid] = 20; DisablePlayerCheckpoint(playerid); SetPlayerCheckpoint(playerid,2322.9194,-2341.5715,12.6664,8.0); }
	else if(CP[playerid] == 20)//End of Karting
	{
	    CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	    GetPlayerName(playerid, name, sizeof(name));
	    if(FirstKartWinner == 999)
	    {
	        FirstKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(gstring, sizeof(gstring), "* %s acabou em primeiro na Corrida De Kart.",name);
		                SendClientMessage(i, COLOR_WHITE, gstring);
		            }
				}
			}
	    }
	    else if(SecondKartWinner == 999)
	    {
	        SecondKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(gstring, sizeof(gstring), "* %s acabou em segundo na Corrida De Kart.",name);
		                SendClientMessage(i, COLOR_WHITE, gstring);
		            }
				}
			}
	    }
	    else if(ThirdKartWinner == 999)
	    {
	        ThirdKartWinner = playerid;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(IsPlayerConnected(i))
	            {
		            if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
		            {
		                format(gstring, sizeof(gstring), "* %s acabou em terceito na Corrida De Kart.",name);
		                SendClientMessage(i, COLOR_WHITE, gstring);
		                SendClientMessage(i, COLOR_WHITE, "** Corrida De Kart Encerrada **");
		                CP[i] = 0;
		                DisablePlayerCheckpoint(i);
		            }
				}
	        }
	    }
	}
	if(PlayerToPoint(8.0,playerid,1481.1926,-1765.2736,18.7958))//Prefeitura
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Prefeitura", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1462.395751,-1012.391174,26.843799))//Banco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Banco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1546.2761,-1675.5995,13.5620))//DP
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Departamento de Policia", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1350.4865,-1753.2505,13.3582))//24-7
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~24-7", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1790.5725,-1167.3705,23.8281))//Loja de Armas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1068.7330,-1875.4727,13.5469))//Loja de Armas 2
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas 2", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2244.7954,-1663.5021,15.4766))//Binco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Binco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2155.4363,-1171.3413,23.8206))//Aluguel de Carros
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1411.5593,-1699.5270,13.5395))//Centro de Licencas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Centro de Licencas", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1175.3164,-1323.7809,14.3906))//Hospital
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Hospital", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1928.826904,-1776.405517,13.546895))//Posto Sul
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Posto Sul", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2232.5723,-1332.8412,23.9815))//Igreja
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Igreja", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,461.3484,-1500.9084,31.0592))//Zip
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Zip", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,550.7012,-1278.5721,17.2482))//Aluguel de Carros 1
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~p~|Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	/*if(PlayerToPoint(1.7,playerid,246.4971,74.3957,1003.6406))//Postao Presos DP
    {
        OnPlayerCommandText(playerid,"/pp");
        GameTextForPlayer(playerid, " ~w~Portao Celas ~b~Aberto", 5000, 3);
   	}*/
   	if(PlayerToPoint(2.0,playerid,367.3167,162.2013,1025.7891))//Postao Interno Prefeitura
    {
        OnPlayerCommandText(playerid,"/ppre");
        GameTextForPlayer(playerid, " ~w~Porta Prefeitura ~b~Aberto", 5000, 3);
   	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
				GameTextForPlayer(playerid, "~w~Chegou em~n~~y~Casa", 5000, 1);
		    }
		}
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		{
		    switch(gPlayerTerminal[playerid])
		    {
		        case 1:
		        {
   	        		SetPlayerCheckpoint(playerid,1686.196044,-2324.527099,-2.679687, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 2:
				{
                    SetPlayerCheckpoint(playerid,1736.9674,-1601.5439,13.5225, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 3:
				{
				    SetPlayerCheckpoint(playerid,-108.982124,-1170.359008,2.890625, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 4:
				{
			    	SetPlayerCheckpoint(playerid,-1794.750000,-570.419494,16.347909, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 5:
				{
				    SetPlayerCheckpoint(playerid,1987.3519,-2169.5242,13.4809, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 6:
				{
				    SetPlayerCheckpoint(playerid,-2267.410156,-651.863159,69.334480, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 7:
				{
				    SetPlayerCheckpoint(playerid,-1801.362426,-589.762939,16.189624, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 8:
				{
				    SetPlayerCheckpoint(playerid,-1215.445556,-765.219665,63.236579, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 9:
				{
				    SetPlayerCheckpoint(playerid,-118.000297,-1155.889404,2.303224, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 10:
				{
				    SetPlayerCheckpoint(playerid,1824.8920,-1705.7137,13.4842, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 11:
			    {
			    	SetPlayerCheckpoint(playerid,1526.6500,-1612.1188,13.4907, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
	    		case 12:
			    {
	    			SetPlayerCheckpoint(playerid,1373.5723,-1729.5554,13.4952, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 13:
				{
				    new conta = gPlayerTerminal[playerid]*300;
				    format(gstring, 128, "Voc� completou a rota do �nibus e ganhou R$%d, use /terminais para iniciar novamente a rota.", conta);
        		    SendClientMessage(playerid, COLOR_YELLOW, gstring);
					SendClientMessage(playerid, COLOR_YELLOW, "Use /sair para sair do �nibus.");
				    BusrouteEnd(playerid);
				}
			}
			gPlayerTerminal[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			return 1;
		}
	}
	DisablePlayerCheckpoint(playerid);
	return 1;
}

/*public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}
*/
public OnPlayerPickUpPickup(playerid, pickupid)
{
    switch(PickupType[pickupid])
	{
	    case PICKUP_TYPE_WEAPON:
	    {
	        GivePlayerWeapon(playerid,PickupWeapon[pickupid],PickupAmmo[pickupid]);
    	    KillTimer(DestroyPickupTimer[pickupid]);
	        DestroyWeaponPickup(pickupid);
	    }
	}
	if(pickupid == picVida)
	{
	    new Float:health;
	    GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, health + 15);
    	KillTimer(DestroyPickupVidaTimer[picVida]);
	    DestroyVidaPickup(pickupid);
	    return 1;
	}
    if(pickupid == portaodpauto)
    {
    	playerpickup[playerid] = pickupid;
    	OnPlayerCommandText(playerid,"/pp2");
    }
    return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}
public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}
public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(IsPlayerNPC(playerid)) return 1;
    new oldnew;
//    PlayerInactivity[playerid] = 0;
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(PlayerKarting[playerid] > 0 && PlayerInKart[playerid] > 0)
		{
		    PlayerInKart[playerid] = 0;
		    KartingPlayers --;
		}
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
			    BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(gstring, sizeof(gstring), "* Est� fora de servi�o, ganhou R$%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GivePlayerMoney(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(gstring, sizeof(gstring), "~w~Custo da corrida~n~~r~R$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, gstring, 5000, 1);
			    format(gstring, sizeof(gstring), "~w~Passageiro saiu do taxi~n~~g~ganhou R$%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
				GivePlayerMoney(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
    			TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if (newstate == 2 || newstate == 3)
    {
    if (oldnew == 0)
    	{
        format(gstring, sizeof(gstring), "~g~%s",vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
        GameTextForPlayer(playerid, gstring, 6000, 1);
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI, BUSSES, BOTS
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new vehicleid = GetPlayerVehicleID(playerid);
     	if(IsPlayerInVehicle(playerid, trembot))
	    {
	    	if(GetPlayerMoney(playerid) < 500)
	        {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� precisa de R$500 para entrar.");
				RemovePlayerFromVehicleEx(playerid);
    		}
	        else
	        {
	            GivePlayerMoney(playerid, -500);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� Pagou R$500 para o Bot de Trem, Boa Viagem !");
			}
		}
		if(IsPlayerInVehicle(playerid, NPCBus))
	    {
	    	if(GetPlayerMoney(playerid) < 500)
	        {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� precisa de R$500 para entrar.");
				RemovePlayerFromVehicleEx(playerid);
    		}
	        else
	        {
	            GivePlayerMoney(playerid, -500);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� Pagou R$500 para o Bot de Onibus, Boa Viagem !");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Rota do Onibus: East Beach - Stadium - Ganton - Idlewood - Glen Park - All Saints - Market Station - Santa Maria Beach - Crane!");
			}
		}
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetPlayerMoney(playerid) < TransportValue[i])
	                {
	                    format(gstring, sizeof(gstring), "* Voc� precisa de R$%d para entrar.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
						RemovePlayerFromVehicleEx(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o taxista.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Taxi.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[playerid] = i;
	                    }
	                    else if(TransportDuty[i] == 2)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o Motorista De Onibus.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Onibus.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
	                    }
						GivePlayerMoney(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	                }
	            }
	        }
	    }
	}
	if(newstate == 2)
	{
		for(new i = 0; i < sizeof(CarInfo); i++)
    	{
	        new newcar = GetPlayerVehicleID(playerid);
        	if(newcar == CarInfo[i][ownedvehicle])
        	if((newcar >= 596 && newcar <= 599) || (newcar >= 407 && newcar <= 419) || newcar == 485 || newcar == 486 || newcar == 503 || newcar == 504)
        	{
			    if(CarInfo[i][cOwned]==0)
			    {
			        TogglePlayerControllable(playerid, 0);
			        CarOffered[playerid]=1;
			        format(gstring,sizeof(gstring),"~w~Carro: %s~n~Preco: ~g~%d~n~~w~/veiculo comprar para comprar",CarInfo[i][cDescription],CarInfo[i][cValue]);
					GameTextForPlayer(playerid,gstring,1000,5);
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /sair para sair do carro!");
			    }
			    if(CarInfo[i][cOwned]==1)
			    {
				    new playername[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, playername, sizeof(playername));
				    if(strcmp(playername,CarInfo[i][cOwner],true)==0)
				    {
					    format(gstring,sizeof(gstring),"Voc� entrou no seu carro ele tem %d de grana no porta luva. Use: /retirargrana para pegar.",CarInfo[i][cGrana]);
					    SendClientMessage(playerid, COLOR_GREY, gstring);
				    	TogglePlayerControllable(playerid, 1);
				    }
					else
				    {
					    format(gstring,sizeof(gstring),"Voc� pagou %d para andar no veiculo de %s",granacarro,CarInfo[i][cOwner]);
					    SendClientMessage(playerid, COLOR_GREY, gstring);
					    CarInfo[i][cGrana] += granacarro;
					    GivePlayerMoney(playerid, -granacarro);
				    }
			    }
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{// 38 / 49 / 56 = SS
		new newcar = GetPlayerVehicleID(playerid);
		new oldcar = gLastCar[playerid];
		new HouseCar = PlayerInfo[playerid][pPHousekey]+totalveiculos;
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		new carid=GetVehicleModel(newcar);
		if(carid == 481 || carid == 509 || carid == 510) { }
		else
		{
			if(IsAAztecaCar(newcar))
			{
		    	if(!IsAAzteca(playerid))
		    	{
					SendClientMessage(playerid, COR_TCP, "Voc� n�o � um TCP!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAOniCar(newcar))
			{
			    if(!IsAOni(playerid))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o � um Motorista De Onibus!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAMecCar(newcar))
			{
			    if(PlayerInfo[playerid][pEmprego] != 5)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o � um CET!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsAPizzaCar(newcar))
			{
			    if(PlayerInfo[playerid][pEmprego] != 12)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o � um Pizza Boy!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsASegCar(newcar))
			{
			    if(PlayerInfo[playerid][pEmprego] != 6)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o � um Seguran�a!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsABomCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 22)
				{
					SendClientMessage(playerid, 0xFFA500AA, "Voc� n�o � dos Bombeiros!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAGMOBCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 19)
				{
					SendClientMessage(playerid, 0xF6000000, "Voc� n�o � do Comando Vermelho!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAPCCCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 20)
				{
					SendClientMessage(playerid, 0xCCFF99FF, "Voc� n�o � do Tugas!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAMayansCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 23)
				{
					SendClientMessage(playerid, COR_MAYANS, "Voc� n�o � dos Mayans!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsACaminhoneiroCar(newcar))
			{
		    	if(!IsACaminhoneiro(playerid))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o � um Caminhoneiro!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAJornalCar(newcar))
			{
			    if(!IsAJornal(playerid))
				{
					SendClientMessage(playerid, COR_REP, "Voc� n�o � um Rep�rter!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAHamCar(newcar))
			{
			    if(!IsAHam(playerid))
				{
					SendClientMessage(playerid, COR_PF, "Você não é da Gaviões da Fiel!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsABallasCar(newcar))
			{
			    if(!IsABallas(playerid))
				{
					SendClientMessage(playerid, COR_BALLAS, "Você não é dos Ballas!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAVagosCar(newcar))
			{
			    if(!IsAVagos(playerid))
				{
					SendClientMessage(playerid, COR_VAGOS, "Você não é dos Vagos!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsATaxiCar(newcar))
			{
			    if(!IsATaxi(playerid))
				{
					SendClientMessage(playerid, COLOR_TAXISTA, "Voc� n�o � um Taxista!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAGrooveCar(newcar))
			{
			    if(!IsAGroove(playerid))
				{
					SendClientMessage(playerid, COR_GRO, "Voc� n�o � da Groove Street!"); //302 ate 312
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAAlCar(newcar))
			{
			    if(!IsAAl(playerid))
				{
					SendClientMessage(playerid, COLOR_GREEN, "Voc� n�o � da Mancha Verde!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAPCCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 16)
				{
					SendClientMessage(playerid, COR_PM, "Voc� n�o � do 2�CIA!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAMerceCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 21)
				{
					SendClientMessage(playerid, COR_SONS, "Voc� n�o � dos Sons Of Anarchy!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsABOPEsCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 2)
				{
					SendClientMessage(playerid, COR_PR, "Voc� n�o � da ROTA!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAPFCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 11)
				{
					SendClientMessage(playerid, COR_PM, "Voc� n�o � da 1�CIA!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAExCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 3)
				{
					SendClientMessage(playerid, COR_EXE, "Voc� n�o � do Ex�rcito!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsACopCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 1)
				{
					SendClientMessage(playerid, COR_PM, "Voc� n�o � da Pol�cia M�litar!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAHitCar(newcar))
			{
			    if(!IsAHit(playerid))
				{
					SendClientMessage(playerid, COR_HITMAN, "Voc� n�o � um Hitman!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsABikeCar(newcar))
			{
				if(PlayerInfo[playerid][pMembro] != 0 || PlayerInfo[playerid][pLider] != 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � mais um novato!");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
			}
			else if(IsAYaCar(newcar))
			{
			    if(!IsAYa(playerid))
				{
					SendClientMessage(playerid, COR_YAK, "Voc� n�o � da M�fia Yakuza!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
  			else if(IsAMLHCar(newcar))
			{
			    if(!IsAMLH(playerid))
				{
					SendClientMessage(playerid, COR_COSA, "Voc� n�o � da M�fia Cosa Nostra!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAGOVCar(newcar))
			{
			    if(!IsAGOV(playerid))
				{
					SendClientMessage(playerid, COR_PRE, "Voc� n�o � do governo!");
					RemovePlayerFromVehicleEx(playerid);
				}
        	}
			else if(IsAnAmbulanceCar(newcar))
			{
			    if(!IsAAmbu(playerid))
				{
					SendClientMessage(playerid, COR_SAMU, "Voc� n�o � um M�dico!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
		}

		if(IsAPlane(newcar))
		{
	    	if(PlayerInfo[playerid][pFlyLic] < 1)
			{
		    	SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem licen�a para Voar!");
		    	SendClientMessage(playerid, COLOR_GREY, "Para Adquirir Licen�as Digite /gps Centro de Licencas!");
		    	SetPlayerCriminal(playerid,255,"Voando Sem Licen�a");
			}
		}
       	else
		{
   	    	if(PlayerInfo[playerid][pCarLic] < 1)
			{
		    	if(PlayerDrunk[playerid] >= 1)
				{
					SetPlayerCriminal(playerid,255, "Dirigindo Bebado");
				}
				if(IsABikeCar(newcar)) { }
				else {
					SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem licen�a para dirigir carro!");
					SendClientMessage(playerid, COLOR_GREY, "Para Adquirir Licen�as Digite /gps Centro de Licencas!");
					SetPlayerCriminal(playerid,255,"Dirigindo Sem Carteira");
               	}
			}
			else if(PlayerDrunk[playerid] >= 1)
			{
				SetPlayerCriminal(playerid,255, "Dirigindo B�bado");
			}
		}//230 at� 309
		if((newcar >= 209 && newcar <= 288))
		{
			if (HireCar[playerid] != newcar)
			{
   	            format(gstring, sizeof(gstring), "~w~Voce pode alugar esse carro~n~Custo:~g~R$1500~n~~w~para alugar o carro use ~g~/alugarcarro~w~~n~para sair use ~r~/sair",SBizzInfo[1][sbEntranceCost]);
				TogglePlayerControllable(playerid, 1500);
				GameTextForPlayer(playerid, gstring, 5000, 3);
			}
		}
		if((newcar >= 406 && newcar <= 410))
		{
		    if (HireCar[playerid] != newcar)
			{
                format(gstring, sizeof(gstring), "~w~Voce pode alugar esse heli~n~Custo:~g~R$3500~n~~w~para alugar o heli use ~g~/alugarheli~w~~n~para sair use ~r~/sair",SBizzInfo[19][sbEntranceCost]);
				TogglePlayerControllable(playerid, 3500);
				GameTextForPlayer(playerid, gstring, 5000, 3);
			}
		}
		else if(carroVIP(newcar))
		{
		    if(PlayerInfo[playerid][pVIP] > 0)
			{
				if (HireCar[playerid] != newcar)
				{
                    format(gstring, sizeof(gstring), "~w~Voce pode alugar esse Carro VIP~n~Custo:~g~$%d~n~~w~para alugar o carro use ~g~/alugarcarro~w~~n~para sair use ~r~/sair",SBizzInfo[23][sbEntranceCost]);
					TogglePlayerControllable(playerid, 0);
					GameTextForPlayer(playerid, gstring, 5000, 3);
				}
			}
		    else
			{
				RemovePlayerFromVehicleEx(playerid);
				SendClientMessage(playerid, 0xFF3399AA, "Voc� n�o � um Player VIP/VIP Premium!");
			}
		}
		else if(IsABikeCar(newcar))
  		{
		    SendClientMessage(playerid, 0x33FF00FF, "Novato, voc� poder� chegar aos locais digitando /gps ou falando com um admin /relatorio");
	 		SendClientMessage(playerid, 0x33FF00FF, "Para selecionar alguma op��o no /gps - aperte a tecla space ! Maior tecla de seu teclado !");
	 		SendClientMessage(playerid, 0x33FF00FF, "Consiga Suas Licen�as! /gps Centro de Licen�as.");
		}
		if(PlayerKarting[playerid] != 0)// newcarr
		{
		    new kart = GetPlayerVehicleID(playerid);
		    if(kart==110||kart==111||kart==112||kart==113||kart==114||kart==115)
		    {
		        PlayerInKart[playerid] = 1;
		    	KartingPlayers ++;
			}
		}
		if(oldcar != 301)
		{
			if((HouseCar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != HouseCar))
			{
				if(gLastDriver[oldcar] == playerid && oldcar != newcar)
				{
					gLastDriver[oldcar] = 300;
					VTrancado[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED && logouagora[playerid] ==0 )
	{
	    if(sincronizando[playerid] == 1)
		{
		return 1;
		}
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
		    if(sincronizando[playerid] == 1)
			{
			return 1;
			}
			SetPlayerSpawn(playerid);
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return 1;
}

public HireCost(carid)
{
	switch (carid)
	{
		case 69:
		{
			return 90000; //Ford-GT
		}
		case 70:
		{
			return 130000; //infernus
		}
		case 71:
		{
			return 100000; //Diablo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public CarCheck()//ATUAL
{
	for(new j = 0; j<MAX_PLAYERS; j++)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealth(j, health);
			if(PlayerInfo[j][pDoenca]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 4.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 4 de Sa�de por DST - V� at� um hospital ou procure um m�dico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 8.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 8 de Sa�de por DST - V� at� um hospital ou procure um m�dico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 12 de Sa�de por DST - V� at� um hospital ou procure um m�dico para se curar");
			}
            else if(PlayerInfo[j][pDoenca]==4)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Sa�de por Cirrose - V� at� um hospital ou procure um m�dico para se curar.");
			}
			else if(PlayerInfo[j][pDoenca]==5)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Sa�de por C�ncer de Pulm�o - V� at� um hospital ou procure um m�dico para se curar.");
			}
			if(GetPlayerMoney(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(gstring, sizeof(gstring), "Voc� esta devendo: R$%d Se n�o tiver essa grana voc� vai preso automaticamente!", GetPlayerMoney(j));
					SendClientMessage(j, COLOR_LIGHTRED, gstring);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
 		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//forndowner = -1;
	}
	return 1;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}

public CarTow(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehiclePos(carid,HouseCarSpawns[carid-1][0], HouseCarSpawns[carid-1][1], HouseCarSpawns[carid-1][2]);
	SetVehicleZAngle(carid, HouseCarSpawns[carid-1][3]);
	LinkVehicleToInterior(carid, 0);
	return 1;
}

public CarRespawn(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehicleToRespawn(carid);
	gLastDriver[carid] = 299;
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
 	if (GetPlayerState(playerid) == 1)
	{
		return 1;
	}
	if(Sequestrado[playerid] == 1)
	{
        PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), GetPlayerVehicleSeat(playerid));
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		BusrouteEnd(playerid);
	}
	TogglePlayerControllable(playerid, 1);
	//	new string[256];
 //   new playername[MAX_PLAYER_NAME];
//	GetPlayerName(playerid,playername,sizeof(playername));
    //format(string, sizeof(string), "%s Saiu de algum veiculo!", playername);
	//ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid))
	{
	    SpawnPlayer(playerid);
		return 1;
	}
	new string[128];
	new string3[128];
	new ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(string3, sizeof(string3), "Banidos/%s.ini", PlayerName(playerid));
	if(fexist(string3)) //autoban
	{
	    ClearChatbox(playerid, 10);
	    strmid(BanInfo[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
	    strmid(BanInfo[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
	    strmid(BanInfo[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
	    strmid(BanInfo[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
	    SendClientMessage(playerid, COLOR_WHITE, "|_______________| Informa��es do Ban |_______________|");
		format(string, sizeof(string), "Seu Nick:[%s] est� Banido do ", PlayerName(playerid));
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "Motivo: %s", BanInfo[playerid][pMotivo]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "Admin: %s", BanInfo[playerid][pAdmBan]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "Dia: %s, Hora: %s", BanInfo[playerid][pData], BanInfo[playerid][pHora]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		SendClientMessage(playerid, COLOR_YELLOW, "Para revis�o de ban acesse nosso forum: www.brasilstylecity.com");
		SendClientMessage(playerid, COLOR_YELLOW, "Aten��o: Voc� s� ser� desbanido caso for inocente !");
		new stri[64], tmp[20], tmp2[20];
		format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
		getdate(Ano, Mes, Dia);
		format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
		gettime(Hora, Minuto, Segundo);
		format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
		if(dini_Exists(stri))
		{
			Kick(playerid);
		}
		else
		{
			dini_Create(stri);
			dini_Set(stri,"Motivo",BanInfo[playerid][pMotivo]);
			dini_Set(stri,"Admin",BanInfo[playerid][pAdmBan]);
			dini_Set(stri,"Data",BanInfo[playerid][pData]);
			dini_Set(stri,"Hora",BanInfo[playerid][pHora]);
			dini_Set(stri,"Nick",PlayerName(playerid));
		}
  		Kick(playerid);
	}
	format(string3, sizeof(string3), "IPsBanidos/%s.ini", ip);
	if(fexist(string3))
	{
   	    ClearChatbox(playerid, 10);
   	    strmid(BanInfo[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
	    strmid(BanInfo[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
	    strmid(BanInfo[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
	    strmid(BanInfo[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
	    strmid(BanInfo[playerid][pNick], dini_Get(string3,"Nick"), 0, strlen(dini_Get(string3,"Nick")), 255);
   	    SendClientMessage(playerid, COLOR_WHITE, "|_______________| Informa��es do Ban |_______________|");
        format(string, sizeof(string), "Seu IP:[%s] est� Banido do ", ip);
		SendClientMessage(playerid, COLOR_LIGHTRED, string);
		format(string, sizeof(string), "Motivo: %s", BanInfo[playerid][pMotivo]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		if(strcmp(BanInfo[playerid][pNick],"", true ) == 0)
		{
			format(string, sizeof(string), "Admin: %s", BanInfo[playerid][pAdmBan]);
		}
		else
		{
			format(string, sizeof(string), "Admin: %s, Nick Fake: %s", BanInfo[playerid][pAdmBan], BanInfo[playerid][pNick]);
		}
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "Dia: %s, Hora: %s", BanInfo[playerid][pData], BanInfo[playerid][pHora]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
    	SendClientMessage(playerid, COLOR_YELLOW, "Para revis�o de ban acesse nosso forum: www.brasilstylecity.com");
		SendClientMessage(playerid, COLOR_YELLOW, "Aten��o: Voc� s� ser� desbanido caso for inocente !");
		/*new stri[64], tmp[20], tmp2[20];
		format(stri, sizeof(stri), "Banidos/%s.ini",PlayerName(playerid));
		getdate(Ano, Mes, Dia);
		format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
		gettime(Hora, Minuto, Segundo);
		format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
		if(dini_Exists(stri))
		{
			Kick(playerid);
		}
		else
		{
			dini_Create(stri);
			dini_Set(stri,"Motivo","IP de Fake");
			dini_Set(stri,"Admin","Administrador_BOT");
			dini_Set(stri,"Data",tmp);
			dini_Set(stri,"Hora",tmp2);
		}*/
       	Kick(playerid);
	}
 	if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
 		new plname[MAX_PLAYER_NAME];
 		PlayerPlaySound(playerid, 1183, 0.0, 0.0, 0.0);
		ClearChatbox(playerid, 10);
		SendClientMessage(playerid, COLOR_YELLOW2, " ");
		GameTextForPlayer(playerid," ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~b~g~r~y~a~r~s~b~i~y~l ~p~s~b~t~r~y~g~l~p~e ~y~c~p~i~r~t~b~y ~n~~r~r~p~p~b~g ~w~v1.0]",10000,6);
		//GameTextForPlayer(playerid,"~g~Brasil ~y~Hard ~b~Life ~w~v4.0",10000,6);
        SendClientMessage(playerid, COLOR_WHITE, "Seja Bem vindo ao {27f546}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}RPG [v1.0]]");
	    GetPlayerName(playerid, plname, sizeof(plname));
		format(gstring, 64, "Players/%s.ini", plname);
        if(fexist(gstring))
		{
		    new lstring[256];
			new lname[64];
			GetPlayerName(playerid,lname,sizeof(lname));
		    SendClientMessage(playerid, COR_VAGOS, "[]: Seu nick est� registrado, � s� Logar");
			SendClientMessage(playerid, COLOR_DBLUE, "Caso erre a senha 5 vezes, ter� o ip banido :C !");//http://www.pmespgta.com.br/
			format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {00FF00}Registrada\n \n{F2F2F2}Digite a sua Senha para Logar !\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Login",lstring, "Logar", "Esperar");
		}
		else
		{
		    new lstring[300];
			new lname[64];
			GetPlayerName(playerid,lname,sizeof(lname));
		    SendClientMessage(playerid, COR_GRO, "[]: Voc� n�o est� registrado! Se Registre Para Jogar");
		    SendClientMessage(playerid, COR_VAGOS, "Para ter acesso ao servidor voc� precisa se registrar.");
			format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {ff0000}N�o Registrada\n \n{F2F2F2}Registre-se ! Use Nome_Sobrenome\n \n{F2F2F2}Exemplo: Guru_Josh\n \n{F2F2F2}Digite sua Senha para se Registrar!\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Registro",lstring, "Registrar", "Esperar");
		}
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		//SetPlayerPos(playerid, 1685.823486,-2335.253906,-2.679687);
		//SetPlayerFacingAngle(playerid, 2.7415);
		//SetPlayerCameraPos(playerid, 2519.5913,-1914.1946,20.5054);
		//SetPlayerCameraLookAt(playerid, 2500.7458,-1926.4347,16.8761);
		PlayerInfo[playerid][pSkin] = Peds[classid][0];
		SetPlayerTeamFromClass(playerid,classid);
	}
	else { SpawnPlayer(playerid); }
	return false;
}

public SetupPlayerForClassSelection(playerid)
{
}

//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{
 	if (classid >= 1 && classid <= 11)
	{
		gTeam[playerid] = 11; //admin
		PlayerInfo[playerid][pTeam] = 11;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}

//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid) && !IsACop(playerid))
	{
	    if(WantedPoints[playerid] < 100) WantedPoints[playerid] += 1;
	    PlayerInfo[playerid][pCrimes] += 1;
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
		    format(turner, sizeof(turner), "C�meras de Seguran�a");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(gstring, sizeof(gstring), "Voc� cometeu um crime ( %s ). Relato: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
		SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
		format(gstring, sizeof(gstring), "N�vel de procurado: %d", WantedPoints[playerid]);
		SendClientMessage(playerid, COLOR_YELLOW, gstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i))
			    {
			        format(gstring, sizeof(gstring), "Aten��o Todas As Unidades");
			        SendClientMessage(i, COLOR_LIGHTRED, gstring);
					format(gstring, sizeof(gstring), "HQ: Denunciante: Relato: %s | Suspeito: {ff0000}%s[%d]",turner,turned,playerid);
					SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					if(GetPlayerInterior(playerid) == 0)
					{
						format(gstring, sizeof(gstring), "HQ: Crime: %s | Localiza��o: %s | Em Interior: N�o",reason,location);
						SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					}
					else
					{
						format(gstring, sizeof(gstring), "HQ: Crime: %s | Localiza��o: %s | Em Interior: Sim",reason,location);
						SendClientMessage(i, TEAM_BLUE_COLOR, gstring);
					}
				}
			}
		}
	}//not connected
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "190");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		//format(gstring, sizeof(gstring), "SMS: %s, Porque Voc� %s, Voc� N�o � Mais um Criminoso, Sender: MOLE (555)",turned,reason);
		RingTone[playerid] = 20;
        SetPlayerWantedLevel(playerid, 0);
		//SendClientMessage(playerid, COLOR_YELLOW, gstring);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i))
			    {
					format(gstring, sizeof(gstring), "<< HQ: Todas As Unidades, Oficial %s Completou a senten�a >>",turner);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					format(gstring, sizeof(gstring), "HQ: %s Foi processado, %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					SetPlayerWantedLevel(playerid, 0);
				}
			}
		}
	}
}

public RingToner()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return 1;
}

public RingTonerRev()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return 1;
}

public OtherTimer()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        //new vehicleid = GetPlayerVehicleID(i);
            if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerConta[i] == 1 && gPlayerLogged[i] == 0)
				{

				}
			}
			if(GetPlayerSpeed(i, true) >= 300 && !IsAPlane(GetPlayerVehicleID(i)))
			{
				format(gstring, 128, "|ATEN��O|: %s ID:[%d] est� a %d KM/h, TV nele pode ser Speed Hack.",PlayerName(i),i,GetPlayerSpeed(i, true));
				ABroadCast(COLOR_YELLOW,gstring,1);
				printf("%s", gstring);
			}
		    if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new House = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						if(House > 10000)
						{
							new tmpcar = GetPlayerVehicleID(i);
							if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && House == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && House == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && House == 10003)
							{
								if (GetPlayerState(i) == 2)
								{
									SetVehiclePos(tmpcar, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
									SetVehicleZAngle(tmpcar, HouseCarSpawns[tmpcar-1][3]);
									LinkVehicleToInterior(tmpcar, 0);
								}
								else
								{
									SetPlayerPos(i, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
								}
								new oldcash = gSpentCash[i];
								new Total = GetPlayerMoney(i) - oldcash;
								printf("Total %d = GetPlayerMoney(playerid) %d - oldcash %d",Total,GetPlayerMoney(i),oldcash);
								/*new name[MAX_PLAYER_NAME];
								GetPlayerName(i, name, sizeof(name));
								format(gstring,128,"<< %s has left the homemodshop with R$%d >>",name,Total);
								//PayLog(gstring);*/
								gSpentCash[i] = 0;
								TelePos[i][0] = 0.0;
								TelePos[i][1] = 0.0;
								PlayerInfo[i][pLocal] = 255;
								SetPlayerInterior(i,0);
								PlayerInfo[i][pInt] = 0;
								Spectate[i] = 255;
							}
						}
						if(House == 241)//City Hall
						{
						    SetPlayerInterior(i,0);
							SetPlayerPos(i,1480.9403,-1770.8481,18.7958);
							PlayerInfo[i][pInt] = 0;
							PlayerInfo[i][pLocal] = 255;
						}
						if(House >= 99 && House != 10000)
						{
							SetPlayerPos(i, BizzInfo[House-99][bEntranceX], BizzInfo[House-99][bEntranceY],BizzInfo[House-99][bEntranceZ]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
						else if(House < 99 && House != 10000)
						{
							SetPlayerPos(i, HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
					}
				}
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(gstring, sizeof(gstring), "* %s's Ligando.", called);
						RingTone[Mobile[i]] = 10;
						ProxDetector(30.0, Mobile[i], gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(gstring, sizeof(gstring), "~w~Custo da ligacao~n~~r~R$%d",CallCost[i]);
				GivePlayerMoney(i, -CallCost[i]);
				SBizzInfo[2][sbTill] += CallCost[i];
				ExtortionSBiz(2, CallCost[i]);
				GameTextForPlayer(i, gstring, 5000, 1);
				CallCost[i] = 0;
			}
			if(TransportTime[i] > 0)
			{//Taxi driver and passenger only
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(gstring, sizeof(gstring), "~r~%d ~w~: ~g~R$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, gstring, 15000, 6);
			}
			if (gPlayerTerminal[i] != 0)
			{
			    new vehicleid = GetPlayerVehicleID(i);
				if (vehicleid != 0)
				{
					if (!IsABus(vehicleid))
					{
						if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
					}
				}
				else
				{
				    if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
				}
			}
		}
	}
	return 1;
}

public SetPlayerUnjail()
{
	if(PaintballPlayers >= 2 && PaintballRornd != 1 && StartingPaintballRornd != 1)
	{
		StartingPaintballRornd = 1;
	   	SetTimer("PreparePaintball", 30000, 0);
	}
	if(KartingPlayers >= 2 && KartingRornd != 1 && StartingKartRornd != 1)
	{
	    StartingKartRornd = 1;
	    SetTimer("PrepareKarting", 15000, 0);
	}
	if(KartingRornd != 0 && KartingPlayers < 2)
	{
	    StartingKartRornd = 0;
	    KartingRornd = 0;
	    EndingKartRornd = 1;
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			//new newcar = GetPlayerVehicleID(i);
			new level = PlayerInfo[i][pLevel];
			new vip = PlayerInfo[i][pVIP];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pSalario] += 3; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pSalario] += 4; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pSalario] += 5; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pSalario] += 6; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pSalario] += 7; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pSalario] += 8; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pSalario] += 9; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pSalario] += 10; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pSalario] += 11; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pSalario] += 12; }
			else if(level >= 21) { PlayerInfo[i][pSalario] += 15; }
            if(vip == 1) { PlayerInfo[i][pSalario] += 2; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 4; }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0 && WantAdvogado[i] == 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0 && WantAdvogado[i] == 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 6);
						SetPlayerPos(i,268.0903,77.6489,1001.0391);
					}
					else if(PlayerInfo[i][pJailed] == 3)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,-482.251312,-567.736022,23.834720);
					}
					else if(PlayerInfo[i][pJailed] == 4)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,932.7802,-1223.6500,16.9051);
					}
					else if(PlayerInfo[i][pJailed] == 5)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1024.3496,-373.1364,73.3885);
					}
					else if(PlayerInfo[i][pJailed] == 6)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1542.158203,-1675.389404,13.553955);
					}
					else if(PlayerInfo[i][pJailed] == 7)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,-1529.3772,486.5050,7.1797);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
					    SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
					    SetPlayerInterior(i, 0);
					    SetPlayerPos(i, 90.2101,1920.4854,17.9422);
					}
					if(PlayerInfo[i][pSkin] > 0)
					{
						SetPlayerSkin(i, PlayerInfo[i][pSkin]);
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_GRAD1,"Voc� pagou sua divida com a sociedade.");
					GameTextForPlayer(i, "~g~Livre~n~~w~Nao cometa mais crimes", 5000, 1);
					if(gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
				}
			}
			if(GetPlayerMoney(i) - CurrentMoney[i] >= 50000 && PlayerInfo[i][pAdmin] < 1)
		    {
		        if(ConsumingMoney[i])
		        {
                    CurrentMoney[i] = GetPlayerMoney(i);
					ConsumingMoney[i] = 0;
		        }
		        else
		        {
			        CurrentMoney[i] = GetPlayerMoney(i);
		        }
		    }
		    else
		    {
		        CurrentMoney[i] = GetPlayerMoney(i);
		    }
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }
      		if(WantAdvogado[i] >= 1)
			{
			    CallAdvogado[i] = 111;
			    if(WantAdvogado[i] == 1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voc� quer um Advogado? (Digite sim ou nao)");
				}
				WantAdvogado[i] ++;
				if(WantAdvogado[i] == 8)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voc� quer um Advogado? (Digite sim ou nao)");
				}
	            if(WantAdvogado[i] == 15)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voc� quer um Advogado? (Digite sim ou nao)");
				}
				if(WantAdvogado[i] == 20)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "N�o H� Advogados Online, sua senten�a foi iniciada.");
				    WantAdvogado[i] = 0;
        			CallAdvogado[i] = 0;
				}
			}
			if(TutTime[i] >= 1)
			{
				TutTime[i] += 1;
			    if(TutTime[i] == 5)
			    {
			        TogglePlayerControllable(i, 0);
			        SetPlayerInterior(i, 0);
					SetPlayerPos(i, 1276.2075,-1131.3752,23.8281);
    				SetPlayerCameraPos(i, 1419.8663,-1045.7428,27.3906);
     		 		SetPlayerCameraLookAt(i, 1422.1774,-1044.4663,27.3906);
					ClearChatbox(i, 100);
					GameTextForPlayer(i, "~d~ ~w~.::SEJA BEM VINDO AO ::. ~d~", 8000, 3);
       				SendClientMessage(i, COLOR_YELLOW, ".:: Bem Vindo ao Brasil Hard Life ::. ");
				 	SendClientMessage(i, COR_GRO, "Este servidor foi feito para voc� se divertir com algumas regras!");
					SendClientMessage(i, COR_GRO, "Tudo o que n�s fizemos foi para que voc� jogue com muita vontade de n�o parar de jogar!");
					SendClientMessage(i, COR_GRO, "Aqui voc� vai ter uma segunda vida, com amigos,casamentos,tr�fico,roubo,sequestros,etc...");
     				SendClientMessage(i, COR_GRO, "Nossa equipe est� disposta a te ajudar, vamos fazer o possivel para agrada-los");
					SendClientMessage(i, COLOR_RED, "|___________________________________________________________________________|");
				}
			    else if(TutTime[i] == 19)
			    {
			        TogglePlayerControllable(i, 0);
					ClearChatbox(i, 100);
                    SetPlayerPos(i, 1276.2075,-1131.3752,23.8281);
                	SetPlayerCameraPos(i, 1419.8663,-1045.7428,27.3906);
                	SetPlayerCameraLookAt(i, 1422.1774,-1044.4663,27.3906);
                	GameTextForPlayer(i, "~d~ ~w~.::INFORMACOES BASICAS::. ~d~", 8000, 3);
       				SendClientMessage(i, COLOR_YELLOW, ".:: Informa��es B�sicas ::.");
			        SendClientMessage(i, COR_GRO, "Nosso servidor � estilo RPG");
			        SendClientMessage(i, COLOR_YELLOW, ".:: Oque � RPG? :..");
					SendClientMessage(i, COR_GRO, "� um modo de jogo baseado na vida real, portanto voc� n�o poder� sair matando por ai.");
			        SendClientMessage(i, COR_GRO, "Nem zuando de todos, voc� tem que fazer tudo baseando na vida real!");
			        SendClientMessage(i, COR_GRO, "Ent�o leve nosso servidor a s�rio e jogue como se fosse sua segunda vida!");
					SendClientMessage(i, COLOR_RED, "|___________________________________________________________________________|");
			    }
			    else if(TutTime[i] == 35)
			    {
			        TogglePlayerControllable(i, 0);
					ClearChatbox(i, 100);
                    SetPlayerPos(i, 1276.2075,-1131.3752,23.8281);
      				SetPlayerCameraPos(i, 1419.8663,-1045.7428,27.3906);
                	SetPlayerCameraLookAt(i, 1422.1774,-1044.4663,27.3906);
                	GameTextForPlayer(i, "~d~ ~w~.::REGRAS BASICAS::. ~d~", 8000, 3);
       				SendClientMessage(i, COLOR_YELLOW, ".:: Regras B�sicas ::.");
			        SendClientMessage(i, COR_GRO, "Sempre respeite um admin, ele est� fazendo o melhor por voc�.");
					SendClientMessage(i, COR_GRO, "N�o Fa�a DM(Matar sem Motivo) | Nunca Fa�a DB(Atirar de dentro de um carro em quem est� ap�)");
			        SendClientMessage(i, COR_GRO, "E o principal, nunca use xiter para se beneficiar, em caso de uso de xiter ser� banido imediatamente.");
					SendClientMessage(i, COLOR_RED, "|___________________________________________________________________________|");
			    }
			    else if(TutTime[i] == 50)
			    {
			        TogglePlayerControllable(i, 0);
					ClearChatbox(i, 100);
                    SetPlayerPos(i, 1276.2075,-1131.3752,23.8281);
                	SetPlayerCameraPos(i, 1419.8663,-1045.7428,27.3906);
                	SetPlayerCameraLookAt(i, 1422.1774,-1044.4663,27.3906);
                	GameTextForPlayer(i, "~d~ ~w~.::COMANDOS UTEIS::. ~d~", 8000, 3);
       				SendClientMessage(i, COLOR_YELLOW, ".:: Comando Uteis ::.");
					SendClientMessage(i, COR_GRO, "Antes de tudo digite T(abrir chat)");
				    SendClientMessage(i, COR_GRO, "/relatorio - Falar com os administradores, /duvida - Esclare�a uma duvida");
        			SendClientMessage(i, COR_GRO, "/rg - Ver seus status, /gps - Se localizar pela cidade.");
				    SendClientMessage(i, COR_GRO, "/ajuda - voc� tem aqui todos esses comandos e mais alguns que voc� utilizar�.");
					SendClientMessage(i, COLOR_RED, "|___________________________________________________________________________|");
			    }
				else if(TutTime[i] == 63)
			    {
			        TogglePlayerControllable(i, 0);
					ClearChatbox(i, 100);
                    SetPlayerPos(i, 1276.2075,-1131.3752,23.8281);
                	SetPlayerCameraPos(i, 1419.8663,-1045.7428,27.3906);
                	SetPlayerCameraLookAt(i, 1422.1774,-1044.4663,27.3906);
                	GameTextForPlayer(i, "~d~ ~w~.::SISTEMAS VIPS & SOCIOS::. ~d~", 8000, 3);
       				SendClientMessage(i, COLOR_YELLOW, "|.:: Sistema VIP's & Soci�s ::.|");
					SendClientMessage(i, COR_GRO, "VIP's : Bronze = 5 Reais | Prata = 10 Reais | Ouro = 20 Reais");
				    SendClientMessage(i, COR_GRO, "S�cios : Bronze = 32 Reais | Prata = 45 Reais | Ouro = 50 Reais");
        			SendClientMessage(i, COR_GRO, "Veja tudo sobre as Contas VIP's no /site");
				    SendClientMessage(i, COR_GRO, "....:>www.brasilstylecity.com<:....");
				    SendClientMessage(i, COLOR_RED, "|___________________________________________________________________________|");
				}
			    else if(TutTime[i] == 79)
			    {
			        TogglePlayerControllable(i, 0);
					ClearChatbox(i, 100);
					//GameTextForPlayer(i, "~b~Bem Vindo Ao ~n~ ~p~~g~B~y~S~b~C", 8000, 3);
                    SetPlayerPos(i, 1276.2075,-1131.3752,23.8281);
                	SetPlayerCameraPos(i, 1419.8663,-1045.7428,27.3906);
                	SetPlayerCameraLookAt(i, 1422.1774,-1044.4663,27.3906);
                	GameTextForPlayer(i, "~d~ ~w~.:: SEJA BEM VINDO AO  ::. ~d~", 8000, 3);
					SendClientMessage(i, COLOR_YELLOW, "Seja bem vindo ao nosso Brasil Hard Life RPG");
					SendClientMessage(i, COR_GRO, "Sua presen�a aqui � muito importante para n�s!");
					SendClientMessage(i, COR_GRO, "Voc�s s�o o futuro do nosso servidor :D.");
					SendClientMessage(i, COLOR_RED, "|___________________________________________________________________________|");
				}
				else if(TutTime[i] == 85)
			    {
			        TogglePlayerControllable(i, 1);
					ClearChatbox(i, 100);
     				TutTime[i] = 0; PlayerInfo[i][pTut] = 1;
					gNews[i] = 0; gFam[i] = 0;
					TogglePlayerControllable(i, 1);
					SetPlayerVirtualWorld(i,0);
					MedicBill[i] = 0;
					SetPlayerSpawn(i);
					SetCameraBehindPlayer(i);
					PlayerInfo[i][pConta] = 1000;
					PlayerInfo[i][pCreditos] += 20;
		            PlayerPlayMusic(i);
					RegistrationStep[i] = 4;
					ResetPlayerMoney(i);
					GivePlayerMoney(i, 2500);
					//GameTextForPlayer(i, "~w~Chame Um Admin Para Te Ajudar ~n~~b~ /relatorio ", 3000, 3);
					GameTextForPlayer(i, "~b~Seja Feliz ~g~Conte ~y~Conosco", 8000, 3);
				}
			}
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        PlayerDrunk[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 1;
			    if(PlayerStoned[i] == 10)
			    {
			        PlayerStoned[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 90);
					}
			    }
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~A Luta Come�ou", 5000, 1);
					TogglePlayerControllable(i, 1);
					RorndStarted = 1;
				}
			    else
				{
				    format(gstring, sizeof(gstring), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, gstring, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RorndStarted > 0)
			{
			    if(PlayerBoxing[i] > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) { Lost = 1; trigger = 1; }
			            else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
			        if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pEmprego] == 8)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora � campe�o.",  titel, loser);
												OOCNews(COLOR_WHITE,gstring);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_GREY, " Voc� precisa ser um lutador de boxe para ganhar uma luta!");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
											OOCNews(COLOR_WHITE,gstring);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(gstring, sizeof(gstring), " Voc� perdeu a luta contra %s.", winner);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer1, "~r~Voce Perdeu", 3500, 1);
								format(gstring, sizeof(gstring), " Voc� ganhou a luta contra %s.", loser);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer2, "~r~Voce Venceu", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Voc� est� exausto da luta, v� se recuperar.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Voc� continua em bom estado ap�s a luta.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Voc� est� exausto da luta, v� se recuperar.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Voc� continua em bom estado ap�s a luta.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Fim da Luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da Luta", 5000, 1);
								if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pEmprego] == 8)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora � o campe�o.",  titel, loser);
												OOCNews(COLOR_WHITE,gstring);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_GREY, " Voc� precisa ser um lutador de boxe para ganhar uma luta!");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
											OOCNews(COLOR_WHITE,gstring);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(gstring, sizeof(gstring), " Voc� perdeu a luta contra %s.", winner);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer2, "~r~Voce Perdeu", 3500, 1);
								format(gstring, sizeof(gstring), " Voc� ganhou a luta contra %s.", loser);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer1, "~g~Voce Venceu", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Voc� est� exausto da luta, v� se recuperar.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Voc� continua em bom estado ap�s a luta.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Voc� est� exausto da luta, v� se recuperar.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Voc� continua em bom estado ap�s a luta.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Fim da luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da luta", 5000, 1);
								if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            InRing = 0;
			            RorndStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(StartingPaintballRornd == 1 && AnnorncedPaintballRornd == 0)
			{
			    AnnorncedPaintballRornd = 1;
			    if(PlayerPaintballing[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "Paintball ser� anunciado em 30 segundos (Para obter mais jogadores).");
			    }
			}
			if(StartingKartRornd == 1 && AnnorncedKartRornd == 0)
			{
			    AnnorncedKartRornd = 1;
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "Corrida de Kart ser� anunciada em 15 segundos (Para obter mais Corredores de Kart).");
			    }
			}
			if(EndingKartRornd == 1)
			{
			    if(PlayerKarting[i] != 0 && PlayerInKart[i] != 0)
			    {
			        DisablePlayerCheckpoint(i);
			        CP[i] = 0;
			    }
			}
			if(FindTime[i] > 0)
			{
			    if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Marca Vermelha Ativada", 2500, 1); }
			    else
				{
				    format(gstring, sizeof(gstring), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, gstring, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(BusCallTime[i] > 0)
			{
			    if(BusAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(BusAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MedicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MedicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
            if(CopsrondaCallTime[i] > 0)
			{
			    if(CopsrondaAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(CopsrondaAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(CopsrondaAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MechanicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MechanicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
		}
	}
}
public CheckGas()
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerNPC(i))
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	       		new VehicleModel = GetVehicleModel(vehicle);
	       		if(VehicleModel == 509 || VehicleModel == 481 || VehicleModel == 510)
	       		{
	       		    return 1;
	       		}
	        	if(Gas[vehicle] >= 1)
		   		{
		   		    if(Gas[vehicle] <= 10) { PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0); }
	              	Gas[vehicle]--;
		   		}
	   			else
	           	{
	              	NoFuel[i] = 1;
	              	TogglePlayerControllable(i, 0);
                    PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
		        	GameTextForPlayer(i,"~r~~n~~n~~n~~n~~n~~n~~n~~n~Sem combustivel~n~Use /sair Para sair do veiculo",1500,3);
		        	SendClientMessage(i, COLOR_YELLOW, "O motor do ve�culo apagou por falta de combust�vel, Chame um CET para ajudar.");
				}
			}
    	}
	}
	return 1;
}
public Fillup(playerid)
{
	for(new i=0; i<MAX_PLAYERS; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
		    new VID;
		    new FillUp;
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
			if(Refueling[i] == 1)
		    {
				if(GetPlayerMoney(i) >= FillUp+4)
				{
					Gas[VID] += FillUp;
					FillUp = FillUp * 50;
				    format(gstring,sizeof(gstring)," Veiculo Reabastecido, Por: R$%d.",FillUp);
				    PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
				    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
					GivePlayerMoney(i, - FillUp);
					SBizzInfo[3][sbTill] += FillUp;
					ExtortionSBiz(3, FillUp);
					Refueling[i] = 0;
				}
			   	else
			   	{
			   	    format(gstring,sizeof(gstring)," Voc� n�o tem grana para reabastecer, voc� precisa de R$%d para reabastecer.",FillUp);
				    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
			   	}
		 	}
		}
	}
	return 1;
}
public SetPlayerWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    ResetPlayerWeaponsEx(playerid);
	    if(PlayerInfo[playerid][pJailed] < 1)
	    {
    		if (PlayerInfo[playerid][pGun1] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
			    PlayerInfo[playerid][pGun1] = 0; PlayerInfo[playerid][pAmmo1] = 0;
			}
			if (PlayerInfo[playerid][pGun2] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
			    PlayerInfo[playerid][pGun2] = 0; PlayerInfo[playerid][pAmmo2] = 0;
			}
			if (PlayerInfo[playerid][pGun3] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
			    PlayerInfo[playerid][pGun3] = 0; PlayerInfo[playerid][pAmmo3] = 0;
			}
			if (PlayerInfo[playerid][pGun4] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
			    PlayerInfo[playerid][pGun4] = 0; PlayerInfo[playerid][pAmmo4] = 0;
			}
			if (PlayerInfo[playerid][pGun5] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun5], PlayerInfo[playerid][pAmmo5]);
			    PlayerInfo[playerid][pGun5] = 0; PlayerInfo[playerid][pAmmo5] = 0;
			}
			if (PlayerInfo[playerid][pGun6] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun6], PlayerInfo[playerid][pAmmo6]);
			    PlayerInfo[playerid][pGun6] = 0; PlayerInfo[playerid][pAmmo6] = 0;
			}
			if (PlayerInfo[playerid][pGun7] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun7], PlayerInfo[playerid][pAmmo7]);
			    PlayerInfo[playerid][pGun7] = 0; PlayerInfo[playerid][pAmmo7] = 0;
			}
			if (PlayerInfo[playerid][pGun8] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun8], PlayerInfo[playerid][pAmmo8]);
			    PlayerInfo[playerid][pGun8] = 0; PlayerInfo[playerid][pAmmo8] = 0;
			}
			if (PlayerInfo[playerid][pGun9] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun9], PlayerInfo[playerid][pAmmo9]);
			    PlayerInfo[playerid][pGun9] = 0; PlayerInfo[playerid][pAmmo9] = 0;
			}
			if (PlayerInfo[playerid][pGun10] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun10], PlayerInfo[playerid][pAmmo10]);
			    PlayerInfo[playerid][pGun10] = 0; PlayerInfo[playerid][pAmmo2] = 10;
			}
			if (PlayerInfo[playerid][pGun11] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun11], PlayerInfo[playerid][pAmmo11]);
			    PlayerInfo[playerid][pGun2] = 11; PlayerInfo[playerid][pAmmo2] = 11;
			}
			if (PlayerInfo[playerid][pGun12] > 0)
			{
			    GivePlayerWeapon(playerid, PlayerInfo[playerid][pGun12], PlayerInfo[playerid][pAmmo12]);
			    PlayerInfo[playerid][pGun2] = 12; PlayerInfo[playerid][pAmmo2] = 12;
			}
		}
	}
}

public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"|__________________| %s |__________________|",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extor��o: %s",SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring),"|__________________| %s |__________________|",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extor��o: %s",BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  GetPlayerMoney(targetid);
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Masculino"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Feminino"; }
		new dtext[20];
		if(PlayerInfo[targetid][pDoenca] == 1) { dtext = "Mongolismo"; }
		else if(PlayerInfo[targetid][pDoenca] == 2) { dtext = "AIDS"; }
		else if(PlayerInfo[targetid][pDoenca] == 3) { dtext = "Herpes Genital"; }
		else if(PlayerInfo[targetid][pDoenca] == 4) { dtext = "Cirrose"; }
		else if(PlayerInfo[targetid][pDoenca] == 5) { dtext = "Cancer de Pulmao"; }
		else { dtext = "Nenhuma"; }
	    new rtext[64];
	    if(PlayerInfo[targetid][pMembro] == 1 || PlayerInfo[targetid][pLider] == 1)//PD Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Cadete"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Tenente"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Coronel Rocam"; }
	        else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Coronel PM"; }
			else { rtext = "Cadete"; }
		}
		if(PlayerInfo[targetid][pMembro] == 2 || PlayerInfo[targetid][pLider] == 2)//B.O.P.E Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Tenente"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Capit�o"; }
			else { rtext = "Recruta"; }
		}
		if(PlayerInfo[targetid][pMembro] == 3 || PlayerInfo[targetid][pLider] == 3)//Ex�rcito Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "GATE"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Major"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Tenente Coronel"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "General"; }
			else { rtext = "Soldado"; }
		}
		if(PlayerInfo[targetid][pMembro] == 4 || PlayerInfo[targetid][pLider] == 4)//Medicos Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Auxiliar de Enfermeiro"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Enfermeiro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "M�dico"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Bombeiro"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Bombeiro Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor Hospitalar"; }
			else { rtext = "Auxiliar de Enfermeiro"; }
		}
		if(PlayerInfo[targetid][pMembro] == 6 || PlayerInfo[targetid][pLider] == 6)//Gavi�es Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro(2)"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Membro(3)"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Puxador"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Presidente"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Presidente"; }
			else { rtext = "Novato"; }
		}
		if(PlayerInfo[targetid][pMembro] == 7 || PlayerInfo[targetid][pLider] == 7)//Prefeito Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Motorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Seguran�a"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Acessor de imprensa"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Ministro da seguran�a"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Prefeito"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Governador"; }
			else { rtext = "Motorista"; }
		}
		if(PlayerInfo[targetid][pMembro] == 8 || PlayerInfo[targetid][pLider] == 8)//Hitman Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Matador"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Assasino Frio"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Agente Especial"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Vice-Diretor"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Matador"; }
		}
		if(PlayerInfo[targetid][pMembro] == 9 || PlayerInfo[targetid][pLider] == 9)//NR Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Humorista"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Rep�rter Local"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Rep�rter Nacional"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Editor Local"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Fotografo Paparazzi"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Diretor de Produ��o"; }
			else { rtext = "Humorista"; }
		}
		if(PlayerInfo[targetid][pMembro] == 10 || PlayerInfo[targetid][pLider] == 10)//Taxi Company Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Taxista Em Treinamento"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Taxista Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Taxista Experiente"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Taxista Profissional"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Chefe"; }
			else { rtext = "Taxista Em Treinamento"; }
		}
		if(PlayerInfo[targetid][pMembro] == 14 || PlayerInfo[targetid][pLider] == 14 || PlayerInfo[targetid][pMembro] == 17
		|| PlayerInfo[targetid][pLider] == 17 || PlayerInfo[targetid][pMembro] == 18 || PlayerInfo[targetid][pLider] == 18
		|| PlayerInfo[targetid][pMembro] == 19 || PlayerInfo[targetid][pLider] == 19 || PlayerInfo[targetid][pMembro] == 20
		|| PlayerInfo[targetid][pLider] == 20 || PlayerInfo[targetid][pMembro] == 5 || PlayerInfo[targetid][pLider] == 5)//GANG'S Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Avi�ozinho"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Fogueteiro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Capanga"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Gerente da Boca"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Gerente dos Gerente"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Chef�o"; }
			else { rtext = "Avi�ozinho"; }
		}
		if(PlayerInfo[targetid][pMembro] == 15 || PlayerInfo[targetid][pLider] == 15)//AlQaeda Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro(2)"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Membro(3)"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Puxador"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Presidente"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Presidente"; }
			else { rtext = "Novato"; }
		}
		if(PlayerInfo[targetid][pMembro] == 16 || PlayerInfo[targetid][pLider] == 16)//Policia Rodoviaria Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Soldado"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Major"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Tenente Coronel"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Coronel"; }
			else { rtext = "Soldado"; }
		}
		if(PlayerInfo[targetid][pMembro] == 13 || PlayerInfo[targetid][pLider] == 13
		|| PlayerInfo[targetid][pMembro] == 12 || PlayerInfo[targetid][pLider] == 12)//M�fias Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Associado"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Bra�o-Direito"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Lider"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "L�der"; }
			else { rtext = "Novato"; }
		}
		if(PlayerInfo[targetid][pMembro] == 11 || PlayerInfo[targetid][pLider] == 11)//PF Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Agente"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Espi�o"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Atirador"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Capit�o"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub Lider"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "L�der"; }
			else { rtext = "Agente"; }
		}
        if(PlayerInfo[targetid][pMembro] == 22 || PlayerInfo[targetid][pLider] == 22)//Bombeiros Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Salva-Vidas"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Cabo"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Sub-Tenente"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Coronel"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Comandante Geral"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "L�der"; }
			else { rtext = "Salva-Vidas"; }
  		if(PlayerInfo[targetid][pMembro] == 23 || PlayerInfo[targetid][pLider] == 23 || PlayerInfo[targetid][pMembro] == 21
		|| PlayerInfo[targetid][pLider] == 21)//Sons Ranks
		{
		    if(PlayerInfo[targetid][pCargo] == 1) { rtext = "Motoqueiro Novato"; }
			else if(PlayerInfo[targetid][pCargo] == 2) { rtext = "Motoqueiro Membro"; }
			else if(PlayerInfo[targetid][pCargo] == 3) { rtext = "Motoqueiro Semi-Pro"; }
			else if(PlayerInfo[targetid][pCargo] == 4) { rtext = "Motoqueiro Pro"; }
			else if(PlayerInfo[targetid][pCargo] == 5) { rtext = "Sub-Chefe"; }
		    else if(PlayerInfo[targetid][pCargo] == 6) { rtext = "Lider Motoqueiros"; }
			else { rtext = "Motoqueiro Novato"; }
		}
		}
		else
		{
		    rtext = "Nenhum";
		}
        new jtext[20];
        if(PlayerInfo[targetid][pEmprego] == 1) { jtext = "Detetive"; }
        else if(PlayerInfo[targetid][pEmprego] == 2) { jtext = "Advogado"; }
        else if(PlayerInfo[targetid][pEmprego] == 3) { jtext = "Prof.Sexo"; }
        else if(PlayerInfo[targetid][pEmprego] == 4) { jtext = "Traficante"; }
        else if(PlayerInfo[targetid][pEmprego] == 5) { jtext = "CET"; }
        else if(PlayerInfo[targetid][pEmprego] == 6) { jtext = "Seguran�a"; }
        else if(PlayerInfo[targetid][pEmprego] == 7) { jtext = "Vendedor De Armas"; }
		else if(PlayerInfo[targetid][pEmprego] == 8) { jtext = "Boxeador"; }
        else if(PlayerInfo[targetid][pEmprego] == 9) { jtext = "Motorista de Onibus"; }
        else if(PlayerInfo[targetid][pEmprego] == 10) { jtext = "Mendigo"; }
        else if(PlayerInfo[targetid][pEmprego] == 11) { jtext = "Caminhoneiro"; }
        else if(PlayerInfo[targetid][pEmprego] == 12) { jtext = "Pizza Boy"; }
        else { jtext = "Nenhum"; }
		new drank[20];
		if(PlayerInfo[targetid][pVIP] == 0) { drank = "Gratis"; }
		if(PlayerInfo[targetid][pVIP] == 1) { drank = "VIP Bronze"; }
		else if(PlayerInfo[targetid][pVIP] == 2) { drank = "VIP Prata"; }
		else if(PlayerInfo[targetid][pVIP] == 3) { drank = "VIP Ouro"; }
		else if(PlayerInfo[targetid][pVIP] == 4) { drank = "S�cio Bronze"; }
		else if(PlayerInfo[targetid][pVIP] == 5) { drank = "S�cio Prata"; }
		else if(PlayerInfo[targetid][pVIP] == 6) { drank = "S�cio Ouro"; }
		else if(PlayerInfo[targetid][pVIP] == 7) { drank = "S�cio Admin"; }
		else if(PlayerInfo[targetid][pVIP] == 8) { drank = "S�cio Dono"; }
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		//new age = PlayerInfo[targetid][pAge];
		new ptime = PlayerInfo[targetid][pConnectTime];
		//new lotto = PlayerInfo[targetid][pLottoNr];
		new crimes = PlayerInfo[targetid][pCrimes];
		new Drogas = PlayerInfo[targetid][pDrogas]; // maconha
		new Drogas2 = PlayerInfo[targetid][pDrogas2]; // cocaina
		new Drogas3 = PlayerInfo[targetid][pDrogas3]; // crack
		new SafeDrogas = PlayerInfo[targetid][pSafeDrogas]; // maconha
		new SafeDrogas2 = PlayerInfo[targetid][pSafeDrogas2]; // cocaina
		new SafeDrogas3 = PlayerInfo[targetid][pSafeDrogas3]; // crack
		new mats = PlayerInfo[targetid][pMats];
		new smats = PlayerInfo[targetid][psMats];
		//new wanted = WantedLevel[targetid];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new avisos = PlayerInfo[targetid][pWarns];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new Conta = PlayerInfo[targetid][pConta];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expquantidade = nxtlevel*levelexp;
		new costlevel = nxtlevel*levelcost;//10k for testing purposes
		new Housekey = PlayerInfo[targetid][pPHousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new local = PlayerInfo[targetid][pLocal];
		new Float:health;
		new creditos = PlayerInfo[targetid][pCreditos];
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		new string[256];
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid,playername,sizeof(playername));
		GetPlayerPos(targetid, px, py, pz);
		SendClientMessage(playerid, COLOR_WHITE, "__________________________________________________________________________________");
		format(gstring, sizeof(gstring),"Personagem: %s ",name);
		SendClientMessage(playerid, COR_VAGOS,gstring);
		format(gstring, sizeof(gstring), "Level:[%d] Sexo:[%s] Dinheiro:[R$%d] Banco:[R$%d] Cr�ditos:[%d] Conta:[%s]", level,atext, cash, Conta, creditos,drank);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,gstring);
		format(gstring, sizeof(gstring), "Casado Com:[%s] Horas Jogadas:[%d] Celular:[%d] Local:[%d] ", married,ptime,pnumber,local);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,gstring);
		format(gstring, sizeof(gstring), "Valor Level:[R$%d] Crimes:[%d] Avisos:[%d] Doen�a:[%s]", costlevel,crimes,avisos,dtext);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,gstring);
		format(gstring, sizeof(gstring), "Respeito:[%d/%d] Emprego:[%s] Organiza��o:[%s] Cargo:[%s] Materiais:[%d] S.Materiais:[%d]",exp,expquantidade,jtext,NomeORG(targetid),rtext,mats,smats);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,gstring);
		format(gstring, sizeof(gstring), "Maconha:[%d] Cocaina:[%d] Crack:[%d] S.Maconha:[%d] S.Cocaina:[%d] S.Crack:[%d]",Drogas,Drogas2,Drogas3,SafeDrogas,SafeDrogas2,SafeDrogas3);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,gstring);
		format(gstring, sizeof(gstring), "Chave Casa:[%d] Chave Empresa:[%d] Chave Carro Aluguel:[%d]", Housekey,bizkey,HireCar[targetid]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE,gstring);
		SendClientMessage(playerid, COLOR_WHITE, "__________________________________________________________________________________");
		format(string, sizeof(string), "* %s Abre a carteira e confere sua Identidade(RG) !", playername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
}
//---------------------------------------------------------

public SetPlayerToTeamColor(playerid)
{
    if(admtrampando[playerid] == 1 && admhide[playerid] != 1)
	{
		SetPlayerColor(playerid, COR_ADMIN);
	}
	else if (PlayerInfo[playerid][pTeam] == 3)//Civis
	{
       SetPlayerColor(playerid, COLOR_WHITE);
 	}
	else if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//PM
	{
       SetPlayerColor(playerid, COR_PM);
	}
	else if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//ROTA
	{
       SetPlayerColor(playerid, COR_PR);
	}
	else if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Ex�rcito
	{
       SetPlayerColor(playerid, COR_EXE);
	}
	else if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//Medicos
	{
       SetPlayerColor(playerid, COR_SAMU);
	}
	else if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//TCP
	{
       SetPlayerColor(playerid, COR_TCP);
	}
	else if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Taliban
	{
       SetPlayerColor(playerid, COR_PF);
	}
    else if (PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Governo
	{
       SetPlayerColor(playerid, COR_PRE);
	}
	else if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)//Hitmans
	{
       SetPlayerColor(playerid, COR_HITMAN);
	}
	else if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//Reporter
	{
       SetPlayerColor(playerid, COR_REP);
    }
    else if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)//Taxistas
	{
       SetPlayerColor(playerid, COR_TAXI);
    }
	else if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//PF
	{
       SetPlayerColor(playerid, COR_PM);
	}
	else if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//M�fia Cosa Nostra
	{
       SetPlayerColor(playerid, COR_COSA);
	}
	else if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//M�fia Yakuza
	{
       SetPlayerColor(playerid, COR_YAK);
	}
	else if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)//Grove
	{
       SetPlayerColor(playerid, COR_GRO);
	}
	else if (PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)//Mancha Verde
	{
       SetPlayerColor(playerid, COLOR_GREEN);
	}
	else if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)//Policia Civil
	{
       SetPlayerColor(playerid, COR_PM);
	}
	else if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)//BALLAS
	{
       SetPlayerColor(playerid, COR_BALLAS);
	}
	else if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)//vagos
	{
       SetPlayerColor(playerid, COR_VAGOS);
	}
	else if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)//CV
	{
       SetPlayerColor(playerid, 0xF6000000);
	}
	else if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)//PCC
	{
       SetPlayerColor(playerid, 0xCCFF99FF);
	}
	else if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Sons
	{
       SetPlayerColor(playerid, COR_SONS);
	}
    else if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Bombeiros
	{
       SetPlayerColor(playerid, 0xFFA500AA);
	}
	else if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//Mayans
	{
       SetPlayerColor(playerid, 0xCCCC6666FFFF);
    }
	else //caso d� algum bug
	{
       SetPlayerColor(playerid, COLOR_WHITE);
	}
}
//---------------------------------------------------------

public GameModeInitExitFunc()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_Nenhum;
			GameTextForPlayer(i, "GMX...", 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			gPlayerLogged[i] = 0;
		}
	}
//	KillTimer(synctimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(turftimer);
	KillTimer(weaponhacktimer);
	KillTimer(tempoGranaTR);
	KillTimer(TempoAdministrador);
	OnPropUpdate();
	SaveIRC();
	SaveBoxer();
	SaveCars();
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}
public GameModeExitFunc()
{
//	KillTimer(synctimer);
	KillTimer(TempoAnGang);
	KillTimer(TempoAnMafia);
	KillTimer(TempoEquipargg);
	KillTimer(TempoAnAlqaeda);
	KillTimer(TempoRecarga);
	KillTimer(TempoAnTaliban);
	KillTimer(TempoAnPrefeito);
	KillTimer(TempoAnTaxi);
	KillTimer(TempoAnHitmans);
	KillTimer(TempoRelatoAdm);
	KillTimer(TempoAnmerce);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(stoppedvehtimer);
	KillTimer(turftimer);
	KillTimer(weaponhacktimer);
	KillTimer(tempoGranaTR);
	KillTimer(TempoAdministrador);
	KillTimer(TempoAn);
	KillTimer(TempoKitVip3);
	KillTimer(TempoKitVip2);
	KillTimer(TempoKitVip1);
	KillTimer(TempoCorrida);
	KillTimer(TempoSequestrar);
	KillTimer(TempoAmarrar);
	KillTimer(TempoServicoTaxi);
	KillTimer(TempoServicoOnibus);
	KillTimer(TempoServicoPolicia);
	KillTimer(TempoServicoMedico);
	KillTimer(TempoServicoMecanico);
	KillTimer(TempoMecanico);
	KillTimer(TempoMedico);
	KillTimer(TempoCorridaOni);
	KillTimer(TempoAnGov);
	KillTimer(TempoAnReporter);
	KillTimer(TempoSincronizar);
	KillTimer(Tempohbomba);
	KillTimer(Tempocbomba);
	OnPropUpdate();
	SaveIRC();
	SaveBoxer();
	SaveCars();
	GameModeExit();
}

public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[128];
	new File: file = fopen("Configs/boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveBoxer()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
	new File: file2 = fopen("Configs/boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[128];
	new File: file = fopen("Configs/stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveStuff()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d", Jackpot,Tax,TaxValue);
	new File: file2 = fopen("Configs/stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadIRC()
{
	new arrCoords[5][64];
	new strFromFile2[128];
	new File: file = fopen("Configs/channels.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(IRCInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(IRCInfo[idx][iAdmin], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(IRCInfo[idx][iMOTD], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(IRCInfo[idx][iPassword], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			IRCInfo[idx][iNeedPass] = strval(arrCoords[3]);
			IRCInfo[idx][iLock] = strval(arrCoords[4]);
			//printf("IRC:%d Admin:%s MOTD: %s Password: %s NeedPass: %d Lock: %d",idx,IRCInfo[idx][iAdmin],IRCInfo[idx][iMOTD],IRCInfo[idx][iPassword],IRCInfo[idx][iNeedPass],IRCInfo[idx][iLock]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

public SaveIRC()
{
	new idx;
	new File: file2;
	while (idx < sizeof(IRCInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%d|%d\n",
		IRCInfo[idx][iAdmin],
		IRCInfo[idx][iMOTD],
		IRCInfo[idx][iPassword],
		IRCInfo[idx][iNeedPass],
		IRCInfo[idx][iLock]);
		if(idx == 0)
		{
			file2 = fopen("Configs/channels.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/channels.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public LoadProperty()
{
	new arrCoords[30][64];
	new strFromFile2[256];
	new File: file = fopen("Configs/property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmorrx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmorry] = strval(arrCoords[10]);
			HouseInfo[idx][hArmorrz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
  	        if(HouseInfo[idx][hVec] == 457)
			{
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][hWorld] = strval(arrCoords[29]);
			idx++;
		}
		printf("[]: %d Casas Carregadas", idx);
		fclose(file);
	}
	return 1;
}

public LoadBizz()
{
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("Configs/bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			idx++;
		}
		printf("[]: %d Empresas Carregadas", idx);
		fclose(file);
	}
	return 1;
}


public LoadSBizz()
{
	new arrCoords[12][64];
	new strFromFile2[256];
	new File: file = fopen("Configs/sbizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			idx++;
		}
		printf("[]: %d Empresas Especiais Carregadas", idx);
		fclose(file);
	}
	return 1;
}
//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
    SetTimer("ChecarLife",500,true);
	getdate(v[0], v[1], v[2]);
	gettime(v[3], v[4], v[5]);
	print("\n---------------------------------------------------------");
	printf("Server Ligado: [%02d/%02d/%d %02d:%02d:%02d]", v[2], v[1], v[0], v[3], v[4], v[5]);
	print("---------------------------------------------------------\n");
	SetHora();
    print("-----------------------------");
	print("*** GM -  RPG Iniciado ***");
	print("-----------------------------");
//=====================================[INFOORG]================================//
    LoadOrgs();
//==============================================================================//
    SetTimer("GetHealthAndVerify",500,1);//sniper one shot
    LoadTrunk();
    LoadAdm();
    SetTimer("verping",5000,1);
    Create3DTextLabel("/camera", 0xF68E00F6, 256.470214,64.306282,1003.640625,60.0,0);
	Create3DTextLabel("Cofre da Lot�rica\nDigite /roubar Para Roubar",COLOR_WHITE,820.6042,8.3990,1004.1962,10.0,0);
	Create3DTextLabel("Cofre da Loja de Armas 1\nDigite /roubar Para Roubar",COLOR_WHITE,2169.1516,1589.9265,999.9713,10.0,0);
	Create3DTextLabel("Cofre da Loja de Armas 2\nDigite /roubar Para Roubar",COLOR_WHITE,451.3090,-79.8603,999.5547,10.0,0);
    Create3DTextLabel("Gin�sio de Lutas de LS\nAperte F para Mudar Luta",COLOR_WHITE,768.2192,-3.9873,1000.7203,15.0,0);
    Create3DTextLabel("Departamento de Policia\nAperte F para Entrar",COR_PM,1554.9537,-1675.6584,16.1953,30.0,0);//242.683380,66.394485,1003.640625
    Create3DTextLabel("Departamento de Policia\nAperte F para Entrar",COR_PM,2141.581298,-1801.804321,16.140625,30.0,0);////226.664031,71.706092,1005.039062 //FORA 1251.783813,-1676.179321,12.671875
    Create3DTextLabel("HQ FT/ROCAM\nAperte F para Entrar",COR_PM,226.664031,71.706092,1005.039062,30.0,0);
    Create3DTextLabel("Departamento de Policia\nAperte F para Entrar",COR_PM,1436.887084,-2434.720703,13.554687,30.0,0);
	Create3DTextLabel("HQ Aguias\nAperte F para Entrar",COR_PM,222.847656,69.905113,1005.039062,30.0,0);
	Create3DTextLabel("Departamento de Policia\nAperte F para Entrar",COR_PM,1251.783813,-1676.179321,12.671875,30.0,0);
	Create3DTextLabel("Patio RPP\nAperte F para Entrar",COR_PM,242.683380,66.394485,1003.640625,30.0,0);
    Create3DTextLabel("HQ Mayans\nAperte F para Entrar",COR_MAYANS,1387.302001,472.597137,20.097772,30.0,0);
	Create3DTextLabel("Loterica de Los Santos\nAperte F para Entrar",COLOR_WHITE,1631.9160,-1172.1013,24.0781,30.0,0);
    Create3DTextLabel("Agencia de Empregsos \nAperte F para Usar",COLOR_WHITE,361.8300,173.5202,1008.3828,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,2224.1819,-1141.8778,1025.7969,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,2232.2729,-1162.5684,25.8906,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,957.4735,-48.6141,1001.1172,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,1550.4686,-1669.6666,13.5624,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,229.6725,153.8311,1003.0234,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,241.0845,115.2740,1003.2188,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,321.4753,305.5962,999.1484,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,-1347.6376,499.9476,11.1953,15.0,0);
    Create3DTextLabel("Caixa Eletr�nico\nAperte F para Usar",COLOR_WHITE,1468.6473,-1767.3595,18.7958,15.0,0);
    Create3DTextLabel("Banco \nAperte F para Usar",COR_TAXI,2308.7908,-13.2499,26.7422,20.0,0);
    Create3DTextLabel("Mercado 24/7\nAperte F para Entrar",COLOR_WHITE,1833.6124,-1842.4968,13.5781,20.0,0);
    Create3DTextLabel("Mercado 24/7\nAperte F para Entrar",COLOR_WHITE,1000.5861,-919.8832,42.3281,20.0,0);
    Create3DTextLabel("Mercado 24/7\nAperte F para Entrar",COLOR_WHITE,1928.6006,-1776.4480,13.5469,20.0,0);
    Create3DTextLabel("Mercado 24/7\nAperte F para Entrar",COLOR_WHITE,1315.5110,-898.9860,39.5781,20.0,0);
    Create3DTextLabel("Mercado 24/7\nAperte F para Entrar",COLOR_WHITE,1352.3269,-1759.2491,13.5078,20.0,0);
    Create3DTextLabel("Prefeitura de LS\nAperte F para Entrar",COLOR_WHITE,1481.0386,-1772.3120,18.7958,40.0,0);
    Create3DTextLabel("Alhambra\nAperte F para Entrar",COLOR_WHITE,1837.0278,-1682.3890,13.3233,30.0,0);
    Create3DTextLabel("Menu COP\nAperte F Para Usar",COR_PM,255.028717,75.983047,1003.640625,3.0,0);//batercartao pm
    Create3DTextLabel("Menu COP\nAperte F Para Usar",COR_TAXI,-1616.1294,681.1594,7.1875,3.0,0);
    Create3DTextLabel("Menu COP\nAperte F Para Usar",COR_PM,230.1107,165.2237,1003.0234,3.0,0);//batercartao pc
  	Create3DTextLabel("Menu COP\nAperte F Para Usar",COR_PR,240.7396,112.9709,1003.2188,3.0,0);//batercartao bope
 	Create3DTextLabel("Menu COP\nAperte F Para Usar",COR_PM,1530.5187,-1702.5320,6.2252,3.0,0);//batercartao dp garagem
	Create3DTextLabel("Menu COP\nAperte F Para Usar",COLOR_LIGHTBLUE,-1345.8823,492.5301,11.2027,3.0,0);
	Create3DTextLabel("Menu COP\nAperte F Para Usar",COLOR_LIGHTBLUE,326.4911,307.0710,999.1484,3.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte F para Usar",COLOR_WHITE,2152.4727,-1014.0005,62.8375,20.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte F para Usar",COLOR_WHITE,1450.4479,-2287.0803,13.5469,20.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte F para Usar",COLOR_WHITE,1919.1384,-1415.4775,13.5703,20.0,0);
	Create3DTextLabel("Menu de Drogas\nAperte F para Usar",COLOR_WHITE,1123.7664,-1506.4692,15.7869,20.0,0);
    Create3DTextLabel("Menu da Mafia\nAperte F para Usar",COLOR_WHITE,-2648.0940,1396.4666,906.4609,20.0,0);
	Create3DTextLabel("Menu da Mafia\nAperte F para Usar",COLOR_WHITE,811.9582,-1100.8458,25.7857,20.0,0);
	Create3DTextLabel("Menu da Mafia\nAperte F para Usar",COLOR_WHITE,675.0947,-1275.7603,13.6334,20.0,0);
	Create3DTextLabel("Menu da Mafia\nAperte F para Usar",COLOR_WHITE,1738.6844,-1944.9553,13.5647,20.0,0);
	Create3DTextLabel("Loja de Roupas Binco\nAperte F para Entrar",COLOR_WHITE,2244.3423,-1665.5542,15.4766,20.0,0);
	Create3DTextLabel("Loja de Roupas ZIP\nAperte F para Entrar",COLOR_WHITE,461.3484,-1500.9084,31.0592,20.0,0);
	Create3DTextLabel("The Pig Pen\nAperte F para Entrar",COLOR_WHITE,2421.4998,-1219.2438,25.5617,20.0,0);
	Create3DTextLabel("Gin�sio de Lutas de LS\nAperte F para Entrar",COLOR_WHITE,2229.9011,-1721.2582,13.5613,20.0,0);
	Create3DTextLabel("Burguer Shot\nAperte F para Entrar",COLOR_WHITE,1200.4497,-918.7695,43.1105,20.0,0);
	Create3DTextLabel("Burguer Shot\nAperte F para Entrar",COLOR_WHITE,810.4855,-1616.1888,13.5469,20.0,0);
	Create3DTextLabel("Cluckin Bell\nAperte F para Entrar",COLOR_WHITE,927.6217,-1353.0105,13.3438,20.0,0);
	Create3DTextLabel("Pizzaria\nAperte F para Entrar",COR_TAXI,2105.4858,-1806.4725,13.5547,20.0,0);
	Create3DTextLabel("Bar\nAperte F para Entrar",COLOR_WHITE,975.4691,-1335.9618,13.5319,20.0,0);
	Create3DTextLabel("HQ Vagos\nAperte F para Entrar",COR_VAGOS,2808.1106,-1189.6528,25.3436,20.0,0);
	Create3DTextLabel("HQ Yakuza\nAperte F para Entrar",COR_YAK,691.5710,-1276.1722,13.5607,20.0,0);
	Create3DTextLabel("HQ Cosa Nostra\nAperte F para Entrar",COR_COSA,1497.0920,-687.8906,95.5633,20.0,0);
	Create3DTextLabel("DP 2�CIA\nAperte F Para Entrar",COR_PM,-49.8844,-269.3635,6.6332,20.0,0);
	Create3DTextLabel("DP ROTA\nAperte F Para Entrar",COR_PR,-516.225769,-540.458801,25.523437,20.0,0);//226.685791,75.651794,1005.039062
	Create3DTextLabel("DP 1�CIA\nAperte F Para Entrar",COR_PM,329.849212,-1513.072753,36.039062,20.0,0);
	Create3DTextLabel("Patio 2�CIA\n Aperte F Para Entrar",COR_PM,226.685791,75.651794,1005.039062,20.0,0);
	Create3DTextLabel("HQ Ballas\nAperte Enter F Entrar",COR_BALLAS,1154.945312,-1180.919067,32.818702,20.0,0);
	Create3DTextLabel("HQ Groove Street\nAperte F Para Entrar",COR_GRO,2495.3481,-1691.1355,14.7656,20.0,0);
	Create3DTextLabel("HQ Hitmans\nAperte F Para Entrar",COR_HITMAN,1519.1189,-1453.4194,15.2068,20.0,0);
    Create3DTextLabel("HQ Comando Vermelho\nAperte F para Entrar",COLOR_RED,2446.484130,-2133.511718,17.271224,10.0,0);
    Create3DTextLabel("HQ Sons\nAperte F para Entrar",COR_SONS,681.533081,-474.036895,16.536296,10.0,0);
	Create3DTextLabel("Equipar Mancha Verde\nDigite /equipar Para Equipar",COLOR_GREEN,414.5280,2531.5229,19.1648,15.0,0);
	Create3DTextLabel("Equipar Gavi�es\nDigite /equipar Para Equipar",COR_PF,2743.6855,-2453.9363,13.8623,15.0,0);
    Create3DTextLabel("Menu de Compras\nAperte F para Usar",COLOR_WHITE,-26.8819,-89.6936,1003.5469,15.0,0);
	Create3DTextLabel("Menu de Compras\nAperte F para Usar",COLOR_WHITE,-22.2540,-55.6456,1003.5469,15.0,0);
    Create3DTextLabel("Menu de Compras\nAperte F para Usar",COLOR_WHITE,-22.3265,-138.4765,1003.5469,15.0,0);
	Create3DTextLabel("Menu de Compras\nAperte F para Usar",COLOR_WHITE,-30.3140,-28.3121,1003.5573,15.0,0);//256.983581,69.716331,1003.640625
	Create3DTextLabel("Elevador do 1�CIA\nAperte F para Usar",COLOR_LIGHTBLUE,317.432586,-1508.513305,24.921875,8.0,0);
	Create3DTextLabel("Elevador do 1�CIA\nAperte F para Usar",COLOR_LIGHTBLUE,281.186676,187.751251,1007.171875,8.0,0);
	Create3DTextLabel("Elevador do 1�CIA\nAperte F para Usar",COLOR_LIGHTBLUE,352.539306,-1487.491455,76.539062,8.0,0);//376.6777093,-117.256324,1001.492187
//---------------------------ESTADIO-------------------
	Create3DTextLabel("ENTRADA EST�DIO\nSETOR VISITANTE : A\nAPERTE F PARA ENTRAR",COR_GRO,1415.986450,2081.287353,11.001956,8.0,0);
    Create3DTextLabel("SA�DA EST�DIO\nSETOR VISITANTE : A\nAPERTE F PARA SAIR",COR_GRO,1412.411621,2107.549072,12.015625,8.0,0);
    Create3DTextLabel("ENTRADA EST�DIO\nSETOR VISITANTE : B\nAPERTE F PARA ENTRAR",COR_GRO,1414.505981,2091.894042,10.987495,8.0,0);
    Create3DTextLabel("SA�DA EST�DIO\nSETOR VISITANTE : B\nAPERTE F PARA SAIR",COR_GRO,1411.984497,2136.969238,12.015625,8.0,0);
 //------------------------MANDANTE--------------------
 	Create3DTextLabel("ENTRADA EST�DIO\nSETOR : A\nAPERTE F PARA ENTRAR",COLOR_LIGHTRED,1407.139770,2224.772460,11.023437,8.0,0);
 	Create3DTextLabel("SA�DA EST�DIO\nSETOR : A\nAPERTE F PARA SAIR",COLOR_LIGHTRED,1376.889282,2213.066650,12.015625,8.0,0);
 	Create3DTextLabel("ENTRADA EST�DIO\nSETOR : B\nAPERTE F PARA ENTRAR",COLOR_LIGHTRED,1416.666381,2234.695800,11.023437,8.0,0);
 	Create3DTextLabel("SA�DA EST�DIO\nSETOR : B\nAPERTE F PARA SAIR",COLOR_LIGHTRED,1346.831176,2214.051025,12.015625,8.0,0);
 	Create3DTextLabel("ENTRADA EST�DIO\nSETOR : C\nAPERTE F PARA ENTRAR",COLOR_LIGHTRED,1432.986938,2238.284912,11.023437,8.0,0);
 	Create3DTextLabel("SA�DA EST�DIO\nSETOR : C\nAPERTE F PARA SAIR",COLOR_LIGHTRED,1317.040283,2214.078125,12.015625,8.0,0);
//----------------------------FIM----------------------
	Create3DTextLabel("Cofre de Roubo\nDigite /roubar",COLOR_LIGHTBLUE,376.6777093,-117.256324,1001.492187,8.0,0);//376.6777093,-117.256324,1001.492187
    Create3DTextLabel("Caixa do Bar\nDigite /roubar",COLOR_LIGHTBLUE,380.722869,-189.095291,1000.632812,8.0,0);
	Create3DTextLabel("Elevador da DP\nAperte F para Usar",COLOR_LIGHTBLUE,1524.4977,-1677.9469,6.2188,8.0,0);
	Create3DTextLabel("Elevador da DP\nAperte F para Usar",COLOR_LIGHTBLUE,1565.1235,-1666.9944,28.3956,8.0,0);//352.539306,-1487.491455,76.539062
	Create3DTextLabel("Elevador da DP\nAperte F para Usar",COLOR_LIGHTBLUE,246.2975,87.4735,1003.6406,8.0,0);//281.186676,187.751251,1007.171875
	Create3DTextLabel("Menu de Comprar Licencas\nAperte F para Usar",COLOR_LIGHTBLUE,1490.2411,1307.2179,1093.2891,10.0,0);
	Create3DTextLabel("Menu de Comprar Armas\nAperte F para Usar",COLOR_LIGHTBLUE,2176.6519,1619.0439,999.9766,8.0,0);
	Create3DTextLabel("Menu de Comprar Armas\nAperte F para Usar",COLOR_LIGHTBLUE,437.1187,-82.9036,999.5547,8.0,0);
	Create3DTextLabel("Menu de Pegar Materiais\nAperte F para Usar",COLOR_WHITE,2026.2104,-1896.1097,13.5469,10,0);
	Create3DTextLabel("Menu de Pegar Materiais\nAperte F para Usar",COLOR_WHITE,1240.5569,-2036.9919,59.9709,10,0);
	Create3DTextLabel("Trocar Materiais\nAperte F para Trocar",COLOR_WHITE,1990.8590,-1996.3722,13.5469,10,0);
	Create3DTextLabel("Trocar Materiais\nAperte F para Trocar",COLOR_WHITE,1240.5569,-2036.9919,59.9709,10,0);
	Create3DTextLabel("Cura do Hospital\nDigite /curarme Para Se Curar",COLOR_WHITE,1173.2563,-1323.3102,15.3943,8,0);
	Create3DTextLabel("Cura do Hospital\nDigite /curarme Para Se Curar",COLOR_WHITE,2029.5945,-1404.6426,17.2512,8,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_PM,253.9280,69.6094,1003.6406,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_PR,259.2474,120.3977,1003.2188,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COR_EXE,198.9671,168.1982,1003.0234,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COLOR_LIGHTBLUE,234.8419,111.2194,1003.2257,7,0);
	Create3DTextLabel("Limpar Ficha\nDigite /limpar Para Limpar",COLOR_LIGHTBLUE,326.8282,304.4166,999.1484,7,0);//952.759521,-910.921081,45.765625
    Create3DTextLabel("Departamento de Policia",COLOR_LIGHTBLUE,952.759521,-910.921081,45.765625,7,0);
	Create3DTextLabel("Menu de Compras\nAperte F para Usar",COLOR_WHITE,663.8588,-568.4162,16.3433,10.0,0);
    Create3DTextLabel("Mercadinho\nAperte F para Entrar",COLOR_WHITE,1155.2476,-1771.8840,16.5992,10.0,0);
    Create3DTextLabel("Puteiro\nAperte F para Entrar",COLOR_WHITE,940.7294,-1716.7537,13.9437,10.0,0);
    Create3DTextLabel("Senhor o(a) Seguran�a\nDigite /eqpseg para Equipar",COR_TAXI,2035.6538,-1308.3475,20.8969,10.0,0);
    Create3DTextLabel("Bem Vindo ao \n Games\n",COR_TAXI,1685.823486,-2335.253906,-2.679687,10.0,0);
	//EQUIPAR GANG'S!
	Create3DTextLabel("Equipar Groove\nAperte F Para Equipar",COR_3DLABEL,2491.1277,-1700.4899,1014.7423,7.0,0);
    Create3DTextLabel("Equipar Ballas\nAperte F Para Equipar",COR_3DLABEL,317.137603,1122.749511,1083.882812,7.0,0);
    Create3DTextLabel("Equipar TCP\nAperte F Para Equipar",COR_3DLABEL,2812.1809,-1171.3807,1025.5703,7.0,0);
    Create3DTextLabel("Equipar Los Vagos\nAperte F Para Equipar",COR_3DLABEL,2348.5645,-1187.6134,1027.9766,7.0,0);
    Create3DTextLabel("Equipar Comando Vermelho\nAperte F Para Equipar",COR_3DLABEL,2313.2839,-1210.2729,1049.0234,7.0,0);
    Create3DTextLabel("Equipar Los Tugas\nAperte F Para Equipar",COR_3DLABEL,1315.9127,-875.0526,39.5781,7.0,0);
    Create3DTextLabel("Equipar Sons\nAperte F Para Equipar",COR_3DLABEL,511.4794,-80.1098,998.9609,7.0,0);
    Create3DTextLabel("Equipar Mayans\nAperte F Para Equipar",COR_3DLABEL,-222.913253,1411.271606,27.773437,7.0,0);

   	SetTimer("SendMensagens", 200000, 1);
	tempoGranaTR = SetTimer("GranaTerritorios", 300000, 1);
    weaponhacktimer = SetTimer("CheckHack",1000,1);
    antixiter = 0;
    SetTimer("Velocimetro", 1000, 1);
    new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
	for(new c=0;c<CAR_AMOUNT;c++)
	{
		Gas[c] = GasMax;
	}
	donoestacao = 0;
	donocasarao = 0;
	donoFavela = 0;
	donoskate = 0;
	LoadProperty();
	LoadBizz();
	LoadSBizz();
	LoadBoxer();
	LoadStuff();
	LoadIRC();
	LoadCar();
	PlayerHaul[390][pCapasity] = 100;
	PlayerHaul[391][pCapasity] = 100;
	PlayerHaul[392][pCapasity] = 50;
	PlayerHaul[393][pCapasity] = 50;
	//LoadVendas();
	IRCInfo[0][iPlayers] = 0; IRCInfo[1][iPlayers] = 0; IRCInfo[2][iPlayers] = 0;
	IRCInfo[3][iPlayers] = 0; IRCInfo[4][iPlayers] = 0; IRCInfo[5][iPlayers] = 0;
	IRCInfo[6][iPlayers] = 0; IRCInfo[7][iPlayers] = 0; IRCInfo[8][iPlayers] = 0;
	IRCInfo[9][iPlayers] = 0;
	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nenhum");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "Nenhum");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);
	LoadVip();
	SetGameModeText(" RPG: Brasil");
	SendRconCommand("hostname [] Brasil Hard Life [RPG v1.0]");
	SetTimer("RandomServerNames",2000,1);
	SendRconCommand("mapname Brasil RPG");
	ShowPlayerMarkers(0);
	AllowInteriorWeapons(1);
	AllowAdminTeleport(1);
	DisableInteriorEnterExits();
	UsePlayerPedAnims();
	// CreatedCars check
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
	    CreatedCars[i] = 0;
	}
	// Player Class's
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
	//Create3dTexts();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
			AddStaticPickup(1273, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			format(gstring, sizeof(gstring), "Casa A Venda\nTipo: %s\nValor: R$%d\nNivel: %d\nPara comprar digite /comprarcasa",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
			HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			AddStaticPickup(1318, 2, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]);
			if(HouseInfo[h][hRentabil] == 0)
			{
				format(gstring, sizeof(gstring), "Dono: %s\nNivel: %d",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
			else
			{
				format(gstring, sizeof(gstring), "Dono: %s\nAluguel: R$%d\nNivel: %d\nDigite /alugarquarto para alugar um quarto",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
		}
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		if(BizzInfo[h][bOwned] == 0)
		{
			AddStaticPickup(1272, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
			format(gstring, sizeof(gstring), "%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\nPara comprar digite /compraremp",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded]);
			BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
			AddStaticPickup(1318, 2, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]);
   			format(gstring, sizeof(gstring), "%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nAperte Enter Para Entrar",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded]);
   			BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		if(SBizzInfo[h][sbOwned] == 0)
		{
			AddStaticPickup(1272, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			format(gstring, sizeof(gstring), "%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\nPara comprar digite /compraremp",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
			AddStaticPickup(1318, 2, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]);
			format(gstring, sizeof(gstring), "%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nAperte Enter Para Entrar",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
	}
//--------------------------------------ESTADIO------------------------------------
	AddStaticPickup(1318, 23, 1415.986450,2081.287353,11.001956) ; //SETOR VISITANTE : A
	AddStaticPickup(1318, 23, 1412.411621,2107.549072,12.015625) ; //INTERNO : A
	AddStaticPickup(1318, 23, 1414.505981,2091.894042,10.987495) ; //SETOR VISITANTE : B
	AddStaticPickup(1318, 23, 1411.984497,2136.969238,12.015625) ; //INTERNO : B
//--------------------------------------MANDANTE------------------------------------
	AddStaticPickup(1318, 23, 1407.139770,2224.772460,11.023437) ; //SETOR : A
	AddStaticPickup(1318, 23, 1376.889282,2213.066650,12.015625) ; //INTERNO : A
	AddStaticPickup(1318, 23, 1416.666381,2234.695800,11.023437) ; //SETOR : B
	AddStaticPickup(1318, 23, 1346.831176,2214.051025,12.015625) ; //INTERNO : B
	AddStaticPickup(1318, 23, 1432.986938,2238.284912,11.023437) ; //SETOR : C
	AddStaticPickup(1318, 23, 1317.040283,2214.078125,12.015625) ; //INTERNO : C
//------------------------------------FIM ESTADIO----------------------------------
    AddStaticPickup(1318, 23, 380.722869,-189.095291,1000.632812) ;//caixa BAR
	AddStaticPickup(1318, 23, 256.470214,64.306282,1003.640625);
	AddStaticPickup(1318, 23, 414.5280,2531.5229,19.1648); //equipar alqaeda
	AddStaticPickup(1318, 23, 2446.484130,-2133.511718,17.271224) ; // Entrada HQ Comando Vermelho
	AddStaticPickup(1318, 23, 2141.581298,-1801.804321,16.140625) ; //entrada hq RPP//242.683380,66.394485,1003.640625
	AddStaticPickup(1318, 23, 1326.737915,-888.341552,39.578125) ; // Entrada HQ //226.664031,71.706092,1005.039062 //FORA 1251.783813,-1676.179321,12.671875
	AddStaticPickup(1318, 23, 1436.887084,-2434.720703,13.554687) ;
	AddStaticPickup(1318, 23, 222.847656,69.905113,1005.039062) ;
	AddStaticPickup(1318, 23, 226.664031,71.706092,1005.039062) ;
    AddStaticPickup(1318, 23, 1251.783813,-1676.179321,12.671875) ;
	AddStaticPickup(1318, 23, 1387.302001,472.597137,20.097772) ; //Entrada HQ MAYANS
	AddStaticPickup(1318, 23, 242.683380,66.394485,1003.640625) ; //entrada hq RPP//242.683380,66.394485,1003.640625
	AddStaticPickup(1318, 23, 246.2975,87.4735,1003.6406); //dp cops ou alguma coisa assim//952.759521,-910.921081,45.765625
 	AddStaticPickup(1318, 23, 226.685791,75.651794,1005.039062);//226.685791,75.651794,1005.039062
    AddStaticPickup(1318, 23, 952.759521,-910.921081,45.765625);
	AddStaticPickup(1318, 23, 329.398376,-1512.972412,36.039062); //entrada 1�CIA
	AddStaticPickup(1318, 23, 281.186676,187.751251,1007.171875); //elevador garagem 23�376.6777093,-117.256324,1001.492187
	AddStaticPickup(1318, 23, 376.6777093,-117.256324,1001.492187);
	//portaodpauto = CreatePickup(1210, 0, 246.4286,73.8840,1003.6406); //Dp Auto
//=======================[Lojas]===========================================//
    AddStaticPickup(351,23,2176.6519,1619.0439,999.9766); // loja de armas 1
    AddStaticPickup(351,23,437.1187,-82.9036,999.5547); // loja de armas 2
    AddStaticPickup(1241,23,-22.2540,-55.6456,1003.5469); // loja 24s/7
    AddStaticPickup(1241,23,-26.8819,-89.6936,1003.5469); // loja 24s/7
    AddStaticPickup(1241,23,-22.3265,-138.4765,1003.5469); // loja 24s/7
    AddStaticPickup(1241,23,-30.3140,-28.3121,1003.5573); // loja 24s/7
    AddStaticPickup(1241,23,663.8588,-568.4162,16.3433); //loja 24s/7 DP
    AddStaticPickup(1318,23,1155.2476,-1771.8840,16.5992); //Hiper Mercado perto loja 2
//======================================================================//
	AddStaticPickup(1277, 23, 1490.2411,1307.2179,1093.2891); //licencas
	AddStaticPickup(1318, 23, 1468.6473,-1767.3595,18.7958); //caixa prefeitura
	AddStaticPickup(1210, 23, 361.8300,173.5202,1008.3828); //Empregsos
	AddStaticPickup(1240, 23, 1173.2563,-1323.3102,15.3943); //Hospital 1 near Ammu
	AddStaticPickup(1240, 23, 2029.5945,-1404.6426,17.2512); //Hospital 2 near speedway
	AddStaticPickup(1318, 23, 1481.0386,-1772.3120,18.7958); //City Hall
	AddStaticPickup(2060, 23, 2026.2104,-1896.1097,13.5469); //Pacotes de Material
	AddStaticPickup(2060, 23, 1990.8590,-1996.3722,13.5469); //Fabrica de Material
	AddStaticPickup(371, 23, 1545.2,-1353.4,329.4); //LS towertop
	AddStaticPickup(371, 23, 1536.0, -1360.0, 1150.0); //LS towertop
	AddStaticPickup(1242, 23, 1527.5,-12.1,1002.0); //binco armor
	AddStaticPickup(1240, 23, 279.3000,1853.5619,8.7649); //area51 health
	AddStaticPickup(1318, 23,259.2474,120.3977,1003.2188);// /limpar
	AddStaticPickup(1318, 23,234.8461,111.1823,1003.2257);// /limpar
	AddStaticPickup(1318,23,317.432586,-1508.513305,24.921875);//e1�CIA
	AddStaticPickup(1318,23,352.539306,-1487.491455,76.539062);//e1�CIA
	AddStaticPickup(1318,23,1524.4977,-1677.9469,6.2188); //epm
	AddStaticPickup(1318,23,1565.1235,-1666.9944,28.3956); //epm//352.539306,-1487.491455,76.539062
	AddStaticPickup(1314,23,1800.1144,-1707.2678,13.5328); //ebomb subir
	AddStaticPickup(1314,23,1797.9764,-1706.7866,27.6250); //ebomb descer
	AddStaticPickup(1318,23,2268.0308,2449.0750,3.5313); //Subirlv
	AddStaticPickup(1318,23,2267.2820,2458.2598,38.6837); //Descerlv
	AddStaticPickup(2060,23,811.9582,-1100.8458,25.7857); //Mafia - Pegar
	AddStaticPickup(1314,23,1327.1804,-885.2955,39.5781); //elevador PCC
	AddStaticPickup(1314,23,1324.3936,-890.1075,45.2266); //elevador Pcc
	AddStaticPickup(1314,23,-50.6012,-233.2422,6.7646); //Elevador PC Subir
	AddStaticPickup(1314,23,-54.6216,-237.0123,31.5678); //Elevador PC Descer
	AddStaticPickup(2060,23,1240.5569,-2036.9919,59.9709);// Trocar Materias M�fias
// entradas e saidas
	AddStaticPickup(1318, 23, 2808.1106,-1189.6528,25.3436); //HQ VAGOS
	AddStaticPickup(1247, 23, 1554.9537,-1675.6584,16.1953);//DP PM
	AddStaticPickup(1247, 23, -49.8844,-269.3635,6.6332);//Entrada Interior HQ PC
	AddStaticPickup(1247, 23, 1545.4073,-1607.9791,13.3828);//DP Prender
	AddStaticPickup(1247, 23, 2223.687744,-1169.967041,25.726562); // pr garagem//324.3141
	AddStaticPickup(1318, 23, 1836.4064,-1682.4403,13.3493);//Alhabra
	AddStaticPickup(1247, 23, -516.225769,-540.458801,25.523437);//DP rota
	AddStaticPickup(1318, 23, 975.4691,-1335.9618,13.5319);//Bar Pawno
	AddStaticPickup(1318, 23, 2229.9011,-1721.2582,13.5613);//Ganton gym
	AddStaticPickup(1318, 23, 2421.4998,-1219.2438,25.5617);//Pig Pen
	AddStaticPickup(1318, 23, 2419.9941,-1509.5865,24.0000);//Cluckin bell under it
	AddStaticPickup(1318, 23, 2398.6240,-1899.2014,13.5469);//Cluckin bell next to 10 green
	AddStaticPickup(1318, 23, 810.5328,-1616.1392,13.5469);//Marina burger
	AddStaticPickup(1318, 23, 927.6217,-1353.0105,13.3438);//Cluckin Bell
	AddStaticPickup(1318, 23, 1200.4232,-918.5194,43.1125);//Vinewood burger
	AddStaticPickup(1318, 23, 1833.6124,-1842.4968,13.5781);//24/7 esta��o entrada
	AddStaticPickup(1318, 23, 1315.5110,-898.9860,39.5781);//24/7 perto madd dogg
	AddStaticPickup(1318, 23, 1000.5861,-919.8832,42.3281);//24/7 gas station vinewood
	AddStaticPickup(1318, 23, 1928.6006,-1776.4480,13.5469);//24/7 posto sul
	AddStaticPickup(1318, 23, -25.1326,-141.0670,1003.5469); // 24-7 Exit
	AddStaticPickup(1318, 23, 1352.3269,-1759.2491,13.5078);//24/7 Near DMV
	AddStaticPickup(1318, 23, 1833.6124,-1842.4968,13.5781);//24/7 Near 8-Ball
	AddStaticPickup(1318, 23, 203.5140,-202.2578,1.5781); //Pizza stack at BlueBerry
	AddStaticPickup(1318, 23, 1570.3828,-1333.8882,16.4844); // Building next ABC
	AddStaticPickup(1318, 2, 2495.3481,-1691.1355,14.7656); // Grove HQ
    AddStaticPickup(1274, 1, 1929.5409,-1785.1664,13.5469); // Caixa Eletronico 1
    AddStaticPickup(1274, 1, 2232.2886,-1162.6107,25.8906); // Caixa Eletronico 2
    AddStaticPickup(1274, 1, 1550.4796,-1669.7039,13.5624); // Caixa Eletronico 3
    AddStaticPickup(1279, 23, 2152.4727,-1014.0005,62.8375); //Drogas Favela
    AddStaticPickup(1279, 23, 1919.1384,-1415.4775,13.5703); // Drogas Skate
    AddStaticPickup(1318, 23, 252.5820,69.7423,1003.6406) ; // Limpar DP
    AddStaticPickup(1247, 23, 226.316390,114.585769,999.015625) ; // PrenderCadeia B.O.P.E
    AddStaticPickup(1247, 23, 197.2681,179.3594,1003.0234) ; // PrenderCadeia PC//1232.239501,-1646.248901,11.796875
    AddStaticPickup(1247, 23, 1232.239501,-1646.248901,11.796875) ; //Prender FT/ROCAM
	AddStaticPickup(1247, 23, 268.2967,77.5858,1001.0391) ; // PrenderCadeia PM
    AddStaticPickup(1242, 23, -222.913253,1411.271606,27.773437) ;
	AddStaticPickup(1318, 23, 607.7161,-1459.0728,14.3895) ; // Hq Taxista Interior
    AddStaticPickup(1314, 23, 599.3150,-1520.4652,15.0129) ; // Evelador inativo Taxi 1
    AddStaticPickup(1314, 23, 594.9153,-1528.5319,30.8906) ; // Elevador inativo Taxi 2
   	AddStaticPickup(1318, 23, 675.0947,-1275.7603,13.6334) ; // Esconder Materiais Yakuza
   	AddStaticPickup(1318, 23, 256.0320,84.5082,1002.4453) ; // Autoriza��o
   	AddStaticPickup(1247, 23, 195.5733,158.4008,1003.0234) ; // PRENDER PF
   	AddStaticPickup(1210, 23, 355.2333,169.3552,1025.7891); // DarTaxa
   	AddStaticPickup(1210, 23, 367.3167,162.2013,1025.7891); // Portao Prefeitura
   	AddStaticPickup(1314, 23, 1173.4185,-1361.2090,13.9694) ; // HQ MEDICOS EMBAIXO
   	AddStaticPickup(1314, 23, 1169.0085,-1329.3441,31.4640) ; // HQ MEDICOS EM CIMA
   	AddStaticPickup(1314, 23, 2522.9346,-1679.4137,15.4970) ; // HQ MEDICOS EMBAIXO
   	AddStaticPickup(1314, 23, 2524.4297,-1681.8153,19.9302) ; // HQ MEDICOS EM CIMA
   	AddStaticPickup(1318, 23, 2232.9934,-1333.1924,23.9815) ; // IGREJA
   	AddStaticPickup(1247, 23, -1298.8188,490.5014,11.1953) ; // PRENDER EXERCITO
   	AddStaticPickup(1318, 23, 1631.9160,-1172.1013,24.0781) ; // Acesso Restrito Lot�rica
   	AddStaticPickup(1274, 23, 820.6042,8.3990,1004.1962) ; // Roubo Lot�rica
   	//AddStaticPickup(1274, 23, 354.6608,172.0170,1008.3802) ; // Roubo prefeitura
   	AddStaticPickup(1314, 23, 2139.7847,-1176.8256,23.9922) ; // Elevador Aluguel 1
   	AddStaticPickup(1314, 23, 2138.6680,-1168.9967,28.1484) ; // Elevador Aluguel 2
   	AddStaticPickup(1318, 23, 1991.7828,-1183.4724,20.5116) ; // Pescar Parque Gleen 1
   	AddStaticPickup(1318, 23, 1948.1309,-1215.2512,20.5019) ; // Pescar Parque Gleen 2
   	AddStaticPickup(1318, 23, 839.8817,-1339.4336,7.1719) ; // Orelhao Esta��o Civil
   	//AddStaticPickup(1318, 23, 329.684967,-1513.140380,36.039062) ; // Interior Policia Federal
   	AddStaticPickup(1318, 23, 198.9671,168.1982,1003.0234) ; // Limpar PC
   	AddStaticPickup(1318, 23, 198.9671,168.1982,1003.0234) ; // Limpar PF
   	AddStaticPickup(1314, 23, 768.2192,-3.9873,1000.7203); // mudarluta
   	AddStaticPickup(1274, 23, 2224.1484,-1141.8772,1025.7969); // Caixa Eletronico em lol
	AddStaticPickup(1274, 23, 2308.7908,-13.2499,26.7422); // Banco Los Santos($)
	AddStaticPickup(1274, 23, 2169.1516,1589.9265,999.9713); // Roubo Loja de Armas 1($)
	AddStaticPickup(1274, 23, 451.3090,-79.8603,999.5547); // Roubo Loja de Armas 2($)
	AddStaticPickup(1318, 23, 2104.8252,-1806.5239,13.5547) ; // Pickup Entrada Pizza
	AddStaticPickup(1247, 23, 195.5733,158.4008,1003.0234); //prender novo//949.977416,-916.785461,45.213710
	AddStaticPickup(1247, 23, 2154.763183,-1793.105957,13.536571); //Prender 1�Cia
	AddStaticPickup(1247, 23, 949.977416,-916.785461,45.213710);
	AddStaticPickup(1274, 23, 229.6725,153.8311,1003.0234); //CAIXA PC
	AddStaticPickup(1274, 23, 241.0845,115.2740,1003.2188); //CAIXA BOPE
	//AddStaticPickup(1274, 23, 321.4753,305.5962,999.1484); //CAIXA PF
	AddStaticPickup(1274, 23, -1347.6376,499.9476,11.1953); //CAIXA EXE
    AddStaticPickup(1239, 23, 822.0201,5.2154,1004.1797); // coisa lot 3
    AddStaticPickup(1239, 23, 822.0099,6.3927,1004.1797); // coisa lot 4
    AddStaticPickup(1239, 23, 822.0237,1.7826,1004.1797); // coisa lot 2
    AddStaticPickup(1239, 23, 822.0087,-0.1116,1004.1797); // coisa lot 1
    AddStaticPickup(1277, 23, 1685.823486,-2335.253906,-2.679687);//Spawn Civil
    //==========================[Entradas]==============================//
    AddStaticPickup(1275, 23, 461.3484,-1500.9084,31.0592); // Entrada ZIP
   	//AddStaticPickup(1318, 23, 2233.2659,-1159.8256,25.8906); // Entrada Hotel
   	AddStaticPickup(1318, 23, 1497.0920,-687.8906,95.5633); // Entrada M�fia Cosa Nostra
    AddStaticPickup(1318, 23, 1715.349975,-2137.490966,13.546875) ; // Entrada HQ Los TCP
	AddStaticPickup(1318, 23, 1154.945312,-1180.919067,32.818702) ; // Entrada HQ Ballas45134
    AddStaticPickup(1318, 23, 1519.1189,-1453.4194,15.2068) ; // Entrada HQ Hitmans
    AddStaticPickup(1318, 23, 2455.3716,-1706.0787,1013.5078) ; // Sa�da HQ Hitmans
    AddStaticPickup(1318, 23, 681.533081,-474.036895,16.536296) ; // Entrada HQ Sons
    AddStaticPickup(1275, 23, 2244.3423,-1665.5542,15.4766);//Entrada Binco
    AddStaticPickup(1318, 23, 940.7294,-1716.7537,13.9437);//Entrada Puteiro
    //========================[Equipamentos hqs]=========================//
    AddStaticPickup(1318, 23, 1527.3462,-1466.2982,9.5000); //equipar hitman
    AddStaticPickup(1242, 23, 2743.6855,-2453.9363,13.8623) ; // equipar taliban
    AddStaticPickup(2060,23,-2648.0940,1396.4666,906.4609);// Equipar M�fia Cosa Nostra
    AddStaticPickup(1242,23,2035.6538,-1308.3475,20.8969); //Equipar Seguran�as
    //=========================[Gangsters]===================================//
    AddStaticPickup(1242,23,317.137603,1122.749511,1083.882812); //Equiparballas
    AddStaticPickup(1242,23,2812.1809,-1171.3807,1025.5703); //EquiparTCP
    AddStaticPickup(1242,23,2348.5645,-1187.6134,1027.9766); //Equiparvagos
    AddStaticPickup(1242,23,2313.2839,-1210.2729,1049.0234); //Equiparcv
    AddStaticPickup(1242,23,1315.9127,-875.0526,39.5781); //EquiparPCC
    AddStaticPickup(1242,23,2491.1277,-1700.4899,1014.7423); //Equipargroove
    AddStaticPickup(1242,23,511.4794,-80.1098,998.9609); //Equiparsons
    //=========================[Policiais]===================================//
    //AddStaticPickup(1242, 23, -2445.167236,528.855773,29.920164) ; // Equipar B.O.P.E Garagem
    AddStaticPickup(1242, 23, 240.477310,112.732933,1003.218750) ; // Equipar B.O.P.E
    AddStaticPickup(1242, 23, 1530.5187,-1702.5320,6.2252) ; // Equipar DP Garagem
    AddStaticPickup(1242, 23, 229.8216,165.0319,1003.0234) ; // Equipar PC
    AddStaticPickup(1242, 23, 255.1110,76.0224,1003.6406) ; // Equipar DP
    AddStaticPickup(1242, 23, 262.700469,186.729431,1008.171875) ; // EQUIPAR PF
    AddStaticPickup(1242, 23, -1345.8823,492.5301,11.2027) ; // Equipar Ex�rcito
    AddStaticPickup(1242,23,346.1226,161.8205,1025.7964); //EquiparGov

	// Quebra Molas Rua DP
    F_CreateDynamicObject(3502, 1509.2161865234, -1592.3577880859, 10.920000076294, 0, 0, 0, 300.0);
    F_CreateDynamicObject(3502, 1549.9202880859, -1592.4661865234, 10.920000076294, 0, 0, 0, 300.0);
    F_CreateDynamicObject(3502, 1549.0341796875, -1732.4117431641, 10.920000076294, 0, 0, 0, 300.0);
    F_CreateDynamicObject(3502, 1509.9141845703, -1732.4991455078, 10.920000076294, 0, 0, 0, 300.0);
	//FAVELA PRESUNTO
    CreateDynamicObject(3246, 2607.6000976563, -1034.5, 68.5, 20, 0, 0);
	CreateDynamicObject(3246, 2593.6999511719, -1026.1999511719, 70.099998474121, 0, 0, 0);
	CreateDynamicObject(3246, 2594, -1034.8000488281, 68.199996948242, 0, 0, 0);
	CreateDynamicObject(3246, 2583.8000488281, -1021.200012207, 69.800003051758, 0, 0, 0);
	CreateDynamicObject(3246, 2589.6999511719, -1017.299987793, 70.800003051758, 0, 0, 0);
	CreateDynamicObject(3246, 2581.1999511719, -1011.5, 71.800003051758, 0, 0, 0);
	CreateDynamicObject(3246, 2576.6999511719, -1020.5, 69.699996948242, 0, 0, 0);
	CreateDynamicObject(3246, 2573.6999511719, -1010.200012207, 71.800003051758, 0, 0, 0);
	CreateDynamicObject(3246, 2608.1000976563, -1023.5, 70.900001525879, 20, 0, 0);
	CreateDynamicObject(3246, 2616.3999023438, -1035.5, 69.800003051758, 20, 0, 0);
	CreateDynamicObject(3246, 2617.3999023438, -1026, 73.099998474121, 20, 0, 358);
	CreateDynamicObject(3246, 2625.1999511719, -1026, 73.800003051758, 20, 0, 0);
	CreateDynamicObject(3246, 2625.6000976563, -1035.1999511719, 70, 20, 0, 0);
	CreateDynamicObject(3246, 2633.3000488281, -1035.5, 69.800003051758, 20, 0, 0);
	CreateDynamicObject(3246, 2632.8999023438, -1026.4000244141, 73.400001525879, 20, 0, 0);
	CreateDynamicObject(3246, 2640.8999023438, -1035.3000488281, 69.900001525879, 20, 0, 0);
	CreateDynamicObject(3246, 2641.3999023438, -1025.3000488281, 74.099998474121, 20, 0, 0);
	CreateDynamicObject(3246, 2648, -1035, 69.5, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2655.6999511719, -1035, 69.400001525879, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2663.1000976563, -1035.3000488281, 69.400001525879, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2671.5, -1035.4000244141, 69.599998474121, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2679.3000488281, -1035.1999511719, 69.400001525879, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2687.3000488281, -1035.4000244141, 69.400001525879, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2649.6000976563, -1025.5999755859, 73.699996948242, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2657.6000976563, -1025.9000244141, 74.300003051758, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2666.5, -1026.3000488281, 74.400001525879, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2674.1999511719, -1026.5999755859, 74.400001525879, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2682.6000976563, -1026.9000244141, 73.900001525879, 19.9951171875, 0, 0);
	CreateDynamicObject(3246, 2697.6999511719, -1035.0999755859, 66.699996948242, 19.9951171875, 0, 356);
	CreateDynamicObject(3246, 2705, -1034.5, 64.599998474121, 19.989624023438, 0, 349.99548339844);
	CreateDynamicObject(3246, 2691, -1025.6999511719, 73.699996948242, 19.984130859375, 0, 349.99145507813);
	CreateDynamicObject(3246, 2698.8999023438, -1026.1999511719, 71.599998474121, 19.984130859375, 0, 349.99145507813);
	CreateDynamicObject(3246, 2707.3999023438, -1025.0999755859, 71, 19.984130859375, 22, 349.99145507813);
	CreateDynamicObject(3246, 2712.5, -1034.6999511719, 62.299999237061, 19.984130859375, 22, 349.99145507813);
	CreateDynamicObject(3246, 2714.5, -1025.4000244141, 67.699996948242, 19.984130859375, 22, 349.99145507813);
	CreateDynamicObject(3246, 2720.1000976563, -1034.5, 59.5, 19.984130859375, 22, 349.99145507813);
	CreateDynamicObject(3246, 2722.6000976563, -1024.5, 65.900001525879, 19.984130859375, 22, 349.99145507813);
	CreateDynamicObject(3246, 2730.3999023438, -1024.5999755859, 63, 19.984130859375, 22, 349.99145507813);
	CreateDynamicObject(3246, 2727.6999511719, -1032.8000488281, 57.5, 19.984130859375, 20, 349.99145507813);
	CreateDynamicObject(3246, 2734.3000488281, -1032.5, 55.799999237061, 19.984130859375, 12, 349.99145507813);
	CreateDynamicObject(3246, 2737.1000976563, -1023.4000244141, 61.5, 19.984130859375, 22, 349.99145507813);
	CreateDynamicObject(3362, 2607.8000488281, -1015.200012207, 74.599998474121, 0, 0, 276);
	CreateDynamicObject(3362, 2618.3994140625, -1017.599609375, 77.5, 0, 0, 275.99307250977);
	CreateDynamicObject(3362, 2626.8999023438, -1017.5999755859, 77.800003051758, 0, 0, 275.99853515625);
	CreateDynamicObject(3362, 2634.6999511719, -1017.4000244141, 77.599998474121, 0, 0, 275.99853515625);
	CreateDynamicObject(3362, 2642.5, -1016.5999755859, 78.099998474121, 0, 0, 275.99853515625);
	CreateDynamicObject(3362, 2650.8999023438, -1016.200012207, 77.699996948242, 0, 0, 275.99853515625);
	CreateDynamicObject(3362, 2659.8999023438, -1018, 78.900001525879, 0, 0, 273.99853515625);
	CreateDynamicObject(3362, 2668.8999023438, -1020.4000244141, 78, 0, 0, 273.99353027344);
	CreateDynamicObject(3362, 2677.6000976563, -1020.5999755859, 78.199996948242, 0, 0, 273.99353027344);
	CreateDynamicObject(3362, 2685.8999023438, -1020.299987793, 77.900001525879, 0, 0, 271.99353027344);
	CreateDynamicObject(3454, 2620.1999511719, -1002.799987793, 81.400001525879, 0, 0, 0);
	CreateDynamicObject(3454, 2651.5, -1005.299987793, 84, 0, 0, 0);
	CreateDynamicObject(3556, 2672.3000488281, -1008.299987793, 87.300003051758, 0, 0, 0);
	CreateDynamicObject(3556, 2683.8000488281, -1008.700012207, 87.099998474121, 0, 0, 0);
	CreateDynamicObject(3556, 2697, -1009.700012207, 84.199996948242, 0, 0, 0);
	CreateDynamicObject(3556, 2672.3999023438, -995.59997558594, 86.599998474121, 0, 0, 0);
	CreateDynamicObject(3556, 2683.6999511719, -995.5, 85.800003051758, 0, 0, 0);
	CreateDynamicObject(3556, 2697.8000488281, -997, 82.400001525879, 0, 0, 0);
	CreateDynamicObject(3556, 2613.3999023438, -987, 82.300003051758, 0, 0, 0);
	CreateDynamicObject(3556, 2626.5, -987.09997558594, 82.900001525879, 0, 0, 0);
	CreateDynamicObject(3556, 2639.3000488281, -985.40002441406, 83.400001525879, 0, 0, 0);
	CreateDynamicObject(3556, 2651.3999023438, -985.29998779297, 84.300003051758, 0, 0, 0);
	CreateDynamicObject(3556, 2663.1000976563, -983.90002441406, 84.900001525879, 0, 0, 0);
	CreateDynamicObject(3556, 2675.1999511719, -982.70001220703, 84.400001525879, 0, 0, 0);
	CreateDynamicObject(3556, 2689.6000976563, -981, 82.400001525879, 0, 0, 0);
	CreateDynamicObject(3580, 2560.3000488281, -1011.200012207, 74.900001525879, 0, 0, 86);
	CreateDynamicObject(3595, 2583.1999511719, -996, 77.900001525879, 0, 0, 84);
	CreateDynamicObject(3556, 2598.8000488281, -971, 82.800003051758, 0, 0, 6);
	CreateDynamicObject(3556, 2610.8000488281, -968.5, 81.800003051758, 0, 0, 9.99853515625);
	CreateDynamicObject(3556, 2627.1000976563, -963.5, 80.900001525879, 0, 0, 13.99755859375);
	CreateDynamicObject(3556, 2637.8999023438, -960, 80.400001525879, 0, 0, 15.99658203125);
	CreateDynamicObject(3556, 2648, -947, 79.400001525879, 0, 0, 19.99609375);
	CreateDynamicObject(3556, 2647, -972.5, 80.599998474121, 0, 0, 19.9951171875);
	CreateDynamicObject(3556, 2658.1000976563, -967.79998779297, 79.5, 0, 0, 19.9951171875);
	CreateDynamicObject(3556, 2672.8999023438, -968.5, 80.800003051758, 0, 0, 19.9951171875);
	CreateDynamicObject(3556, 2670.6000976563, -958.59997558594, 77.400001525879, 0, 0, 25.9951171875);
	CreateDynamicObject(3556, 2683.5, -963, 79.5, 0, 0, 25.99365234375);
	CreateDynamicObject(3601, 2571.3999023438, -975.29998779297, 87.5, 0, 0, 10);
	CreateDynamicObject(3601, 2559.1000976563, -997.59997558594, 81.300003051758, 0, 0, 357.99755859375);
	CreateDynamicObject(3601, 2546.1000976563, -993.20001220703, 81.300003051758, 0, 0, 357.99499511719);
	CreateDynamicObject(3601, 2545.1000976563, -1009.299987793, 75.900001525879, 0, 0, 357.99499511719);
	CreateDynamicObject(3600, 2526.8000488281, -1007, 69.099998474121, 0, 0, 0);
	CreateDynamicObject(3640, 2630.5, -940.79998779297, 81.400001525879, 0, 0, 22);
	CreateDynamicObject(3640, 2563.599609375, -956.69921875, 85.800003051758, 0, 0, 7.9925537109375);
	CreateDynamicObject(3640, 2552, -974.5, 84.5, 0, 0, 3.998046875);
	CreateDynamicObject(3640, 2615.099609375, -948, 83.199996948242, 0, 0, 11.991577148438);
	CreateDynamicObject(3642, 2597.6999511719, -950.40002441406, 82.699996948242, 0, 0, 192);
	CreateDynamicObject(3653, 2505.6000976563, -1009.299987793, 67.900001525879, 0, 0, 92);
	CreateDynamicObject(12938, 2610, -919.40002441406, 79.099998474121, 0, 0, 102);
	CreateDynamicObject(12940, 2572.1999511719, -928, 84.099998474121, 0, 0, 282);
	CreateDynamicObject(1623, 2605.8000488281, -1006.9000244141, 82.800003051758, 0, 0, 0);
	CreateDynamicObject(1623, 2605.8000488281, -999.29998779297, 82.900001525879, 0, 0, 0);
	CreateDynamicObject(1623, 2604.3000488281, -1015.5, 77.699996948242, 0, 0, 0);
	CreateDynamicObject(1623, 2590.3999023438, -1005.799987793, 81.599998474121, 0, 0, 78);
	CreateDynamicObject(17068, 2633.3000488281, -947.90002441406, 81.699996948242, 0, 0, 20);
	CreateDynamicObject(17068, 2612.6999511719, -954.70001220703, 83.5, 0, 0, 345.9951171875);
	CreateDynamicObject(17068, 2582.5, -963.70001220703, 83.400001525879, 0, 0, 11.9951171875);
	CreateDynamicObject(17068, 2611.6999511719, -978.90002441406, 83.699996948242, 0, 0, 5.9915771484375);
	CreateDynamicObject(3256, 2532.5, -1018.0999755859, 68.900001525879, 0, 0, 0);
	CreateDynamicObject(3256, 2535.3000488281, -972.40002441406, 80.900001525879, 0, 0, 0);
	CreateDynamicObject(3256, 2491.1999511719, -1025.8000488281, 65.099998474121, 0, 0, 0);
	CreateDynamicObject(12986, 2651.3999023438, -957.70001220703, 79.599998474121, 0, 0, 26);
	CreateDynamicObject(3881, 2603.6000976563, -1061.8000488281, 70.400001525879, 0, 0, 2);
	CreateDynamicObject(1237, 2600.8000488281, -1057.6999511719, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2594.6999511719, -1057.5999755859, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2594.5, -1056.5999755859, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2600.5, -1056.4000244141, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2601.1999511719, -1065.5, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2600.3999023438, -1065.5999755859, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2599.1999511719, -1065.5999755859, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2598, -1065.5999755859, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2596.8999023438, -1065.5999755859, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2595.5, -1065.4000244141, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1596, 2522.1999511719, -1035.0999755859, 71.099998474121, 0, 0, 0);
	CreateDynamicObject(3866, 2482.1999511719, -998.59997558594, 68.199996948242, 0, 0, 88);
	CreateDynamicObject(3866, 2458.6000976563, -995.20001220703, 63.700000762939, 0, 0, 87.994995117188);
	CreateDynamicObject(3887, 2501.3999023438, -986.5, 71.699996948242, 0, 0, 88);
	CreateDynamicObject(3887, 2447.3000488281, -983, 71.900001525879, 0, 0, 91.994995117188);
	CreateDynamicObject(3362, 2511.1999511719, -952.79998779297, 80.800003051758, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2519.3999023438, -951.09997558594, 80.900001525879, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2527.8000488281, -950.79998779297, 80.900001525879, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2537.5, -949.29998779297, 81.099998474121, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2546.3000488281, -948.29998779297, 81.099998474121, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2547.1000976563, -941.90002441406, 82.099998474121, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2537.8999023438, -941.09997558594, 82.199996948242, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2528.6999511719, -941.79998779297, 81.599998474121, 0, 0, 275.99304199219);
	CreateDynamicObject(3362, 2519.6000976563, -943.40002441406, 81.300003051758, 0, 0, 277.99304199219);
	CreateDynamicObject(3362, 2509.1999511719, -944.09997558594, 81, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2510.5, -935.5, 81.199996948242, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2521.5, -933.5, 82.199996948242, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2530.6999511719, -931.70001220703, 82.5, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2539, -930.79998779297, 82.5, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2547.1000976563, -930, 82.099998474121, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2498.6000976563, -935.59997558594, 80.900001525879, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2488.8999023438, -936.09997558594, 80.900001525879, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2479.8000488281, -937.70001220703, 79.5, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2472.1999511719, -938.70001220703, 79.099998474121, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2481.6999511719, -943.5, 80.300003051758, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2473.5, -944.5, 79.099998474121, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2481.8000488281, -952.5, 79.300003051758, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2481.8999023438, -960.59997558594, 78.800003051758, 0, 0, 277.99255371094);
	CreateDynamicObject(3362, 2497.8000488281, -976.29998779297, 79.800003051758, 0, 0, 89.992553710938);
	CreateDynamicObject(3362, 2490.1000976563, -975.59997558594, 79.300003051758, 0, 0, 87.989013671875);
	CreateDynamicObject(3362, 2481.3999023438, -975, 79, 0, 0, 87.984008789063);
	CreateDynamicObject(3887, 2487.6999511719, -918.79998779297, 90.400001525879, 0, 0, 95.994018554688);
	CreateDynamicObject(1237, 2595.1000976563, -1039.3000488281, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2604.3000488281, -1039.1999511719, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2604.3000488281, -1042.8000488281, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2595.6999511719, -1042.1999511719, 68.599998474121, 0, 0, 0);
	CreateDynamicObject(1237, 2604.3000488281, -1047.8000488281, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(1237, 2600.5, -1047.6999511719, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(1237, 2594.3999023438, -1047.6999511719, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(1237, 2586.6999511719, -1047.6999511719, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(1237, 2590.6999511719, -1047.6999511719, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(1237, 2582.1000976563, -1047.5, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(1237, 2608.6999511719, -1047.5999755859, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(1237, 2613.1999511719, -1047.8000488281, 68.400001525879, 0, 0, 0);
	CreateDynamicObject(11457, 2412.1999511719, -1016.4000244141, 50.299999237061, 0, 0, 16);
	CreateDynamicObject(11457, 2401, -1022, 50, 0, 0, 15.99609375);
	CreateDynamicObject(11457, 2396.1999511719, -1006.799987793, 53.799999237061, 0, 0, 15.99609375);
	CreateDynamicObject(11457, 2411.1000976563, -1003.299987793, 52.099998474121, 0, 0, 15.99609375);
	//FAVELA NOVA
    CreateDynamicObject(16151, 1239.9000244141, -1915.4000244141, 30.10000038147, 0, 0, 169.99987792969);
	CreateDynamicObject(11428, 1213.9000244141, -1920.8000488281, 36.099998474121, 0, 0, 98);
	CreateDynamicObject(11457, 1193.7998046875, -1917.69921875, 31.60000038147, 0, 0, 0);
	CreateDynamicObject(3866, 1340.3000488281, -1895.9000244141, 26.60000038147, 0, 0, 172);
	CreateDynamicObject(16327, 1234.0999755859, -1936.0999755859, 35.400001525879, 0, 0, 0);
	CreateDynamicObject(16327, 1233.8000488281, -1915.9000244141, 30, 0, 0, 0);
	CreateDynamicObject(3866, 1313.0999755859, -1892.0999755859, 27, 0, 0, 171.99645996094);
	CreateDynamicObject(3866, 1368.3000488281, -1906.0999755859, 17, 0, 0, 171.99645996094);
	CreateDynamicObject(3866, 1355.3994140625, -1904.7998046875, 25.10000038147, 0, 0, 171.99645996094);
	CreateDynamicObject(3866, 1352.4000244141, -1993.8000488281, 52.700000762939, 0, 0, 351.99645996094);
	CreateDynamicObject(14583, 1462.5999755859, -1930.5, 25.200000762939, 0, 0, 0);
	CreateDynamicObject(17934, 1453.5999755859, -1947.8000488281, 28.299999237061, 0, 0, 0);
	CreateDynamicObject(17934, 1181.9000244141, -1925.4000244141, 39.099998474121, 0, 0, 88);
	CreateDynamicObject(17934, 1142, -1928.6999511719, 45.700000762939, 0, 0, 90);
	CreateDynamicObject(17934, 1125.5999755859, -1929.5, 44.5, 0, 0, 93.999938964844);
	CreateDynamicObject(17934, 1110.3000488281, -1934.8000488281, 44.400001525879, 0, 0, 87.994995117188);
	CreateDynamicObject(17926, 1151.966796875, -1921.19921875, 44.446739196777, 0, 0, 0);
	CreateDynamicObject(17901, 1246.8000488281, -1994.6999511719, 57.799999237061, 0, 0, 87.989501953125);
	CreateDynamicObject(17894, 1172.6999511719, -1978.6999511719, 62.700000762939, 0, 0, 194);
	CreateDynamicObject(16599, 1418.4000244141, -1937.4000244141, 28.39999961853, 0, 0, 0);
	CreateDynamicObject(5401, 1360.0999755859, -1936.5, 20.89999961853, 0, 0, 0);
	CreateDynamicObject(5401, 1360.9000244141, -1944.9000244141, 25, 0, 0, 0);
	CreateDynamicObject(5401, 1341.5999755859, -1948.8000488281, 29.39999961853, 0, 0, 0);
	CreateDynamicObject(5401, 1327.5999755859, -1938.5, 26.299999237061, 0, 0, 0);
	CreateDynamicObject(5401, 1324.5, -1928.8000488281, 23.39999961853, 0, 0, 0);
	CreateDynamicObject(1458, 1312.1999511719, -1925.4000244141, 26.799999237061, 0, 0, 0);
	CreateDynamicObject(3286, 1314.5, -1944, 32.099998474121, 0, 0, 0);
	CreateDynamicObject(1237, 1306.3000488281, -1913.6999511719, 23.10000038147, 0, 0, 0);
	CreateDynamicObject(1237, 1314.1999511719, -1909.9000244141, 22.5, 0, 0, 0);
	CreateDynamicObject(1237, 1323.8000488281, -1917.3000488281, 21.700000762939, 0, 0, 0);
	CreateDynamicObject(1237, 1339.3000488281, -1916, 20.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 1355.4000244141, -1923.8000488281, 19.39999961853, 0, 0, 0);
	CreateDynamicObject(1282, 1306.1999511719, -1912.3000488281, 23.799999237061, 0, 0, 0);
	CreateDynamicObject(1282, 1306.4000244141, -1915.0999755859, 23.700000762939, 0, 0, 0);
	CreateDynamicObject(1282, 1323.0999755859, -1918.6999511719, 22.39999961853, 0, 0, 0);
	CreateDynamicObject(1282, 1323.5999755859, -1915.8000488281, 22.39999961853, 0, 0, 0);
	CreateDynamicObject(1282, 1339, -1914.6999511719, 21.39999961853, 0, 0, 0);
	CreateDynamicObject(1282, 1338.5, -1917.1999511719, 21.39999961853, 0, 0, 0);
	CreateDynamicObject(1282, 1354.5, -1922.3000488281, 20.10000038147, 0, 0, 0);
	CreateDynamicObject(1282, 1355.6999511719, -1925.4000244141, 20, 0, 0, 0);
	CreateDynamicObject(1282, 1314.0999755859, -1908.6999511719, 23.299999237061, 0, 0, 0);
	CreateDynamicObject(1282, 1314.0999755859, -1911, 23.200000762939, 0, 0, 0);
	CreateDynamicObject(1282, 1304.9000244141, -1911.9000244141, 23.89999961853, 0, 0, 0);
	CreateDynamicObject(16001, 1301.9000244141, -1923.9000244141, 25.299999237061, 0, 0, 358);
	CreateDynamicObject(16001, 1307, -1942.9000244141, 27.5, 0, 0, 0);
	CreateDynamicObject(16001, 1295.4000244141, -1939.6999511719, 27.799999237061, 0, 0, 0);
	CreateDynamicObject(16001, 1303.0999755859, -1940.4000244141, 27.700000762939, 0, 0, 357.99499511719);
	CreateDynamicObject(16001, 1306.1999511719, -1934.6999511719, 25.89999961853, 0, 0, 355.99499511719);
	CreateDynamicObject(3887, 1311.7998046875, -1990.599609375, 51.5, 0, 0, 267.99499511719);
	CreateDynamicObject(3887, 1377.5999755859, -1991.3000488281, 47.900001525879, 0, 0, 267.99499511719);
	CreateDynamicObject(3887, 1273.9000244141, -1983.0999755859, 55.200000762939, 0, 0, 267.99499511719);
	CreateDynamicObject(3887, 1198.0999755859, -1941.5, 37.599998474121, 0, 0, 279.99499511719);
	CreateDynamicObject(11458, 1292.3000488281, -1923.5999755859, 25.5, 0, 0, 0);
	CreateDynamicObject(11458, 1295.4000244141, -1932.0999755859, 26.700000762939, 0, 0, 0);
	CreateDynamicObject(11458, 1285.4000244141, -1934.4000244141, 27.5, 0, 0, 0);
	CreateDynamicObject(11458, 1282.5, -1925.4000244141, 26.700000762939, 0, 0, 0);
	CreateDynamicObject(11458, 1272.8000488281, -1922.9000244141, 27.5, 0, 0, 0);
	CreateDynamicObject(11458, 1273, -1931.3000488281, 28.200000762939, 0, 0, 0);
	CreateDynamicObject(11458, 1263.9000244141, -1923.1999511719, 29.200000762939, 0, 0, 0);
	CreateDynamicObject(3582, 1168.6999511719, -1927.0999755859, 40.599998474121, 0, 0, 0);
	CreateDynamicObject(3582, 1157.9000244141, -1925.9000244141, 42.5, 0, 0, 0);
	CreateDynamicObject(3556, 1113.5, -1970.0999755859, 57.299999237061, 0, 0, 0);
	CreateDynamicObject(3556, 1113.8000488281, -1965.1999511719, 53.599998474121, 0, 0, 0);
	CreateDynamicObject(3556, 1113.8000488281, -1960.5999755859, 50.099998474121, 0, 0, 2);
	CreateDynamicObject(3556, 1129.3000488281, -1975.6999511719, 59.900001525879, 0, 0, 0);
	CreateDynamicObject(3556, 1126.5999755859, -1966.6999511719, 55.200000762939, 0, 0, 0);
	CreateDynamicObject(3556, 1126.5, -1960.9000244141, 51.799999237061, 0, 0, 0);
	CreateDynamicObject(3556, 1127.1999511719, -1955.5999755859, 48, 0, 0, 0);
	CreateDynamicObject(3256, 1415.2998046875, -1996.69921875, 48, 0, 0, 0);
	CreateDynamicObject(3364, 1426.4000244141, -1935.8000488281, 23.89999961853, 0, 0, 106);
	CreateDynamicObject(3364, 1144.3000488281, -1982.0999755859, 62.400001525879, 12, 22, 105.99609375);
	CreateDynamicObject(3364, 1129.8000488281, -1987.8000488281, 65.400001525879, 11.9970703125, 21.99462890625, 105.99063110352);
	CreateDynamicObject(3364, 1157.5, -1973.6999511719, 59.400001525879, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1173.3000488281, -1967.5, 57.5, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1142.9000244141, -1970, 56.799999237061, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1156.0999755859, -1961.3000488281, 53.599998474121, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1173.6999511719, -1957, 50.200000762939, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1211.9000244141, -1952.9000244141, 51.599998474121, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1189.0999755859, -1953.6999511719, 51, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1219.5999755859, -1965.4000244141, 55.599998474121, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1191.6999511719, -1963.4000244141, 54.900001525879, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(3364, 1205.5, -1975.6999511719, 59.799999237061, 11.9970703125, 21.99462890625, 105.99060058594);
	CreateDynamicObject(9241, 1193.4000244141, -2024.4000244141, 70.099998474121, 0, 0, 270);
	CreateDynamicObject(5401, 1182.4000244141, -1998.5999755859, 70.199996948242, 0, 0, 0);
	CreateDynamicObject(3419, 1341.0999755859, -2011.0999755859, 50.900001525879, 0, 0, 0);
	CreateDynamicObject(10245, 1382.8000488281, -1996.8000488281, 50, 0, 0, 134);
	CreateDynamicObject(5820, 1279.3000488281, -1982.4000244141, 50, 0, 0, 78);
	CreateDynamicObject(3556, 1139.9000244141, -1951.5, 47.400001525879, 0, 0, 0);
	CreateDynamicObject(3556, 1139, -1959.5999755859, 51.900001525879, 0, 0, 0);
	CreateDynamicObject(3556, 1151.8000488281, -1950.3000488281, 46.799999237061, 0, 0, 0);
	CreateDynamicObject(3556, 1185.3000488281, -1974.9000244141, 60.799999237061, 0, 0, 0);
	CreateDynamicObject(3483, 1260.4000244141, -2024.4000244141, 65.400001525879, 0, 0, 0);
	CreateDynamicObject(11457, 1353.9000244141, -2007.1999511719, 48.5, 0, 0, 356);
	CreateDynamicObject(11457, 1369.3000488281, -2009, 47.599998474121, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1390.1999511719, -2008.8000488281, 47.299999237061, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1355.4000244141, -2040.8000488281, 51.299999237061, 0, 0, 179.99548339844);
	CreateDynamicObject(11457, 1340.5999755859, -2040.5, 52.5, 0, 0, 181.99542236328);
	CreateDynamicObject(11457, 1326.8000488281, -2032.3000488281, 55.200000762939, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1311.1999511719, -2034.8000488281, 56.5, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1298.0999755859, -2033.3000488281, 56.799999237061, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1301.5, -2007.9000244141, 53.5, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1318.0999755859, -2011.6999511719, 51.799999237061, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1330.0999755859, -2010, 51.099998474121, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1372.3000488281, -2029.3000488281, 52, 0, 0, 355.99548339844);
	CreateDynamicObject(11457, 1386.8994140625, -2027.69921875, 50.900001525879, 0, 0, 355.98999023438);
	CreateDynamicObject(11457, 1405.5, -2006.4000244141, 47.400001525879, 0, 0, 355.99548339844);
	CreateDynamicObject(3256, 1375.0999755859, -1913.1999511719, 16.700000762939, 0, 0, 0);
	CreateDynamicObject(3256, 1439.5, -1923.8000488281, 21.10000038147, 0, 0, 0);
	CreateDynamicObject(3256, 1435.9000244141, -1931.1999511719, 22.200000762939, 0, 0, 0);
	CreateDynamicObject(3866, 1397.3000488281, -1909.5999755859, 22.299999237061, 0, 0, 177.99645996094);
	CreateDynamicObject(3866, 1447.5, -1895.0999755859, 30, 0, 0, 89.994995117188);
	CreateDynamicObject(3600, 1436.4000244141, -1899.5999755859, 20.700000762939, 0, 0, 272);
	CreateDynamicObject(3600, 1433.8000488281, -1916.9000244141, 20.799999237061, 0, 0, 271.99951171875);
	CreateDynamicObject(3666, 1417.3000488281, -1882.1999511719, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(3666, 1420.9000244141, -1882.1999511719, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(3666, 1426.3000488281, -1882.4000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1431.3000488281, -1882.4000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1429.5999755859, -1882.4000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1427.6999511719, -1881.9000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1419.0999755859, -1882.4000244141, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(3881, 1428.1999511719, -1886.5, 14.10000038147, 0, 0, 0);
	CreateDynamicObject(7313, 1436.3994140625, -1885.599609375, 19.700000762939, 0, 0, 270);
	CreateDynamicObject(1228, 1422.3000488281, -1887.3000488281, 12.89999961853, 0, 0, 270);
	CreateDynamicObject(1228, 1425.1999511719, -1894.9000244141, 13.10000038147, 0, 0, 270);
	CreateDynamicObject(1423, 1427.3000488281, -1881.1999511719, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(1423, 1430.1999511719, -1881.4000244141, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(1423, 1420, -1886.5999755859, 13.300000190735, 0, 0, 0);
	CreateDynamicObject(1423, 1418.4000244141, -1886.4000244141, 13.300000190735, 0, 0, 0);
	CreateDynamicObject(1597, 1423.5999755859, -1872.1999511719, 15, 0, 0, 270);
	CreateDynamicObject(1597, 1413.0999755859, -1872.4000244141, 15, 0, 0, 270);
	CreateDynamicObject(1597, 1433.3994140625, -1872.19921875, 15, 0, 0, 270);
	CreateDynamicObject(669, 1419.6999511719, -1885.1999511719, 12.60000038147, 0, 0, 194);
	CreateDynamicObject(669, 1419.5999755859, -1893, 12.800000190735, 0, 0, 193.99658203125);
	CreateDynamicObject(669, 1418.3000488281, -1903.0999755859, 12.89999961853, 0, 0, 193.99658203125);
	CreateDynamicObject(669, 1418.0999755859, -1912.6999511719, 13.39999961853, 0, 0, 193.99658203125);
	CreateDynamicObject(5401, 1284.4000244141, -1900.8000488281, 25.89999961853, 0, 0, 174);
	CreateDynamicObject(5401, 1254.6999511719, -1907.1999511719, 29.89999961853, 0, 0, 207.99597167969);
	CreateDynamicObject(671, 1413.8000488281, -1919.6999511719, 14.89999961853, 0, 0, 0);
	CreateDynamicObject(671, 1415.9000244141, -1933.8000488281, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(671, 1408.6999511719, -1934.6999511719, 15.60000038147, 0, 0, 0);
	CreateDynamicObject(671, 1402.5, -1935.5999755859, 15.89999961853, 0, 0, 0);
	CreateDynamicObject(671, 1394.5, -1935.5, 16.39999961853, 0, 0, 0);
	CreateDynamicObject(671, 1387.9000244141, -1935.1999511719, 17, 0, 0, 0);
	CreateDynamicObject(671, 1380.3000488281, -1934.5, 17.60000038147, 0, 0, 0);
	CreateDynamicObject(671, 1388.1999511719, -1921.9000244141, 17.10000038147, 0, 0, 0);
	CreateDynamicObject(671, 1394.3000488281, -1923.1999511719, 16.60000038147, 0, 0, 0);
	CreateDynamicObject(671, 1400.6999511719, -1923.5999755859, 16, 0, 0, 0);
	CreateDynamicObject(671, 1407.3000488281, -1922.5999755859, 15.60000038147, 0, 0, 0);
	CreateDynamicObject(671, 1422.3000488281, -1930.0999755859, 14.699999809265, 0, 0, 0);
	CreateDynamicObject(671, 1373.3000488281, -1932, 18.10000038147, 0, 0, 0);
	CreateDynamicObject(671, 1366.5, -1930.6999511719, 18.700000762939, 0, 0, 0);
	CreateDynamicObject(671, 1360.5999755859, -1928.0999755859, 19.10000038147, 0, 0, 0);
	CreateDynamicObject(671, 1354.0999755859, -1927, 19.60000038147, 0, 0, 0);
	CreateDynamicObject(671, 1355.1999511719, -1916.9000244141, 19.5, 0, 0, 0);
	CreateDynamicObject(671, 1345.1999511719, -1925.3000488281, 20.299999237061, 0, 0, 0);
	CreateDynamicObject(671, 1337.9000244141, -1923.9000244141, 20.799999237061, 0, 0, 0);
	CreateDynamicObject(671, 1332.1999511719, -1922.0999755859, 21.200000762939, 0, 0, 0);
	CreateDynamicObject(671, 1338.9000244141, -1911.5, 20.89999961853, 0, 0, 0);
	CreateDynamicObject(671, 1333.4000244141, -1910.0999755859, 21.299999237061, 0, 0, 0);
	CreateDynamicObject(671, 1326.5, -1909.3000488281, 21.799999237061, 0, 0, 0);
	CreateDynamicObject(671, 1320.0999755859, -1907.1999511719, 22.39999961853, 0, 0, 0);
	CreateDynamicObject(671, 1313.0999755859, -1905.5999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(671, 1304.8000488281, -1903.9000244141, 23.60000038147, 0, 0, 0);
	CreateDynamicObject(671, 1263, -1916.6999511719, 29.10000038147, 0, 0, 0);
	CreateDynamicObject(671, 1269.4000244141, -1914.8000488281, 27.799999237061, 0, 0, 0);
	CreateDynamicObject(671, 1278.5, -1914, 26.299999237061, 0, 0, 0);
	CreateDynamicObject(671, 1286.9000244141, -1915, 25.299999237061, 0, 0, 0);
	CreateDynamicObject(671, 1294, -1916, 24.5, 0, 0, 0);
	CreateDynamicObject(671, 1300.9000244141, -1916.6999511719, 23.799999237061, 0, 0, 0);
	CreateDynamicObject(671, 1306.4000244141, -1917.6999511719, 23.200000762939, 0, 0, 0);
	CreateDynamicObject(671, 1312, -1919.4000244141, 22.700000762939, 0, 0, 0);
	CreateDynamicObject(671, 1317.8000488281, -1920.5, 22.299999237061, 0, 0, 0);
	CreateDynamicObject(671, 1325.3000488281, -1922.5, 21.700000762939, 0, 0, 0);
	CreateDynamicObject(1444, 1262.4000244141, -1840.3000488281, 13.39999961853, 0, 0, 0);
	CreateDynamicObject(982, 1251, -1842.1999511719, 13.199999809265, 0, 0, 270);
	CreateDynamicObject(982, 1287.4000244141, -1829.5, 13.199999809265, 0, 0, 0);
	CreateDynamicObject(982, 1287.4000244141, -1803.8000488281, 13.199999809265, 0, 0, 0);
	CreateDynamicObject(983, 1284.3000488281, -1790.8000488281, 13.300000190735, 0, 0, 88);
	CreateDynamicObject(983, 1277.8000488281, -1790.5999755859, 13.300000190735, 0, 0, 87.994995117188);
	CreateDynamicObject(983, 1277, -1787.4000244141, 13.300000190735, 0, 0, 359.99499511719);
	CreateDynamicObject(983, 1195.1999511719, -1823.6999511719, 13.300000190735, 0, 0, 0);
	CreateDynamicObject(983, 1195.1999511719, -1830.0999755859, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(983, 1195.1999511719, -1836.4000244141, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(983, 1198.5, -1839.6999511719, 13.5, 0, 0, 86);
	CreateDynamicObject(983, 1204.8000488281, -1840.0999755859, 13.199999809265, 0, 0, 87.995483398438);
	CreateDynamicObject(983, 1235.0999755859, -1842.1999511719, 13.199999809265, 0, 0, 270);
	CreateDynamicObject(983, 1228.5999755859, -1842.1999511719, 13.199999809265, 0, 0, 270);
	CreateDynamicObject(983, 1222.1999511719, -1842.0999755859, 13.199999809265, 0, 0, 270);
	//CreateDynamicObject(1257, 1677.3000488281, -2325.6000976563, -2.4000000953674, 0, 0, 270);
	//CreateDynamicObject(1257, 1798.3000488281, -1169.3000488281, 24.10000038147, 0, 0, 74);
	CreateDynamicObject(1315, 1279.5999755859, -1849, 15.699999809265, 0, 0, 90);
	CreateDynamicObject(3887, 1402.5, -1949.5999755859, 27.299999237061, 0, 0, 265.99499511719);
	CreateDynamicObject(16093, 1221.3000488281, -1933.9000244141, 46.099998474121, 0, 0, 100);
	CreateDynamicObject(11457, 1385, -2072.3000488281, 49.400001525879, 0, 0, 191.98803710938);
	CreateDynamicObject(11457, 1369.9000244141, -2074, 51.099998474121, 0, 0, 185.98803710938);
	CreateDynamicObject(11457, 1356.0999755859, -2075.6000976563, 52, 0, 0, 181.98803710938);
	CreateDynamicObject(16067, 1257.9000244141, -2071.1000976563, 56.5, 0, 0, 178);
	CreateDynamicObject(16067, 1285.5, -2071.8000488281, 55.900001525879, 0, 0, 177.99499511719);
	CreateDynamicObject(16067, 1314.8000488281, -2072.6999511719, 55.599998474121, 0, 0, 181.99499511719);
	//PEDAGIO
	F_CreateDynamicObject(18452,-81.473,-911.504,19.637,0.0,3.438,64.458, 300.0);
	F_CreateDynamicObject(18452,-86.795,-909.016,19.657,0.0,3.438,64.458, 300.0);
	F_CreateDynamicObject(4639,-84.176,-910.267,18.590,0.0,3.438,64.458, 300.0);
	F_CreateDynamicObject(1215,-86.564,-914.933,17.577,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-91.347,-912.313,17.664,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-81.359,-917.616,17.690,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-86.973,-903.254,16.768,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-76.825,-908.465,16.782,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-81.946,-905.872,16.711,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(10281,-89.741,-908.728,25.320,0.0,0.0,-24.924, 300.0);
	F_CreateDynamicObject(3435,-79.336,-913.316,21.928,0.0,0.0,65.317, 300.0);
	F_CreateDynamicObject(3435,-89.129,-907.520,21.904,0.0,0.0,65.317, 300.0);
	F_CreateDynamicObject(10281,-79.505,-914.833,25.343,0.0,0.0,-24.924, 300.0);
	F_CreateDynamicObject(10281,-88.794,-906.180,25.131,0.0,0.0,-204.546, 300.0);
	F_CreateDynamicObject(10281,-78.944,-911.967,25.173,0.0,0.0,-204.546, 300.0);
	F_CreateDynamicObject(3435,-973.189,-343.464,40.641,0.0,0.0,-102.273, 300.0);
	F_CreateDynamicObject(18452,-964.780,-345.105,38.414,0.0,0.0,78.209, 300.0);
	F_CreateDynamicObject(18452,-970.554,-343.918,38.375,0.0,0.0,78.209, 300.0);
	F_CreateDynamicObject(3435,-962.014,-346.031,40.681,0.0,0.0,-102.273, 300.0);
	F_CreateDynamicObject(4641,-967.585,-344.193,37.361,0.0,0.0,79.068, 300.0);
	F_CreateDynamicObject(10281,-962.404,-347.406,43.984,0.0,0.0,-12.892, 300.0);
	F_CreateDynamicObject(10281,-973.883,-344.792,43.945,0.0,0.0,-12.892, 300.0);
	F_CreateDynamicObject(10281,-972.806,-342.067,43.945,0.0,0.0,-191.654, 300.0);
	F_CreateDynamicObject(10281,-961.830,-344.614,43.984,0.0,0.0,-191.654, 300.0);
	F_CreateDynamicObject(983,-976.888,-342.692,36.449,0.0,0.0,78.209, 300.0);
	F_CreateDynamicObject(983,-959.000,-346.646,36.143,0.0,0.0,78.209, 300.0);
	F_CreateDynamicObject(1215,-974.420,-347.943,36.069,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-968.680,-349.104,35.844,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-963.013,-350.329,35.617,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-966.861,-339.749,35.842,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-972.551,-338.784,36.027,0.0,0.0,0.0, 300.0);
	F_CreateDynamicObject(1215,-961.036,-340.733,35.646,0.0,0.0,0.0, 300.0);
//PEDAGIO LOS SANTOS
	F_CreateDynamicObject(4641, 35.632293701172, -1529.076171875, 6.1357402801514, 0, 0, 266.70568847656, 300.0);
	F_CreateDynamicObject(4641, 67.10196685791, -1533.9455566406, 5.8311233520508, 0, 0, 87.337829589844, 300.0);
	F_CreateDynamicObject(10281, 68.36555480957, -1534.0847167969, 8.1223773956299, 0, 344.99816894531, 83.3662109375, 300.0);
	F_CreateDynamicObject(10281, 34.36937713623, -1528.9321289063, 8.4724159240723, 0, 344.99816894531, 264.00048828125, 300.0);
	F_CreateDynamicObject(10281, 36.68558883667, -1529.1614990234, 8.4724159240723, 0, 344.99816894531, 81.381225585938, 300.0);
	F_CreateDynamicObject(10281, 66.0478515625, -1533.8525390625, 8.1223773956299, 0, 344.98718261719, 263.99047851563, 300.0);
	F_CreateDynamicObject(978, 60.978630065918, -1534.8353271484, 5.0441765785217, 0, 0, 171.42504882813, 300.0);
	F_CreateDynamicObject(978, 50.605979919434, -1533.9216308594, 5.1404309272766, 0, 0, 173.40466308594, 300.0);
	F_CreateDynamicObject(978, 40.753074645996, -1532.0096435547, 5.2318620681763, 0, 0, 169.43469238281, 300.0);
	F_CreateDynamicObject(978, 61.552124023438, -1531.3885498047, 5.0221199989319, 0, 0, 352.06005859375, 300.0);
	F_CreateDynamicObject(978, 51.23265838623, -1529.9393310547, 5.1295471191406, 0, 0, 352.05688476563, 300.0);
	F_CreateDynamicObject(978, 41.44654083252, -1528.3891601563, 5.2254266738892, 0, 0, 352.05688476563, 300.0);
	F_CreateDynamicObject(1374, 34.944358825684, -1526.9171142578, 4.4455451965332, 0, 0, 0);
	F_CreateDynamicObject(1374, 34.724945068359, -1531.2094726563, 4.4395666122437, 0, 0, 176.66442871094, 300.0);
	F_CreateDynamicObject(1374, 67.949798583984, -1532.0815429688, 4.1140956878662, 0, 0, 0, 300.0);
	F_CreateDynamicObject(1374, 67.731735229492, -1536.064453125, 4.1398868560791, 0, 0, 178.6494140625, 300.0);
//PEDAGIO ESTRADA
    F_CreateDynamicObject(4642, 2539.505859375, 304.08911132813, 29.58589553833, 0, 0, 358.01501464844, 300.0);
    F_CreateDynamicObject(4642, 2539.3637695313, 296.65670776367, 29.878120422363, 0, 0, 179.36279296875, 300.0);
    F_CreateDynamicObject(4642, 2516.4106445313, 299.26815795898, 30.043827056885, 0, 0, 173.40783691406, 300.0);
    F_CreateDynamicObject(4642, 2517.1833496094, 306.50720214844, 30.054021835327, 0, 0, 173.40270996094, 300.0);
    F_CreateDynamicObject(3435, 2542.1904296875, 284.4162902832, 33.259044647217, 0, 0, 356.03002929688, 300.0);
    F_CreateDynamicObject(3435, 2540.4499511719, 316.42352294922, 32.883548736572, 0, 0, 358.01342773438, 300.0);
    F_CreateDynamicObject(10281, 2514.6286621094, 299.31967163086, 31.99974822998, 0, 345, 262.73571777344, 300.0);
    F_CreateDynamicObject(10281, 2515.4172363281, 306.69549560547, 31.99974822998, 0, 344.99816894531, 262.73254394531, 300.0);
    F_CreateDynamicObject(10281, 2541.2858886719, 304.17156982422, 31.799747467041, 0, 344.99816894531, 87.336486816406, 300.0);
    F_CreateDynamicObject(10281, 2541.1345214844, 296.68963623047, 31.799747467041, 0, 344.99267578125, 87.335815429688, 300.0);
    F_CreateDynamicObject(1374, 2515.8540039063, 308.88681030273, 28.409870147705, 0, 0, 352.06005859375, 300.0);
    F_CreateDynamicObject(1374, 2514.7370605469, 297.09048461914, 28.372844696045, 0, 0, 176.6611328125, 300.0);
    F_CreateDynamicObject(1374, 2540.87890625, 294.59899902344, 28.200183868408, 0, 0, 176.66015625, 300.0);
    F_CreateDynamicObject(1374, 2541.1525878906, 305.9892578125, 27.81209564209, 0, 0, 355.30920410156, 300.0);
//PEDAGIO NOVO(ESTRADA PERTO HQ DOS SONS)
    F_CreateDynamicObject(4642, 92.7236328125, -1275.1638183594, 14.942341804504, 0, 0, 306.40576171875, 300.0);
    F_CreateDynamicObject(4642, 84.917510986328, -1266.1041259766, 15.224144935608, 0, 0, 123.78649902344, 300.0);
    F_CreateDynamicObject(1374, 83.284629821777, -1265.0596923828, 13.53085899353, 0, 0, 29.774780273438, 300.0);
    F_CreateDynamicObject(4642, 76.391235351563, -1254.0012207031, 15.168005943298, 0, 0, 127.7529296875, 300.0);
    F_CreateDynamicObject(1374, 76.749130249023, -1255.9631347656, 13.67283821106, 0, 0, 215.09399414063, 300.0);
    F_CreateDynamicObject(4642, 101.51268005371, -1286.8515625, 14.994458198547, 0, 0, 306.40319824219, 300.0);
    F_CreateDynamicObject(1374, 99.806381225586, -1285.7977294922, 13.25719833374, 0, 0, 33.742919921875, 300.0);
    F_CreateDynamicObject(1374, 93.132995605469, -1277.1209716797, 13.212397575378, 0, 0, 215.09033203125, 300.0);
    F_CreateDynamicObject(10281, 79.237091064453, -1260.0068359375, 21.52029800415, 0, 339.99938964844, 300.26733398438, 300.0);
    F_CreateDynamicObject(10281, 80.713813781738, -1259.1701660156, 21.466123580933, 0, 339.99938964844, 120.90167236328, 300.0);
    F_CreateDynamicObject(10281, 95.587707519531, -1281.2474365234, 21.230987548828, 0, 339.99938964844, 300.26733398438, 300.0);
    F_CreateDynamicObject(10281, 96.950485229492, -1280.2509765625, 21.179170608521, 0, 339.99938964844, 121.61853027344, 300.0);
	//PONTO DE TAXI
	CreateDynamicObject(3881, 1721.8000488281, -1710.8000488281, 14.39999961853, 0, 0, 92);
	CreateDynamicObject(7313, 1721.3000488281, -1713.0999755859, 16, 0, 0, 2);
	CreateDynamicObject(1229, 1721, -1721.3000488281, 14.10000038147, 0, 0, 0);
	CreateDynamicObject(1229, 1729.8000488281, -1721.5999755859, 14.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1708.5999755859, -1722.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1712.6999511719, -1722.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1716.8000488281, -1722.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1720.9000244141, -1722.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1703.5, -1715.1999511719, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1712.6999511719, -1715.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1716.8000488281, -1715.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1720.9000244141, -1715.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1725, -1715.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1729.1999511719, -1715.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(970, 1740.1999511719, -1716.3000488281, 13.10000038147, 0, 0, 336);
	CreateDynamicObject(970, 1735.0999755859, -1722.1999511719, 13.10000038147, 0, 0, 359.99487304688);
	CreateDynamicObject(970, 1731, -1722.1999511719, 13.10000038147, 0, 0, 359.99450683594);
	CreateDynamicObject(970, 1725.0999755859, -1722.1999511719, 13.10000038147, 0, 0, 359.99450683594);
	CreateDynamicObject(970, 1728, -1722.1999511719, 13.10000038147, 0, 0, 359.99450683594);
	CreateDynamicObject(1237, 1737.8000488281, -1722.4000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1739.6999511719, -1723.6999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1742.4000244141, -1725.1999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1743.3000488281, -1717.8000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1700.5999755859, -1722.5, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1699, -1724.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1698.5, -1726.4000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1706.3000488281, -1723.0999755859, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1704.9000244141, -1724.6999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1703.8000488281, -1727.0999755859, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 1700.0999755859, -1717.3000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1731.1999511719, -1713.8000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1729.1999511719, -1713.5999755859, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1726.6999511719, -1713.6999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1735.9000244141, -1722.8000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1731.9000244141, -1723.0999755859, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1728.4000244141, -1722.6999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1724.6999511719, -1723.1999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1721.0999755859, -1723.4000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1715.9000244141, -1723.5, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1712.3000488281, -1722.6999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1709.1999511719, -1723.1999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1724.9000244141, -1713.6999511719, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1716.8000488281, -1713.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1714.4000244141, -1713.8000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1712.8000488281, -1713.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1703.8000488281, -1713.8000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1700.9000244141, -1713.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1699.6999511719, -1716.3000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(673, 1700, -1718.4000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1700, -1720.3000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(673, 1699.5999755859, -1722.1999511719, 12.5, 0, 0, 0);
	//BLITZ AMUNATION
	/*CreateDynamicObject(1892, 1480.9000244141, -1772.4000244141, 17.799999237061, 0, 0, 0);
	CreateDynamicObject(2773, 1480.4000244141, -1770.8000488281, 18.299999237061, 0, 0, 0);
	CreateDynamicObject(2773, 1482.1999511719, -1771, 18.299999237061, 0, 0, 0);
	CreateDynamicObject(2773, 1482.1999511719, -1768.6999511719, 18.299999237061, 0, 0, 0);
	CreateDynamicObject(2773, 1480.4000244141, -1768.4000244141, 18.299999237061, 0, 0, 0);
	CreateDynamicObject(2773, 1483.5, -1772.3000488281, 18.299999237061, 0, 0, 270);
	CreateDynamicObject(2773, 1485.8000488281, -1772.3000488281, 18.299999237061, 0, 0, 270);
	CreateDynamicObject(2773, 1488.1999511719, -1772.5, 18.299999237061, 0, 0, 270);
	CreateDynamicObject(2773, 1490.6999511719, -1772.5999755859, 18.299999237061, 0, 0, 270);
	CreateDynamicObject(2773, 1479.4000244141, -1772.3000488281, 18.299999237061, 0, 0, 270);
	CreateDynamicObject(2773, 1477.1999511719, -1772.3000488281, 18.299999237061, 0, 0, 270);
	CreateDynamicObject(2773, 1474.9000244141, -1772.4000244141, 18.299999237061, 0, 0, 270);
	CreateDynamicObject(3091, 1309.9000244141, -1664.5999755859, 13, 0, 0, 0);
	CreateDynamicObject(3091, 1314.1999511719, -1654, 13, 0, 0, 0);
	CreateDynamicObject(3091, 1295.3000488281, -1641.3000488281, 13, 0, 0, 178);
	CreateDynamicObject(3091, 1299.9000244141, -1657, 13, 0, 0, 177.99499511719);
	CreateDynamicObject(1238, 1312.5999755859, -1691.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5, -1689, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1313.9000244141, -1691.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1315.5999755859, -1691.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5999755859, -1686.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5, -1685.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5999755859, -1682.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.4000244141, -1680.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.4000244141, -1677.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5, -1676, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(3091, 1309.8994140625, -1632.69921875, 13, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1639.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1636.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1634.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1632.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1630.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1628.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.4000244141, -1627.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1625.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1296.6999511719, -1625.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(3091, 1294.5, -1675.0999755859, 13, 0, 0, 177.99499511719);
	CreateDynamicObject(1238, 1317.5, -1676.1999511719, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1317.4000244141, -1673.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.3000488281, -1671.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.1999511719, -1668.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.0999755859, -1664.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.0999755859, -1659.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.1999511719, -1655.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.0999755859, -1657.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.1999511719, -1662.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.3000488281, -1653.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317.0999755859, -1649, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1316.9000244141, -1645.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5999755859, -1650.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5, -1648.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.4000244141, -1647.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.5999755859, -1645.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.4000244141, -1643.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1312.4000244141, -1642.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1313.0999755859, -1642.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1313.6999511719, -1642.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1314.3000488281, -1642.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5999755859, -1657.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.4000244141, -1659.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1662.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1297.5, -1665.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1288.3000488281, -1659.5999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1292.1999511719, -1659.0999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1290.3000488281, -1659.4000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1290.5, -1652.3000488281, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1288.8000488281, -1652.1999511719, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1292.1999511719, -1652.4000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1290.5, -1645.3000488281, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1288.5, -1644.9000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1292.3000488281, -1645.3000488281, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1292.1999511719, -1643.5, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1292.1999511719, -1641.6999511719, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1298.5999755859, -1665.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1299.5, -1665.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1300.5999755859, -1665.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1301.8000488281, -1665.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1302.8000488281, -1665.9000244141, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1302.8000488281, -1658.5999755859, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1302.6999511719, -1660, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1302.8000488281, -1661.5, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1302.9000244141, -1662.8000488281, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1302.8000488281, -1663.6999511719, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1302.9000244141, -1664.6999511719, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1297.9000244141, -1664, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1317, -1691.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1318.4000244141, -1691.3000488281, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1320.0999755859, -1691.3000488281, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1321.8000488281, -1691.1999511719, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1295.0999755859, -1625.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1293.5, -1625.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1291.9000244141, -1625.0999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1290.5, -1625.0999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 1289.3000488281, -1625.1999511719, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(16093, 1840.8994140625, -1541.8994140625, 12.5, 0, 0, 248);
	CreateDynamicObject(1238, 1831.0999755859, -1548.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1830.0999755859, -1552.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1829.5999755859, -1554.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1829.3000488281, -1555.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1828.3000488281, -1554.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1827.5, -1554.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1826.5, -1554.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1825.4000244141, -1554, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1824.8000488281, -1553.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1847.5, -1504.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1848.4000244141, -1498.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1848.8000488281, -1493.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1848.9000244141, -1490.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1841.599609375, -1491.2998046875, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1841.5, -1493.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1841.4000244141, -1496.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1841.3000488281, -1500.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1840.099609375, -1504.7998046875, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1852.0999755859, -1508.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1850.5, -1513.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1848, -1519.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1845.9000244141, -1524.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1844.0999755859, -1527.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1842.5999755859, -1531.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1841.1999511719, -1534.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1839.4000244141, -1508.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1838.1999511719, -1512, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(1238, 1837, -1516.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1835.9000244141, -1519.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1834, -1523.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1832.9000244141, -1526, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1831.9000244141, -1530.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1830.1999511719, -1534.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1829.0999755859, -1538.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1827.8000488281, -1542.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1832.3000488281, -1544.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1833.9000244141, -1539.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1835.0999755859, -1536.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1836.9000244141, -1531.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1838.5, -1526.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1840.6999511719, -1522, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1842.5, -1518.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1844.5, -1513.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1846, -1508.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(3091, 1852, -1491, 13, 0, 0, 353.99743652344);
	CreateDynamicObject(3091, 1827.8000488281, -1552.4000244141, 13, 0, 0, 165.99743652344);
	CreateDynamicObject(16093, 1317.3994140625, -1648.099609375, 12.300000190735, 0, 0, 270);
	CreateDynamicObject(16093, 1291.5, -1632.8000488281, 12.5, 0, 0, 92);
	CreateDynamicObject(1262, 1852, -1491.1999511719, 13.699999809265, 0, 0, 170);
	CreateDynamicObject(1262, 1827.8000488281, -1552.1999511719, 13.39999961853, 0, 0, 349.99694824219);
	CreateDynamicObject(2062, 1840.3000488281, -1491.1999511719, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(2062, 1838.4000244141, -1491.3000488281, 13.10000038147, 0, 0, 0);
	CreateDynamicObject(1238, 1854, -1504.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1854.6999511719, -1500.3000488281, 12.699999809265, 0, 0, 0);*/
	//FAVELA
	CreateDynamicObject(9496, 1363.4954833984,-1983.0158691406,50,355,1,354);
	CreateDynamicObject(9496, 1360.8917236328,-1994.5550537109,51.700000762939,0,359,174);
	CreateDynamicObject(1457, 1299.8148193359,-2044.8081054688,59.081672668457,0,0,0);
	CreateDynamicObject(1457, 1303.9114990234,-2044.8759765625,58.963165283203,0,0,0);
	CreateDynamicObject(1457, 1307.9243164063,-2045.2008056641,58.863250732422,0,0,0);
	CreateDynamicObject(1457, 1312.0933837891,-2045.3374023438,58.748390197754,0,0,0);
	CreateDynamicObject(9247, 1290.0526123047,-2034.3431396484,64.078773498535,0,0,0);
	CreateDynamicObject(9244, 1314.1180419922,-2035.7213134766,62.590431213379,0,0,0);
	CreateDynamicObject(11011, 1342.7686767578,-2020.7103271484,56.85570526123,354,0,0);
	CreateDynamicObject(3599, 1364.4376220703,-2005.8905029297,54.651489257813,0,0,356);
	CreateDynamicObject(3601, 1357.4055175781,-2021.4385986328,59.104644775391,0,0,356);
	CreateDynamicObject(3641, 1324.1909179688,-2005.2229003906,54.741878509521,357,0,0);
	CreateDynamicObject(3644, 1303.2578125,-2015.5344238281,58.536853790283,357,0,0);
	CreateDynamicObject(3702, 1312.533203125,-1975.2122802734,47.077293395996,354,0,82);
	CreateDynamicObject(3702, 1311.3215332031,-1984.1485595703,48.239059448242,358,0,82);
	CreateDynamicObject(3704, 1283.8197021484,-1985.6571044922,54.035034179688,358,0,180);
	CreateDynamicObject(3704, 1314.6586914063,-2151.4855957031,37.10262298584,0,0,0);
	CreateDynamicObject(3704, 1304.4180908203,-2154.9147949219,39.033538818359,0,0,0);
	CreateDynamicObject(3704, 1293.9934082031,-2155.8134765625,38.045150756836,0,0,0);
	CreateDynamicObject(3704, 1285.2930908203,-2154.0048828125,36.429893493652,0,0,0);
	CreateDynamicObject(3702, 1273.0109863281,-2157.3078613281,42.669784545898,6,0,0);
	CreateDynamicObject(3702, 1263.0427246094,-2158.34375,44.60173034668,6,0,0);
	CreateDynamicObject(3702, 1324.7763671875,-2144.3190917969,35.771553039551,6,0,0);
	CreateDynamicObject(3702, 1273.1949462891,-1983.783203125,55.371307373047,358,0,182);
	CreateDynamicObject(3702, 1245.5104980469,-1973.2099609375,57.162803649902,358,0,90);
	CreateDynamicObject(3711, 1246.4119873047,-2156.6691894531,52.058250427246,2,0,0);
	CreateDynamicObject(3764, 1201.0882568359,-2158.5100097656,60.988525390625,0,0,0);
	CreateDynamicObject(3702, 1231.9138183594,-2170.3305664063,50.010139465332,3,0,0);
	CreateDynamicObject(3702, 1221.8814697266,-2173.5336914063,50.71363067627,2,0,0);
	CreateDynamicObject(3704, 1216.6502685547,-1966.8453369141,57.19104385376,12,0,180);
	CreateDynamicObject(3704, 1205.5405273438,-1965.0552978516,57.079872131348,11,0,179.99450683594);
	CreateDynamicObject(9228, 1252.4655761719,-1960.8485107422,54.043643951416,350,0,0);
	CreateDynamicObject(3704, 1232.6240234375,-1994.1877441406,63.142601013184,4,0,90);
	CreateDynamicObject(3704, 1394.7258300781,-2009.3999023438,49.132797241211,0,0,180);
	CreateDynamicObject(3702, 1463.2316894531,-2015.3135986328,42.438354492188,6,0,90);
	CreateDynamicObject(3704, 1459.3072509766,-2025.2749023438,42.728561401367,11,0,90);
	CreateDynamicObject(3704, 1438.4604492188,-2052.2729492188,46.182571411133,6,0,0);
	CreateDynamicObject(3704, 1427.0236816406,-2063.3156738281,44.674217224121,6,0,0);
	CreateDynamicObject(3702, 1413.001953125,-2070.2465820313,46.985534667969,6,0,0);
	CreateDynamicObject(3704, 1401.8892822266,-2074.5100097656,46.128288269043,6,0,0);
	CreateDynamicObject(3702, 1391.8743896484,-2079.1179199219,48.58960723877,6,0,0);
	CreateDynamicObject(3700, 1164.3978271484,-2098.3962402344,71.434425354004,0,5,0);
	CreateDynamicObject(3762, 1184.3758544922,-2096.0454101563,70.195182800293,0,0,180);
	CreateDynamicObject(11443, 1157.4636230469,-2059.3991699219,68.0078125,0,0,90);
	CreateDynamicObject(11442, 1165.5202636719,-2048.7973632813,68.0078125,0,0,90);
	CreateDynamicObject(11441, 1154.0891113281,-2052.9140625,68.000610351563,0,0,180);
	CreateDynamicObject(11445, 1159.2158203125,-2012.6358642578,68.0078125,0,0,180);
	CreateDynamicObject(11428, 1195.666015625,-2052.1545410156,73.911285400391,0,0,180);
	CreateDynamicObject(11458, 1190.5307617188,-2024.9602050781,68.0078125,0,0,0);
	CreateDynamicObject(11445, 1189.53125,-2018.3597412109,68.0078125,0,0,0);
	CreateDynamicObject(11442, 1202.091796875,-2019.4172363281,68.0078125,0,0,90);
	CreateDynamicObject(11442, 1158.3973388672,-2023.173828125,68.000610351563,0,0,0);
	CreateDynamicObject(11440, 1325.41015625,-2073.2111816406,54.945289611816,0,354,90);
	CreateDynamicObject(10432, 1160.0200195313,-1951.9904785156,50.253776550293,0,354,270);
	CreateDynamicObject(3594,1433.12658691,-1887.28430176,13.11890316,0.00000000,0.00000000,92.00000000); //object(la_fuckcar1) (1)
	CreateDynamicObject(3594,1420.74438477,-1887.25195312,13.11890316,0.00000000,0.00000000,91.99951172); //object(la_fuckcar1) (2)
	CreateDynamicObject(3594,1420.74414062,-1887.25195312,14.06890774,0.00000000,0.00000000,91.99951172); //object(la_fuckcar1) (3)
	CreateDynamicObject(3594,1433.12597656,-1887.28417969,14.14390659,0.00000000,0.00000000,91.99951172); //object(la_fuckcar1) (4)
	CreateDynamicObject(3594,1426.72534180,-1889.91491699,13.09390354,0.00000000,0.00000000,145.49951172); //object(la_fuckcar1) (5)
	CreateDynamicObject(1265,1435.86315918,-1885.63964844,13.04121590,0.00000000,0.00000000,0.00000000); //object(blackbag2) (1)
	CreateDynamicObject(1265,1435.94152832,-1884.79406738,13.04121590,0.00000000,0.00000000,0.00000000); //object(blackbag2) (2)
	CreateDynamicObject(1265,1435.28479004,-1885.29345703,13.04121590,0.00000000,0.00000000,0.00000000); //object(blackbag2) (3)
	CreateDynamicObject(1327,1436.47290039,-1883.47204590,13.43904114,0.00000000,0.00000000,0.00000000); //object(junk_tyre) (1)
	CreateDynamicObject(1344,1434.73608398,-1883.09277344,13.36869431,0.00000000,0.00000000,220.00000000); //object(cj_dumpster2) (1)
	CreateDynamicObject(1344,1430.45153809,-1885.42187500,13.14369774,0.00000000,0.00000000,179.99572754); //object(cj_dumpster2) (2)
	CreateDynamicObject(1344,1422.64221191,-1885.53356934,13.19369698,0.00000000,0.00000000,179.74450684); //object(cj_dumpster2) (3)
	CreateDynamicObject(7655,1432.51000977,-1898.29406738,21.81389236,0.00000000,0.00000000,0.00000000); //object(bunting06) (1)
	CreateDynamicObject(1531,1436.39477539,-1894.04504395,14.69800091,0.00000000,0.00000000,0.00000000); //object(tag_azteca) (1)
	CreateDynamicObject(1226,1430.52270508,-1892.19519043,16.47204781,0.00000000,0.00000000,0.00000000); //object(lamppost3) (1)
	CreateDynamicObject(1226,1430.67077637,-1904.32043457,16.47204781,0.00000000,0.00000000,0.00000000); //object(lamppost3) (2)
	CreateDynamicObject(3861,1418.54064941,-1892.05285645,14.01231575,0.00000000,0.00000000,90.00000000); //object(marketstall01_sfxrf) (1)
	CreateDynamicObject(3285,1435.23657227,-1898.23657227,14.44417763,0.00000000,0.00000000,0.00000000); //object(conhoos4) (1)
	CreateDynamicObject(3356,1437.89819336,-1911.51123047,17.54883194,0.00000000,358.00000000,270.25000000); //object(cxrf_savhus2_) (1)
	CreateDynamicObject(3362,1418.56726074,-1898.86621094,12.65100288,0.00000000,0.00000000,359.50000000); //object(des_ruin2_) (1)
	CreateDynamicObject(3558,1432.01904297,-1926.86096191,16.18788338,0.00000000,2.50000000,61.00000000); //object(compmedhos5_lae) (1)
	CreateDynamicObject(3582,1426.15527344,-1933.00891113,17.09457588,0.00000000,3.00000000,34.75000000); //object(compmedhos1_lae) (1)
	CreateDynamicObject(3589,1417.23413086,-1938.23815918,17.68680191,0.00000000,3.75000000,13.00000000); //object(compfukhouse3) (1)
	CreateDynamicObject(3595,1403.63647461,-1950.40270996,15.72089577,0.00000000,0.00000000,0.00000000); //object(dingbat01aex_la) (1)
	CreateDynamicObject(3597,1407.60302734,-1899.86743164,12.11448669,0.00000000,0.00000000,180.00000000); //object(dingbat01bex_la) (1)
	CreateDynamicObject(3601,1388.36560059,-1945.27490234,20.70123291,0.00000000,0.00000000,359.00000000); //object(hillhouse04_la) (1)
	CreateDynamicObject(3602,1376.14367676,-1941.49731445,15.95069695,0.24960327,356.74996948,170.01416016); //object(hillhouse05_la) (1)
	CreateDynamicObject(3612,1360.20898438,-1935.74060059,13.11314964,355.75000000,179.74926758,259.98132324); //object(hillhouse12_la) (1)
	CreateDynamicObject(3612,1392.34338379,-1915.04687500,11.53812790,354.74853516,180.49987793,263.04089355); //object(hillhouse12_la) (2)
	CreateDynamicObject(2970,1360.57507324,-1932.08288574,19.08064651,3.75000000,0.00000000,80.25003052); //object(dts_bbdoor) (1)
	CreateDynamicObject(3612,1408.25988770,-1915.20446777,10.03813553,354.74304199,180.49987793,276.79016113); //object(hillhouse12_la) (3)
	CreateDynamicObject(17564,1413.62036133,-1918.37829590,16.25537872,359.50646973,350.74963379,187.41961670); //object(tempdoor_lae2) (1)
	CreateDynamicObject(16637,1367.87219238,-1933.39086914,19.79835129,355.75036621,359.24792480,260.19424438); //object(ghostgardoor) (1)
	CreateDynamicObject(16637,1368.09619141,-1933.40380859,22.82332039,355.74829102,359.24743652,260.18920898); //object(ghostgardoor) (2)
	CreateDynamicObject(14762,1361.37329102,-1932.20642090,22.53176498,3.99996948,0.25061035,79.98248291); //object(arsewinows) (1)
	CreateDynamicObject(14740,1396.53234863,-1919.27038574,20.96345711,355.00000000,0.25094604,262.77188110); //object(ryblinds) (1)
	CreateDynamicObject(17698,1357.60070801,-1944.66491699,27.85856819,355.75000000,0.00000000,259.75000000); //object(sweetshou1_lae2) (1)
	CreateDynamicObject(3612,1358.96203613,-1942.76306152,13.11314964,355.74829102,179.74731445,259.98046875); //object(hillhouse12_la) (4)
	CreateDynamicObject(16285,1379.90234375,-1945.44897461,22.72335434,0.99938965,357.99969482,176.78485107); //object(des_westrn7_03) (1)
	CreateDynamicObject(16105,1374.62890625,-1936.93322754,24.97857094,0.00000000,356.75000000,171.25000000); //object(des_westrn11_04) (1)
	CreateDynamicObject(12991,1414.62158203,-1913.92663574,21.26737213,0.00000000,355.00000000,186.75000000); //object(sw_shack02) (1)
	CreateDynamicObject(11503,1383.51403809,-1940.80041504,29.05702019,0.00000000,0.00000000,179.00000000); //object(des_westrn11_05) (1)
	CreateDynamicObject(11501,1372.08374023,-1946.07128906,23.09569168,0.00000000,0.00000000,174.75000000); //object(des_westrn9_03) (1)
	CreateDynamicObject(11433,1392.96337891,-1914.67773438,25.16783905,0.00000000,5.25000000,354.00000000); //object(adobe_hoose2) (1)
	CreateDynamicObject(5520,1342.14416504,-1935.00024414,25.32745361,0.00000000,355.50000000,168.00000000); //object(bdupshouse_lae) (1)
	CreateDynamicObject(4824,1373.00329590,-1889.14904785,11.14252281,0.00000000,0.00000000,89.25000000); //object(lasgrifsteps2) (1)
	CreateDynamicObject(11472,1340.27319336,-1937.70520020,25.06469727,0.00000000,0.00000000,78.00000000); //object(des_swtstairs1) (1)
	CreateDynamicObject(11495,1410.33166504,-1927.18408203,22.33906555,353.25000000,0.00000000,343.50000000); //object(des_ranchjetty) (1)
	CreateDynamicObject(2970,1387.63635254,-1918.00195312,17.23067474,3.74633789,0.00000000,80.24963379); //object(dts_bbdoor) (2)
	CreateDynamicObject(3865,1396.82214355,-1907.88928223,17.85015869,0.00000000,0.00000000,0.00000000); //object(concpipe_sfxrf) (1)
	CreateDynamicObject(3865,1393.19409180,-1907.48388672,18.05015564,0.00000000,0.00000000,0.00000000); //object(concpipe_sfxrf) (2)
	CreateDynamicObject(3865,1395.13269043,-1907.70056152,20.95015335,0.00000000,0.00000000,0.00000000); //object(concpipe_sfxrf) (3)
	CreateDynamicObject(3865,1389.86657715,-1907.11340332,18.27515984,0.00000000,0.00000000,0.00000000); //object(concpipe_sfxrf) (4)
	CreateDynamicObject(3502,1420.08630371,-1907.98669434,14.65282249,359.00000000,359.49993896,339.99124146); //object(vgsn_con_tube) (1)
	CreateDynamicObject(3612,1354.12915039,-1907.67041016,9.08812714,354.74298096,180.49987793,258.04016113); //object(hillhouse12_la) (5)
	CreateDynamicObject(3612,1355.56652832,-1900.73828125,9.13812637,354.73754883,180.49987793,258.03588867); //object(hillhouse12_la) (6)
	CreateDynamicObject(3612,1337.59863281,-1904.17834473,10.63809967,354.73751831,180.49987793,258.03588867); //object(hillhouse12_la) (7)
	CreateDynamicObject(3612,1339.08410645,-1897.24597168,10.68809891,354.73754883,180.49987793,258.03588867); //object(hillhouse12_la) (8)
	CreateDynamicObject(3763,1413.12890625,-1905.60412598,53.35599136,0.00000000,0.00000000,0.00000000); //object(ce_radarmast3) (1)
	CreateDynamicObject(3887,1303.86779785,-1929.51062012,27.15031433,0.00000000,0.00000000,257.75000000); //object(demolish4_sfxrf) (1)
	CreateDynamicObject(1535,1356.11730957,-1938.14001465,25.82145691,0.00000000,5.25000000,349.50000000); //object(gen_doorext14) (1)*/
	//RESIDENCIAS
	/*CreateDynamicObject(3246, 1865.5, -1247.5999755859, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(3246, 1872.3000488281, -1247.5, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(3246, 1879.5, -1247.5, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(3246, 1887.1999511719, -1247.8000488281, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(3246, 1895, -1248, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(3246, 1902, -1248.1999511719, 12.300000190735, 0, 0, 0);
	CreateDynamicObject(3246, 1909.8000488281, -1248.4000244141, 12.300000190735, 0, 0, 0);
	CreateDynamicObject(3246, 1916.9000244141, -1248.0999755859, 13.60000038147, 0, 0, 6);
	CreateDynamicObject(3246, 1924.4000244141, -1248, 14.699999809265, 0, 0, 5.99853515625);
	CreateDynamicObject(3285, 1934, -1246.5999755859, 19.10000038147, 0, 0, 270);
	CreateDynamicObject(3285, 1946.8000488281, -1245.0999755859, 20.299999237061, 0, 0, 270);
	CreateDynamicObject(3285, 1958.5, -1244.6999511719, 20.799999237061, 0, 0, 270);
	CreateDynamicObject(3362, 1865.0999755859, -1237.5999755859, 13.199999809265, 0, 0, 268);
	CreateDynamicObject(3362, 1873.5999755859, -1238.4000244141, 12.60000038147, 0, 0, 267.99499511719);
	CreateDynamicObject(3362, 1882.4000244141, -1238.0999755859, 13.300000190735, 0, 0, 91.994995117188);
	CreateDynamicObject(3362, 1890.5, -1237.5, 14.10000038147, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1898.3000488281, -1239.4000244141, 13.89999961853, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1906.3000488281, -1237.6999511719, 14.800000190735, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1914.6999511719, -1238, 15.39999961853, 0, 0, 85.994018554688);
	CreateDynamicObject(3362, 1922.6999511719, -1238.4000244141, 16.10000038147, 0, 0, 85.989990234375);
	CreateDynamicObject(3362, 1931.8000488281, -1238.6999511719, 16.89999961853, 0, 0, 85.989990234375);
	CreateDynamicObject(3362, 1943.5, -1236.5, 17.89999961853, 0, 0, 91.988525390625);
	CreateDynamicObject(3362, 1865.9000244141, -1231.3000488281, 14.39999961853, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1874.1999511719, -1231.0999755859, 13.699999809265, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1882.5999755859, -1231.5999755859, 14, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1890.8000488281, -1230.9000244141, 14.10000038147, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1899.5, -1231, 13.800000190735, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1908, -1230.9000244141, 14.800000190735, 0, 0, 91.994018554688);
	CreateDynamicObject(3362, 1916.3000488281, -1231, 15.5, 0, 0, 87.994018554688);
	CreateDynamicObject(3362, 1925.5999755859, -1231.4000244141, 16.5, 0, 0, 87.989501953125);
	CreateDynamicObject(3362, 1936, -1232.9000244141, 16.89999961853, 0, 0, 79.989501953125);
	CreateDynamicObject(3454, 1880.5, -1220.5, 19, 0, 0, 0);
	CreateDynamicObject(3454, 1910.0999755859, -1219.0999755859, 19.5, 0, 0, 0);
	CreateDynamicObject(3362, 1930.1999511719, -1219.0999755859, 18.5, 0, 0, 65.988525390625);
	CreateDynamicObject(3362, 1938.4000244141, -1223, 18.60000038147, 0, 0, 65.98388671875);
	CreateDynamicObject(3362, 1946, -1227.5999755859, 18.299999237061, 0, 0, 83.98388671875);
	CreateDynamicObject(3362, 1954.1999511719, -1230.4000244141, 17.799999237061, 0, 0, 87.9794921875);
	CreateDynamicObject(3362, 1955.9000244141, -1223.5, 18, 0, 0, 87.978515625);
	CreateDynamicObject(3362, 1948.1999511719, -1220.0999755859, 18, 0, 0, 71.978515625);
	CreateDynamicObject(3362, 1958.3000488281, -1236.5999755859, 18.200000762939, 0, 0, 87.978515625);
	CreateDynamicObject(3588, 1889.1999511719, -1162.8000488281, 25, 0, 0, 268);
	CreateDynamicObject(3595, 1871.4000244141, -1199.5999755859, 24.39999961853, 0, 0, 268);
	CreateDynamicObject(3595, 1898, -1190.6999511719, 25.299999237061, 0, 0, 165.99499511719);
	CreateDynamicObject(3596, 1917.0999755859, -1188.6999511719, 22.200000762939, 0, 0, 0);
	CreateDynamicObject(3597, 1919.1999511719, -1155.5, 26.89999961853, 0, 0, 176);
	CreateDynamicObject(3362, 1932.5999755859, -1186.6999511719, 19, 0, 0, 93.976928710938);
	CreateDynamicObject(3362, 1933.0999755859, -1179.1999511719, 19, 0, 0, 93.971557617188);
	CreateDynamicObject(3362, 1942.9000244141, -1182.5, 19, 0, 0, 93.971557617188);
	CreateDynamicObject(3362, 1942.9000244141, -1176.9000244141, 18.700000762939, 0, 0, 93.971557617188);
	CreateDynamicObject(3362, 1953.5, -1178.0999755859, 19, 0, 0, 93.971557617188);
	CreateDynamicObject(3362, 1952.9000244141, -1171.9000244141, 19, 0, 0, 93.971557617188);
	CreateDynamicObject(3362, 1934.5999755859, -1164.1999511719, 19.799999237061, 0, 0, 97.971557617188);
	CreateDynamicObject(3362, 1943, -1162.5999755859, 19.60000038147, 0, 0, 97.970581054688);
	CreateDynamicObject(3362, 1950.9000244141, -1160.9000244141, 19.299999237061, 0, 0, 97.970581054688);
	CreateDynamicObject(3362, 1951, -1153.0999755859, 20.200000762939, 0, 0, 97.970581054688);
	CreateDynamicObject(3362, 1942.3000488281, -1154.4000244141, 20.700000762939, 0, 0, 97.970581054688);
	CreateDynamicObject(3362, 1933.5999755859, -1155.9000244141, 20.799999237061, 0, 0, 97.970581054688);
	CreateDynamicObject(3362, 1934.1999511719, -1148.5999755859, 23.39999961853, 0, 0, 89.970581054688);
	CreateDynamicObject(3600, 1986.5999755859, -1168.9000244141, 19.89999961853, 0, 0, 88);
	CreateDynamicObject(3601, 2018.6999511719, -1153.1999511719, 28, 0, 0, 0);
	CreateDynamicObject(3601, 2035.9000244141, -1153.1999511719, 29.10000038147, 0, 0, 0);
	CreateDynamicObject(3601, 2049.1999511719, -1154.5999755859, 29, 0, 0, 0);
	CreateDynamicObject(3644, 2012.1999511719, -1172.4000244141, 22, 0, 0, 0);
	CreateDynamicObject(3651, 2049.1999511719, -1170.4000244141, 25.200000762939, 0, 0, 0);
	CreateDynamicObject(3651, 2033.4000244141, -1172, 24.700000762939, 0, 0, 0);
	CreateDynamicObject(3651, 2019.9000244141, -1191.3000488281, 22.200000762939, 0, 0, 0);
	CreateDynamicObject(3655, 2049.6000976563, -1186, 25.5, 0, 0, 0);
	CreateDynamicObject(3676, 2047.3000488281, -1200.8000488281, 26.89999961853, 0, 0, 0);
	CreateDynamicObject(3759, 2051.1000976563, -1225.4000244141, 25.89999961853, 0, 0, 90);
	CreateDynamicObject(3362, 2040.5, -1225.4000244141, 21.299999237061, 0, 0, 97.970581054688);
	CreateDynamicObject(3820, 2047.6999511719, -1239.3000488281, 27.200000762939, 0, 0, 0);
	CreateDynamicObject(3362, 2053, -1248.4000244141, 22.200000762939, 0, 0, 269.97058105469);
	CreateDynamicObject(3362, 2044.5999755859, -1248.5, 22, 0, 0, 269.96704101563);
	CreateDynamicObject(3362, 2036.6999511719, -1248.5, 22, 0, 0, 269.96704101563);
	CreateDynamicObject(3362, 2028.8000488281, -1248.5999755859, 22.200000762939, 0, 0, 269.96704101563);
	CreateDynamicObject(3362, 2020.8000488281, -1248.3000488281, 22.200000762939, 0, 0, 269.96704101563);
	CreateDynamicObject(3362, 2013.1999511719, -1248.8000488281, 22, 0, 0, 271.96704101563);
	CreateDynamicObject(3362, 2034.9000244141, -1242.1999511719, 21.299999237061, 0, 0, 271.96704101563);
	CreateDynamicObject(3362, 2033.3000488281, -1235.5999755859, 20.799999237061, 0, 0, 271.96655273438);
	CreateDynamicObject(3362, 2019.3000488281, -1242.8000488281, 21.299999237061, 0, 0, 271.96655273438);
	CreateDynamicObject(3362, 2011.1999511719, -1243.6999511719, 20.89999961853, 0, 0, 271.96655273438);
	CreateDynamicObject(3362, 2003, -1247.4000244141, 21.39999961853, 0, 0, 271.96655273438);
	CreateDynamicObject(3362, 2002.6999511719, -1241.9000244141, 19.799999237061, 0, 0, 271.96655273438);
	CreateDynamicObject(3362, 1994.5999755859, -1241.9000244141, 19, 0, 0, 271.96655273438);
	CreateDynamicObject(3362, 1995.0999755859, -1247.3000488281, 20.200000762939, 0, 0, 271.96655273438);
	CreateDynamicObject(3824, 1996.5999755859, -1223.5, 22.299999237061, 0, 0, 276);
	CreateDynamicObject(3362, 2024.0999755859, -1235.8000488281, 21.200000762939, 0, 0, 271.96655273438);
	CreateDynamicObject(3362, 2014.5999755859, -1236.1999511719, 20.89999961853, 0, 0, 275.96655273438);
	CreateDynamicObject(3362, 2004.9000244141, -1235.6999511719, 19.799999237061, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 1992.5999755859, -1236.1999511719, 18.700000762939, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2007.4000244141, -1226.4000244141, 19.10000038147, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2006.0999755859, -1219.4000244141, 18.89999961853, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2017.0999755859, -1226, 19.700000762939, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2016.8000488281, -1220.1999511719, 19.799999237061, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2015.3000488281, -1213.0999755859, 18.89999961853, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2025.6999511719, -1225.4000244141, 20.39999961853, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2025, -1219.4000244141, 20.39999961853, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2024.8000488281, -1213.1999511719, 20.299999237061, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2033.5, -1220.0999755859, 20.60000038147, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2043, -1218.5999755859, 21.299999237061, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2032.5999755859, -1210.5, 20.5, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2033.9000244141, -1202.3000488281, 20.299999237061, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2024.5, -1201.3000488281, 19.10000038147, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2031.5, -1183.5, 20.200000762939, 0, 0, 275.96557617188);
	CreateDynamicObject(3362, 2032.5999755859, -1192.6999511719, 20, 0, 0, 275.96557617188);
	CreateDynamicObject(1226, 2189.5, -1811.0999755859, 16.39999961853, 0, 0, 0);
	CreateDynamicObject(1226, 2189.5, -1786.7998046875, 16.299999237061, 0, 0, 0);
	CreateDynamicObject(1226, 2191.1999511719, -1760.4000244141, 16.39999961853, 0, 0, 0);
	CreateDynamicObject(1226, 2166.1000976563, -1791.8000488281, 16.200000762939, 0, 0, 88);
	CreateDynamicObject(16093, 2191.1999511719, -1767.3000488281, 15.300000190735, 0, 0, 270);
	CreateDynamicObject(1238, 2187.1000976563, -1758.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2187.1000976563, -1757, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2184, -1768.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2184.1000976563, -1771.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2184.1999511719, -1775, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2187.1000976563, -1755.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(669, 2176.3999023438, -1760, 9.3000001907349, 0, 0, 0);
	CreateDynamicObject(669, 2192.1999511719, -1757.8000488281, 11.300000190735, 0, 0, 0);
	CreateDynamicObject(669, 2192.1000976563, -1749.3000488281, 10.800000190735, 0, 0, 0);
	CreateDynamicObject(669, 2168.5, -1759.9000244141, 10.800000190735, 0, 0, 0);
	CreateDynamicObject(669, 2191.3000488281, -1778.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(669, 2191.1000976563, -1779.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(669, 2191.6999511719, -1784.3000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(669, 2191.1999511719, -1772.5, 15.800000190735, 0, 0, 0);
	CreateDynamicObject(669, 2189.6999511719, -1778.5, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(669, 2191.5, -1801, 12.5, 0, 0, 0);
	CreateDynamicObject(669, 2191.6000976563, -1791.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(669, 2191.6000976563, -1812.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(669, 2178.3999023438, -1766.3000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(669, 2178.1999511719, -1776.3000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(669, 2178.5, -1784.0999755859, 12.5, 0, 0, 0);
	CreateDynamicObject(669, 2172.6999511719, -1788.5999755859, 12.5, 0, 0, 0);
	CreateDynamicObject(1238, 2187.1000976563, -1759.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2186.5, -1761.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2187.8999023438, -1763.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2188.1000976563, -1764.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2188, -1766.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2188, -1768.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2187.8999023438, -1770.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2187.8999023438, -1772.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2187.8000488281, -1774.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2180, -1763.0999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2179.8999023438, -1766.5, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2179.8999023438, -1770.0999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2179.6999511719, -1777.9000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2179.8000488281, -1773.0999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2179.6000976563, -1760.9000244141, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2178.6999511719, -1759.3000488281, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2177, -1758.0999755859, 12.89999961853, 0, 0, 0);
	CreateDynamicObject(1238, 2182.3000488281, -1756.0999755859, 12.699999809265, 0, 0, 0);*/
	//ESTADIO DE FUTEBOL
	CreateDynamicObject(987, 1397.5999755859, 2099, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(987, 1385.9000244141, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1374.0999755859, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1362.0999755859, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1350.0999755859, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1338.0999755859, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1326.0999755859, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1314.1999511719, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1302.1999511719, 2099.5, 10, 0, 0, 0);
	CreateDynamicObject(987, 1297.5999755859, 2099.3000488281, 10, 0, 0, 0);
	CreateDynamicObject(982, 1308.0999755859, 2217.1000976563, 23.200000762939, 0, 0, 90);
	CreateDynamicObject(982, 1333.8000488281, 2217.1000976563, 23.200000762939, 0, 0, 90);
	CreateDynamicObject(982, 1359.5, 2217.1999511719, 23.10000038147, 0, 0, 90);
	CreateDynamicObject(982, 1385.1999511719, 2217.1999511719, 23.10000038147, 0, 0, 90);
	CreateDynamicObject(982, 1407.0999755859, 2212.3999023438, 23.200000762939, 0, 0, 68);
	CreateDynamicObject(982, 1411.9000244141, 2205.8999023438, 23.200000762939, 0, 0, 45.999877929688);
	CreateDynamicObject(982, 1416.5999755859, 2193.8999023438, 23.200000762939, 0, 0, 21.999755859375);
	CreateDynamicObject(982, 1415.6999511719, 2183.6000976563, 23.200000762939, 0, 0, 359.99462890625);
	CreateDynamicObject(982, 1415.6999511719, 2157.8999023438, 23.200000762939, 0, 0, 0);
	CreateDynamicObject(982, 1415.6999511719, 2132.1999511719, 23.200000762939, 0, 0, 0);
	CreateDynamicObject(982, 1415.6999511719, 2111.3999023438, 23.200000762939, 0, 0, 0);
	CreateDynamicObject(994, 1406, 2183.1999511719, 16.200000762939, 0, 0, 0);
	CreateDynamicObject(994, 1408.5999755859, 2183.1000976563, 17.200000762939, 0, 0, 0);
	CreateDynamicObject(994, 1411, 2183, 18.200000762939, 0, 0, 0);
	CreateDynamicObject(994, 1414.0999755859, 2182.8999023438, 19.200000762939, 0, 0, 0);
	CreateDynamicObject(994, 1398.6999511719, 2179.3000488281, 13.89999961853, 0, 0, 0);
	CreateDynamicObject(994, 1398.6999511719, 2187.1000976563, 13.800000190735, 0, 0, 0);
	CreateDynamicObject(994, 1400.5999755859, 2187.1000976563, 14.800000190735, 0, 0, 0);
	CreateDynamicObject(994, 1400.5999755859, 2179.3000488281, 14.89999961853, 0, 0, 0);
	CreateDynamicObject(994, 1403.3000488281, 2187.1000976563, 15.800000190735, 0, 0, 0);
	CreateDynamicObject(994, 1403.3000488281, 2179.3000488281, 15.89999961853, 0, 0, 0);
	CreateDynamicObject(994, 1407.6999511719, 2179.3000488281, 16.89999961853, 0, 0, 0);
	CreateDynamicObject(994, 1407.9000244141, 2187.1000976563, 16.799999237061, 0, 0, 0);
	CreateDynamicObject(994, 1410.6999511719, 2179.3000488281, 17.89999961853, 0, 0, 0);
	CreateDynamicObject(994, 1410.9000244141, 2187.1000976563, 17.799999237061, 0, 0, 0);
	CreateDynamicObject(994, 1414, 2187.1000976563, 18.799999237061, 0, 0, 0);
	CreateDynamicObject(994, 1413.8000488281, 2179.1999511719, 18.89999961853, 0, 0, 0);
	CreateDynamicObject(974, 1410.5999755859, 2186.1000976563, 13.800000190735, 0, 0, 0);
	CreateDynamicObject(974, 1410.5999755859, 2187.1000976563, 13.800000190735, 0, 0, 0);
	CreateDynamicObject(970, 1397.6999511719, 2101.6999511719, 14.699999809265, 0, 0, 269.75);
	CreateDynamicObject(970, 1397.6999511719, 2105.8000488281, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2109.8999023438, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2114, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2118.1000976563, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2122.1999511719, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2126.3000488281, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2130.3999023438, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2134.5, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2138.6000976563, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2142.3999023438, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2146.6000976563, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2150.8000488281, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2155, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2159.1999511719, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2163.1999511719, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2167.1999511719, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2171.1999511719, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2175.3000488281, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2179.3000488281, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2183.3000488281, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2187.3000488281, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(970, 1397.6999511719, 2191.3999023438, 14.699999809265, 0, 0, 269.74731445313);
	CreateDynamicObject(997, 1396.5999755859, 2195.8999023438, 13.60000038147, 0, 0, 293.75);
	CreateDynamicObject(970, 1395.4000244141, 2196.8000488281, 14.699999809265, 0, 0, 314.99731445313);
	CreateDynamicObject(970, 1389.9000244141, 2199, 14.699999809265, 0, 0, 359.99450683594);
	CreateDynamicObject(970, 1385.6999511719, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1381.5, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1377.1999511719, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1373.0999755859, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1369, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1364.8000488281, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1360.6999511719, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1356.5999755859, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1352.5, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1348.4000244141, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1344.3000488281, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1340.1999511719, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1336.0999755859, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1332, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1327.9000244141, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1323.8000488281, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1319.6999511719, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1315.5999755859, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1311.5, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1307.5, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1303.4000244141, 2199, 14.699999809265, 0, 0, 359.98901367188);
	CreateDynamicObject(970, 1299.3000488281, 2199, 14.699999809265, 0, 0, 359.98352050781);
	CreateDynamicObject(1411, 1300.6999511719, 2200.3999023438, 15.199999809265, 0, 0, 0.24951171875);
	CreateDynamicObject(997, 1299, 2206.6999511719, 16.5, 0, 0, 0);
	CreateDynamicObject(997, 1328.5999755859, 2206.6999511719, 16.5, 0, 0, 0);
	CreateDynamicObject(997, 1358.4000244141, 2206.8000488281, 16.5, 0, 0, 0);
	CreateDynamicObject(997, 1405.1999511719, 2184.8000488281, 16.5, 0, 0, 270);
	CreateDynamicObject(997, 1405.3000488281, 2155.1000976563, 16.5, 0, 0, 270);
	CreateDynamicObject(997, 1405.5, 2125.5, 16.5, 0, 0, 270);
	CreateDynamicObject(987, 1554.1999511719, 2241.5, 9.8000001907349, 0, 0, 90);
	CreateDynamicObject(987, 1554.1999511719, 2252.8999023438, 9.8000001907349, 0, 0, 90);
	CreateDynamicObject(987, 1554.0999755859, 2264.8999023438, 9.8000001907349, 0, 0, 90);
	CreateDynamicObject(987, 1554.0999755859, 2276.8999023438, 9.8000001907349, 0, 0, 90);
	CreateDynamicObject(987, 1554.0999755859, 2288.8999023438, 9.8000001907349, 0, 0, 116);
	CreateDynamicObject(987, 1549, 2299.6999511719, 9.8000001907349, 0, 0, 179.9990234375);
	CreateDynamicObject(987, 1537.0999755859, 2299.6000976563, 9.8000001907349, 0, 0, 179.99450683594);
	CreateDynamicObject(987, 1525.0999755859, 2299.6000976563, 9.8000001907349, 0, 0, 179.99450683594);
	CreateDynamicObject(987, 1542.3000488281, 2242, 9.8000001907349, 0, 0, 357.99450683594);
	CreateDynamicObject(987, 1530.3000488281, 2242.3999023438, 9.8000001907349, 0, 0, 357.98950195313);
	CreateDynamicObject(987, 1518.3000488281, 2242.8000488281, 9.8000001907349, 0, 0, 357.98950195313);
	CreateDynamicObject(987, 1506.4000244141, 2243.3000488281, 9.8000001907349, 0, 0, 357.98950195313);
	CreateDynamicObject(987, 1494.3000488281, 2243.8000488281, 10, 0, 0, 357.98950195313);
	CreateDynamicObject(987, 1482.4000244141, 2243, 10, 0, 0, 3.989501953125);
	CreateDynamicObject(988, 1479.8000488281, 2243.3999023438, 10.89999961853, 0, 0, 354);
	CreateDynamicObject(991, 1300.0999755859, 2208.5, 12.5, 0, 0, 0);
	CreateDynamicObject(994, 1397.6999511719, 2187.1000976563, 13.60000038147, 0, 0, 0);
	CreateDynamicObject(997, 1391.3000488281, 2199.3999023438, 13.60000038147, 0, 0, 337.74694824219);
	CreateDynamicObject(997, 1396.5999755859, 2195.8999023438, 14.699999809265, 0, 0, 293.74169921875);
	CreateDynamicObject(997, 1391.3000488281, 2199.3999023438, 14.60000038147, 0, 0, 337.74145507813);
	CreateDynamicObject(994, 1397.6999511719, 2179.3000488281, 13.60000038147, 0, 0, 0);
	CreateDynamicObject(997, 1407.1999511719, 2178.3999023438, 11.10000038147, 0, 0, 0);
	CreateDynamicObject(997, 1408.8000488281, 2177.8999023438, 11, 0, 0, 0);
	CreateDynamicObject(3864, 1420.1999511719, 2123.1999511719, 34.799999237061, 0, 0, 0);
	CreateDynamicObject(3864, 1419.6999511719, 2153.5, 34.799999237061, 0, 0, 0);
	CreateDynamicObject(3864, 1419.5999755859, 2182.6999511719, 34.799999237061, 0, 0, 0);
	CreateDynamicObject(3864, 1360.1999511719, 2218.6999511719, 28.5, 0, 0, 90);
	CreateDynamicObject(3864, 1330.3000488281, 2218.8000488281, 28.60000038147, 0, 0, 90);
	CreateDynamicObject(3864, 1300.9000244141, 2218.8999023438, 28.60000038147, 0, 0, 90);
	CreateDynamicObject(3864, 1393.3000488281, 2100.8999023438, 16.10000038147, 0, 0, 270);
	CreateDynamicObject(3864, 1294.0999755859, 2197.1000976563, 16.5, 0, 0, 240);
	CreateDynamicObject(3864, 1363.5999755859, 2101.1000976563, 16.10000038147, 0, 0, 270);
	CreateDynamicObject(3864, 1330.6999511719, 2101.1999511719, 16.10000038147, 0, 0, 270);
	CreateDynamicObject(3864, 1309.8000488281, 2101.1999511719, 16.10000038147, 0, 0, 270);
	CreateDynamicObject(3864, 1298.0999755859, 2114.6000976563, 16.10000038147, 0, 0, 182);
	CreateDynamicObject(3864, 1298.1999511719, 2135.6000976563, 16.10000038147, 0, 0, 181.99951171875);
	CreateDynamicObject(3864, 1298, 2156.3000488281, 16.10000038147, 0, 0, 181.99951171875);
	CreateDynamicObject(3864, 1298.3000488281, 2176.1999511719, 16.10000038147, 0, 0, 181.99951171875);
	CreateDynamicObject(3864, 1298.0999755859, 2194.3000488281, 16.10000038147, 0, 0, 181.99951171875);
	CreateDynamicObject(3864, 1399.0999755859, 2098.6000976563, 15.89999961853, 0, 0, 273.99951171875);
	CreateDynamicObject(972, 1462.8000488281, 2069.6000976563, 9.8999996185303, 0, 0, 270);
	CreateDynamicObject(972, 1437.8000488281, 2069.6000976563, 9.8999996185303, 0, 0, 270);
	CreateDynamicObject(972, 1412.6999511719, 2069.6000976563, 9.8999996185303, 0, 0, 270);
	CreateDynamicObject(972, 1405.6999511719, 2081, 9.8999996185303, 0, 0, 180);
	CreateDynamicObject(974, 1402.4000244141, 2095, 12.60000038147, 0, 0, 270);
	CreateDynamicObject(970, 1449.1999511719, 2067.6999511719, 10.5, 0, 0, 0);
	CreateDynamicObject(970, 1449.3000488281, 2069.1000976563, 10.5, 0, 0, 0);
	CreateDynamicObject(970, 1449.3000488281, 2070.6000976563, 10.5, 0, 0, 0);
	CreateDynamicObject(970, 1449.3000488281, 2072.1999511719, 10.5, 0, 0, 0);
	portaovisitante = F_CreateDynamicObject(976, 1477.4000244141, 2066.5, 10, 0, 0, 90);
	CreateDynamicObject(972, 1443.1999511719, 2247.1999511719, 10, 0, 0, 92);
	CreateDynamicObject(972, 1419.4000244141, 2243.8999023438, 10, 0, 0, 105.99951171875);
	CreateDynamicObject(972, 1395.8000488281, 2236.8000488281, 9.8000001907349, 0, 0, 105.99609375);
	CreateDynamicObject(972, 1371.5999755859, 2229.8999023438, 10, 0, 0, 105.99609375);
	CreateDynamicObject(972, 1346.3000488281, 2225.6999511719, 10, 0, 0, 89.99609375);
	CreateDynamicObject(970, 1344.5, 2227.5, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(970, 1344.5, 2226.3000488281, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(970, 1344.5, 2225.1999511719, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(970, 1344.5, 2224.1000976563, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(970, 1344.5, 2223, 10.60000038147, 0, 0, 0);
	portaocasa = F_CreateDynamicObject(975, 1332, 2226.3999023438, 11.699999809265, 0, 0, 92);
	CreateDynamicObject(991, 1295.3000488281, 2202.3999023438, 15.39999961853, 0, 0, 270);
	CreateDynamicObject(970, 1297.4000244141, 2199.1000976563, 14.699999809265, 0, 0, 359.98352050781);
	//PISTA DE RACHA
	/*CreateDynamicObject(8357,27.37890625,2507.20019531,15.86676788,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(8357,206.62988281,2507.18359375,15.86676788,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(3666,292.13690186,2507.20898438,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,302.04907227,2530.61450195,16.33273888,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,193.09594727,2507.10620117,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,270.99511719,2507.14062500,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,223.46972656,2507.12597656,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,148.15946960,2507.16088867,16.37263870,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-31.05957031,2507.14550781,16.37263870,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,91.72851562,2507.16503906,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,44.16113281,2507.12207031,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,13.86718750,2507.17871094,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(972,313.46508789,2486.94409180,15.48437500,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(972,313.37191772,2511.79516602,15.56658554,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(972,313.11132812,2536.60644531,15.81365013,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(4641,290.57794189,2507.27539062,17.54772186,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(16101,290.42782593,2507.34667969,19.24903107,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(2775,281.71163940,2530.17333984,16.16982269,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(2773,282.20526123,2511.28051758,16.56710243,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(7313,286.29718018,2513.86279297,21.16678047,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(8406,288.24264526,2532.90380859,21.34516907,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3359,222.59114075,2531.67138672,15.77110672,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(8947,190.00302124,2539.02490234,18.71691704,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(11292,236.73402405,2528.56127930,17.26913643,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(11547,-166.56951904,2495.71093750,24.82547379,5.98535156,355.97814941,54.41693115);
	CreateDynamicObject(18452,282.11328125,2514.11816406,18.79987335,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(18452,282.36126709,2498.40527344,18.79987335,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1263,290.35839844,2507.32080078,20.03622055,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3516,256.95068359,2514.92871094,19.09461975,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1351,263.28741455,2507.06274414,15.85114288,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(8357,-179.91894531,2507.12890625,15.85114288,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(1290,225.79493713,2507.19262695,21.87456512,0.00000000,0.00000000,88.00000000);
	CreateDynamicObject(1290,253.82989502,2507.13476562,21.87456512,0.00000000,0.00000000,87.99499512);
	CreateDynamicObject(1290,192.17901611,2507.14062500,21.87456512,0.00000000,0.00000000,87.99499512);
	CreateDynamicObject(1290,149.62402344,2507.16918945,21.88237381,0.00000000,0.00000000,87.99499512);
	CreateDynamicObject(1290,12.93847847,2507.13916016,21.87456512,0.00000000,0.00000000,87.99499512);
	CreateDynamicObject(1290,90.30175781,2507.18652344,21.87456512,0.00000000,0.00000000,87.99499512);
	CreateDynamicObject(1290,45.76953125,2507.21875000,21.87456512,0.00000000,0.00000000,87.99499512);
	CreateDynamicObject(1290,-29.67411423,2507.21777344,21.88237381,0.00000000,0.00000000,87.99499512);
	CreateDynamicObject(1290,-88.10937500,2507.31347656,21.85894012,0.00000000,0.00000000,87.98950195);
	CreateDynamicObject(7313,286.55029297,2498.32958984,21.16678047,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(2773,281.97146606,2516.87207031,16.56710243,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(2773,282.43060303,2495.56933594,16.56710243,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(2773,282.33682251,2501.21093750,16.56710243,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(3463,288.54693604,2506.71191406,15.85895252,0.00000000,0.00000000,92.00000000);
	CreateDynamicObject(3463,414.69433594,2535.29199219,22.15103149,0.00000000,0.00000000,91.99951172);
	CreateDynamicObject(3463,277.05816650,2506.66870117,15.85895348,0.00000000,0.00000000,91.99951172);
	CreateDynamicObject(987,-122.00862122,2485.87524414,15.19844818,0.00000000,0.00000000,319.98779297);
	CreateDynamicObject(987,-122.84069824,2497.59570312,15.29320526,0.00000000,0.00000000,273.98901367);
	CreateDynamicObject(987,-123.61795807,2509.35839844,17.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-122.83984375,2497.59570312,20.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-124.47021484,2521.34423828,17.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-125.40481567,2533.31396484,17.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-126.18624878,2545.28906250,17.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-127.07873535,2557.25390625,17.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-115.11894989,2558.28906250,17.04320526,0.00000000,0.00000000,185.98803711);
	CreateDynamicObject(987,-123.63107300,2509.60791016,20.04320526,0.00000000,0.00000000,271.98803711);
	CreateDynamicObject(987,-124.46972656,2521.34375000,20.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-125.40429688,2533.31347656,20.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-126.18554688,2545.28906250,20.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-127.07812500,2557.25390625,20.04320526,0.00000000,0.00000000,273.98803711);
	CreateDynamicObject(987,-115.11816406,2558.28906250,20.04320526,0.00000000,0.00000000,185.98754883);
	CreateDynamicObject(2773,279.49267578,2529.79760742,16.33492088,0.00000000,0.00000000,2.00000000);
	CreateDynamicObject(2773,279.44616699,2531.71435547,16.33490944,0.00000000,0.00000000,1.99951172);
	CreateDynamicObject(2773,279.73931885,2518.38305664,16.37618256,0.00000000,0.00000000,1.99951172);
	CreateDynamicObject(2773,279.67425537,2525.93652344,16.36837196,0.00000000,0.00000000,1.99951172);
	CreateDynamicObject(2773,279.54980469,2527.87792969,16.32331467,0.00000000,0.00000000,1.99951172);
	CreateDynamicObject(1228,287.59844971,2492.00830078,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,285.08038330,2493.27905273,16.27227020,0.00000000,0.00000000,2.00000000);
	CreateDynamicObject(1228,307.33728027,2492.05004883,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,297.46429443,2491.98339844,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,294.16699219,2492.07324219,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,290.94558716,2492.07348633,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,300.63925171,2492.00610352,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,280.28814697,2506.13134766,16.28008080,0.00000000,0.00000000,178.00000000);
	CreateDynamicObject(1228,313.86581421,2492.17700195,15.90550327,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,310.46429443,2492.05126953,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(1228,303.70227051,2492.07421875,16.27227020,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(2775,234.15002441,2530.67504883,18.19712448,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(2775,234.14562988,2530.67504883,17.51585770,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(16409,206.42835999,2534.44653320,15.98167801,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(11547,-34.67095566,2533.89062500,18.67747116,0.00000000,0.00000000,89.99853516);
	CreateDynamicObject(10810,-27.01348877,2533.21411133,10.73281479,0.00000000,0.00000000,2.00000000);
	CreateDynamicObject(3666,-26.39528275,2523.30346680,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-42.72572327,2523.30419922,16.36482811,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-42.94662476,2530.16894531,16.24650002,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-26.46585846,2529.91577148,16.24650002,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-31.92530441,2530.16064453,16.24650002,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-37.49450684,2530.22021484,16.24650002,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(10810,-33.26180267,2532.93945312,10.73281479,0.00000000,0.00000000,1.99951172);
	CreateDynamicObject(3666,-34.74302292,2529.71875000,22.14428139,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-43.85081482,2530.02221680,22.14428139,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-25.46777344,2530.20019531,22.14428139,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(11547,-113.86328125,2566.92187500,21.37825012,358.01947021,8.00482178,352.27490234);
	CreateDynamicObject(18452,-70.18261719,2561.40039062,19.39657593,0.00000000,0.00000000,357.99499512);
	CreateDynamicObject(8148,235.58117676,2478.08007812,19.06779480,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(8148,73.50860596,2478.09643555,19.06779480,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(8148,-32.66992188,2478.02246094,19.06779480,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(8357,27.37890625,2507.20019531,15.86676788,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(987,-122.00781250,2485.87500000,19.94844818,0.00000000,0.00000000,319.98229980);
	CreateDynamicObject(978,-180.40893555,2499.16137695,23.73886108,0.00000000,358.00000000,170.00000000);
	CreateDynamicObject(979,-158.20701599,2485.91015625,20.34571266,0.00000000,350.00000000,125.99996948);
	CreateDynamicObject(978,-180.18652344,2499.12255859,23.73886108,5.99636841,2.00595093,349.78744507);
	CreateDynamicObject(979,-158.33378601,2486.05639648,20.34571266,356.06085205,10.02133179,306.69226074);
	CreateDynamicObject(983,-173.65652466,2501.12011719,23.69876862,1.99511719,4.00241089,323.86041260);
	CreateDynamicObject(983,-159.30072021,2491.13891602,21.94876862,5.98425293,4.01852417,323.57470703);
	CreateDynamicObject(983,-173.65625000,2501.12011719,23.69876862,1.99511719,4.00241089,323.86041260);
	CreateDynamicObject(983,-113.36470032,2575.04956055,19.09067917,3.97695923,6.01113892,81.57592773);
	CreateDynamicObject(984,-170.51303101,2515.79492188,24.71500015,8.00000000,0.00000000,12.00000000);
	CreateDynamicObject(984,-173.12582397,2528.17260742,26.41363525,7.99853516,0.00000000,11.99707031);
	CreateDynamicObject(984,-170.15997314,2539.15307617,27.49608612,359.99804688,6.00000000,317.99176025);
	CreateDynamicObject(984,-161.57012939,2548.69360352,27.47727966,359.99804688,6.00000000,317.99188232);
	CreateDynamicObject(984,-152.29882812,2556.83374023,26.66660690,352.03863525,6.05712891,304.82968140);
	CreateDynamicObject(984,-141.65348816,2563.78076172,24.90380096,352.06921387,8.07257080,301.10595703);
	CreateDynamicObject(984,-130.83032227,2570.06030273,22.78760147,348.10791016,8.16821289,299.67568970);
	CreateDynamicObject(984,-119.55281067,2574.75463867,19.53760147,343.99896240,2.06655884,284.55078125);
	CreateDynamicObject(983,-170.50292969,2506.64941406,23.79890823,1.98852539,3.99353027,335.85205078);
	CreateDynamicObject(984,-154.88494873,2488.24316406,21.31539536,359.99450684,5.99853516,241.98828125);
	CreateDynamicObject(975,-150.58045959,2485.93847656,19.16379166,2.00000000,0.00000000,332.00000000);
	CreateDynamicObject(975,-157.19540405,2489.48046875,19.16379166,1.99951172,0.00000000,331.99584961);
	CreateDynamicObject(975,-142.78475952,2481.87622070,18.99406815,1.99951172,0.00000000,331.99584961);
	CreateDynamicObject(975,-134.69142151,2481.16162109,15.84122086,1.99829102,2.00115967,17.92605591);
	CreateDynamicObject(975,-142.78417969,2481.87597656,15.99406815,1.99951172,0.00000000,331.99584961);
	CreateDynamicObject(975,-134.69140625,2481.16113281,18.84122086,1.99401855,1.99951172,17.92419434);
	CreateDynamicObject(975,-126.35810852,2483.87280273,15.42503738,1.99401855,1.99951172,17.92419434);
	CreateDynamicObject(975,-126.37311554,2483.90722656,18.43781090,1.99401855,1.99951172,17.92419434);
	CreateDynamicObject(3526,-124.31158447,2463.46044922,13.41660786,0.00000000,0.00000000,342.00000000);
	CreateDynamicObject(3526,-183.04194641,2491.98706055,22.99897957,0.00000000,0.00000000,321.99829102);
	CreateDynamicObject(3526,-180.21093750,2489.75000000,22.62807655,0.00000000,0.00000000,321.99829102);
	CreateDynamicObject(3526,-185.39147949,2493.88916016,23.29143333,0.00000000,0.00000000,321.99829102);
	CreateDynamicObject(3526,-188.19395447,2496.14770508,23.54575348,0.00000000,0.00000000,321.99829102);
	CreateDynamicObject(3526,-191.19656372,2498.57275391,23.82362938,0.00000000,0.00000000,321.99829102);
	CreateDynamicObject(3526,-204.19734192,2506.94238281,25.25243568,0.00000000,0.00000000,329.99829102);
	CreateDynamicObject(3526,-176.92968750,2487.16601562,22.20004845,0.00000000,0.00000000,321.99829102);
	CreateDynamicObject(3526,-170.55468750,2482.86035156,21.12013435,0.00000000,0.00000000,329.99682617);
	CreateDynamicObject(3526,-167.57421875,2481.11718750,20.55309105,0.00000000,0.00000000,329.99633789);
	CreateDynamicObject(3526,-164.37597656,2479.24023438,19.94492531,0.00000000,0.00000000,331.99584961);
	CreateDynamicObject(3526,-161.46289062,2477.79589844,19.30525589,0.00000000,0.00000000,335.99487305);
	CreateDynamicObject(3526,-98.16186523,2503.34985352,15.90393543,0.00000000,0.00000000,179.99487305);
	CreateDynamicObject(3526,-152.83203125,2473.91406250,17.44752121,0.00000000,0.00000000,339.99987793);
	CreateDynamicObject(3526,-149.22949219,2472.56542969,16.80922318,0.00000000,0.00000000,339.99938965);
	CreateDynamicObject(3526,-144.73828125,2470.84863281,16.01424789,0.00000000,0.00000000,339.99938965);
	CreateDynamicObject(3526,-139.96643066,2469.14111328,15.27804661,0.00000000,0.00000000,339.99938965);
	CreateDynamicObject(3526,-194.30566406,2501.04296875,24.09952354,0.00000000,0.00000000,321.99829102);
	CreateDynamicObject(3526,-197.23828125,2502.91503906,24.42668343,0.00000000,0.00000000,329.99633789);
	CreateDynamicObject(3526,-200.54296875,2504.83886719,24.82112312,0.00000000,0.00000000,329.99633789);
	CreateDynamicObject(3526,-210.62818909,2509.57446289,26.07883644,0.00000000,0.00000000,339.99633789);
	CreateDynamicObject(3526,-207.07617188,2508.23632812,25.62131691,0.00000000,0.00000000,339.99389648);
	CreateDynamicObject(3526,-213.95123291,2510.87768555,26.51408958,0.00000000,0.00000000,339.99389648);
	CreateDynamicObject(3526,-134.58984375,2467.27441406,14.53784847,0.00000000,0.00000000,341.99890137);
	CreateDynamicObject(3526,-129.55175781,2465.44531250,13.95974445,0.00000000,0.00000000,341.99890137);
	CreateDynamicObject(3666,-175.45463562,2498.06762695,23.34004021,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-166.44847107,2491.72875977,22.09789658,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-170.92301941,2494.92773438,22.67444229,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-162.01913452,2488.51708984,21.52183151,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-172.27426147,2493.24658203,22.37604713,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-167.60644531,2490.13281250,21.87422943,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-178.00926208,2498.24365234,23.52713585,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-180.28143311,2498.61596680,23.66764259,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-182.65701294,2499.08349609,23.71932983,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-184.88522339,2499.50048828,23.87868309,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-158.80918884,2485.78979492,20.12845039,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-160.06997681,2487.46997070,20.55638313,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-156.09454346,2482.31372070,19.07877350,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-157.51023865,2484.00317383,19.75280952,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-174.09112549,2491.09008789,22.55142021,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-169.48965454,2487.61157227,21.77136421,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-162.59190369,2497.13940430,22.56885910,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-171.51737976,2503.46655273,23.71254539,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-166.95117188,2500.29199219,23.13490486,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-158.03283691,2493.99218750,22.20375061,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-170.41296387,2505.72509766,22.55568695,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-166.76670837,2515.27392578,23.32923317,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-167.58021545,2511.24023438,22.97488403,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-168.87895203,2508.56665039,22.61323929,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-155.26835632,2501.30957031,22.34772110,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-156.89907837,2495.16333008,22.02538109,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-161.56004333,2515.68847656,23.30471420,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-157.47805786,2507.55566406,22.50324821,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-156.08120728,2504.36499023,22.44467354,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-155.55044556,2497.90551758,22.16767693,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-159.05566406,2510.46093750,22.80817413,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-126.85163879,2571.16455078,20.59629250,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-160.96000671,2547.45214844,25.74989891,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-166.87585449,2514.80249023,23.92172050,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-161.66113281,2516.25097656,23.90336800,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-162.41015625,2526.45214844,25.42256737,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-160.46972656,2536.94238281,26.12412834,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-141.39202881,2562.51074219,23.55138588,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-150.42285156,2549.39160156,25.38893318,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-144.15527344,2553.89062500,24.59630585,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-138.14062500,2557.65527344,23.44925117,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-130.63769531,2561.57128906,21.79660606,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-133.14698792,2567.25292969,21.97300148,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-154.19963074,2553.85229492,25.49998093,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-147.49316406,2558.63085938,24.67445183,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-156.39648438,2545.22460938,25.76472282,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-165.86656189,2538.65576172,26.11035347,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-167.97225952,2526.17822266,25.34273338,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-160.57812500,2513.13769531,22.95248795,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-109.29203796,2568.86181641,17.95900726,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-119.64579773,2559.18457031,19.64788246,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-128.97915649,2569.43017578,20.83789253,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-131.04980469,2568.11328125,21.08037186,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-122.71465302,2559.65917969,20.15447044,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-129.35351562,2561.79003906,21.09920502,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-125.43309021,2560.33251953,20.56429863,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-127.67411041,2561.04565430,21.01961517,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-124.54518127,2572.90405273,19.47817421,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-109.05458832,2574.73486328,17.36210632,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-100.06736755,2571.70092773,17.25055885,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-102.61497498,2573.56176758,17.28323555,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-106.30233002,2574.52612305,17.34393692,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,294.44641113,2554.91259766,15.82050323,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-110.28268433,2563.43212891,18.06605148,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-93.40756226,2566.62817383,17.09690094,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-96.20118713,2567.68334961,17.29604149,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-98.02539062,2569.64746094,17.27316093,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-111.25726318,2557.89038086,18.31303215,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-94.17904663,2560.87573242,16.98192596,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-97.19920349,2561.11840820,17.13119125,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-99.52169037,2559.91577148,17.39727783,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-102.53958130,2558.74047852,17.23647881,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-105.62404633,2557.60253906,17.12302780,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-111.58712006,2563.69702148,18.84267235,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-112.08695984,2558.10205078,19.01227379,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-110.91455078,2569.25537109,18.66043663,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-110.02499390,2574.69018555,18.44882965,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-116.95700836,2570.05786133,19.51872635,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-117.79589844,2564.65429688,19.72264099,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-118.71958160,2559.10302734,20.00255203,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-116.41074371,2575.38793945,19.35818672,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-95.76039124,2560.92773438,17.55291557,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-94.56252289,2567.12622070,17.69917107,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-73.47922516,2558.68115234,17.16740417,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-73.21191406,2564.33105469,17.16026115,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-66.89085388,2564.14990234,17.16026115,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,-67.03269958,2558.44238281,17.16026115,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(8148,6.35032606,2566.39794922,18.26944351,0.00000000,2.00000000,89.99996948);
	CreateDynamicObject(8148,6.34960938,2566.39746094,18.26944351,0.00000000,1.99951172,89.99450684);
	CreateDynamicObject(8148,168.24476624,2566.45776367,18.36876488,0.00000000,1.99951172,89.99450684);
	CreateDynamicObject(987,-74.58026886,2566.15649414,16.63330078,0.00000000,0.00000000,173.98229980);
	CreateDynamicObject(987,-83.52871704,2567.11425781,16.63330078,0.00000000,0.00000000,173.97949219);
	CreateDynamicObject(1237,-105.21757507,2574.16552734,17.35255241,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(8148,235.08024597,2566.39477539,18.58170319,0.00000000,1.99951172,89.99450684);
	CreateDynamicObject(972,313.06088257,2552.07958984,15.81365013,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,-108.41308594,2557.48535156,17.69654274,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,301.54769897,2554.86254883,15.81705856,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,282.60040283,2554.91455078,15.82289696,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,286.87188721,2554.92114258,15.82498169,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,288.99380493,2554.91503906,15.82601929,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,291.45385742,2554.86596680,15.82198715,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,297.28289795,2554.95971680,15.81909180,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,299.56445312,2554.90722656,15.81800461,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,284.61328125,2554.88281250,15.82388115,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,313.09658813,2559.81372070,15.36718750,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,278.50079346,2565.14233398,15.47480774,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,314.00372314,2555.10888672,15.81085587,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,301.20135498,2565.23193359,15.54965973,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,306.17282104,2563.16455078,15.41570473,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,308.95004272,2562.72631836,15.36718941,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,311.40158081,2561.69311523,15.36718750,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,313.93191528,2557.32324219,15.46421051,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,303.33007812,2563.15820312,15.41493225,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,299.28179932,2565.47998047,15.51911354,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,278.35150146,2557.71240234,15.88753700,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,278.46316528,2563.28710938,15.94478035,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,280.38964844,2554.78515625,15.82181740,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(1237,278.41534424,2556.12158203,15.70474815,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,290.85369873,2563.28320312,15.94429207,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,290.81750488,2557.72021484,15.88572311,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,300.97827148,2563.03442383,15.91307068,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,300.98406982,2556.58959961,16.14818382,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,302.75354004,2553.21142578,16.33096123,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,313.25674438,2553.20336914,16.32583427,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(3666,312.71850586,2559.17822266,15.88087273,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(984,-80.34221649,2558.49780273,17.40242386,0.00000000,0.00000000,264.00000000);
	CreateDynamicObject(984,-86.67733002,2559.18457031,17.50544739,0.00000000,0.00000000,263.99597168);
	CreateDynamicObject(984,-60.09223938,2557.66992188,16.81587982,0.00000000,0.00000000,267.99597168);
	CreateDynamicObject(983,-70.12402344,2558.25463867,17.20796585,0.00000000,0.00000000,268.00000000);
	CreateDynamicObject(984,-47.29931641,2557.42602539,16.57341003,0.00000000,0.00000000,269.99499512);
	CreateDynamicObject(982,-28.15118027,2557.46142578,16.40112686,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,-2.55781174,2557.47680664,16.36605453,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,23.03359222,2557.51586914,16.10698700,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,48.65441513,2557.54443359,16.10698700,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,75.24974060,2557.54028320,16.10131836,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,99.85517883,2557.53686523,16.09635162,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,125.35570526,2557.56567383,16.09635162,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,150.86659241,2557.59350586,16.09635162,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,176.48263550,2557.59619141,16.08438492,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,201.86625671,2557.58251953,16.08755875,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,227.48934937,2557.54687500,16.09583282,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(982,253.03991699,2557.55395508,16.09418869,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(984,272.23156738,2557.56127930,16.04561615,0.00000000,0.00000000,270.00000000);
	CreateDynamicObject(1297,-159.90722656,2487.64257812,24.62905121,0.00000000,0.00000000,53.99780273);
	CreateDynamicObject(1297,-170.76466370,2495.02954102,22.28776169,5.96701050,353.96716309,54.62725830);
	CreateDynamicObject(1297,-166.41677856,2491.72705078,22.28776169,7.97894287,355.95663452,54.55645752);
	CreateDynamicObject(1297,-166.93151855,2520.47558594,27.59141731,0.00000000,0.00000000,184.00000000);
	CreateDynamicObject(1297,-166.07334900,2533.01342773,27.59141731,0.00000000,0.00000000,163.99902344);
	CreateDynamicObject(1297,-162.58999634,2543.74511719,27.59141731,0.00000000,0.00000000,139.99841309);
	CreateDynamicObject(1297,-156.82209778,2550.49707031,27.59141731,0.00000000,0.00000000,121.99328613);
	CreateDynamicObject(1297,-149.55645752,2555.43212891,27.59141731,0.00000000,0.00000000,121.99218750);
	CreateDynamicObject(1297,-137.17996216,2563.52026367,25.34141731,0.00000000,0.00000000,103.99218750);
	CreateDynamicObject(1290,-117.85237122,2570.18676758,20.67025757,0.00000000,0.00000000,87.98950195);
	CreateDynamicObject(1290,-109.51288605,2563.21362305,21.42025757,16.00000000,0.00000000,79.98950195);
	CreateDynamicObject(1297,-97.93467712,2568.41577148,20.73662186,0.00000000,0.00000000,25.99108887);
	CreateDynamicObject(1297,-82.46272278,2565.27636719,19.98662186,0.00000000,0.00000000,87.98815918);
	CreateDynamicObject(1297,-47.68029022,2562.92846680,19.25928307,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,-26.14457321,2562.47485352,18.96129799,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,-1.92008209,2562.62524414,18.76142693,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,18.94734955,2562.34741211,18.51142693,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,38.24724960,2562.37500000,18.51142693,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,57.49707031,2562.41259766,18.51142693,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,77.99707031,2562.45214844,18.51142693,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,99.24707031,2562.49365234,18.51142693,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,117.10615540,2562.41430664,18.76142693,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,137.62199402,2562.40136719,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,157.65106201,2562.43798828,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,178.67030334,2562.47167969,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,200.04985046,2562.50781250,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,220.56971741,2562.54101562,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,244.30928040,2562.58300781,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,263.30859375,2562.62011719,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,284.80859375,2562.66210938,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,307.43032837,2563.27685547,18.77291489,0.00000000,0.00000000,87.98400879);
	CreateDynamicObject(1297,312.70104980,2546.60253906,19.20783806,0.00000000,0.00000000,359.98400879);
	CreateDynamicObject(1297,312.57244873,2535.10253906,19.20783806,0.00000000,0.00000000,359.98352051);
	CreateDynamicObject(1297,303.32339478,2535.20190430,19.20783806,0.00000000,0.00000000,179.98352051);
	CreateDynamicObject(1297,303.20379639,2546.95385742,19.20783806,0.00000000,0.00000000,179.98352051);
	CreateDynamicObject(3865,308.30844116,2537.32446289,15.24992371,0.39227295,147.99902344,269.45874023);
	CreateDynamicObject(3526,-157.41406250,2475.96191406,18.43345642,0.00000000,0.00000000,335.99487305);
	CreateDynamicObject(3526,-98.16101074,2502.78466797,15.90393543,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.17474365,2502.22778320,15.90393543,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.17665863,2501.67333984,15.90393543,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.17153931,2500.23535156,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18474579,2498.54248047,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18779755,2499.07836914,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.17864990,2499.65722656,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.17533875,2497.12402344,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18464661,2495.42407227,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.17848206,2496.55053711,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18156433,2495.98730469,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18480682,2517.08911133,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18005371,2518.76367188,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18606567,2517.66479492,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18291473,2518.24047852,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.17699432,2514.50781250,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18704987,2515.07348633,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18826294,2515.65502930,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18420410,2513.98950195,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18334961,2512.54833984,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18539429,2513.26489258,15.90393543,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18819427,2510.86718750,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18939209,2511.44531250,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18635559,2512.00024414,15.91174603,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.16834259,2516.38134766,15.90393543,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.18890381,2497.85498047,15.90393543,0.00000000,0.00000000,179.99450684);
	CreateDynamicObject(3526,-98.15295410,2500.95214844,15.90393543,0.00000000,0.00000000,179.99450684);*/
	//HQ BALLAS
	CreateDynamicObject(987, 1082.8000488281, -1201.9000244141, 16.799999237061, 0, 0, 270);
	CreateDynamicObject(987, 1141.0999755859, -1211.9000244141, 17.799999237061, 0, 0, 92);
	CreateDynamicObject(987, 1082.0999755859, -1211, 20.5, 0, 0, 270);
	CreateDynamicObject(987, 1081.9000244141, -1222.9000244141, 20.5, 0, 0, 270);
	CreateDynamicObject(987, 1082, -1223.4000244141, 20.5, 0, 0, 270);
	CreateDynamicObject(987, 1082.0999755859, -1235.3000488281, 19.5, 0, 0, 270);
	CreateDynamicObject(987, 1082.0999755859, -1244.5999755859, 18.799999237061, 0, 0, 270);
	CreateDynamicObject(987, 1082.9000244141, -1253.5999755859, 20.700000762939, 0, 0, 270);
	CreateDynamicObject(987, 1082.8000488281, -1258.6999511719, 20.700000762939, 0, 0, 270);
	CreateDynamicObject(991, 1079.0999755859, -1203.5, 23.89999961853, 0, 0, 180);
	CreateDynamicObject(987, 1081.8000488281, -1191.5999755859, 25.200000762939, 0, 0, 272);
	CreateDynamicObject(984, 1082.3000488281, -1197.0999755859, 23.299999237061, 0, 0, 0);
	CreateDynamicObject(987, 1081.8000488281, -1182.5999755859, 25.5, 0, 0, 270);
	CreateDynamicObject(984, 1081.6999511719, -1189.6999511719, 24.799999237061, 0, 0, 0);
	CreateDynamicObject(991, 1078.5999755859, -1211, 21.700000762939, 0, 0, 0);
	Portaoballas = F_CreateDynamicObject(980, 1121.1999511719, -1159.3000488281, 25.5, 0, 0, 0);
	//BOLA
	Bola = F_CreateDynamicObject(1598,-714.19915771,1956.50402832,1.54718375,0.00000000,0.00000000,0.00000000); //object(beachball) (1)
	//HQ SONS
	CreateDynamicObject(987, 1082.8000488281, -1201.9000244141, 16.799999237061, 0, 0, 270);
	CreateDynamicObject(987, 1141.0999755859, -1211.9000244141, 17.799999237061, 0, 0, 92);
	CreateDynamicObject(987, 1082.0999755859, -1211, 20.5, 0, 0, 270);
	CreateDynamicObject(987, 1081.9000244141, -1222.9000244141, 20.5, 0, 0, 270);
	CreateDynamicObject(987, 1082, -1223.4000244141, 20.5, 0, 0, 270);
	CreateDynamicObject(987, 1082.0999755859, -1235.3000488281, 19.5, 0, 0, 270);
	CreateDynamicObject(987, 1082.0999755859, -1244.5999755859, 18.799999237061, 0, 0, 270);
	CreateDynamicObject(987, 1082.9000244141, -1253.5999755859, 20.700000762939, 0, 0, 270);
	CreateDynamicObject(987, 1082.8000488281, -1258.6999511719, 20.700000762939, 0, 0, 270);
	CreateDynamicObject(991, 1079.0999755859, -1203.5, 23.89999961853, 0, 0, 180);
	CreateDynamicObject(987, 1081.8000488281, -1191.5999755859, 25.200000762939, 0, 0, 272);
	CreateDynamicObject(984, 1082.3000488281, -1197.0999755859, 23.299999237061, 0, 0, 0);
	CreateDynamicObject(987, 1081.8000488281, -1182.5999755859, 25.5, 0, 0, 270);
	CreateDynamicObject(984, 1081.6999511719, -1189.6999511719, 24.799999237061, 0, 0, 0);
	CreateDynamicObject(991, 1078.5999755859, -1211, 21.700000762939, 0, 0, 0);
	CreateDynamicObject(980, 701.70001220703, -479.20001220703, 18.10000038147, 0, 0, 0);
	CreateDynamicObject(3749, 701.70001220703, -477.5, 21.200000762939, 0, 0, 0);
	CreateDynamicObject(3475, 687.79998779297, -474.10000610352, 17.89999961853, 0, 0, 58);
	//CreateDynamicObject(980, 701.70001220703, -479.20001220703, 18.10000038147, 0, 0, 0);
	CreateDynamicObject(988, 711.59997558594, -472.39999389648, 16.299999237061, 0, 0, 90);
	CreateDynamicObject(988, 711.59997558594, -466.89999389648, 16.299999237061, 0, 0, 90);
	CreateDynamicObject(988, 711.59997558594, -461.39999389648, 16.299999237061, 0, 0, 90);
	CreateDynamicObject(988, 711.59997558594, -455.89999389648, 16.299999237061, 0, 0, 90);
	CreateDynamicObject(987, 711.40002441406, -453.20001220703, 15.300000190735, 0, 0, 90);
	CreateDynamicObject(987, 711.40002441406, -449.70001220703, 15.300000190735, 0, 0, 90);
	CreateDynamicObject(987, 711.59997558594, -437.79998779297, 16.299999237061, 0, 0, 180);
	CreateDynamicObject(987, 699.59997558594, -437.89999389648, 16.299999237061, 0, 0, 180);
	CreateDynamicObject(987, 687.59997558594, -437.89999389648, 16.299999237061, 0, 0, 180);
	CreateDynamicObject(987, 675.59997558594, -437.89999389648, 16.299999237061, 0, 0, 180);
	CreateDynamicObject(987, 663.59997558594, -437.89999389648, 16.299999237061, 0, 0, 180);
	CreateDynamicObject(987, 651.90002441406, -438, 15.300000190735, 0, 0, 270);
	CreateDynamicObject(987, 651.90002441406, -450, 15.300000190735, 0, 0, 270);
	CreateDynamicObject(987, 651.90002441406, -462, 15.300000190735, 0, 0, 270);
	CreateDynamicObject(987, 652, -463.20001220703, 15.300000190735, 0, 0, 270);
	CreateDynamicObject(3749, 664.40002441406, -477.70001220703, 21.200000762939, 0, 0, 0);
	CreateDynamicObject(3475, 654.5, -476.70001220703, 17.700000762939, 0, 0, 52);
	CreateDynamicObject(3475, 676.09997558594, -473.70001220703, 17.89999961853, 0, 0, 132);
	Portaosons3 = F_CreateDynamicObject(980, 664.40002441406, -479.60000610352, 18.10000038147, 0, 0, 180);
	CreateDynamicObject(983, 678.09997558594, -475, 18.799999237061, 0, 0, 270);
	CreateDynamicObject(983, 684.59997558594, -474.89999389648, 18.799999237061, 0, 0, 90);
	CreateDynamicObject(3475, 690.5, -475.5, 17.700000762939, 0, 0, 58);
	CreateDynamicObject(983, 714.70001220703, -470.79998779297, 19, 0, 0, 0);
	CreateDynamicObject(983, 714.70001220703, -466.89999389648, 19, 0, 0, 0);
	CreateDynamicObject(997, 711.90002441406, -472.5, 18.299999237061, 0, 0, 332);
	CreateDynamicObject(997, 712, -473.89999389648, 18.299999237061, 0, 0, 36);
	CreateDynamicObject(997, 711.90002441406, -465.29998779297, 18.299999237061, 0, 0, 30);
	CreateDynamicObject(997, 711.90002441406, -463.60000610352, 18.299999237061, 0, 0, 328);
	CreateDynamicObject(1250, 713.90002441406, -462.5, 18.200000762939, 0, 0, 90);
	CreateDynamicObject(1250, 712.5, -462.79998779297, 18.299999237061, 0, 0, 272);
	//HQ GROOVE
	CreateDynamicObject(3749, 2465.3999023438, -1659.8000488281, 18.10000038147, 0, 0, 268.74755859375);
	CreateDynamicObject(987, 2463.3000488281, -1669.9000244141, 12.5, 0, 0, 294);
	CreateDynamicObject(987, 2468, -1680.8000488281, 12.5, 0, 0, 324);
	CreateDynamicObject(987, 2477, -1687.7998046875, 12.5, 0, 0, 326.49536132813);
	CreateDynamicObject(987, 2464.5, -1637.9000244141, 12.39999961853, 0, 0, 266.99523925781);
	CreateDynamicObject(987, 2540.3000488281, -1661.3000488281, 13.89999961853, 0, 0, 90.734008789063);
	CreateDynamicObject(987, 2513, -1628.1999511719, 15.10000038147, 0, 0, 181.49462890625);
	CreateDynamicObject(987, 2466, -1629.1999511719, 14.60000038147, 0, 0, 265.75);
	CreateDynamicObject(987, 2476.8999023438, -1629, 15.10000038147, 0, 0, 180.5);
	CreateDynamicObject(987, 2540.3000488281, -1673.3000488281, 13.89999961853, 0, 0, 90.484008789063);
	CreateDynamicObject(993, 2465.5, -1633.1999511719, 14.10000038147, 0, 0, 268);
	CreateDynamicObject(987, 2536.8000488281, -1627.8000488281, 15.10000038147, 0, 0, 180.99975585938);
	CreateDynamicObject(987, 2524.8000488281, -1628.0999755859, 15.10000038147, 0, 0, 180.99975585938);
	CreateDynamicObject(987, 2501, -1628.5, 15.10000038147, 0, 0, 180.49963378906);
	CreateDynamicObject(987, 2540.1999511719, -1649.3000488281, 13.89999961853, 0, 0, 89);
	CreateDynamicObject(987, 2540.3000488281, -1709.1999511719, 13.800000190735, 0, 0, 90);
	CreateDynamicObject(987, 2540.3000488281, -1697.1999511719, 13.800000190735, 0, 0, 88.74755859375);
	CreateDynamicObject(987, 2540.6000976563, -1685.1999511719, 13.800000190735, 0, 0, 90);
	CreateDynamicObject(993, 2540.599609375, -1713.69921875, 13.89999961853, 0, 0, 270.7470703125);
	CreateDynamicObject(987, 2517.1999511719, -1722.5999755859, 14.10000038147, 0, 0, 0.75);
	CreateDynamicObject(987, 2529.099609375, -1722.2998046875, 14, 0, 0, 3.749755859375);
	CreateDynamicObject(993, 2523.5, -1722.5, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(987, 2488.8999023438, -1628.8000488281, 15.10000038147, 0, 0, 179.99450683594);
	CreateDynamicObject(987, 2548.8999023438, -1627.8000488281, 15.300000190735, 0, 0, 180);
	CreateDynamicObject(987, 2540.3999023438, -1721.1999511719, 13.800000190735, 0, 0, 90);
	CreateDynamicObject(987, 2540.5, -1639.8000488281, 13.89999961853, 0, 0, 90);
	//PORTAO ROUBO
	CreateDynamicObject(2928,2144.32812500,1606.74060059,994.03717041,0.00000000,0.00000000,0.00000000); //object(a51_intdoor)(1)
	CreateDynamicObject(17692,906.86553955,-1037.54321289,30.78199577,0.00000000,0.00000000,0.00000000); //object(lae2_roads83)(1)
	CreateDynamicObject(2959,2177.15380859,1594.47851562,999.12792969,0.00000000,0.00000000,92.00000000); //object(rider1_door)(1)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(2)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(3)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(4)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(5)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(6)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(7)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(8)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(9)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(10)
    CreateDynamicObject(2959,2196.18554688,1617.92749023,999.00158691,0.00000000,0.00000000,2.25000000); //object(rider1_door)(11)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(12)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(13)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(14)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(15)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(16)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(17)
 	CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(18)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(19)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(20)
    CreateDynamicObject(2959,2143.12597656,1626.98620605,992.76763916,0.00000000,0.00000000,270.24670410); //object(rider1_door)(21)
    CreateDynamicObject(2959,2143.12597656,1626.98535156,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(22)
    CreateDynamicObject(2959,2144.08496094,1626.97119141,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(23)
    CreateDynamicObject(2959,2144.08496094,1626.97070312,991.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(24)
    CreateDynamicObject(2959,2142.82470703,1626.96459961,991.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(25)
    CreateDynamicObject(2959,2142.82421875,1626.96386719,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(26)
    CreateDynamicObject(2959,2142.82421875,1626.96386719,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(27)
    CreateDynamicObject(2959,2143.34204102,1627.03820801,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(28)
    CreateDynamicObject(2959,2143.50805664,1626.93542480,992.94378662,0.00000000,0.00000000,270.24169922); //object(rider1_door)(29)
    CreateDynamicObject(2959,2143.50781250,1626.93457031,992.94378662,0.00000000,0.00000000,270.24169922); //object(rider1_door)(30)
    CreateDynamicObject(2959,824.58496094,9.33859444,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(31)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(32)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(33)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(34)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(35)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(36)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(37)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(38)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(39)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(40)
    CreateDynamicObject(2959,2177.15380859,1594.47851562,999.12792969,0.00000000,0.00000000,92.00000000); //object(rider1_door)(1)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(2)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(3)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(4)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(5)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(6)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(7)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(8)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(9)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(10)
    CreateDynamicObject(2959,2196.18554688,1617.92749023,999.00158691,0.00000000,0.00000000,2.25000000); //object(rider1_door)(11)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(12)
  	CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(13)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(14)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(15)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(16)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(17)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(18)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(19)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(20)
    CreateDynamicObject(2959,2143.12597656,1626.98620605,992.76763916,0.00000000,0.00000000,270.24670410); //object(rider1_door)(21)
    CreateDynamicObject(2959,2143.12597656,1626.98535156,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(22)
    CreateDynamicObject(2959,2144.08496094,1626.97119141,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(23)
    CreateDynamicObject(2959,2144.08496094,1626.97070312,991.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(24)
    CreateDynamicObject(2959,2142.82470703,1626.96459961,991.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(25)
    CreateDynamicObject(2959,2142.82421875,1626.96386719,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(26)
    CreateDynamicObject(2959,2142.82421875,1626.96386719,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(27)
    CreateDynamicObject(2959,2143.34204102,1627.03820801,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(28)
    CreateDynamicObject(2959,2143.50805664,1626.93542480,992.94378662,0.00000000,0.00000000,270.24169922); //object(rider1_door)(29)
    CreateDynamicObject(2959,2143.50781250,1626.93457031,992.94378662,0.00000000,0.00000000,270.24169922); //object(rider1_door)(30)
    CreateDynamicObject(2959,824.58496094,9.33859444,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(31)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(32)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(33)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(34)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(35)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(36)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(37)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(38)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(39)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(40)
    CreateDynamicObject(2959,2177.15380859,1594.47851562,999.12792969,0.00000000,0.00000000,92.00000000); //object(rider1_door)(1)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(2)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(3)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(4)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(5)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(6)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(7)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(8)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(9)
    CreateDynamicObject(2959,2177.15332031,1594.47851562,999.12792969,0.00000000,0.00000000,91.99951172); //object(rider1_door)(10)
    CreateDynamicObject(2959,2196.18554688,1617.92749023,999.00158691,0.00000000,0.00000000,2.25000000); //object(rider1_door)(11)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(12)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(13)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(14)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(15)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(16)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(17)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(18)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(19)
    CreateDynamicObject(2959,2196.18554688,1617.92675781,999.25183105,0.00000000,0.00000000,2.24670410); //object(rider1_door)(20)
    CreateDynamicObject(2959,2143.12597656,1626.98620605,992.76763916,0.00000000,0.00000000,270.24670410); //object(rider1_door)(21)
    CreateDynamicObject(2959,2143.12597656,1626.98535156,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(22)
    CreateDynamicObject(2959,2144.08496094,1626.97119141,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(23)
    CreateDynamicObject(2959,2144.08496094,1626.97070312,991.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(24)
    CreateDynamicObject(2959,2142.82470703,1626.96459961,991.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(25)
    CreateDynamicObject(2959,2142.82421875,1626.96386719,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(26)
    CreateDynamicObject(2959,2142.82421875,1626.96386719,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(27)
    CreateDynamicObject(2959,2143.34204102,1627.03820801,993.31817627,0.00000000,0.00000000,270.24169922); //object(rider1_door)(28)
    CreateDynamicObject(2959,2143.50805664,1626.93542480,992.94378662,0.00000000,0.00000000,270.24169922); //object(rider1_door)(29)
    CreateDynamicObject(2959,2143.50781250,1626.93457031,992.94378662,0.00000000,0.00000000,270.24169922); //object(rider1_door)(30)
    CreateDynamicObject(2959,824.58496094,9.33859444,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(31)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(32)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(33)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(34)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(35)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(36)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(37)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(38)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(39)
    CreateDynamicObject(2959,824.58496094,9.33789062,1003.17968750,0.00000000,0.00000000,0.00000000); //object(rider1_door)(40)
	//2�Cia
	CreateDynamicObject(987, 977.5, -911.09997558594, 43.900001525879, 0, 0, 95.75);
	CreateDynamicObject(987, 976.40002441406, -899.20001220703, 43.5, 0, 0, 123.5);
    portaopmesp = F_CreateDynamicObject(980, 971.5, -942.59997558594, 42.299999237061, 0, 0, 356.99682617188);//CreateDynamicObject(980, 971.5, -942.59997558594, 42.299999237061, 0, 0, 356.99682617188);
	CreateDynamicObject(987, 965.5, -942.09997558594, 41.700000762939, 0, 0, 356.24816894531);
	CreateDynamicObject(987, 977.20001220703, -943, 41.799999237061, 0, 0, 83.75);
	CreateDynamicObject(974, 162.39999389648, 139.39999389648, 530.20001220703, 0, 0, 0);
	CreateDynamicObject(987, 978.69921875, -923, 43.900001525879, 0, 0, 95.245971679688);
	CreateDynamicObject(974, 978.5, -928.5, 45.099998474121, 0, 270, 88.99951171875);
	CreateDynamicObject(993, 157.10000610352, 151.30000305176, 526.59997558594, 0, 0, 0);
	CreateDynamicObject(987, 944.90002441406, -942.59997558594, 42.200000762939, 0, 0, 3.25);
	CreateDynamicObject(987, 956.70001220703, -941.90002441406, 42.200000762939, 0, 0, 93);
	CreateDynamicObject(991, 978.5, -926.40002441406, 46, 0, 0, 270.75);
	CreateDynamicObject(991, 978.59997558594, -926.40002441406, 48.299999237061, 0, 0, 269.49719238281);
	CreateDynamicObject(987, 955.5, -894.5, 44.799999237061, 0, 0, 93);
	CreateDynamicObject(987, 966.59997558594, -928.79998779297, 43.799999237061, 0, 0, 3.75);
	//HQ AGUIAS
	CreateDynamicObject(1694, 2188.6000976563, -1141.1999511719, 45.700000762939, 0, 0, 0);
	CreateDynamicObject(16135, 1470.9000244141, -1642.5999755859, 12.199999809265, 0, 0, 0);
	CreateDynamicObject(9241, 1419, -2459.3000488281, 13.89999961853, 0, 0, 0);
	CreateDynamicObject(9241, 1419.0999755859, -2421.6999511719, 13.89999961853, 0, 0, 0);
	CreateDynamicObject(9241, 1382.1999511719, -2458.6000976563, 14.10000038147, 0, 0, 0);
	CreateDynamicObject(9241, 1381.6999511719, -2422.1999511719, 13.89999961853, 0, 0, 0);
	CreateDynamicObject(982, 1464.3000488281, -2417.1999511719, 13.199999809265, 0, 0, 0);
	CreateDynamicObject(982, 1464.3000488281, -2442.6999511719, 13.199999809265, 0, 0, 0);
	CreateDynamicObject(984, 1464.3000488281, -2461.8999023438, 13.199999809265, 0, 0, 0);
	CreateDynamicObject(984, 1464.4000244141, -2474.8000488281, 13.199999809265, 0, 0, 0);
	CreateDynamicObject(984, 1458.0999755859, -2481.1999511719, 13.199999809265, 0, 0, 270);
	CreateDynamicObject(984, 1445.1999511719, -2481.1999511719, 13.199999809265, 0, 0, 270);
	CreateDynamicObject(984, 1432.3000488281, -2481.1999511719, 13.199999809265, 0, 0, 270);
	CreateDynamicObject(982, 1413.1999511719, -2480.8000488281, 13.199999809265, 0, 0, 268);
	CreateDynamicObject(982, 1388.1999511719, -2480.8000488281, 13.199999809265, 0, 0, 272);
	CreateDynamicObject(691, 1460.5999755859, -2409.3999023438, 9.3999996185303, 0, 0, 0);
	CreateDynamicObject(691, 1460.5, -2416.8000488281, 9.8999996185303, 0, 0, 0);
	CreateDynamicObject(691, 1461.0999755859, -2428.6000976563, 10.10000038147, 0, 0, 0);
	CreateDynamicObject(691, 1460.1999511719, -2439.1999511719, 10.39999961853, 0, 0, 0);
	CreateDynamicObject(691, 1461, -2450.5, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1461.5999755859, -2461.8000488281, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1461.0999755859, -2474.1999511719, 10.10000038147, 0, 0, 0);
	CreateDynamicObject(691, 1451.3000488281, -2476.6000976563, 10.39999961853, 0, 0, 0);
	CreateDynamicObject(691, 1442.0999755859, -2476.6000976563, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1434.5, -2476.5, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1424.5999755859, -2477.6000976563, 11.10000038147, 0, 0, 0);
	CreateDynamicObject(691, 1416, -2476.3000488281, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1407.9000244141, -2477.8000488281, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1401.4000244141, -2477.6999511719, 10.39999961853, 0, 0, 0);
	CreateDynamicObject(691, 1390.9000244141, -2478.6000976563, 10.10000038147, 0, 0, 0);
	CreateDynamicObject(691, 1379.3000488281, -2477.6000976563, 9.1000003814697, 0, 0, 0);
	CreateDynamicObject(691, 1453.6999511719, -2408.5, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1442.5999755859, -2408.5, 10.60000038147, 0, 0, 0);
	CreateDynamicObject(691, 1435.0999755859, -2408.3999023438, 10.10000038147, 0, 0, 0);
	CreateDynamicObject(3666, 1370, -2446.6000976563, 15.39999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1370.1999511719, -2470.3999023438, 15.39999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1394.5, -2470.5, 15.39999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1394.4000244141, -2446.6999511719, 15.39999961853, 0, 0, 0);
	CreateDynamicObject(3666, 1393.6999511719, -2434.3000488281, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1393.6999511719, -2411.3000488281, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1370.8000488281, -2411.1999511719, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1370.5999755859, -2432.8000488281, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1407.9000244141, -2410.8000488281, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1407.6999511719, -2431.8000488281, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1430.5, -2410.1999511719, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1430.6999511719, -2447.8000488281, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1407.8000488281, -2447.8999023438, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1430.8000488281, -2470.8999023438, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1408.3000488281, -2470.8999023438, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(10763, 1457.1999511719, -2424.1999511719, 34.099998474121, 0, 0, 316);
	CreateDynamicObject(3666, 1430.1999511719, -2433.6999511719, 15.199999809265, 0, 0, 0);
	CreateDynamicObject(3666, 1443.0999755859, -2410, 58.299999237061, 0, 0, 0);
	CreateDynamicObject(3666, 1444.5999755859, -2400.1999511719, 58.200000762939, 0, 0, 0);
	CreateDynamicObject(3666, 1453.3000488281, -2403.6000976563, 58.200000762939, 0, 0, 0);
	CreateDynamicObject(3666, 1452.1999511719, -2410.1000976563, 58.200000762939, 0, 0, 0);
	CreateDynamicObject(3666, 1446.9000244141, -2412, 58.200000762939, 0, 0, 0);
	CreateDynamicObject(3666, 1447.4000244141, -2405.6999511719, 76.800003051758, 0, 0, 0);
	CreateDynamicObject(3666, 1441.5999755859, -2405.3999023438, 58.400001525879, 0, 0, 0);
	CreateDynamicObject(1290, 1399.9000244141, -2441, 18.60000038147, 0, 0, 270);
	CreateDynamicObject(1290, 1430.3000488281, -2440.8000488281, 18.60000038147, 0, 0, 270);
	CreateDynamicObject(1290, 1368.6999511719, -2441.3999023438, 18.60000038147, 0, 0, 270);
	CreateDynamicObject(1290, 1399.8000488281, -2409.6000976563, 18.60000038147, 0, 0, 358);
	CreateDynamicObject(1290, 1401, -2468.5, 18.60000038147, 0, 0, 357.99499511719);
	//RODOVIARIA
	/*CreateDynamicObject(1223, 2106.6000976563, -1766.4000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(11547, 2111.3000488281, -1782.6999511719, 15.300000190735, 0, 0, 268);
	CreateDynamicObject(1238, 2103.3999023438, -1777.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2108.6999511719, -1777.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2119.6999511719, -1779.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2114.3000488281, -1779.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2119.8000488281, -1778.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2119.8000488281, -1777.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2120, -1775.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2120.1000976563, -1775, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2114.3999023438, -1777.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2114.5, -1776.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2114.5, -1774.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2108.8000488281, -1776.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2108.8999023438, -1775.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2109, -1773.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2103.3999023438, -1776.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2103.6000976563, -1774, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 2104, -1772.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1223, 2100, -1773.5, 12.60000038147, 0, 0, 350);
	CreateDynamicObject(1223, 2124.1999511719, -1776.3000488281, 12.60000038147, 0, 0, 173.99694824219);
	CreateDynamicObject(1223, 2124.1999511719, -1766.3000488281, 12.60000038147, 0, 0, 173.99597167969);
	CreateDynamicObject(11547, 1658.4000244141, -1137.3000488281, 25.89999961853, 0, 0, 267.99499511719);
	CreateDynamicObject(1237, 1666.4000244141, -1133.5999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1666.4000244141, -1131.1999511719, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1666.3000488281, -1129.1999511719, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1666.3000488281, -1127.0999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1660.9000244141, -1133, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1660.8000488281, -1131.5, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1660.6999511719, -1129.5999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1661, -1127.9000244141, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1660.9000244141, -1126.5, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1655.6999511719, -1133.4000244141, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1655.6999511719, -1131.1999511719, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1655.8000488281, -1129.4000244141, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1655.9000244141, -1127.5999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1656, -1126.1999511719, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1650.5, -1132.5999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1650.5999755859, -1130.9000244141, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1650.6999511719, -1129.1999511719, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1650.6999511719, -1127.5999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1650.6999511719, -1125.8000488281, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 2239.8999023438, -1139.1999511719, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2237, -1138.3000488281, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2235, -1137.9000244141, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2233, -1137.1999511719, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2230.8000488281, -1136.6999511719, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2212.8999023438, -1131.1999511719, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2210.8000488281, -1130.5999755859, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2209.1000976563, -1130.0999755859, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2207, -1129.5, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2204.8000488281, -1128.9000244141, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2201.5, -1127.5999755859, 24.39999961853, 0, 0, 0);
	CreateDynamicObject(3749, 2222.8000488281, -1143.5, 30.700000762939, 0, 0, 349.99996948242);
	CreateDynamicObject(7033, 884.09997558594, -1778.6999511719, 17.200000762939, 0, 0, 268);
	CreateDynamicObject(7033, 1355.5, -1089.1999511719, 28, 0, 0, 167.99499511719);
	CreateDynamicObject(1237, 1365.1999511719, -1079, 24.10000038147, 0, 0, 0);
	CreateDynamicObject(1237, 1364.3000488281, -1082.1999511719, 23.799999237061, 0, 0, 0);
	CreateDynamicObject(1237, 1363.5999755859, -1085.5, 23.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 1363, -1088.4000244141, 23.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1362.3000488281, -1091.5, 23.299999237061, 0, 0, 0);
	CreateDynamicObject(1237, 1361.5999755859, -1094.9000244141, 23.10000038147, 0, 0, 0);
	CreateDynamicObject(1237, 1361.0999755859, -1098.3000488281, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1360.6999511719, -1101.0999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1360.3000488281, -1104.5999755859, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(1237, 1359.5999755859, -1107.5999755859, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(1237, 1345.0999755859, -1103.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(1237, 1345.5999755859, -1099.6999511719, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1346.5, -1094.5999755859, 22.89999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1347.5, -1090.1999511719, 23.200000762939, 0, 0, 0);
	CreateDynamicObject(1237, 1348.1999511719, -1085.5999755859, 23.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1349.5, -1080.0999755859, 23.700000762939, 0, 0, 0);
	CreateDynamicObject(1237, 1350.5, -1076, 24.10000038147, 0, 0, 0);
	CreateDynamicObject(1237, 1352, -1070.5999755859, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 877.59997558594, -1771, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 881.20001220703, -1771.0999755859, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 885.20001220703, -1771.3000488281, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 886.79998779297, -1771.3000488281, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 889.5, -1771.4000244141, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 892.5, -1771.6999511719, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 895, -1771.8000488281, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 897.29998779297, -1771.6999511719, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 898.59997558594, -1786.6999511719, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 895.20001220703, -1786.3000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 891.09997558594, -1786.3000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 885.09997558594, -1785.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(1237, 877.59997558594, -1785.4000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 871.29998779297, -1785, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 867.40002441406, -1784.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1237, 862.59997558594, -1784.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1237, 873.70001220703, -1770.6999511719, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 870.70001220703, -1770.5, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 867.90002441406, -1770.4000244141, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 864.5, -1770.1999511719, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 861.70001220703, -1770.0999755859, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 902.09997558594, -1771.9000244141, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 907.09997558594, -1772, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 902.90002441406, -1786.8000488281, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(8167, 2210.5, -1142.4000244141, 26, 0, 0, 260);
	CreateDynamicObject(8167, 2233.8000488281, -1149.0999755859, 26, 0, 0, 30);
	CreateDynamicObject(617, 2235.1999511719, -1148.5, 24.799999237061, 0, 0, 0);
	CreateDynamicObject(617, 2233.8999023438, -1144.5999755859, 24.799999237061, 0, 0, 0);
	CreateDynamicObject(617, 2210.8000488281, -1141.1999511719, 24.799999237061, 0, 0, 0);
	CreateDynamicObject(617, 2210.6000976563, -1137.3000488281, 24.799999237061, 0, 0, 0);
	CreateDynamicObject(617, 2214.5, -1138.1999511719, 24.799999237061, 0, 0, 0);
	CreateDynamicObject(1237, 2215.3999023438, -1131.9000244141, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2218.1000976563, -1133.0999755859, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1237, 2220.3999023438, -1133.4000244141, 24.60000038147, 0, 0, 0);*/
	// 5.2
	/*CreateDynamicObject(3502, 2136, -1752.5, 10.89999961853, 0, 0, 0);
	CreateDynamicObject(3502, 2044.0999755859, -1752.3000488281, 10.89999961853, 0, 0, 0);
	CreateDynamicObject(3502, 1981.8000488281, -1752.3000488281, 10.89999961853, 0, 0, 0);
	CreateDynamicObject(3502, 1874.4000244141, -1752.5, 10.89999961853, 0, 0, 0);
	CreateDynamicObject(3502, 1634.5999755859, -1732.5999755859, 10.89999961853, 0, 0, 0);
	CreateDynamicObject(3502, 1550, -1732.6999511719, 10.89999961853, 0, 0, 0);
	CreateDynamicObject(3502, 1418.0999755859, -1732.3000488281, 10.89999961853, 0, 0, 0);
	CreateDynamicObject(3502, 1312.4000244141, -1631.1999511719, 10.89999961853, 0, 0, 270);
	CreateDynamicObject(3502, 1297.4000244141, -1630.9000244141, 10.89999961853, 0, 0, 270);
	CreateDynamicObject(3502, 1356.5999755859, -1428.3000488281, 10.89999961853, 0, 0, 270);
	CreateDynamicObject(3502, 1342.4000244141, -1428.0999755859, 10.800000190735, 0, 0, 270);
	CreateDynamicObject(3502, 1357.4000244141, -1212.3000488281, 13.89999961853, 0, 0, 270);
	CreateDynamicObject(3502, 1343, -1212.0999755859, 13.89999961853, 0, 0, 270);
	CreateDynamicObject(3502, 1435.8000488281, -1034.1999511719, 21.10000038147, 0, 0, 180);
	CreateDynamicObject(673, 1430.4000244141, -1026.9000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1436.9000244141, -1026.5, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1443.5, -1026.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1449.0999755859, -1026.5999755859, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1455.0999755859, -1026.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1460.5999755859, -1026.5999755859, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1466.5999755859, -1026.0999755859, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1472.1999511719, -1026.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1478.4000244141, -1026.0999755859, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1487.4000244141, -1026.3000488281, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1495, -1026.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1503.4000244141, -1027.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(673, 1512.0999755859, -1028.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(3502, 1537.5999755859, -1047, 21.10000038147, 0, 0, 137.99450683594);
	CreateDynamicObject(3502, 1618.5, -1160.8000488281, 21.299999237061, 0, 0, 179.98901367188);
	CreateDynamicObject(3502, 1611.4000244141, -1161.5999755859, 7.5999999046326, 0, 0, 137.99377441406);
	CreateDynamicObject(3502, 1798.8000488281, -1175.6999511719, 21.200000762939, 0, 0, 155.98388671875);
	CreateDynamicObject(618, 1849.3000488281, -1390.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(8851, 1849.5, -1359, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(8851, 1849.4000244141, -1380.3000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(8851, 1849.5, -1401.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(8851, 1849.5999755859, -1422.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(8851, 1849.599609375, -1443.3994140625, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.7998046875, -1452.599609375, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.6999511719, -1448.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.6999511719, -1445.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5, -1442, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5999755859, -1438.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5999755859, -1435.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5, -1431.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5999755859, -1429.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.4000244141, -1426.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.4000244141, -1423, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.6999511719, -1418.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.9000244141, -1414.3000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.4000244141, -1410, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5, -1405.4000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5, -1401.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.8000488281, -1398.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.8000488281, -1395.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5, -1392.4000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.3000488281, -1386.5, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5, -1381.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.4000244141, -1378.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.1999511719, -1375.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.4000244141, -1372.4000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5, -1368, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.3000488281, -1365.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.6999511719, -1362.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.9000244141, -1360.4000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5999755859, -1359, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5999755859, -1356.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.8000488281, -1353.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.5999755859, -1351.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(3594, 1912.0999755859, -1750.1999511719, 13, 0, 0, 262);
	CreateDynamicObject(2780, 1910.5, -1748.6999511719, 12.199999809265, 0, 0, 0);
	CreateDynamicObject(3970, 1832.5, -1681.6999511719, 13.60000038147, 0, 0, 90);
	CreateDynamicObject(3091, 1921, -1749.9000244141, 13, 0, 0, 92);
	CreateDynamicObject(16023, 1931.5, -1750.1999511719, 13.60000038147, 0, 0, 186);
	CreateDynamicObject(1238, 1919.5, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1918.0999755859, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1916.6999511719, -1752.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1914.8000488281, -1752.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1913.0999755859, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1910.8000488281, -1752.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1907.1999511719, -1752.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1905.3000488281, -1752.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1903.8000488281, -1752.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1903.9000244141, -1751, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1904, -1750, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1903.6999511719, -1749.9000244141, 13, 0, 0, 0);
	CreateDynamicObject(1238, 1904.0999755859, -1748.5999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1365, 1867.5, -1389.8000488281, 13.60000038147, 0, 0, 86);
	CreateDynamicObject(1465, 1440.4000244141, -2233.3000488281, 13.699999809265, 0, 0, 336);
	CreateDynamicObject(1465, 1441.5, -2223.1000976563, 13.699999809265, 0, 0, 335.99487304688);
	CreateDynamicObject(1465, 1417.6999511719, -2216.8000488281, 13.699999809265, 0, 0, 335.99487304688);
	CreateDynamicObject(1465, 1423.0999755859, -2242.6000976563, 13.699999809265, 0, 0, 335.99487304688);
	CreateDynamicObject(3279, 1864.9000244141, -1439.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(3279, 1864.1999511719, -1353.9000244141, 12.5, 0, 0, 0);
	CreateDynamicObject(3279, 1942.5, -1362.8000488281, 17.5, 0, 0, 0);
	CreateDynamicObject(3279, 1969.0999755859, -1445.3000488281, 12.5, 0, 0, 0);
	CreateDynamicObject(1365, 1867.9000244141, -1401.8000488281, 13.60000038147, 0, 0, 85.995483398438);
	CreateDynamicObject(1365, 1882.8000488281, -1392.5999755859, 13.699999809265, 0, 0, 85.995483398438);
	CreateDynamicObject(1365, 1883.0999755859, -1382.5, 13.699999809265, 0, 0, 81.995483398438);
	CreateDynamicObject(1365, 1877.1999511719, -1387, 13.699999809265, 0, 0, 85.995483398438);
	CreateDynamicObject(1365, 1872.5999755859, -1374.9000244141, 13.699999809265, 0, 0, 85.995483398438);
	CreateDynamicObject(1365, 1883.0999755859, -1402.4000244141, 13.699999809265, 0, 0, 85.995483398438);
	CreateDynamicObject(1365, 1894, -1352.3000488281, 13.60000038147, 0, 0, 1.990966796875);
	CreateDynamicObject(1365, 1888.8000488281, -1352.3000488281, 13.60000038147, 0, 0, 1.988525390625);
	CreateDynamicObject(1365, 1882.5999755859, -1352.4000244141, 13.60000038147, 0, 0, 1.988525390625);
	CreateDynamicObject(1365, 1875.5, -1352.1999511719, 13.60000038147, 0, 0, 1.988525390625);
	CreateDynamicObject(16093, 1906.4000244141, -1358.8000488281, 15, 0, 0, 0);
	CreateDynamicObject(8302, 1967, -1438.1999511719, 13.60000038147, 0, 0, 292);
	CreateDynamicObject(13590, 1935.8000488281, -1399, 13.39999961853, 0, 0, 0);
	CreateDynamicObject(1457, 1893.4000244141, -1371.5999755859, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1893.4000244141, -1387.8000488281, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1902.4000244141, -1372.5, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1891.1999511719, -1361, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1926.4000244141, -1406.6999511719, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1912.3000488281, -1401.4000244141, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1918.8000488281, -1405.9000244141, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1920.9000244141, -1395.5999755859, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(1457, 1927.8000488281, -1400.3000488281, 14.199999809265, 0, 0, 0);
	CreateDynamicObject(3256, 1934.4000244141, -1358.8000488281, 15.89999961853, 0, 0, 0);
	CreateDynamicObject(3256, 1900.8000488281, -1446, 12.5, 0, 0, 0);
	CreateDynamicObject(8851, 1848.9000244141, -1485.9000244141, 12.60000038147, 0, 0, 358);
	CreateDynamicObject(8851, 1846.0999755859, -1506.9000244141, 12.60000038147, 0, 0, 343.99499511719);
	CreateDynamicObject(618, 1849.4000244141, -1476.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.3000488281, -1479.5, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.1999511719, -1482.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.0999755859, -1484.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849.0999755859, -1486.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1849, -1487.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1848.9000244141, -1489.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1848.9000244141, -1491.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1848.9000244141, -1492.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1848.8000488281, -1494.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1848.5999755859, -1495.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1848.8000488281, -1498.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1848.0999755859, -1500.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1847.5999755859, -1503.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1846.9000244141, -1505.3000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1846.4000244141, -1507.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1846.0999755859, -1509.1999511719, 12.800000190735, 0, 0, 0);
	CreateDynamicObject(618, 1844.9000244141, -1512, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1844.3000488281, -1514, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1843.6999511719, -1516.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(8851, 1838.6999511719, -1527.0999755859, 12.60000038147, 0, 0, 335.99291992188);
	CreateDynamicObject(8851, 1831.4000244141, -1546.9000244141, 12.60000038147, 0, 0, 343.98937988281);
	CreateDynamicObject(618, 1842.5, -1518.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1841.9000244141, -1520.4000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1840.8000488281, -1522.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1840.0999755859, -1524.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1839, -1527.3000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1838.1999511719, -1528.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1837.3000488281, -1530.6999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1836.4000244141, -1532.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1835.5, -1534.5999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1834.6999511719, -1536.5, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1834.0999755859, -1538.1999511719, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1833.0999755859, -1541.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1832.4000244141, -1544, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1831.9000244141, -1546.0999755859, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1831.5, -1548, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1830.9000244141, -1549.8000488281, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1830.5, -1551.5, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1829.8000488281, -1552.9000244141, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1829.5999755859, -1554, 12.60000038147, 0, 0, 0);
	CreateDynamicObject(618, 1829, -1556.0999755859, 12.60000038147, 0, 0, 0);*/
	// 5.0
	/*CreateDynamicObject(6300, 249.7998046875, -2003.19921875, -7.6999998092651, 0, 0, 1.99951171875);
	CreateDynamicObject(10230, 648.90002441406, -1981.5, 6.0999999046326, 0, 0, 0);
	CreateDynamicObject(11495, 267.5, -1952.8000488281, 0.10000000149012, 0, 0, 0);
	CreateDynamicObject(11495, 267.5, -1931, 0, 0, 0, 0);
	CreateDynamicObject(11495, 267.5, -1909, 0, 0, 0, 0);
	CreateDynamicObject(11495, 267.60000610352, -1887, 0, 0, 0, 0);
	CreateDynamicObject(11490, 247.69999694824, -2032.4000244141, -0.10000000149012, 0, 0, 0);
	CreateDynamicObject(2290, 243.69999694824, -2028.5999755859, 1.2000000476837, 0, 0, 0);
	CreateDynamicObject(2290, 249.60000610352, -2028.8000488281, 1.3999999761581, 0, 0, 0);
	CreateDynamicObject(2108, 251.89999389648, -2033.9000244141, 1.3999999761581, 0, 0, 0);
	CreateDynamicObject(2108, 243.39999389648, -2034.0999755859, 1.8999999761581, 0, 0, 0);
	CreateDynamicObject(1645, 221.89999389648, -2021.9000244141, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 221.80000305176, -2020.3000488281, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 221.60000610352, -2018.4000244141, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 221.69999694824, -2016.5, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 221.80000305176, -2014.5, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 221.69921875, -2012.8994140625, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(2681, 251.60000610352, -2038, 1.3999999761581, 0, 0, 273.9990234375);
	CreateDynamicObject(2681, 251.69999694824, -2036.9000244141, 1.3999999761581, 0, 0, 273.99353027344);
	CreateDynamicObject(2681, 251.60000610352, -2035.8000488281, 1.3999999761581, 0, 0, 273.99353027344);
	CreateDynamicObject(2681, 251.39999389648, -2034.6999511719, 1.3999999761581, 0, 0, 273.99353027344);
	CreateDynamicObject(2640, 244.19999694824, -2038.9000244141, 2.2999999523163, 0, 0, 95.99853515625);
	CreateDynamicObject(2640, 244.30000305176, -2037.5, 2.2999999523163, 0, 0, 95.993041992188);
	CreateDynamicObject(2640, 244.10000610352, -2036.3000488281, 2.2999999523163, 0, 0, 95.993041992188);
	CreateDynamicObject(2640, 244, -2034.9000244141, 2.2999999523163, 0, 0, 95.993041992188);
	CreateDynamicObject(14582, 327.125, -2023.8828125, 8.2305278778076, 0, 0, 0);
	CreateDynamicObject(14582, 230, -2018.9000244141, 3.7999999523163, 0, 0, 0);
	CreateDynamicObject(1829, 251.69999694824, -2032.4000244141, 1.8999999761581, 0, 0, 270);
	CreateDynamicObject(1840, 232.10000610352, -2014.0999755859, 0.40000000596046, 0, 0, 250);
	CreateDynamicObject(1840, 234.30000305176, -2015.8000488281, 0.40000000596046, 0, 0, 213.99938964844);
	CreateDynamicObject(2100, 248, -2039.3000488281, 1.3999999761581, 0, 0, 181.99951171875);
	CreateDynamicObject(1432, 222.89999389648, -2009.5, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1432, 222.60000610352, -2003.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1432, 227, -2006.0999755859, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1432, 230.5, -2002.5, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1432, 230.5, -2009.9000244141, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1670, 230.69999694824, -2002.4000244141, 1, 0, 0, 0);
	CreateDynamicObject(1670, 230.60000610352, -2009.6999511719, 1, 0, 0, 0);
	CreateDynamicObject(1670, 223, -2009.5, 1, 0, 0, 0);
	CreateDynamicObject(1670, 227.10000610352, -2006.1999511719, 1, 0, 0, 0);
	CreateDynamicObject(1670, 222.69999694824, -2003.1999511719, 1, 0, 0, 0);
	CreateDynamicObject(1963, 274.10000610352, -2007.5999755859, 0.80000001192093, 0, 0, 274);
	CreateDynamicObject(1954, 272.39999389648, -2007.3000488281, 0.5, 0, 0, 0);
	CreateDynamicObject(14820, 274.10000610352, -2007.5999755859, 1.2999999523163, 0, 0, 94);
	CreateDynamicObject(616, 262, -1965.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 250.10000610352, -1965.1999511719, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 240, -1966.0999755859, 0.20000000298023, 0, 0, 0);
	CreateDynamicObject(616, 231.89999389648, -1974.6999511719, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 221.80000305176, -2001.9000244141, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 268.5, -1971.1999511719, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 268.89999389648, -1979.9000244141, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 269.20001220703, -1987.5, 0.30000001192093, 0, 0, 0);
	CreateDynamicObject(616, 269.20001220703, -1995.1999511719, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 271.79998779297, -2000.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 280.10000610352, -2000.0999755859, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 280.10000610352, -2008.1999511719, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 280.5, -2014.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 280.60000610352, -2021.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 281, -2027.8000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 281.10000610352, -2035.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 280.70001220703, -2039.8000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 277.10000610352, -2040.5999755859, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 273.10000610352, -2041, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 268.79998779297, -2040.9000244141, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 264.70001220703, -2041.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 261.39999389648, -2041.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 258, -2041.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 239, -2041.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 233.30000305176, -2041.8000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 229.10000610352, -2041.9000244141, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 225.60000610352, -2041.4000244141, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 221.60000610352, -2041.5999755859, 0.30000001192093, 0, 0, 0);
	CreateDynamicObject(616, 221.80000305176, -2035.4000244141, 0.30000001192093, 0, 0, 0);
	CreateDynamicObject(616, 221.30000305176, -2028.4000244141, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 253.80000305176, -2041.5, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(616, 242.19999694824, -2041.5, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(4874, 300.39999389648, -1977.3000488281, 2.2999999523163, 0, 0, 186);
	CreateDynamicObject(1645, 224.69999694824, -1990.4000244141, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 224.60000610352, -1986.9000244141, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 224.69999694824, -1984.3000488281, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 224.80000305176, -1982, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(1645, 224.19999694824, -1979, 0.69999998807907, 0, 0, 270);
	CreateDynamicObject(946, 240.5, -1998.8000488281, 2.4000000953674, 0, 0, 0);
	CreateDynamicObject(946, 239.10000610352, -1968.9000244141, 2.4000000953674, 0, 0, 188);
	CreateDynamicObject(3031, 266.20001220703, -2032.0999755859, 8.5, 0, 0, 46);
	CreateDynamicObject(2114, 239.5, -1986.6999511719, 0.30000001192093, 0, 0, 0);
	CreateDynamicObject(1481, 226, -2001.1999511719, 1.1000000238419, 0, 0, 0);
	CreateDynamicObject(1840, 273.60000610352, -2006.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1840, 273.60000610352, -2005.8000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1840, 273.70001220703, -2005.3000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(1840, 273.29998779297, -2007, 0.40000000596046, 0, 0, 4);
	CreateDynamicObject(1840, 273.29998779297, -2008.1999511719, 0.40000000596046, 0, 0, 3.9990234375);
	CreateDynamicObject(1840, 273.29998779297, -2009.1999511719, 0.40000000596046, 0, 0, 3.9990234375);
	CreateDynamicObject(1840, 273.29998779297, -2009.1999511719, 0.40000000596046, 0, 0, 3.9990234375);
	CreateDynamicObject(1840, 273.29998779297, -2009.8000488281, 0.40000000596046, 0, 0, 0);
	CreateDynamicObject(11547, 1502.4000244141, -1043.5, 25.799999237061, 0, 0, 264);
	CreateDynamicObject(11547, 1463.6999511719, -1043.1999511719, 25.799999237061, 0, 0, 269.99597167969);
	CreateDynamicObject(11547, 1615.8000488281, -1152.4000244141, 26, 0, 0, 269.99450683594);
	CreateDynamicObject(11547, 1596.8000488281, -1152.5, 26, 0, 0, 269.99450683594);
	CreateDynamicObject(7033, 1322.69921875, -1400, 16.799999237061, 0, 0, 87.989501953125);
	CreateDynamicObject(7033, 76.8994140625, -1535, 8.8000001907349, 0, 0, 87.990478515625);
	CreateDynamicObject(7033, 1041.1999511719, -2074.8000488281, 16.700000762939, 0, 0, 347.99047851563);
	CreateDynamicObject(7033, 1031.5, -2240.5, 16.700000762939, 0, 0, 15.985107421875);
	CreateDynamicObject(7033, 1322, -929.29998779297, 38.900001525879, 0, 0, 77.994995117188);
	CreateDynamicObject(9482, 1380.8000488281, -1036.0999755859, 31.89999961853, 0, 0, 0);
	CreateDynamicObject(9482, 1549.5, -1057.1999511719, 29.200000762939, 0, 0, 314);
	CreateDynamicObject(618, 1557.0999755859, -1053.6999511719, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(618, 1545.9000244141, -1065.8000488281, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(618, 1555.3000488281, -1054.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(618, 1547.5, -1063.4000244141, 22.799999237061, 0, 0, 0);
	CreateDynamicObject(618, 1380.1999511719, -1028, 25.5, 0, 0, 0);
	CreateDynamicObject(618, 1380.0999755859, -1031.0999755859, 25.5, 0, 0, 0);
	CreateDynamicObject(618, 1380.1999511719, -1042.5, 25.5, 0, 0, 0);
	CreateDynamicObject(618, 1380.3000488281, -1045.8000488281, 26, 0, 0, 0);
	CreateDynamicObject(618, 1383.3000488281, -1024.5, 25.299999237061, 0, 0, 0);
	CreateDynamicObject(618, 1386, -1022.4000244141, 25.10000038147, 0, 0, 0);
	CreateDynamicObject(618, 1384.1999511719, -1046.1999511719, 26.700000762939, 0, 0, 0);
	CreateDynamicObject(18261, 1033.8000488281, -1946.1999511719, 12, 0, 0, 182);
	CreateDynamicObject(18266, 1026.5999755859, -1982, 16.700000762939, 0, 0, 358);
	CreateDynamicObject(5837, 1349.5, -1427.6999511719, 14.300000190735, 0, 0, 86);
	CreateDynamicObject(5837, 1976.6999511719, -1759.4000244141, 14.300000190735, 0, 0, 359.99450683594);
	CreateDynamicObject(968, 606.09997558594, -1202.4000244141, 18.60000038147, 0, 0, 34);
	CreateDynamicObject(1237, 605.90002441406, -1202.3000488281, 17.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 615.59997558594, -1198.8000488281, 17.5, 0, 0, 0);
	CreateDynamicObject(968, 615.59997558594, -1199.0999755859, 18.60000038147, 0, 0, 33.997192382813);
	CreateDynamicObject(1237, 626.09997558594, -1195, 17.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 637.2998046875, -1191.19921875, 17.39999961853, 0, 0, 0);
	CreateDynamicObject(997, 602.70001220703, -1203.8000488281, 17.39999961853, 0, 0, 20);
	CreateDynamicObject(997, 601.20001220703, -1204.5, 17.5, 0, 0, 19.9951171875);
	CreateDynamicObject(997, 616.29998779297, -1198.5, 17.5, 0, 0, 19.9951171875);
	CreateDynamicObject(997, 622.59997558594, -1196.3000488281, 17.39999961853, 0, 0, 19.9951171875);
	CreateDynamicObject(997, 637.7998046875, -1191, 17.39999961853, 0, 0, 35.9912109375);
	CreateDynamicObject(968, 626.19921875, -1195.099609375, 18.60000038147, 0, 0, 33.99169921875);
	CreateDynamicObject(968, 637.20001220703, -1191.1999511719, 18.700000762939, 0, 0, 33.997192382813);
	CreateDynamicObject(1237, 83.800003051758, -1524.1999511719, 3.9000000953674, 0, 0, 0);
	CreateDynamicObject(968, 83, -1545.9000244141, 5.9000000953674, 0, 0, 82);
	CreateDynamicObject(1237, 82.900001525879, -1546.0999755859, 4.6999998092651, 0, 0, 0);
	CreateDynamicObject(968, 83.900001525879, -1524.3000488281, 5.0999999046326, 0, 0, 81.996459960938);
	CreateDynamicObject(1694, 1975.5999755859, -1764.5, 24.60000038147, 0, 0, 0);
	CreateDynamicObject(1238, 1969.5999755859, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1972.5, -1752.2998046875, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1975.1999511719, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1978, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1981.1999511719, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1983.8000488281, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1986.5999755859, -1752.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1342.5, -1418.6999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1342.3000488281, -1421.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1342.0999755859, -1423.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1342, -1425.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1341.6999511719, -1428.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1341.4000244141, -1432.0999755859, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1341.1999511719, -1435.8000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1357.5999755859, -1419.3000488281, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1357.1999511719, -1421.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1357, -1424.4000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1356.9000244141, -1427.1999511719, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1356.6999511719, -1429.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1356.5, -1432.9000244141, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1356.3000488281, -1436.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1238, 1356.3000488281, -1438.5, 12.699999809265, 0, 0, 0);
	CreateDynamicObject(1237, 1328, -933.59997558594, 35.599998474121, 0, 0, 0);
	CreateDynamicObject(968, 1330, -1397.3000488281, 13.60000038147, 0, 0, 91.99169921875);
	CreateDynamicObject(1237, 1330.099609375, -1402.8994140625, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(1237, 1329.8000488281, -1397.4000244141, 12.39999961853, 0, 0, 0);
	CreateDynamicObject(968, 1330.19921875, -1403, 13.699999809265, 0, 0, 275.98754882813);
	CreateDynamicObject(1237, 1329, -928, 35.599998474121, 0, 0, 0);
	CreateDynamicObject(968, 1328.1999511719, -933.79998779297, 36.799999237061, 0, 0, 81.988525390625);
	CreateDynamicObject(968, 1329.1999511719, -928, 36.799999237061, 0, 0, 81.985473632813);
	CreateDynamicObject(6964, 1405.3000488281, -1716.9000244141, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1394.9000244141, -1715.3000488281, 7.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1387.8000488281, -1715.6999511719, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1378, -1713.5999755859, 7.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1359.1999511719, -1719.6999511719, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1363.5, -1713.4000244141, 7.4000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1366.5, -1709, 7.8000001907349, 0, 0, 0);
	CreateDynamicObject(6964, 1362.0999755859, -1704.9000244141, 7.5, 0, 0, 0);
	CreateDynamicObject(6964, 1366.9000244141, -1699.8000488281, 7.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1363.5, -1697.6999511719, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1367.8000488281, -1693.0999755859, 8.6000003814697, 0, 0, 0);
	CreateDynamicObject(6964, 1357, -1688, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361.5, -1683, 11.699999809265, 0, 0, 0);
	CreateDynamicObject(6964, 1361.5, -1677.0999755859, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361.5999755859, -1667.0999755859, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361.5999755859, -1661, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361.6999511719, -1655.3000488281, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361.8000488281, -1644.0999755859, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361, -1631.5999755859, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361.0999755859, -1622.4000244141, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1358.3000488281, -1611.0999755859, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1360, -1602, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1361.8000488281, -1596.5, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1365.1999511719, -1584.4000244141, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1367.4000244141, -1572, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1369.9000244141, -1563, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1373.1999511719, -1552.6999511719, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1376.4000244141, -1542.5999755859, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1379, -1532.5, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1382.6999511719, -1520.4000244141, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1385.5999755859, -1509, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1389.3000488281, -1497.6999511719, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1391.3000488281, -1487, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1394.9000244141, -1479, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1398.8000488281, -1466.5999755859, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1401.4000244141, -1454.4000244141, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1404.5, -1440, 7.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1402.6999511719, -1427.6999511719, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1406.4000244141, -1417.9000244141, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1407.1999511719, -1406.6999511719, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1409.6999511719, -1392, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1409.9000244141, -1381.5999755859, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1410.1999511719, -1367.1999511719, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1410.5, -1355.5, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1409.3000488281, -1342.0999755859, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1408.3000488281, -1327.1999511719, 7.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1409.4000244141, -1315.5, 8, 0, 0, 0);
	CreateDynamicObject(6964, 1409.4000244141, -1303.8000488281, 8.1999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1417.8000488281, -1715.1999511719, 5.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1430.5, -1719.5999755859, 5.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1441, -1722.3000488281, 5.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1453.4000244141, -1725.9000244141, 5.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1463.6999511719, -1727, 5.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1474.9000244141, -1729.1999511719, 5.8000001907349, 0, 0, 0);
	CreateDynamicObject(6964, 1483.6999511719, -1731.9000244141, 5.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1496, -1734.5, 5.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1508.4000244141, -1737.5999755859, 5.4000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1519.8000488281, -1741.0999755859, 5, 0, 0, 0);
	CreateDynamicObject(6964, 1532, -1743.4000244141, 4.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1544, -1747.0999755859, 4.1999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 1553.0999755859, -1750, 4, 0, 0, 0);
	CreateDynamicObject(6964, 1565.8000488281, -1750.9000244141, 3.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1576.5999755859, -1753.8000488281, 3.2999999523163, 0, 0, 0);
	CreateDynamicObject(6964, 1590, -1756.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1597.9000244141, -1758.5999755859, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1605.8000488281, -1761.3000488281, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1614.0999755859, -1762.3000488281, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1621.5, -1763.4000244141, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1626.9000244141, -1755.5999755859, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1623.1999511719, -1749.0999755859, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1620.9000244141, -1742.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1619.9000244141, -1731.1999511719, 2.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 1619.4000244141, -1719.9000244141, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1619.5999755859, -1715, 3.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1628, -1766.4000244141, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1636.5999755859, -1767.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1635.1999511719, -1763.5, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1643.6999511719, -1769.6999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1650.8000488281, -1772.3000488281, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1657.8000488281, -1774, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1666.5, -1775.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1675.1999511719, -1775.4000244141, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1681.5999755859, -1776.4000244141, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1684.9000244141, -1781.6999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1692.8000488281, -1781.6999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1702.0999755859, -1783.5, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1709.5999755859, -1785, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1719.6999511719, -1788.3000488281, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1728.1999511719, -1790.5999755859, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1738.5, -1791.5, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1749.3000488281, -1794.5, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1761.5999755859, -1797.4000244141, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1771.6999511719, -1800.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1770.1999511719, -1799.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1779.5, -1801.8000488281, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1788.8000488281, -1804.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1797.1999511719, -1806.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1804.1999511719, -1807.6999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1814, -1810.8000488281, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1821, -1812.3000488281, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1825.1999511719, -1811.1999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1832.5999755859, -1812.9000244141, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1841.5, -1816.6999511719, 3, 0, 0, 0);
	CreateDynamicObject(6964, 1849.0999755859, -1817.1999511719, 3, 0, 0, 6);
	CreateDynamicObject(6964, 1854.5999755859, -1818.9000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1862.0999755859, -1820.6999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1871, -1823, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1879.0999755859, -1824.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1889, -1827.5999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1897.8000488281, -1829.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1906.3000488281, -1830.8000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1915.3000488281, -1833.9000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1925.4000244141, -1837, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1932.5999755859, -1839.5, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1943.6999511719, -1842.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1956.0999755859, -1845.0999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1963.5999755859, -1850.1999511719, 3.0999999046326, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1971.1999511719, -1843.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1974.9000244141, -1848.5999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1970, -1856.9000244141, 3.4000000953674, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1981.5, -1843.6999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1987, -1849.9000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1990.6999511719, -1847.1999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1996, -1851.0999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 1997.0999755859, -1849.5, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2001.5999755859, -1852.0999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2002.8000488281, -1850.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2006.5, -1853.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2009.4000244141, -1850.4000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2016.8000488281, -1850.5999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2025.3000488281, -1852.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2033.1999511719, -1851.6999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2042.3000488281, -1850.9000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2050.6000976563, -1851.6999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2060.6000976563, -1850.8000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2071, -1850.9000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2078.5, -1851.5999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2090.1000976563, -1851.5, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2098.1999511719, -1851.5, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2107, -1851.4000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2116.8000488281, -1851.6999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2124.8000488281, -1851.1999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2134.3000488281, -1851.1999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2144, -1851.0999755859, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2144.3999023438, -1846.3000488281, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2138.1999511719, -1843.6999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2155.5, -1851.4000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2156, -1846.6999511719, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2167.5, -1852.4000244141, 3, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2176.1999511719, -1850.6999511719, 2.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2185.5, -1850.0999755859, 1.8999999761581, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2193.1999511719, -1850, 1.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2201.6000976563, -1851.4000244141, 0.89999997615814, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2212.1999511719, -1851.6999511719, 0.30000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2222.3999023438, -1850.4000244141, -0.30000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2235.1999511719, -1850.0999755859, -1, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2230.8000488281, -1855.1999511719, -0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2242.8000488281, -1854, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2245.5, -1850.1999511719, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2254.1000976563, -1852.5999755859, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2252.8000488281, -1849.4000244141, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2261.5, -1848.9000244141, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2261.5, -1853.5999755859, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2269.8000488281, -1856, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2268.3999023438, -1845.5999755859, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2279.6999511719, -1843.0999755859, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2279.6000976563, -1855.6999511719, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2286.3000488281, -1857.0999755859, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2292, -1843, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2295.3999023438, -1857.6999511719, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2302.1000976563, -1842.6999511719, -1.1000000238419, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2306.1999511719, -1856.1999511719, -0.89999997615814, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2318.1000976563, -1856.4000244141, -0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2315.3000488281, -1842.9000244141, -0.60000002384186, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2326, -1843.0999755859, -0.30000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2329.6999511719, -1857.3000488281, -0.10000000149012, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2334.8000488281, -1843.3000488281, 0.10000000149012, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2338, -1857.4000244141, 0.20000000298023, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2342.5, -1843.4000244141, 0.30000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2347.3999023438, -1856.9000244141, 0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2352.6000976563, -1844.5, 0.69999998807907, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2359.6000976563, -1857.4000244141, 0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2358.6000976563, -1844.1999511719, 0.89999997615814, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2365.8999023438, -1844.0999755859, 0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2376.3000488281, -1843.9000244141, 0.69999998807907, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2369.3000488281, -1852.8000488281, 0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2374.3000488281, -1857.9000244141, 0.69999998807907, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2380.6000976563, -1858.1999511719, 0.69999998807907, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2395.5, -1860.0999755859, 0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2390.3999023438, -1852.5, 0.60000002384186, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2387, -1842.5, 0.60000002384186, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2399.6000976563, -1843, 0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2402.6000976563, -1851.6999511719, 0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2405.3000488281, -1857.9000244141, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2410.3000488281, -1845.5999755859, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2410.3000488281, -1843.0999755859, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2414.1000976563, -1853.1999511719, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2353.8999023438, -1866.3000488281, 1, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2367.3000488281, -1865.3000488281, 0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2415.6999511719, -1858.3000488281, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2419.1999511719, -1843.5999755859, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2423.5, -1859.0999755859, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2432.5, -1859.6999511719, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2430.3999023438, -1851.1999511719, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2428.8999023438, -1841.5999755859, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2438.8000488281, -1840.9000244141, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2440, -1850.5, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2442, -1859.3000488281, 0.40000000596046, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2452.8999023438, -1859.9000244141, 0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2454.1999511719, -1849.5999755859, 0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2450.1999511719, -1839.0999755859, 0.5, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2463.6999511719, -1839.3000488281, 0.60000002384186, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2463.3000488281, -1850.4000244141, 0.60000002384186, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2464.6999511719, -1858.5999755859, 0.60000002384186, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2471.8999023438, -1860.9000244141, 0.69999998807907, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2474.5, -1850.3000488281, 0.69999998807907, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2475.8000488281, -1840.3000488281, 0.69999998807907, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2486.5, -1843.1999511719, 0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2486.3000488281, -1850.5999755859, 0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2485.8000488281, -1862.0999755859, 0.80000001192093, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2498.6000976563, -1859.9000244141, 1, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2498.8000488281, -1845.6999511719, 1, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2495.1999511719, -1840.1999511719, 0.89999997615814, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2506.6000976563, -1842.0999755859, 1.2999999523163, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2507.1000976563, -1851.3000488281, 1.2999999523163, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2509.3999023438, -1861, 1.3999999761581, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2520.5, -1845.1999511719, 1.7999999523163, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2519.5, -1852, 1.7000000476837, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2521.3999023438, -1858.9000244141, 1.7999999523163, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2535.1000976563, -1859, 2.2000000476837, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2534.1999511719, -1852.0999755859, 2.2000000476837, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2532.8999023438, -1844.3000488281, 2.2000000476837, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2544.6999511719, -1845.0999755859, 2.5999999046326, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2544.8999023438, -1857.1999511719, 2.5999999046326, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2545.1999511719, -1858.8000488281, 2.5999999046326, 0, 0, 5.99853515625);
	CreateDynamicObject(6964, 2544.6000976563, -1851, 2.5999999046326, 0, 0, 5.99853515625);
	CreateDynamicObject(4268, 2896.8999023438, -2198.3999023438, 88.199996948242, 0, 0, 0);
	CreateDynamicObject(5158, 2837.7734375, -2334.4765625, 11.9921875, 0, 0, 0);
	CreateDynamicObject(6964, 1972.5, -1862, 4.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1978.4000244141, -1866.0999755859, 4.5, 0, 0, 0);
	CreateDynamicObject(6964, 1983.9000244141, -1871.3000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1987.5, -1875.4000244141, 5.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 1990.9000244141, -1878.8000488281, 6, 0, 0, 0);
	CreateDynamicObject(6964, 1993.9000244141, -1882.1999511719, 6.4000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 2000.3000488281, -1888.3000488281, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2005.5999755859, -1893.8000488281, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2010.5, -1897.9000244141, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2017.3000488281, -1907.0999755859, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2022.1999511719, -1911.0999755859, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2027.9000244141, -1917.5, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2035.5999755859, -1924.1999511719, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2043.5999755859, -1932, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2051.1999511719, -1938.9000244141, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2056.6999511719, -1944.4000244141, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2063.8000488281, -1952, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2071.1999511719, -1959.5, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2080, -1968, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2085.6000976563, -1973.9000244141, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2094.3999023438, -1982.1999511719, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2098, -1986.5, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2106.1000976563, -1993.3000488281, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2112, -1999.6999511719, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2117.1999511719, -2007.1999511719, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2125.1999511719, -2012.4000244141, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2132.8000488281, -2020.8000488281, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2137.8999023438, -2025, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2142.8000488281, -2030.4000244141, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2148.3999023438, -2036.6999511719, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2153.5, -2041.5999755859, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2157.8999023438, -2047.6999511719, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2163.3000488281, -2052.3999023438, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2167.6000976563, -2056.8999023438, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2172.3999023438, -2062.3000488281, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2177.1999511719, -2066.3999023438, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2182.3000488281, -2071.6000976563, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2187.3999023438, -2077, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2192.1000976563, -2082.5, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2196.5, -2086.8000488281, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2202.6999511719, -2093, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2208, -2098.1000976563, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2212.1999511719, -2105.6999511719, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2219.1999511719, -2111.8000488281, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2227.1000976563, -2116.3999023438, 7, 0, 0, 0);
	CreateDynamicObject(6964, 2231.6000976563, -2120.5, 6.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 2237.6999511719, -2127.5, 6.4000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 2246.1000976563, -2136.1999511719, 5.9000000953674, 0, 0, 0);
	CreateDynamicObject(6964, 2238.3000488281, -2131.6000976563, 6.1999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 2231.1000976563, -2124.6000976563, 6.5999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2242.6999511719, -2134.1000976563, 6, 0, 0, 0);
	CreateDynamicObject(6964, 2249.6000976563, -2140.3999023438, 5.6999998092651, 0, 0, 0);
	CreateDynamicObject(6964, 2255.6000976563, -2146.6999511719, 5.3000001907349, 0, 0, 0);
	CreateDynamicObject(6964, 2261.8000488281, -2152.5, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2270.3999023438, -2153.5, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2261.5, -2159.6999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2267.1000976563, -2164.3000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2277.1999511719, -2161.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2271.5, -2173.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2275.1000976563, -2178.8000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2281.3999023438, -2184.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2285.1000976563, -2167.6999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2292.3999023438, -2176.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2298.1000976563, -2181.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2291.8999023438, -2192.1000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2298.8000488281, -2199, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2306.1999511719, -2187.3999023438, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2313.1999511719, -2196, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2307.3000488281, -2205.6999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2319.3999023438, -2206.1000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2312.3000488281, -2211.8999023438, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2319.1999511719, -2220.1000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2327.3000488281, -2213.1000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2335.1999511719, -2217.8999023438, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2327.8000488281, -2226.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2332, -2235.1000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2341.6999511719, -2228.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2353.6000976563, -2232.8000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2344.1000976563, -2241.3000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2351.3999023438, -2248.6000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2358.3000488281, -2241, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2345.6000976563, -2250.8999023438, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2355.5, -2261.1999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2365.3999023438, -2250.3000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2363.1999511719, -2264.8000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2372, -2258.3999023438, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2379.8000488281, -2264, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2371.8999023438, -2270.6999511719, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2369.1999511719, -2271.3000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2375.1000976563, -2278.3999023438, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2385.1999511719, -2271.5, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2382, -2282.6000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2391.3000488281, -2278.8000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2398.8000488281, -2284.6000976563, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2384.6999511719, -2290, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2391.8999023438, -2293.8000488281, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2394, -2291.3999023438, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(6964, 2399.8000488281, -2285, 5.0999999046326, 0, 0, 0);
	CreateDynamicObject(4597, 2553.1999511719, -1851.1999511719, 3.2999999523163, 0, 0, 270);
	CreateDynamicObject(4597, 2553.5, -1855.9000244141, 3.2999999523163, 0, 0, 270);
	CreateDynamicObject(4007, 1012.799987793, -1852.4000244141, 32.799999237061, 0, 0, 28);
	CreateDynamicObject(4021, 1025.4000244141, -2018.4000244141, 18.60000038147, 0, 0, 82);
	CreateDynamicObject(1237, 1031.9000244141, -2066.3000488281, 12, 0, 0, 0);
	CreateDynamicObject(968, 1032, -2066.1999511719, 13.199999809265, 0, 0, 347.98754882813);
	CreateDynamicObject(1237, 1052.9000244141, -2071.5, 12, 0, 0, 0);
	CreateDynamicObject(968, 1052.8000488281, -2071.3000488281, 13.199999809265, 0, 0, 347.98645019531);
	CreateDynamicObject(1237, 1036.0999755859, -2246.6000976563, 12, 0, 0, 0);
	CreateDynamicObject(1237, 1030.6999511719, -2247.3999023438, 12, 0, 0, 0);
	CreateDynamicObject(968, 1030.6999511719, -2247.6000976563, 13.199999809265, 0, 0, 9.9864501953125);
	CreateDynamicObject(968, 1036.1999511719, -2246.6999511719, 13.199999809265, 0, 0, 9.9810791015625);*/
	//MENUZINHO DP
	CreateDynamicObject(2886, 924.93914794922, -1210.9377441406, 17.406517028809, 0, 0, 90);
    CreateDynamicObject(2886, 921.93853759766, -1211.1234130859, 17.387250900269, 0, 0, 270);
    CreateDynamicObject(2886, 247.72758483887, 72.33472442627, 1003.9291992188, 0, 0, 0);
    CreateDynamicObject(2886, 250.40625, 64.489715576172, 1003.908203125, 0, 0, 270);
    CreateDynamicObject(2886, 250.90625, 64.573776245117, 1003.9202880859, 0, 0, 90);
    CreateDynamicObject(2886, 244.8984375, 73.800956726074, 1003.9417724609, 0, 0, 90);
    CreateDynamicObject(2886, 248.41078186035, 74.611839294434, 1003.9331054688, 0, 0, 90);
    CreateDynamicObject(2886, 247.88383483887, 77.16934967041, 1003.9483642578, 0, 0, 270);
    //2961
	//NOVA HQ PC
 	CreateDynamicObject(8210, 930.66082763672, -1281.2811279297, 18.397945404053, 0, 0, 90);
	CreateDynamicObject(8209, 858.64739990234, -1308.1369628906, 17.889656066895, 0, 0, 0);
	CreateDynamicObject(8209, 808.57556152344, -1259.2418212891, 19.239696502686, 0, 0, 270.75);
	CreateDynamicObject(8209, 808.09936523438, -1208.1110839844, 25.339740753174, 0, 0, 270.49731445313);
	CreateDynamicObject(8209, 807.89312744141, -1208.1455078125, 22.189788818359, 0, 0, 270.74694824219);
	CreateDynamicObject(8209, 857.16351318359, -1159.0500488281, 27.896324157715, 0, 0, 179.5);
	CreateDynamicObject(8209, 876.92437744141, -1159.2055664063, 27.896324157715, 0, 0, 179.49462890625);
	CreateDynamicObject(987, 931.57666015625, -1250.7336425781, 19.137548446655, 0, 0, 90);
	CreateDynamicObject(987, 924.74688720703, -1242.6802978516, 19.912536621094, 0, 0, 90);
	CreateDynamicObject(987, 926.72143554688, -1169.5181884766, 24.887548446655, 0, 0, 90);
	CreateDynamicObject(987, 933.58526611328, -1177.6463623047, 24.887548446655, 0, 0, 90);
	CreateDynamicObject(987, 931.13427734375, -1189.7550048828, 21.087533950806, 0, 0, 90);
	CreateDynamicObject(987, 931.14569091797, -1198.4715576172, 20.237546920776, 0, 0, 91.25);
	CreateDynamicObject(987, 924.669921875, -1211.0679931641, 19.912551879883, 0, 0, 90.496948242188);
	CreateDynamicObject(8209, 881.23199462891, -1308.3005371094, 17.914655685425, 0, 0, 0);
	CreateDynamicObject(985, 927.42132568359, -1239.0960693359, 19.8095703125, 0, 0, 180);
	CreateDynamicObject(985, 927.29364013672, -1198.6188964844, 20.934553146362, 0, 0, 0.2476806640625);
	CreateDynamicObject(987, 930.90545654297, -1262.1654052734, 17.537565231323, 0, 0, 90);
	CreateDynamicObject(985, 929.41418457031, -1166.7550048828, 25.634546279907, 0, 0, 359.74719238281);
	//Centro de treinamento 18�BPM/M
	CreateDynamicObject(1217, -1187.9329833984,-944.15979003906,128.63331604004,0,0,0);
	CreateDynamicObject(1238, -1190.8505859375,-949.68762207031,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1190.9501953125,-956.21185302734,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1190.9750976563,-962.38275146484,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1191,-968.31646728516,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1191,-974.30493164063,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1191,-979.8447265625,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1191,-985.9296875,128.53692626953,0,0,0);
	CreateDynamicObject(3578, -1183,-953.62121582031,128.9899597168,0,0,90);
	CreateDynamicObject(1217, -1187.2147216797,-943.84448242188,128.63331604004,0,0,0);
	CreateDynamicObject(1217, -1186.4772949219,-945.21697998047,128.63331604004,0,0,0);
	CreateDynamicObject(3578, -1183,-963.50384521484,128.9899597168,0,0,90);
	CreateDynamicObject(3578, -1183,-973.77154541016,128.9899597168,0,0,90);
	CreateDynamicObject(3578, -1183,-984.07489013672,128.99678039551,0,0,90);
	CreateDynamicObject(3578, -1175,-984.19866943359,128.99678039551,0,0,90);
	CreateDynamicObject(3578, -1175,-974.02362060547,128.99678039551,0,0,90);
	CreateDynamicObject(3578, -1175,-963.92633056641,128.9899597168,0,0,90);
	CreateDynamicObject(3578, -1175,-954.05133056641,128.9899597168,0,0,90);
	CreateDynamicObject(1423, -1182.978515625,-994.03210449219,128.9296875,0,0,90);
	CreateDynamicObject(1423, -1179.7076416016,-998.84466552734,128.9296875,0,0,0);
	CreateDynamicObject(1423, -1173.9075927734,-998.89892578125,128.9296875,0,0,0);
	CreateDynamicObject(1238, -1182.7307128906,-999.10076904297,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1178.6124267578,-1002.2049560547,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1174.9580078125,-1005.1189575195,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1189.1870117188,-1005.1890869141,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1184.9689941406,-1008.9627685547,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1181.2973632813,-1012.7841796875,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1172.4168701172,-1008.9254150391,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1172.0279541016,-1013.5501098633,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1172.7100830078,-1018.4791259766,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1176.9716796875,-1023.9147338867,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1183.4506835938,-1026.8936767578,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1184.7244873047,-1017.0678710938,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1189.8587646484,-1020.4877929688,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1176.8935546875,-1029,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1193.9122314453,-1026.6147460938,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1190.1641845703,-1032.4034423828,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1191.1107177734,-993.06805419922,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1191.4580078125,-1000.115234375,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1177.0494384766,-1036.5284423828,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1183.7407226563,-1036.015625,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1169.8406982422,-1029.4000244141,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1170.228515625,-1036.9084472656,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1163.6129150391,-1037.3328857422,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1163.3150634766,-1029.8000488281,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1157.0358886719,-1030.0732421875,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1157.3106689453,-1037.7718505859,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1150.7674560547,-1030.5028076172,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1150.7673339844,-1038.2023925781,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1143.6760253906,-1030.7763671875,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1144.5544433594,-1038.6927490234,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1135,-1038.9544677734,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1135,-1037.6767578125,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1135.0090332031,-1036.6414794922,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1135,-1035.2670898438,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1135,-1033.8394775391,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1134.9909667969,-1032.4830322266,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1135,-1031.41015625,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1141.7393798828,-1030.8011474609,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1139.8846435547,-1030.9135742188,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1138.0600585938,-1031.1049804688,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1142.4565429688,-1038.7276611328,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1140.4974365234,-1038.9313964844,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1138.3870849609,-1039.1370849609,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1136.6843261719,-1039.1188964844,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1136.2958984375,-1031.2200927734,128.53692626953,0,0,0);
	F_CreateDynamicObject(16770, -1056.9467773438,-948.36669921875,129.80931091309,0,0,90);
	F_CreateDynamicObject(1584, -1065.2770996094,-915.42614746094,128.21875,0,0,180);
	F_CreateDynamicObject(1583, -1063.83203125,-915.32940673828,128.21875,0,0,0);
	F_CreateDynamicObject(1584, -1061.8643798828,-915.34674072266,128.21875,0,0,0);
	F_CreateDynamicObject(1586, -1060.1744384766,-915.39819335938,128.21875,0,0,0);
	F_CreateDynamicObject(1585, -1058.5739746094,-915.32257080078,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1057.0869140625,-915.32800292969,128.21875,0,0,0);
	F_CreateDynamicObject(1584, -1055.5776367188,-915.28826904297,128.21875,0,0,0);
	F_CreateDynamicObject(1586, -1054.1590576172,-915.28869628906,128.21875,0,0,0);
	F_CreateDynamicObject(1585, -1052.5485839844,-915.26684570313,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1051.0134277344,-915.34533691406,128.21875,0,0,0);
	F_CreateDynamicObject(1584, -1049.4099121094,-915.25823974609,128.21875,0,0,0);
	F_CreateDynamicObject(7016, -1114.9870605469,-1022.1374511719,128.21875,0,0,0);
	F_CreateDynamicObject(7016, -1030.5240478516,-1020.0999755859,128.21875,0,0,180);
	F_CreateDynamicObject(7016, -1065.7099609375,-986.8994140625,128.21875,0,0,270);
	F_CreateDynamicObject(7017, -1083.8500976563,-1061,128.21192932129,0,0,180);
	F_CreateDynamicObject(7017, -1062.1998291016,-1061,128.21875,0,0,180);
	F_CreateDynamicObject(7017, -1074.7177734375,-988.47119140625,128.21875,0,0,0);
	F_CreateDynamicObject(7017, -1071.4208984375,-999.9423828125,128.21875,0,0,0);
	F_CreateDynamicObject(7017, -1111.5788574219,-1020.0664672852,128.21875,0,0,90);
	F_CreateDynamicObject(7017, -1034.5714111328,-1018.1348876953,128.21192932129,0,0,90);
	F_CreateDynamicObject(7017, -1074.8234863281,-1013.7080078125,128.21875,0,0,0);
	F_CreateDynamicObject(7017, -1071.3688964844,-1028.3668212891,128.21875,0,0,0);
	F_CreateDynamicObject(7017, -1074.9947509766,-1049.0052490234,128.21875,0,0,0);
	F_CreateDynamicObject(1228, -1094,-982.29998779297,128.63987731934,0,0,0);
	F_CreateDynamicObject(1228, -1094,-984,128.63987731934,0,0,0);
	F_CreateDynamicObject(1228, -1094,-985.70001220703,128.63987731934,0,0,0);
	F_CreateDynamicObject(1228, -1094,-987.40014648438,128.63987731934,0,0,0);
	F_CreateDynamicObject(3050, -1083.6507568359,-983.58142089844,130.46089172363,0,0,90);
	F_CreateDynamicObject(1586, -1081.3841552734,-988.16912841797,129.51202392578,0,0,0);
	F_CreateDynamicObject(1585, -1079.7745361328,-988.16912841797,129.50671386719,0,0,0);
	F_CreateDynamicObject(3049, -1076.1080322266,-983.60571289063,130.46089172363,0,0,90);
	F_CreateDynamicObject(973, -1079.9362792969,-983.841796875,129.05897521973,0,0,0);
	F_CreateDynamicObject(973, -1070.5964355469,-983.85131835938,129.05897521973,0,0,0);
	F_CreateDynamicObject(1225, -1070.9528808594,-986.46069335938,128.62451171875, 0, 0, 0);
	F_CreateDynamicObject(1225, -1065.0999755859,-986.26159667969,128.62451171875, 0, 0, 0);
	F_CreateDynamicObject(1225, -1062.2757568359,-986.20446777344,128.62451171875, 0, 0, 0);
	F_CreateDynamicObject(1584, -1070.8778076172,-981.31671142578,130.47355651855, 0, 0, 0);
	F_CreateDynamicObject(1584, -1070.9782714844,-987.97979736328,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1065.1890869141,-987.99353027344,128.21875,0,0,0);
	F_CreateDynamicObject(1584, -1062.1495361328,-987.94384765625,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1059.2833251953,-988.01379394531,128.21875,0,0,0);
	F_CreateDynamicObject(1225, -1059.2017822266,-986.166015625,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1056.1553955078,-986.05249023438,128.62451171875,0,0,0);
	F_CreateDynamicObject(1584, -1056.3619384766,-987.94158935547,128.21875,0,0,0);
	F_CreateDynamicObject(1584, -1047.6824951172,-981.47332763672,128.25831604004,0,0,0);
	F_CreateDynamicObject(1225, -1047.7385253906,-983.34509277344,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1044.5935058594,-983.46447753906,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1041.4442138672,-983.59558105469,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1038.3532714844,-983.56597900391,128.62451171875,0,0,0);
	F_CreateDynamicObject(1583, -1044.8343505859,-981.47332763672,128.23193359375,0,0,0);
	F_CreateDynamicObject(1584, -1041.5618896484,-981.50646972656,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1038.3842773438,-981.47332763672,128.23706054688,0,0,0);
	F_CreateDynamicObject(1583, -1051.203125,-998.65747070313,128.21875,0,0,90);
	F_CreateDynamicObject(1584, -1053.5899658203,-994.720703125,128.21875,0,0,90);
	F_CreateDynamicObject(1585, -1052.7302246094,-994.19793701172,128.21875,0,0,90);
	F_CreateDynamicObject(1585, -1050.5432128906,-998.96984863281,128.21875,0,0,90);
	F_CreateDynamicObject(1586, -1060.3765869141,-990.06860351563,128.21875,0,0,90);
	F_CreateDynamicObject(1585, -1063.5003662109,-995.2294921875,128.21875,0,0,90);
	F_CreateDynamicObject(1238, -1044.01953125,-994.3701171875,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1056.5506591797,-990.82019042969,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1063.9633789063,-998.55853271484,128.53692626953,0,0,0);
	F_CreateDynamicObject(1584, -1059.20703125,-997.56713867188,128.21875,0,0,0);
	F_CreateDynamicObject(1584, -1067.1982421875,-989.70281982422,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1068.5329589844,-989.73480224609,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1078.8488769531,-990.72668457031,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1078.1374511719,-999.29663085938,128.21875,0,0,0);
	F_CreateDynamicObject(1584, -1087.1324462891,-997.46197509766,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1090.7119140625,-997.14056396484,128.21875,0,0,90);
	F_CreateDynamicObject(1585, -1087.5509033203,-996.05432128906,128.21875,0,0,90);
	F_CreateDynamicObject(1585, -1092.5413818359,-990.38354492188,128.21875,0,0,90);
	F_CreateDynamicObject(1585, -1092.7178955078,-991.99975585938,128.21875,0,0,90);
	F_CreateDynamicObject(1584, -1095.5645751953,-991.34509277344,128.21875,0,0,90);
	F_CreateDynamicObject(1584, -1106.5067138672,-995.24768066406,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1105.5070800781,-988.94110107422,128.21875,0,0,45);
	F_CreateDynamicObject(1583, -1107.2387695313,-992.23547363281,128.21875,0,0,90);
	F_CreateDynamicObject(1584, -1107.2470703125,-989.68133544922,128.21875,0,0,90);
	F_CreateDynamicObject(1585, -1102.9830322266,-991.72863769531,128.21875,0,0,45);
	F_CreateDynamicObject(1585, -1104.0758056641,-994.10095214844,128.21875,0,0,45);
	F_CreateDynamicObject(1586, -1105.33203125,-991.71832275391,128.21875,0,0,45);
	F_CreateDynamicObject(1238, -1097.4290771484,-998.30981445313,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1087.4462890625,-990.84704589844,128.53692626953,0,0,0);
	F_CreateDynamicObject(1238, -1076.2346191406,-992.55786132813,128.53692626953,0,0,0);
	F_CreateDynamicObject(973, -1029.8204345703,-1050.8648681641,129.05897521973,0,0,0);
	F_CreateDynamicObject(1225, -1026.4404296875,-985.31573486328,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1027.2855224609,-985.28759765625,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1028.1348876953,-985.32678222656,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1029.0363769531,-985.46325683594,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1029.9169921875,-985.50067138672,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1030.8148193359,-985.47485351563,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1031.6197509766,-985.57409667969,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1032.5185546875,-985.54895019531,128.61840820313,0,0,0);
	F_CreateDynamicObject(1225, -1033.4260253906,-985.57495117188,128.62451171875,0,0,0);
	F_CreateDynamicObject(1584, -1030.4234619141,-981.47332763672,129.23260498047,0,0,0);
	F_CreateDynamicObject(1584, -1033.0135498047,-981.47332763672,129.28108215332,0,0,0);
	F_CreateDynamicObject(1583, -1031.8081054688,-981.47332763672,129.31455993652,0,0,0);
	F_CreateDynamicObject(1583, -1029.1401367188,-981.47332763672,129.26609802246,0,0,0);
	F_CreateDynamicObject(1583, -1026.0560302734,-981.47332763672,129.23442077637,0,0,0);
	F_CreateDynamicObject(1586, -1027.4815673828,-981.47332763672,129.23382568359,0,0,0);
	F_CreateDynamicObject(1585, -1027.7590332031,-1013.9027099609,128.21875,0,0,0);
	F_CreateDynamicObject(1585, -1031.7421875,-1002.9291381836,128.21264648438,0,0,0);
	F_CreateDynamicObject(1585, -1027.2567138672,-993.05810546875,128.21264648438,0,0,0);
	F_CreateDynamicObject(1585, -1029.5129394531,-1024.5794677734,128.21875,0,0,0);
	F_CreateDynamicObject(1585, -1026.4133300781,-1030.7718505859,128.21875,0,0,0);
	F_CreateDynamicObject(1585, -1032.0028076172,-1030.724609375,128.21875,0,0,0);
	F_CreateDynamicObject(3057, -1094.8168945313,-1002.8583984375,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1094.9366455078,-1002.9426269531,129.35327148438,0,0,0);
	F_CreateDynamicObject(3057, -1092.6062011719,-1005.0762329102,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1050.4592285156,-1010.848815918,128.5979309082,0,0,0);
	F_CreateDynamicObject(3057, -1064.3806152344,-1003.0504150391,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1058.373046875,-1006.6984863281,128.5979309082,0,0,0);
	F_CreateDynamicObject(3057, -1088.9763183594,-1007.3713989258,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1082.5747070313,-1003.3744506836,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1094.1127929688,-1010.0314331055,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1081.6788330078,-1009.5712890625,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1072.9093017578,-1006.8629150391,128.60475158691,0,0,0);
	F_CreateDynamicObject(3057, -1065.6661376953,-1011.0735473633,128.60475158691,0,0,0);
	F_CreateDynamicObject(1225, -1093.0480957031,-1007.4925537109,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1081.826171875, -1006.212890625, 128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1051.3984375,-1002.862487793,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1063.841796875,-1009.0783691406,128.61769104004,0,0,0);
	F_CreateDynamicObject(1225, -1075.2829589844,-1002.926574707,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1087.3864746094,-1002.5881958008,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1084.6796875,-1011.3630371094,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1072.5864257813,-1010.0866699219,128.62451171875,0,0,0);
	F_CreateDynamicObject(1225, -1047.1301269531,-1007.9602050781,128.61769104004,0,0,0);
	F_CreateDynamicObject(1584, -1068.1547851563,-1004.8316040039,128.21875,0,0,90);
	F_CreateDynamicObject(1584, -1076.3332519531,-1008.3159790039,128.21875,0,0,90);
	F_CreateDynamicObject(1584, -1086.2346191406,-1004.9345092773,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1088.7388916016,-1009.7576293945,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1057.4384765625,-1011.3288574219,128.21192932129,0,0,45);
	F_CreateDynamicObject(1583, -1059.1315917969,-1003.2015991211,128.21875,0,0,90);
	F_CreateDynamicObject(2933, -1046.5081787109,-1018.1373291016,129.92755126953,0,0,90);
	F_CreateDynamicObject(2933, -1046.4378662109,-1023.9157104492,129.92755126953,0,0,90);
	F_CreateDynamicObject(2933, -1057.0036621094,-1018.1633300781,129.92755126953,0,0,90);
	F_CreateDynamicObject(2933, -1057.0192871094,-1023.662902832,129.92755126953,0,0,90);
	F_CreateDynamicObject(2991, -1053.369140625,-1020.8155517578,128.83966064453,0,0,90);
	F_CreateDynamicObject(2991, -1055.4852294922,-1020.8130493164,128.83966064453,0,0,90);
	F_CreateDynamicObject(2991, -1055.1802978516,-1020.8026733398,130.09744262695,0,0,90);
	F_CreateDynamicObject(2933, -1056.958984375,-1023.9031982422,132.45402526855,0, 0, 90);
	F_CreateDynamicObject(2933, -1056.943359375,-1018.1691894531,132.443359375,0,0,90);
	F_CreateDynamicObject(12861, -1076.5850830078,-1034.6114501953,128.30700683594,0,0,90);
	F_CreateDynamicObject(12861, -1070.6254882813,-1042.5772705078,128.30700683594,0,0,270);
	F_CreateDynamicObject(2991, -1099.4835205078,-1035.5684814453,128.83966064453,0,0,0);
	F_CreateDynamicObject(2991, -1099.5808105469,-1033.5961914063,128.84648132324,0,0,0);
	F_CreateDynamicObject(2991, -1099.5544433594,-1040.4578857422,132.9393157959,0,0,0);
	F_CreateDynamicObject(2991, -1085.6302490234,-1040.5162353516,136.9393157959,0,0,0);
	F_CreateDynamicObject(3575, -1071.7531738281,-1022.8167724609,130.91044616699,0,0,270);
	F_CreateDynamicObject(3575, -1087.2078857422,-1019.1729125977,130.91044616699,0,0,90);
	F_CreateDynamicObject(3572, -1064.8291015625,-1017.8115234375,129.56669616699,0,0,90);
	F_CreateDynamicObject(3572, -1093.892578125,-1025.2879638672,129.56669616699,0,0,90);
	F_CreateDynamicObject(1584, -1066.3786621094,-1015.5088500977,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1078.7742919922,-1014.9716186523,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1078.1843261719,-1025.1430664063,128.21875,0,0,0);
	F_CreateDynamicObject(1585, -1092.1649169922,-1026.3736572266,128.21875,0,0,90);
	F_CreateDynamicObject(1586, -1085.7464599609,-1016.75,128.21875,0,0,0);
	F_CreateDynamicObject(1583, -1084.3529052734,-1031.0231933594,128.21875,0,0,90);
	F_CreateDynamicObject(1583, -1085.2540283203,-1029.3433837891,128.21875,0,0,272);
	F_CreateDynamicObject(1585, -1085.7457275391,-1030.1610107422,128.21875,0,0,272);
	F_CreateDynamicObject(1585, -1095.0627441406,-1043.3806152344,136.31158447266,0,0,0);
	F_CreateDynamicObject(1584, -1095.578125,-1043.9815673828,136.31158447266,0,0,0);
	F_CreateDynamicObject(1583, -1088.2277832031,-1043.8624267578,136.31158447266,0,0,30);
	F_CreateDynamicObject(1584, -1087.74609375,-1037.93359375,136.31158447266,0,0,308);
	F_CreateDynamicObject(1584, -1067.0753173828,-1033.7235107422,140.31158447266,0,0,312);
	F_CreateDynamicObject(1584, -1080.8199462891,-1042.7963867188,140.31158447266,0,0,52);
	F_CreateDynamicObject(1583, -1073.7806396484,-1038.8657226563,140.31158447266,0,0,274);
	F_CreateDynamicObject(1585, -1069.1859130859,-1034.6282958984,140.31158447266,0,0,314);
	F_CreateDynamicObject(1583, -1080.8787841797,-1034.8863525391,140.31158447266,0,0,318);
	F_CreateDynamicObject(1585, -1065.9908447266,-1042.8703613281,140.31158447266,0,0,248);
	F_CreateDynamicObject(1585, -1075.0922851563,-1038.7633056641,140.31158447266,0,0,90);
	F_CreateDynamicObject(9697, -1147.4162597656,-914.90765380859,128.2331237793,0,0,0);
	//POSTO DA POLICIA FEDERAL
    /*CreateDynamicObject(9245,1766.57836914,822.34338379,21.28153992,0.00000000,0.00000000,178.00000000); //object(cstguard_sfn01) (1)
    CreateDynamicObject(3470,1765.29370117,820.86535645,18.67026520,0.00000000,0.00000000,258.00000000); //object(vegasaircon1) (1)
    CreateDynamicObject(11453,1797.46484375,824.99530029,12.44275856,0.00000000,0.00000000,0.00000000); //object(des_sherrifsgn1) (1)
    CreateDynamicObject(1237,1752.36462402,833.93853760,8.85146809,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,1759.50354004,833.75048828,9.09300613,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (2)
    CreateDynamicObject(1237,1764.35400391,833.62274170,9.25180531,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (3)
    CreateDynamicObject(1237,1769.24328613,833.60577393,9.41187572,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (4)
    CreateDynamicObject(1237,1772.76086426,833.46832275,9.52703571,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
    CreateDynamicObject(1237,1747.52905273,833.95727539,8.69315720,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (7)
    CreateDynamicObject(1237,1743.35742188,833.55206299,8.55658531,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (8)
    CreateDynamicObject(1237,1740.67736816,832.50860596,8.46884155,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (9)
    CreateDynamicObject(1237,1736.77770996,831.93670654,8.34117126,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (10)
    CreateDynamicObject(1237,1732.74658203,831.51757812,8.20919609,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (11)
    CreateDynamicObject(1237,1727.08020020,830.25146484,8.02368832,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (12)
    CreateDynamicObject(1237,1710.10900879,834.08178711,7.46807146,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (13)
    CreateDynamicObject(1237,1710.21728516,831.96380615,7.47161436,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (14)
    CreateDynamicObject(1237,1710.02673340,829.33599854,7.46537590,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (15)
    CreateDynamicObject(1237,1709.98205566,827.11096191,7.50216150,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (16)
    CreateDynamicObject(1434,1713.79235840,840.06335449,7.58502817,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (1)
    CreateDynamicObject(1434,1723.45678711,840.17468262,7.89990473,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (2)
    CreateDynamicObject(1434,1727.96240234,840.19671631,8.04711246,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (3)
    CreateDynamicObject(1434,1730.54919434,840.21954346,8.13149166,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (4)
    CreateDynamicObject(1434,1732.80493164,840.16369629,8.20610428,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (5)
    CreateDynamicObject(1434,1736.15576172,840.11889648,8.31641960,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (6)
    CreateDynamicObject(1434,1739.75781250,840.12084961,8.43432140,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (8)
    CreateDynamicObject(1434,1743.44274902,840.12286377,8.55493355,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (9)
    CreateDynamicObject(1434,1747.12756348,840.12487793,8.67554283,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (10)
    CreateDynamicObject(1434,1751.02819824,840.29327393,8.80094147,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (11)
    CreateDynamicObject(1434,1754.44970703,840.33319092,8.91241264,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (12)
    CreateDynamicObject(1434,1758.21081543,840.26281738,9.04392433,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (13)
    CreateDynamicObject(1434,1761.79687500,840.29492188,9.15568161,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (14)
    CreateDynamicObject(1434,1765.30981445,840.30316162,9.27054787,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (15)
    CreateDynamicObject(1434,1768.94836426,840.34259033,9.38899422,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (16)
    CreateDynamicObject(1434,1772.34936523,840.33264160,9.50051308,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (17)
    CreateDynamicObject(1434,1775.46142578,840.30224609,9.60291386,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (18)
    CreateDynamicObject(1434,1776.79162598,846.35052490,9.65312099,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (19)
    CreateDynamicObject(1434,1773.97460938,846.11590576,9.55722427,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (20)
    CreateDynamicObject(1434,1771.35498047,846.18646240,9.47256470,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (21)
    CreateDynamicObject(1434,1768.46435547,846.14373779,9.37726116,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (22)
    CreateDynamicObject(1434,1765.52563477,846.08398438,9.28011703,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (23)
    CreateDynamicObject(1434,1762.38403320,846.06170654,9.17691612,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (24)
    CreateDynamicObject(1434,1775.81945801,833.37860107,9.62717056,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (25)
    CreateDynamicObject(1434,1777.54663086,828.35815430,9.67187500,0.00000000,0.00000000,269.99996948); //object(dyn_roadbarrier_5a) (26)
    CreateDynamicObject(1434,1777.63061523,831.24987793,9.67187500,0.00000000,0.00000000,274.00000000); //object(dyn_roadbarrier_5a) (27)
    CreateDynamicObject(1434,1780.73889160,840.38317871,9.66341591,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (28)
    CreateDynamicObject(5837,1814.32116699,819.35125732,11.51557350,0.00000000,0.00000000,268.00000000); //object(ci_guardhouse1) (1)
    CreateDynamicObject(5837,1780.53991699,819.79467773,11.46537209,0.00000000,0.00000000,267.99499512); //object(ci_guardhouse1) (3)
    CreateDynamicObject(1434,1777.19653320,852.07733154,9.67225361,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (29)
    CreateDynamicObject(1434,1773.97900391,852.11737061,9.56691742,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (30)
    CreateDynamicObject(1434,1769.01477051,852.27667236,9.40439320,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (31)
    CreateDynamicObject(1434,1760.89538574,852.60089111,9.13857460,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (32)
    CreateDynamicObject(1434,1761.82226562,848.96691895,9.16110229,0.00000000,0.00000000,90.00000000); //object(dyn_roadbarrier_5a) (33)
    CreateDynamicObject(1434,1764.93872070,852.61303711,9.27094841,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (34)
    CreateDynamicObject(1434,1775.77197266,858.56127930,9.63424492,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (35)
    CreateDynamicObject(1434,1772.62841797,858.62994385,9.53326416,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (36)
    CreateDynamicObject(1434,1768.80236816,858.71343994,9.41036034,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (37)
    CreateDynamicObject(1434,1765.74694824,858.78009033,9.31221390,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (38)
    CreateDynamicObject(1434,1762.50646973,858.85089111,9.20812035,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (39)
    CreateDynamicObject(1434,1759.37597656,858.68920898,9.10098553,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5a) (40)
    CreateDynamicObject(1434,1760.97607422,850.91729736,9.13339806,0.00000000,358.00000000,269.99996948); //object(dyn_roadbarrier_5a) (41)
    CreateDynamicObject(5837,1796.52026367,820.46398926,11.67340660,0.00000000,0.00000000,267.99499512); //object(ci_guardhouse1) (8)
    CreateDynamicObject(5837,1797.79895020,861.71234131,11.35030842,0.00000000,0.00000000,267.99499512); //object(ci_guardhouse1) (9)
    CreateDynamicObject(5837,1780.75915527,862.96734619,11.45429516,0.00000000,0.00000000,267.99499512); //object(ci_guardhouse1) (10)
    CreateDynamicObject(5837,1814.69592285,862.49658203,11.42925835,0.00000000,0.00000000,267.99499512); //object(ci_guardhouse1) (11)
    CreateDynamicObject(1237,1788.57556152,823.32427979,9.66434669,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (17)
    CreateDynamicObject(1237,1788.59167480,818.68426514,9.76770592,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (18)
    CreateDynamicObject(1237,1788.56506348,813.52935791,9.87094879,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (19)
    CreateDynamicObject(1237,1788.48742676,809.33197021,9.95505714,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (20)
    CreateDynamicObject(1237,1787.84216309,803.83929443,10.06551743,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (21)
    CreateDynamicObject(1237,1787.85852051,797.69512939,10.18853760,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (22)
    CreateDynamicObject(1237,1787.50952148,789.50445557,10.38506889,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (23)
    CreateDynamicObject(1237,1786.77893066,778.93280029,10.71746159,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (24)
    CreateDynamicObject(1237,1806.45092773,822.96453857,9.67844772,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (25)
    CreateDynamicObject(1237,1806.53784180,817.78308105,9.78707314,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (26)
    CreateDynamicObject(1237,1806.25354004,812.14221191,9.89610291,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (27)
    CreateDynamicObject(1237,1806.21716309,806.05560303,10.01355171,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (28)
    CreateDynamicObject(1237,1806.19726562,800.34936523,10.12365150,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (29)
    CreateDynamicObject(1237,1805.86975098,794.80780029,10.23080063,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (30)
    CreateDynamicObject(1237,1805.64196777,787.25067139,10.43572617,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (31)
    CreateDynamicObject(1237,1804.86584473,773.16815186,10.86759758,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (32)
    CreateDynamicObject(1237,1806.97570801,864.77783203,9.61701202,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (33)
    CreateDynamicObject(1237,1789.98535156,865.51489258,9.59427166,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (34)
    CreateDynamicObject(1434,1760.75915527,847.07446289,9.12629414,0.00000000,0.00000000,90.00000000); //object(dyn_roadbarrier_5a) (42)*/
// Pedagio Ponte de Ferro
    /*CreateDynamicObject(18452,-1133.45764160,1099.48620605,40.31989288,0.00000000,4.00000000,48.00000000); //object(cw_tscanopy01) (3)
    CreateDynamicObject(18452,-1129.41845703,1095.71801758,40.31214142,0.00000000,3.99902344,45.99975586); //object(cw_tscanopy01) (4)
    CreateDynamicObject(18452,-1140.99401855,1106.24218750,40.32491302,0.00000000,3.99902344,47.99975586); //object(cw_tscanopy01) (5)
    CreateDynamicObject(18452,-1145.17285156,1110.02258301,40.33078384,0.00000000,3.99353027,47.99926758); //object(cw_tscanopy01) (7)
    CreateDynamicObject(3666,-1125.35705566,1095.90234375,37.86977386,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
    CreateDynamicObject(3666,-1136.97937012,1106.53137207,37.88621902,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
    CreateDynamicObject(3666,-1129.40722656,1099.78515625,37.87894440,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
    CreateDynamicObject(3666,-1129.79003906,1089.49072266,38.28647995,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (4)
    CreateDynamicObject(3666,-1123.55957031,1096.39160156,37.88748550,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
    CreateDynamicObject(3666,-1133.61682129,1103.54016113,37.87364197,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
    CreateDynamicObject(3666,-1145.31457520,1114.05773926,37.88504410,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (7)
    CreateDynamicObject(3666,-1144.73718262,1116.43090820,37.89022446,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (8)
    CreateDynamicObject(3666,-1141.15429688,1110.29785156,37.89291382,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (9)
    CreateDynamicObject(3666,-1145.27661133,1105.66088867,38.31890869,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (10)
    CreateDynamicObject(3666,-1141.12219238,1101.89038086,38.32112885,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (11)
    CreateDynamicObject(3666,-1142.25695801,1094.49768066,38.31045914,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (12)
    CreateDynamicObject(3666,-1149.87719727,1101.27478027,38.31496811,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (13)
    CreateDynamicObject(3666,-1149.47766113,1109.51806641,38.31504822,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
    CreateDynamicObject(3666,-1137.80712891,1098.88403320,38.31166458,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (15)
    CreateDynamicObject(3666,-1141.84643555,1086.45764160,38.54330826,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (16)
    CreateDynamicObject(3666,-1138.27246094,1090.22607422,38.31611633,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (17)
    CreateDynamicObject(3666,-1129.70764160,1091.38879395,38.30802155,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (18)
    CreateDynamicObject(3666,-1133.71752930,1095.22949219,38.31738663,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (19)
    CreateDynamicObject(4642,-1139.00036621,1103.88244629,39.29941177,0.00000000,0.00000000,47.99926758); //object(paypark_lan) (2)
    CreateDynamicObject(4642,-1136.18164062,1101.17578125,39.29941177,0.00000000,0.00000000,227.99926758); //object(paypark_lan) (3)
    CreateDynamicObject(3666,-1153.45593262,1097.46887207,38.54349136,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (20)
    CreateDynamicObject(3666,-1146.54980469,1072.66687012,39.31917191,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (21)
    CreateDynamicObject(3666,-1160.58605957,1089.92895508,38.99743652,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (22)
    CreateDynamicObject(3666,-1145.41333008,1082.67712402,38.77067184,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (23)
    CreateDynamicObject(3666,-1156.92773438,1082.12036133,39.53895187,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (24)
    CreateDynamicObject(3666,-1145.46679688,1097.47851562,38.31237793,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (25)
    CreateDynamicObject(3666,-1157.00292969,1093.69238281,38.77013779,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (26)
    CreateDynamicObject(3666,-1156.48999023,1085.48999023,39.03216171,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (27)
    CreateDynamicObject(3666,-1153.57617188,1082.75097656,39.02881241,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (28)
    CreateDynamicObject(3666,-1124.02783203,1093.09130859,39.71030426,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (29)
    CreateDynamicObject(3666,-1147.95788574,1115.67663574,39.71477127,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (30)
    CreateDynamicObject(3666,-1122.63696289,1107.15917969,37.44152451,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (31)
    CreateDynamicObject(3666,-1134.09460449,1118.69750977,37.42470932,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (32)
    CreateDynamicObject(3666,-1115.54248047,1124.73742676,37.14148331,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (33)
    CreateDynamicObject(3666,-1116.69580078,1113.93469238,37.18801117,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (34)
	CreateDynamicObject(3666,-1149.00195312,1078.90136719,38.99853897,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (35)
    CreateDynamicObject(3666,-1166.93139648,1092.04321289,39.31806564,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (36)
    CreateDynamicObject(3666,-1162.65332031,1087.81262207,39.12834167,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (37)
    CreateDynamicObject(3666,-1151.04028320,1076.73657227,39.12985229,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (38)
    CreateDynamicObject(3666,-1110.95263672,1121.04479980,36.99138641,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (39)
    CreateDynamicObject(3666,-1122.59460449,1132.47534180,36.97824097,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (40)
    CreateDynamicObject(966,-1146.48376465,1071.54931641,38.84572220,0.00000000,358.00000000,318.00000000); //object(bar_gatebar01) (2)
    CreateDynamicObject(966,-1168.12634277,1091.88684082,38.85105515,0.00000000,358.00000000,135.99926758); //object(bar_gatebar01) (3)
    CreateDynamicObject(968,-1168.07690430,1091.82214355,39.60105515,0.00000000,90.00000000,316.00000000); //object(barrierturn) (1)
    CreateDynamicObject(968,-1146.51525879,1071.56884766,39.59572220,0.00000000,90.00000000,137.99975586); //object(barrierturn) (2)
    CreateDynamicObject(966,-1127.32946777,1137.42480469,36.59288406,0.00000000,357.99499512,135.99426270); //object(bar_gatebar01) (4)
    CreateDynamicObject(968,-1127.25817871,1137.40319824,37.34117508,0.00000000,90.00000000,315.99975586); //object(barrierturn) (3)
    CreateDynamicObject(966,-1105.04028320,1117.47705078,36.59288406,0.00000000,357.98950195,321.99426270); //object(bar_gatebar01) (5)
    CreateDynamicObject(968,-1105.08874512,1117.53747559,37.59085464,0.00000000,91.99996948,141.99856567); //object(barrierturn) (4)
    CreateDynamicObject(3666,-1128.34326172,1125.55249023,37.16243362,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (41)
    CreateDynamicObject(3666,-1136.23229980,1107.47363281,43.44466019,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (42)
    CreateDynamicObject(3666,-1118.22583008,1126.93835449,37.14188766,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (43)
    CreateDynamicObject(3666,-1132.61376953,1104.38427734,43.44466019,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (44)
    CreateDynamicObject(1237,-1115.22436523,1163.89965820,36.64392471,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,-1116.15515137,1167.70153809,36.83898926,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (2)
    CreateDynamicObject(1237,-1114.73681641,1148.31945801,36.38816833,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (3)
    CreateDynamicObject(1237,-1113.22827148,1156.51062012,36.57865906,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (4)
    CreateDynamicObject(1237,-1113.25463867,1160.45373535,36.61402130,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
    CreateDynamicObject(1237,-1113.96740723,1152.33715820,36.50409698,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (6)
    CreateDynamicObject(1237,-1118.71044922,1137.28967285,36.34279251,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (7)
    CreateDynamicObject(1237,-1115.39526367,1144.89050293,36.28189087,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (8)
    CreateDynamicObject(1237,-1116.15234375,1140.58300781,36.26080322,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (9)
    CreateDynamicObject(1237,-1155.87719727,1083.25915527,38.96204758,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (10)
 	CreateDynamicObject(1237,-1116.74218750,1126.16601562,36.73915482,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (11)
    CreateDynamicObject(1237,-1102.27307129,1114.36047363,36.63440704,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (12)
    CreateDynamicObject(1237,-1103.68261719,1115.70605469,36.62830734,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (13)
    CreateDynamicObject(1237,-1156.64440918,1070.80236816,38.91950989,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (14)
    CreateDynamicObject(1237,-1153.99804688,1073.60253906,38.77738190,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (15)
    CreateDynamicObject(1237,-1159.53356934,1067.74340820,39.07474136,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (16)
    CreateDynamicObject(1237,-1160.88745117,1058.22180176,39.36392975,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (17)
    CreateDynamicObject(1237,-1160.93457031,1060.77575684,39.29677963,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (18)
    CreateDynamicObject(1237,-1160.54174805,1063.30249023,39.21918488,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (19)
    CreateDynamicObject(1237,-1160.09350586,1065.68261719,39.14410782,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (20)*/
 // comunit do boi
    /*CreateDynamicObject(3173,-2345.03125000,-762.27679443,95.62574768,352.05999756,0.00000000,194.53002930);
    CreateDynamicObject(3246,-2314.85058594,-755.84460449,86.81420135,5.95458984,352.05993652,194.52587891);
    CreateDynamicObject(3253,-2340.35278320,-773.53802490,93.43250275,354.17086792,11.94641113,293.85208130);
    CreateDynamicObject(3283,-212207031,-755.84185791,91.49135590,1.98501587,27.78997803,0.00000000);
    CreateDynamicObject(3285,-2339.05810547,-755.87292480,97.20295715,9.92498779,5.95498657,0.00000000);
    CreateDynamicObject(3362,-2367.14233398,-776.45806885,95.35255432,0.00000000,0.00000000,352.05993652);
    CreateDynamicObject(3483,-2432.10009766,-665.45831299,139.09019470,0.00000000,0.00000000,141.64935303);
    CreateDynamicObject(3589,-2268.77880859,-744.52526855,78.37185669,7.94000244,340.14999390,204.45507812);
    CreateDynamicObject(3596,-2300.32202148,-750.73437500,88.70018768,0.00000000,3.97000122,21.83499146);
    CreateDynamicObject(3600,-2361.17968750,-695.44763184,120.58737183,0.00000000,352.05999756,105.20501709);
    CreateDynamicObject(3601,-2360.52734375,-717.72119141,111.35449219,1.98498535,0.00000000,338.16503906);
    CreateDynamicObject(3602,-2318.88012695,-700.41241455,92.81417847,0.00000000,0.00000000,93.29040527);
    CreateDynamicObject(3617,-2320.56762695,-771.26385498,92.53880310,358.01501465,5.95498657,31.76000977);
    CreateDynamicObject(3626,-2345.07104492,-733.67706299,104.15738678,356.02999878,19.85000610,246.85498047);
    CreateDynamicObject(3634,-2355.63281250,-645.53369141,124.80662537,1.98498535,11.91000366,320.29998779);
    CreateDynamicObject(3639,-2332.36499023,-629.19342041,124.36806488,0.00000000,0.00000000,29.77499390);
    CreateDynamicObject(3649,-2282.70971680,-748.65740967,83.22042847,15.88000488,3.97000122,113.14501953);
    CreateDynamicObject(3655,-2390.50537109,-745.50915527,134.93005371,0.00000000,0.00000000,1.98501587);
    CreateDynamicObject(3702,-2303.84863281,-678.56011963,93.37582397,0.00000000,0.00000000,5.95498657);
    CreateDynamicObject(3759,-2274.31567383,-668.55798340,70.71517944,0.00000000,0.00000000,87.34002686);
    CreateDynamicObject(9228,-2280.23364258,-715.35778809,77.61417389,15.87524414,1.98303223,15.87524414);
    CreateDynamicObject(11502,-2276.02343750,-730.50341797,74.18468475,0.00000000,0.00000000,109.17114258);
    CreateDynamicObject(12940,-2399.42041016,-715.67608643,136.09428406,0.00000000,0.00000000,178.65002441);
    CreateDynamicObject(3362,-2372.00805664,-775.76660156,98.17163849,0.00000000,0.00000000,352.05999756);
    CreateDynamicObject(3362,-2375.16186523,-775.27185059,102.06479645,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3362,-2378.41308594,-772.22656250,106.57974243,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3362,-2382.41137695,-771.37237549,111.64054871,0.00000000,0.00000000,298.46499634);
    CreateDynamicObject(3362,-2366.78173828,-767.69616699,95.68807983,0.00000000,0.00000000,354.04501343);
 	CreateDynamicObject(3362,-2371.63134766,-767.21716309,98.76248932,0.00000000,0.00000000,354.04501343);
    CreateDynamicObject(3362,-2374.94482422,-766.91076660,102.92633820,0.00000000,0.00000000,352.05999756);
    CreateDynamicObject(3362,-2378.02978516,-764.49804688,107.37693787,0.00000000,0.00000000,334.19500732);
    CreateDynamicObject(3362,-2379.34155273,-764.01800537,111.28198242,358.01147461,350.07385254,336.17614746);
    CreateDynamicObject(3362,-2381.54711914,-762.30731201,115.27790833,356.02844238,0.00000000,326.25000000);
  	CreateDynamicObject(3362,-2382.59863281,-761.13476562,119.34782410,356.02294922,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2380.39282227,-748.56835938,126.54328918,356.02844238,0.00000000,332.20495605);
    CreateDynamicObject(3362,-2378.91650391,-749.21234131,122.09013367,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2377.22534180,-750.65087891,117.64787292,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2375.18139648,-752.38146973,113.47859192,356.02844238,0.00000000,336.17492676);
    CreateDynamicObject(3362,-2372.97753906,-753.19970703,108.98854065,356.02844238,0.00000000,340.14489746);
    CreateDynamicObject(3362,-2371.29003906,-754.18804932,104.94852448,356.02844238,0.00000000,342.12988281);
    CreateDynamicObject(3362,-2370.08178711,-754.97430420,100.72329712,356.02844238,0.00000000,342.12988281);
    CreateDynamicObject(3362,-2368.47143555,-755.03796387,97.10832214,356.02844238,0.00000000,3.96472168);
    CreateDynamicObject(3362,-2378.15527344,-739.43292236,127.60475159,356.02844238,0.00000000,334.18994141);
    CreateDynamicObject(3362,-2376.12670898,-740.70220947,123.34084320,356.02844238,0.00000000,330.21997070);
    CreateDynamicObject(3362,-2374.51660156,-742.04602051,118.92424011,356.02844238,0.00000000,332.20495605);
    CreateDynamicObject(3362,-2373.36206055,-742.94049072,114.49217987,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2372.58227539,-743.88873291,110.35980225,356.02844238,0.00000000,330.21997070);
    CreateDynamicObject(3362,-2371.32177734,-744.63049316,106.02162170,356.02844238,0.00000000,334.18994141);
    CreateDynamicObject(3362,-2369.77929688,-745.33947754,101.58429718,356.02844238,0.00000000,334.18994141);
    CreateDynamicObject(3362,-2378.27539062,-729.37274170,126.09923553,356.02844238,0.00000000,334.18994141);
    CreateDynamicObject(3362,-2374.36816406,-731.51922607,123.05230713,356.02844238,354.04504395,334.18994141);
    CreateDynamicObject(3362,-2371.62011719,-732.93414307,119.70845795,356.02844238,0.00000000,330.21997070);
    CreateDynamicObject(3362,-2370.11132812,-734.10302734,115.36633301,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2368.92529297,-735.25469971,111.30284119,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2368.06103516,-736.19317627,107.45014954,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2367.00366211,-736.83605957,103.20800018,358.01342773,0.00000000,334.18994141);
    CreateDynamicObject(3362,-2376.61791992,-720.34063721,126.22968292,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2370.63842773,-724.05889893,119.94889832,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2366.37817383,-726.81665039,117.49188232,356.02844238,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2365.16650391,-727.80499268,113.56257629,359.99841309,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2364.43286133,-728.68981934,109.39488220,359.99841309,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2363.89306641,-729.15625000,105.65089417,359.99841309,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2362.54565430,-729.88830566,101.39651489,3.96838379,0.00000000,332.20495605);
    CreateDynamicObject(3362,-2367.62377930,-745.95477295,97.27938843,359.99291992,0.00000000,342.12756348);
    CreateDynamicObject(3362,-2367.03491211,-737.18194580,99.27626038,358.01147461,0.00000000,334.18762207);
    CreateDynamicObject(3362,-2373.96191406,-721.61376953,123.39254761,359.99450684,0.00000000,326.25000000);
    CreateDynamicObject(3362,-2380.74829102,-712.05816650,127.31675720,356.02844238,0.00000000,5.94970703);
    CreateDynamicObject(3362,-2384.13378906,-691.80480957,129.24667358,359.99841309,0.00000000,5.94970703);
    CreateDynamicObject(3362,-2375.33886719,-711.05133057,124.01268005,356.02844238,0.00000000,9.91967773);
    CreateDynamicObject(3362,-2367.91430664,-708.53399658,121.19248962,332.20861816,0.00000000,290.52026367);
    CreateDynamicObject(3362,-2365.74291992,-677.70300293,117.95052338,5.95336914,356.02999878,21.82958984);
    CreateDynamicObject(3362,-2378.99462891,-700.64929199,125.34044647,1.98339844,0.00000000,7.93469238);
    CreateDynamicObject(3362,-2379.47998047,-691.32153320,125.81043243,1.98339844,0.00000000,1.97973633);
    CreateDynamicObject(3362,-2375.10351562,-681.17712402,123.68556213,3.96838379,0.00000000,11.90466309);
    CreateDynamicObject(3362,-2370.13500977,-679.50714111,120.65751648,3.96838379,0.00000000,17.85961914);
    CreateDynamicObject(3362,-2385.32495117,-682.95513916,130.13281250,1.98339844,0.00000000,7.93469238);
    CreateDynamicObject(3362,-2386.82421875,-665.45538330,129.49426270,356.02844238,0.00000000,13.88964844);
    CreateDynamicObject(3362,-2380.41406250,-682.11804199,127.23035431,1.98339844,0.00000000,7.93469238);
    CreateDynamicObject(3362,-2382.28295898,-700.90032959,129.33795166,356.02844238,0.00000000,9.91967773);
    CreateDynamicObject(3362,-2391.08374023,-685.94879150,131.81701660,1.97753906,0.00000000,7.92663574);
    CreateDynamicObject(3759,-2369.82275391,-637.43627930,129.56324768,358.01501465,11.91000366,328.23999023);
    CreateDynamicObject(3759,-2384.39648438,-628.82519531,133.03067017,358.01147461,7.93368530,328.23303223);
    CreateDynamicObject(3362,-2391.75219727,-675.13342285,131.63281250,358.01342773,0.00000000,1.97973633);
    CreateDynamicObject(3362,-2384.67822266,-674.43322754,129.36053467,356.02844238,0.00000000,9.91967773);
    CreateDynamicObject(3362,-2379.33740234,-673.03936768,126.51132202,359.99841309,0.00000000,5.94970703);
    CreateDynamicObject(3362,-2374.44189453,-671.78741455,123.33708191,9.92333984,0.00000000,19.84460449);
    CreateDynamicObject(3601,-200878906,-700.96679688,107.68061066,359.99450684,0.00000000,3.96606445);
    CreateDynamicObject(3283,-2334.17211914,-716.08880615,108.38323975,9.92498779,0.00000000,340.14999390);
    CreateDynamicObject(3283,-2332.62280273,-715.54144287,104.92417145,9.92498779,0.00000000,0.00000000);
    CreateDynamicObject(3283,-2330.00000000,-715.16156006,101.65185547,7.94000244,0.00000000,0.00000000);
    CreateDynamicObject(3626,-2326.13012695,-714.94128418,99.81084442,358.01501465,354.04501343,89.32501221);
    CreateDynamicObject(3626,-2323.69897461,-714.99816895,97.10759735,0.00000000,0.00000000,89.32501221);
    CreateDynamicObject(3626,-2309.77612305,-800.58251953,92.05295563,0.00000000,0.00000000,31.32434082);
    CreateDynamicObject(3626,-2320.50878906,-714.75836182,91.44508362,0.00000000,0.00000000,89.32501221);
    CreateDynamicObject(3626,-2318.86889648,-714.39172363,88.36389160,0.00000000,0.00000000,89.32434082);
    CreateDynamicObject(3626,-2317.11254883,-713.99908447,85.29879761,0.00000000,0.00000000,89.32434082);
    CreateDynamicObject(3253,-2309.59570312,-766.01599121,88.67384338,1.98498535,7.94000244,31.76000977);
    CreateDynamicObject(3173,-2347.62963867,-749.74523926,97.45088196,352.05688477,0.00000000,182.61938477);
    CreateDynamicObject(11502,-2257.66430664,-740.78894043,71.90830994,0.00000000,19.85000610,15.88000488);
    CreateDynamicObject(11502,-2329.50219727,-732.15270996,94.60951996,1.98498535,21.83499146,0.00000000);
    CreateDynamicObject(11503,-2262.37402344,-729.84320068,73.07279968,9.92065430,354.03991699,115.12576294);
    CreateDynamicObject(3253,-2341.87255859,-771.37353516,94.69823456,0.00000000,0.00000000,284.56997681);
    CreateDynamicObject(3253,-2333.19873047,-778.12811279,91.56824493,358.02795410,9.97009277,6.19104004);
    CreateDynamicObject(3362,-2355.01171875,-706.15338135,110.14227295,13.88928223,0.00000000,5.94641113);
    CreateDynamicObject(3608,-2314.68188477,-603.93182373,111.47044373,0.00000000,0.00000000,278.61499023);
    CreateDynamicObject(3608,-2309.98925781,-637.77319336,105.86586761,0.00000000,0.00000000,221.04492188);
    CreateDynamicObject(3362,-2380.02685547,-663.99615479,127.05897522,1.98339844,0.00000000,27.78454590);
    CreateDynamicObject(3362,-2374.98681641,-662.61962891,122.82344055,9.92333984,0.00000000,35.72448730);
    CreateDynamicObject(3362,-2388.73974609,-656.10485840,127.48617554,9.92333984,0.00000000,61.52929688);
    CreateDynamicObject(3362,-2404.19335938,-646.20202637,130.05442810,5.95336914,0.00000000,57.55932617);
    CreateDynamicObject(3362,-2396.11132812,-651.15289307,128.89918518,7.93835449,0.00000000,61.52929688);
    CreateDynamicObject(3362,-2396.99023438,-659.05169678,131.55091858,356.02844238,0.00000000,33.73950195);
    CreateDynamicObject(3362,-2394.01025391,-666.90100098,131.88281250,359.99841309,0.00000000,21.82958984);
    CreateDynamicObject(3608,-2323.03076172,-669.55767822,106.91616058,0.00000000,0.00000000,258.75988770);
    CreateDynamicObject(3698,-2249.64062500,-675.95214844,70.23799896,1.98498535,3.97000122,272.65997314);
    CreateDynamicObject(3698,-2244.50317383,-692.65826416,68.70801544,0.00000000,3.97000122,296.47998047);
    CreateDynamicObject(3698,-2235.40112305,-707.06536865,67.94463348,0.00000000,1.98498535,308.38989258);
    CreateDynamicObject(3698,-2225.04223633,-719.39605713,67.33775330,0.00000000,1.98498535,304.41992188);
    CreateDynamicObject(3698,-2287.96386719,-698.83428955,83.07096100,3.97000122,15.87802124,298.45971680);
    CreateDynamicObject(3362,-2349.74145508,-657.77416992,118.67040253,350.07064819,0.00000000,216.35705566);
    CreateDynamicObject(3362,-2344.10253906,-653.94976807,118.92353821,356.02566528,0.00000000,348.08203125);
    CreateDynamicObject(3362,-2343.09082031,-667.57220459,116.85122681,350.07064819,354.04501343,194.52209473);
    CreateDynamicObject(3362,-2339.92602539,-675.89343262,114.69041443,350.07064819,0.00000000,202.46209717);
    CreateDynamicObject(3362,-2336.86230469,-657.18780518,117.38644409,359.99291992,3.97000122,7.92968750);
    CreateDynamicObject(3362,-2332.36059570,-650.33300781,114.07049561,346.09802246,0.00000000,348.07983398);
    CreateDynamicObject(3362,-2339.41772461,-737.07342529,98.55642700,13.88671875,0.00000000,5.94360352);
    CreateDynamicObject(3362,-2337.75805664,-725.86926270,99.87403870,7.93173218,0.00000000,332.19860840);
    CreateDynamicObject(3362,-2363.21655273,-783.15789795,93.98473358,0.00000000,0.00000000,352.05688477);
    CreateDynamicObject(3362,-2353.47045898,-791.57543945,92.75700378,0.00000000,0.00000000,47.63647461);
    CreateDynamicObject(3091,-2339.15893555,-784.85711670,93.15670013,358.01147461,7.93762207,326.25000000);
    CreateDynamicObject(1215,-2315.68701172,-783.31256104,90.83386230,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2243.33666992,-742.89770508,66.80822754,0.00000000,0.00000000,276.62997437);
    CreateDynamicObject(1238,-2322.22363281,-786.91796875,91.29611206,0.00000000,0.00000000,0.00000000);
    //CreateDynamicObject(1257,-2312.88818359,-790.16674805,91.62423706,354.03991699,0.00000000,299.77441406);
    CreateDynamicObject(1363,-2317.24414062,-793.05078125,91.72915649,0.00000000,0.00000000,28.00000000);
    CreateDynamicObject(3363,-2334.32080078,-764.87457275,93.03832245,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3881,-2299.76196289,-783.29614258,89.94683838,352.05688477,1.98303223,299.71752930);
    CreateDynamicObject(14467,-2405.53833008,-637.63842773,132.80914307,0.00000000,0.00000000,77.41500854);
    CreateDynamicObject(5401,-2308.99511719,-728.67315674,85.56700134,0.00000000,15.88000488,7.94000244);
    CreateDynamicObject(3286,-2385.86889648,-757.58630371,131.48913574,358.01501465,5.95498657,0.00000000);
    CreateDynamicObject(3286,-2344.84497070,-740.10351562,104.12300873,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3286,-2336.32812500,-691.18981934,117.35926819,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2305.49023438,-777.65527344,89.12167358,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2334.52124023,-791.32220459,92.56833649,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2289.51928711,-768.98431396,85.41380310,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2274.37768555,-761.21972656,80.87073517,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2263.69042969,-756.32818604,76.81422424,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2248.95434570,-750.64593506,70.74415588,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2237.44897461,-747.57684326,66.61282349,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2239.83129883,-753.54357910,66.90396118,0.00000000,0.00000000,107.19003296);
    CreateDynamicObject(1223,-2267.53100586,-764.10852051,78.66941071,0.00000000,0.00000000,109.17501831);
    CreateDynamicObject(1223,-2272.34936523,-753.78912354,78.72678375,0.00000000,0.00000000,296.47998047);
    CreateDynamicObject(1223,-2293.45507812,-777.55505371,86.29251862,0.00000000,0.00000000,121.08502197);
    CreateDynamicObject(1223,-2299.45458984,-767.64727783,86.68309784,0.00000000,0.00000000,302.43499756);
    CreateDynamicObject(1223,-2323.55541992,-793.72235107,91.16256714,0.00000000,0.00000000,103.22003174);
    CreateDynamicObject(1223,-2325.29711914,-781.53466797,91.01342773,0.00000000,0.00000000,296.47705078);
    CreateDynamicObject(1223,-2347.92309570,-793.13189697,92.94017792,0.00000000,0.00000000,43.67001343);
    CreateDynamicObject(1223,-2343.30932617,-782.26000977,93.35906219,0.00000000,0.00000000,240.89996338);
    CreateDynamicObject(1223,-2363.18847656,-756.34869385,96.79463196,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2352.60693359,-753.22894287,96.75337982,0.00000000,0.00000000,197.22996521);
    CreateDynamicObject(1223,-2358.42675781,-729.05859375,102.81735229,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2347.85424805,-732.77947998,102.34218597,0.00000000,0.00000000,175.39495850);
    CreateDynamicObject(1223,-2349.19189453,-697.98602295,111.63312531,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2337.81616211,-697.94140625,111.50714874,0.00000000,0.00000000,191.27496338);
    CreateDynamicObject(1223,-2362.19702148,-665.77343750,118.99716187,0.00000000,0.00000000,37.71499634);
    CreateDynamicObject(1223,-2355.25390625,-657.72100830,119.47657776,0.00000000,0.00000000,219.06497192);
    CreateDynamicObject(1223,-2395.12573242,-643.40161133,129.16163635,0.00000000,0.00000000,51.61001587);
    CreateDynamicObject(1223,-2389.15087891,-633.94549561,129.15525818,0.00000000,1.98498535,228.98997498);
    CreateDynamicObject(1223,-2419.77734375,-621.96643066,131.57725525,0.00000000,0.00000000,37.71499634);
    CreateDynamicObject(1223,-2410.75683594,-615.52691650,131.35653687,0.00000000,0.00000000,217.07997131);
    CreateDynamicObject(1223,-2216.24096680,-754.81085205,62.57503891,0.00000000,0.00000000,51.61001587);
    CreateDynamicObject(1223,-2209.51025391,-745.60772705,62.41202927,0.00000000,0.00000000,232.95996094);
    CreateDynamicObject(1215,-2347.18969727,-786.36199951,93.78161621,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2352.65209961,-775.22558594,95.09939575,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2336.09350586,-797.63507080,92.68325806,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3091,-2239.82128906,-742.30780029,67.01580811,354.04501343,9.92498779,344.11999512);
    CreateDynamicObject(1238,-2296.43627930,-772.75170898,86.99456024,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2280.26269531,-764.17675781,82.51218414,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2268.68652344,-758.69219971,78.65501404,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2255.80932617,-753.23693848,73.33093262,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2242.40600586,-748.61145020,67.88372803,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2231.55981445,-746.63391113,64.95813751,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2341.85839844,-789.85778809,92.88171387,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2351.28979492,-779.04614258,95.25492096,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1363,-2361.78173828,-736.56958008,101.31510925,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1363,-2348.42285156,-665.10748291,118.53206635,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(5401,-2300.14355469,-718.33013916,82.09516907,0.00000000,15.87524414,7.93762207);
    CreateDynamicObject(5401,-2350.10156250,-616.18371582,127.57569122,0.00000000,356.02294922,105.19995117);
    CreateDynamicObject(5401,-2362.48242188,-612.21740723,130.37391663,0.00000000,359.99096680,99.23950195);
    CreateDynamicObject(5401,-2414.76049805,-745.12591553,135.28504944,0.00000000,359.99096680,3.24377441);
    CreateDynamicObject(5401,-2445.53491211,-744.63409424,135.29878235,0.00000000,359.98901367,3.24096680);
    CreateDynamicObject(5401,-2431.08837891,-732.69219971,134.03504944,0.00000000,359.98901367,183.87597656);
    CreateDynamicObject(5401,-2473.38500977,-723.38995361,137.10136414,0.00000000,3.94799805,7.20153809);
    CreateDynamicObject(5401,-2478.27001953,-739.91540527,134.68696594,0.00000000,357.99304199,3.23153687);
    CreateDynamicObject(5401,-2266.96801758,-699.75744629,67.02595520,0.00000000,356.02523804,119.09765625);
    CreateDynamicObject(5401,-2251.27465820,-726.67834473,65.50231934,0.00000000,358.00793457,131.00732422);
    CreateDynamicObject(5401,-2266.71093750,-698.93939209,71.25167847,0.00000000,358.00598145,119.09646606);
    CreateDynamicObject(5401,-2269.51538086,-713.27557373,76.26966858,0.00000000,346.09057617,136.95678711);
    CreateDynamicObject(5401,-2281.00292969,-682.50921631,85.28575134,0.00000000,338.14270020,134.96704102);
    CreateDynamicObject(5401,-2295.65087891,-673.48840332,90.02038574,0.00000000,342.11425781,101.22442627);
    CreateDynamicObject(3399,-2365.90869141,-761.51239014,99.80381012,0.00000000,340.15002441,176.66503906);
    CreateDynamicObject(3399,-2372.85571289,-761.05633545,107.94635773,0.00000000,330.22277832,176.66009521);
    CreateDynamicObject(3362,-2384.62597656,-759.22656250,123.71609497,356.02294922,0.00000000,326.25000000);
    CreateDynamicObject(1223,-2379.61132812,-754.55285645,123.73627472,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2373.01489258,-758.72583008,108.80557251,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2372.96752930,-737.60284424,123.82938385,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2372.51757812,-738.70678711,119.14634705,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2370.26391602,-740.29907227,107.78932190,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2368.74755859,-718.59271240,119.92569733,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2362.50219727,-724.59057617,110.73435974,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1223,-2373.25439453,-688.15484619,124.02476501,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(5401,-2328.59863281,-745.68945312,93.47465515,0.00000000,23.81130981,7.93212891);
    CreateDynamicObject(14467,-2396.68676758,-626.28350830,133.11645508,0.00000000,0.00000000,356.02697754);
    CreateDynamicObject(12839,-2268.74023438,-679.28125000,70.14557648,0.00000000,356.02999878,0.00000000);
    CreateDynamicObject(5401,-2423.94042969,-709.91851807,135.28504944,0.00000000,359.98352051,275.18255615);
    CreateDynamicObject(5401,-2435.45703125,-708.71875000,134.03504944,0.00000000,359.97802734,275.17456055);
    CreateDynamicObject(5401,-2447.87597656,-709.63574219,134.90835571,0.00000000,359.97802734,275.17456055);
    CreateDynamicObject(12839,-2389.55859375,-735.55084229,135.85211182,356.02999878,0.00000000,1.98498535);
    CreateDynamicObject(2891,-2390.77783203,-714.88256836,136.53762817,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(16093,-2383.02124023,-731.88098145,132.16365051,0.00000000,0.00000000,83.37002563);
    CreateDynamicObject(16093,-2302.24902344,-638.14050293,119.05758667,0.00000000,0.00000000,41.68212891);
    CreateDynamicObject(7950,-2427.25952148,-752.76861572,124.49559021,0.00000000,0.00000000,180.63500977);
    CreateDynamicObject(3114,-2298.35766602,-802.88439941,89.93096924,0.00000000,0.00000000,302.00000000);
    CreateDynamicObject(3095,-2305.15869141,-789.55712891,89.19230652,0.00000000,350.00000000,302.00000000);
    CreateDynamicObject(3114,-2307.60766602,-808.82196045,89.93096924,0.00000000,0.00000000,301.99768066);
    CreateDynamicObject(1215,-2306.31347656,-795.57031250,91.04998016,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2299.15869141,-791.05017090,91.04998016,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(12943,-2290.54516602,-812.38476562,90.48565674,0.00000000,0.00000000,121.99993896);
    CreateDynamicObject(3114,-2293.17431641,-811.20172119,89.93096924,0.00000000,0.00000000,121.99768066);
    CreateDynamicObject(3114,-2302.51855469,-817.15039062,89.93096924,0.00000000,0.00000000,121.99768066);
    CreateDynamicObject(1215,-2304.88378906,-794.59375000,91.04998016,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2314.12695312,-800.46978760,91.04998016,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(4100,-2312.03393555,-799.14398193,92.18732452,0.00000000,0.00000000,352.00000000);
    CreateDynamicObject(4100,-2314.65502930,-808.51184082,92.18732452,0.00000000,0.00000000,81.99645996);
    CreateDynamicObject(4100,-2305.59423828,-823.12841797,92.18732452,0.00000000,0.00000000,81.99645996);
    CreateDynamicObject(4100,-2307.41796875,-820.16503906,92.18732452,0.00000000,0.00000000,81.99645996);
    CreateDynamicObject(4100,-2296.25805664,-825.57086182,92.18732452,0.00000000,0.00000000,171.99645996);
    CreateDynamicObject(4100,-2295.18041992,-797.19927979,92.18732452,0.00000000,0.00000000,81.99645996);
    CreateDynamicObject(1251,-2294.53662109,-805.59271240,90.59033966,0.00000000,0.00000000,302.00000000);
    CreateDynamicObject(1251,-2294.66625977,-805.37829590,93.84033966,0.00000000,0.00000000,301.99768066);
    CreateDynamicObject(1251,-2301.19897461,-809.51232910,90.59033966,0.00000000,0.00000000,301.99768066);
    CreateDynamicObject(1251,-2294.66601562,-805.37792969,94.84033966,0.00000000,0.00000000,301.99768066);
    CreateDynamicObject(1251,-2298.93457031,-813.34472656,90.59033966,0.00000000,0.00000000,301.99768066);
    CreateDynamicObject(1251,-2302.00097656,-792.90527344,90.59033966,0.00000000,0.00000000,301.99768066);
    CreateDynamicObject(1251,-2291.28540039,-818.46490479,90.59033966,0.00000000,0.00000000,32.00000000);
    CreateDynamicObject(1228,-2305.52221680,-795.20855713,90.90678406,0.00000000,0.00000000,302.00000000);
    CreateDynamicObject(3666,-2304.11254883,-782.85614014,89.21732330,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2311.40380859,-786.81500244,90.49787140,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2309.21142578,-791.09570312,90.65499878,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2301.87817383,-786.77056885,90.15832520,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2298.97656250,-791.35876465,90.99934387,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2293.03613281,-804.37689209,90.99934387,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2304.10742188,-811.23345947,91.12432861,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2294.86450195,-805.64599609,94.15301514,271.99996948,180.00000000,212.00000000);
    CreateDynamicObject(3666,-2296.66699219,-806.65429688,90.99934387,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2301.82714844,-815.03643799,91.11164856,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2290.02392578,-820.68060303,90.99934387,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3666,-2292.05566406,-817.34765625,90.99934387,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2310.93896484,-787.65649414,90.33003998,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2310.25830078,-788.87316895,90.36941528,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2301.09643555,-788.14379883,90.24266052,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2308.17651367,-792.60565186,90.24831390,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2303.61401367,-783.97351074,89.38381195,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2302.65795898,-785.45062256,89.69402313,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2300.09667969,-789.65136719,90.56147003,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2309.64941406,-790.12109375,90.41652679,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2307.15576172,-795.28936768,90.59545135,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2306.09106445,-794.09704590,90.91231537,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1215,-2307.71826172,-793.44909668,90.66339111,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1300,-2297.99584961,-806.44744873,90.85557556,0.00000000,0.00000000,32.00000000);
    CreateDynamicObject(1415,-2316.24829102,-802.55053711,90.48565674,0.00000000,0.00000000,32.00000000);
    CreateDynamicObject(1327,-2316.65551758,-803.67767334,91.20362854,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1265,-2316.18090820,-803.74914551,90.95469666,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1264,-2315.99194336,-802.49768066,92.16987610,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1264,-2315.42407227,-802.94940186,90.95780182,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1437,-2293.78735352,-817.05065918,90.48565674,0.00000000,0.00000000,302.00000000);
    CreateDynamicObject(1437,-2308.62744141,-817.06292725,90.73565674,280.71289062,337.95953369,190.35876465);
    CreateDynamicObject(1437,-2309.01953125,-817.37219238,90.73565674,342.27969360,273.21166992,132.49618530);
    CreateDynamicObject(1428,-2293.56420898,-815.77862549,92.05351257,0.00000000,0.00000000,302.00000000);
    CreateDynamicObject(2921,-2297.93359375,-808.30493164,95.26843262,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2309.64941406,-790.12109375,90.41652679,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2310.13452148,-814.92321777,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2309.74511719,-815.65917969,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2310.59790039,-815.25451660,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2310.06616211,-814.40484619,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2309.60253906,-815.11413574,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2310.91210938,-813.71325684,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2309.45434570,-814.55999756,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2310.22241211,-813.81323242,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1238,-2309.64648438,-814.05889893,90.80383301,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(3626,-2321.88378906,-715.25683594,95.25457764,0.00000000,0.00000000,89.32434082);
    CreateDynamicObject(3350,-2294.70556641,-805.68359375,96.11846924,0.00000000,0.00000000,211.99996948);
    CreateDynamicObject(3350,-2305.75390625,-799.53320312,93.63105011,0.00000000,0.00000000,29.99816895);
    CreateDynamicObject(3221,-2313.60668945,-800.77142334,90.83708954,0.00000000,0.00000000,306.00000000);
    CreateDynamicObject(2961,-2307.03417969,-796.66503906,93.55580902,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(2680,-2309.35058594,-802.21582031,92.91850281,0.00000000,0.00000000,0.00000000);
    CreateDynamicObject(1997,-2309.79614258,-798.76147461,90.83708954,0.00000000,0.00000000,302.00000000);
    CreateDynamicObject(8650,-2309.50561523,-815.92456055,89.32826996,0.00000000,0.00000000,32.00000000);
    CreateDynamicObject(8650,-2312.21630859,-810.40905762,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2311.73095703,-809.83581543,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2311.24560547,-809.26257324,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2310.76025391,-808.68933105,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2310.27490234,-808.11608887,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2309.68408203,-807.65270996,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2309.09326172,-807.18981934,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2308.50244141,-806.72692871,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2307.91162109,-806.26403809,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2307.32080078,-805.80114746,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2306.72998047,-805.33825684,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2306.13916016,-804.87536621,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2305.54833984,-804.41247559,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2304.95751953,-803.94958496,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2304.36669922,-803.48669434,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2303.77587891,-803.02380371,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2303.18505859,-802.56091309,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2302.59423828,-802.09802246,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2302.59375000,-802.09765625,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2302.00415039,-801.63330078,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2301.41455078,-801.16845703,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2300.82495117,-800.70361328,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2300.20751953,-800.27612305,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2299.59033203,-799.84838867,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2297.39672852,-801.67382812,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2297.06616211,-800.83642578,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2296.44897461,-800.40869141,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2295.97509766,-799.77612305,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2295.68798828,-800.18505859,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2295.07128906,-799.75805664,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2294.94555664,-799.06396484,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2294.53466797,-798.77758789,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2291.13183594,-804.31726074,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2312.49609375,-810.83831787,88.32057190,0.00000000,0.00000000,31.99768066);
    CreateDynamicObject(8650,-2302.64550781,-812.31542969,89.32826996,0.00000000,0.00000000,61.99768066);*/
    CreateDynamicObject(8650,-2292.62158203,-821.86340332,88.32826996,0.00000000,354.00000000,121.99768066);
    CreateDynamicObject(8650,-2300.88842773,-805.03771973,72.57826996,88.00000000,359.88442993,126.11315918);
    CreateDynamicObject(8650,-2296.78759766,-810.39953613,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2293.85742188,-808.47613525,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2290.02124023,-805.67266846,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2301.22216797,-813.22937012,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2305.56689453,-816.60290527,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2306.55395508,-817.36944580,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2304.19091797,-815.34582520,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2302.56152344,-814.08239746,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2299.43188477,-811.88494873,72.57826996,87.99499512,359.87915039,126.11206055);
    CreateDynamicObject(8650,-2297.70214844,-810.85028076,72.57826996,87.99505615,359.87911987,118.11206055);
    CreateDynamicObject(8650,-2295.38696289,-809.28417969,72.57826996,87.99499512,359.87365723,118.10852051);
    CreateDynamicObject(8650,-2292.22241211,-807.25524902,72.57826996,87.99493408,359.87365723,122.10848999);
    CreateDynamicObject(8650,-2291.46630859,-806.55328369,72.57826996,87.98950195,359.87365723,122.10754395);
    CreateDynamicObject(8650,-2291.46582031,-806.55273438,72.57826996,87.98950195,359.87365723,122.10754395);
    //GRADES CT
    CreateDynamicObject(1217, -1187.9329833984,-944.15979003906,128.63331604004,0,0,0);
	CreateDynamicObject(1238, -1190.8505859375,-949.68762207031,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1190.9501953125,-956.21185302734,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1190.9750976563,-962.38275146484,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1191,-968.31646728516,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1191,-974.30493164063,128.53010559082,0,0,0);
	CreateDynamicObject(1238, -1191,-979.8447265625,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1191,-985.9296875,128.53692626953,0,0,0);
	CreateDynamicObject(3578, -1183,-953.62121582031,128.9899597168,0,0,90);
	CreateDynamicObject(1217, -1187.2147216797,-943.84448242188,128.63331604004,0,0,0);
	CreateDynamicObject(1217, -1186.4772949219,-945.21697998047,128.63331604004,0,0,0);
	CreateDynamicObject(3578, -1183,-963.5029296875, 128.9899597168,0,0,90);
	CreateDynamicObject(3578, -1183,-973.77154541016,128.9899597168,0,0,90);
	CreateDynamicObject(3578, -1183,-984.07489013672,128.99678039551,0,0,90);
	CreateDynamicObject(3578, -1175,-984.19866943359,128.99678039551,0,0,90);
	CreateDynamicObject(3578, -1175,-974.02362060547,128.99678039551,0,0,90);
	CreateDynamicObject(3578, -1175,-963.92633056641,128.9899597168,0,0,90);
	CreateDynamicObject(3578, -1175,-954.05133056641,128.9899597168,0,0,90);
	CreateDynamicObject(1423, -1182.978515625,-994.03210449219,128.9296875,0,0,90);
	CreateDynamicObject(1423, -1179.7076416016,-998.84466552734,128.9296875,0,0,0);
	CreateDynamicObject(1423, -1173.9075927734,-998.89892578125,128.9296875,0,0,0);
	CreateDynamicObject(1238, -1182.7307128906,-999.10076904297,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1178.6124267578,-1002.2049560547,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1174.9580078125,-1005.1189575195,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1189.1870117188,-1005.1890869141,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1184.9689941406,-1008.9627685547,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1181.2973632813,-1012.7841796875,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1172.4168701172,-1008.9254150391,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1172.0279541016,-1013.5501098633,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1172.7100830078,-1018.4791259766,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1176.9716796875,-1023.9147338867,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1183.4506835938,-1026.8936767578,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1184.7244873047,-1017.0678710938,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1189.8587646484,-1020.4877929688,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1176.8935546875,-1029, 128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1193.9122314453,-1026.6147460938,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1190.1641845703,-1032.4034423828,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1191.1107177734,-993.06805419922,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1191.4580078125,-1000.115234375,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1177.0494384766,-1036.5284423828,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1183.7407226563,-1036.015625,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1169.8406982422,-1029.4000244141,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1170.228515625,-1036.9084472656,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1163.6129150391,-1037.3328857422,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1163.3150634766,-1029.8000488281,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1157.0358886719,-1030.0732421875,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1157.3106689453,-1037.7718505859,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1150.7674560547,-1030.5028076172,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1150.7673339844,-1038.2023925781,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1143.6760253906,-1030.7763671875,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1144.5544433594,-1038.6927490234,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1135,-1038.9544677734,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1135,-1037.6767578125,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1135.0090332031,-1036.6414794922,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1135,-1035.2670898438,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1135,-1033.8394775391,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1134.9909667969,-1032.4830322266,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1135,-1031.41015625,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1141.7393798828,-1030.8011474609,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1139.8846435547,-1030.9135742188,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1138.0600585938,-1031.1049804688,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1142.4565429688,-1038.7276611328,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1140.4974365234,-1038.9313964844,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1138.3870849609,-1039.1370849609,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1136.6843261719,-1039.1188964844,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1136.2958984375,-1031.2200927734,128.53692626953,0,0,0);
	CreateDynamicObject(16770, -1056.9467773438,-948.36669921875,129.80931091309,0,0,90);
	CreateDynamicObject(1584, -1065.2770996094,-915.42614746094,128.21875,0,0,180);
	CreateDynamicObject(1583, -1063.83203125,-915.32940673828,128.21875,0,0,0);
	CreateDynamicObject(1584, -1061.8643798828,-915.34674072266,128.21875,0,0,0);
	CreateDynamicObject(1586, -1060.1744384766,-915.39819335938,128.21875,0,0,0);
	CreateDynamicObject(1585, -1058.5739746094,-915.32257080078,128.21875,0,0,0);
	CreateDynamicObject(1583, -1057.0869140625,-915.32800292969,128.21875,0,0,0);
	CreateDynamicObject(1584, -1055.5776367188,-915.28826904297,128.21875,0,0,0);
	CreateDynamicObject(1586, -1054.1590576172,-915.28869628906,128.21875,0,0,0);
	CreateDynamicObject(1585, -1052.5485839844,-915.26684570313,128.21875,0,0,0);
	CreateDynamicObject(1583, -1051.0134277344,-915.34533691406,128.21875,0,0,0);
	CreateDynamicObject(1584, -1049.4099121094,-915.25823974609,128.21875,0,0,0);
	CreateDynamicObject(7016, -1114.9870605469,-1022.1374511719,128.21875,0,0,0);
	CreateDynamicObject(7016, -1030.5240478516,-1020.0999755859,128.21875,0,0,180);
	CreateDynamicObject(7016, -1065.7099609375,-986.8994140625,128.21875,0,0,270);
	CreateDynamicObject(7017, -1083.8500976563,-1061,128.21192932129,0,0,180);
	CreateDynamicObject(7017, -1062.1998291016,-1061,128.21875,0,0,180);
	CreateDynamicObject(7017, -1074.7177734375,-988.47119140625,128.21875,0,0,0);
	CreateDynamicObject(7017, -1071.4208984375,-999.9423828125,128.21875,0,0,0);
	CreateDynamicObject(7017, -1111.5788574219,-1020.0664672852,128.21875,0,0,90);
	CreateDynamicObject(7017, -1034.5714111328,-1018.1348876953,128.21192932129,0,0,90);
	CreateDynamicObject(7017, -1074.8234863281,-1013.7080078125,128.21875,0,0,0);
	CreateDynamicObject(7017, -1071.3688964844,-1028.3668212891,128.21875,0,0,0);
	CreateDynamicObject(7017, -1074.9947509766,-1049.0052490234,128.21875,0,0,0);
	CreateDynamicObject(1228, -1094,-982.29998779297, 128.63987731934,0,0,0);
	CreateDynamicObject(1228, -1094,-984,128.63987731934,0,0,0);
	CreateDynamicObject(1228, -1094,-985.70001220703,128.63987731934,0,0,0);
	CreateDynamicObject(1228, -1094,-987.40014648438,128.63987731934,0,0,0);
	CreateDynamicObject(3050, -1083.6507568359,-983.58142089844,130.46089172363,0,0,90);
	CreateDynamicObject(1586, -1081.3841552734,-988.16912841797,129.51202392578,0,0,0);
	CreateDynamicObject(1585, -1079.7745361328,-988.16912841797,129.50671386719,0,0,0);
	CreateDynamicObject(3049, -1076.1080322266,-983.60571289063,130.46089172363,0,0,90);
	CreateDynamicObject(973, -1079.9362792969,-983.841796875,129.05897521973,0,0,0);
	CreateDynamicObject(973, -1070.5964355469,-983.85131835938,129.05897521973,0,0,0);
	CreateDynamicObject(1225, -1070.9528808594,-986.46069335938,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1065.0999755859,-986.26159667969,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1062.2757568359,-986.20446777344,128.62451171875,0,0,0);
	CreateDynamicObject(1584, -1070.9782714844,-987.97979736328,128.21875,0,0,0);
	CreateDynamicObject(1583, -1065.1890869141,-987.99353027344,128.21875,0,0,0);
	CreateDynamicObject(1584, -1062.1495361328,-987.94384765625,128.21875,0,0,0);
	CreateDynamicObject(1583, -1059.2833251953,-988.01379394531,128.21875,0,0,0);
	CreateDynamicObject(1225, -1059.2017822266,-986.166015625,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1056.1553955078,-986.05249023438,128.62451171875,0,0,0);
	CreateDynamicObject(1584, -1056.3619384766,-987.94158935547,128.21875,0,0,0);
	CreateDynamicObject(1584, -1047.6824951172,-981.47332763672,128.25831604004,0,0,0);
	CreateDynamicObject(1225, -1047.7385253906,-983.34509277344,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1044.5935058594,-983.46447753906,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1041.4442138672,-983.59558105469,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1038.3532714844,-983.56597900391,128.62451171875,0,0,0);
	CreateDynamicObject(1583, -1044.8343505859,-981.47332763672,128.23193359375,0,0,0);
	CreateDynamicObject(1584, -1041.5618896484,-981.50646972656,128.21875,0,0,0);
	CreateDynamicObject(1583, -1038.3842773438,-981.47332763672,128.23706054688,0,0,0);
	CreateDynamicObject(1583, -1051.203125,-998.65747070313,128.21875,0,0,90);
	CreateDynamicObject(1584, -1053.5899658203,-994.720703125,128.21875,0,0,90);
	CreateDynamicObject(1585, -1052.7302246094,-994.19793701172,128.21875,0,0,90);
	CreateDynamicObject(1585, -1050.5432128906,-998.96984863281,128.21875,0,0,90);
	CreateDynamicObject(1586, -1060.3765869141,-990.06860351563,128.21875,0,0,90);
	CreateDynamicObject(1585, -1063.5003662109,-995.2294921875,128.21875,0,0,90);
	CreateDynamicObject(1238, -1044.01953125,-994.3701171875,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1056.5506591797,-990.82019042969,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1063.9633789063,-998.55853271484,128.53692626953,0,0,0);
	CreateDynamicObject(1584, -1059.20703125,-997.56713867188,128.21875,0,0,0);
	CreateDynamicObject(1584, -1067.1982421875,-989.70281982422,128.21875,0,0,0);
	CreateDynamicObject(1583, -1068.5329589844,-989.73480224609,128.21875,0,0,0);
	CreateDynamicObject(1583, -1078.8488769531,-990.72668457031,128.21875,0,0,90);
	CreateDynamicObject(1583, -1078.1374511719,-999.29663085938,128.21875,0,0,0);
	CreateDynamicObject(1584, -1087.1324462891,-997.46197509766,128.21875,0,0,90);
	CreateDynamicObject(1583, -1090.7119140625,-997.14056396484,128.21875,0,0,90);
	CreateDynamicObject(1585, -1087.5509033203,-996.05432128906,128.21875,0,0,90);
	CreateDynamicObject(1585, -1092.5413818359,-990.38354492188,128.21875,0,0,90);
	CreateDynamicObject(1585, -1092.7178955078,-991.99975585938,128.21875,0,0,90);
	CreateDynamicObject(1584, -1095.5645751953,-991.34509277344,128.21875,0,0,90);
	CreateDynamicObject(1584, -1106.5067138672,-995.24768066406,128.21875,0,0,90);
	CreateDynamicObject(1583, -1105.5070800781,-988.94110107422,128.21875,0,0,45);
	CreateDynamicObject(1583, -1107.2387695313,-992.23547363281,128.21875,0,0,90);
	CreateDynamicObject(1584, -1107.2470703125,-989.68133544922,128.21875,0,0,90);
	CreateDynamicObject(1585, -1102.9830322266,-991.72863769531,128.21875,0,0,45);
	CreateDynamicObject(1585, -1104.0758056641,-994.10095214844,128.21875,0,0,45);
	CreateDynamicObject(1586, -1105.33203125,-991.71832275391,128.21875,0,0,45);
	CreateDynamicObject(1238, -1097.4290771484,-998.30981445313,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1087.4462890625,-990.84704589844,128.53692626953,0,0,0);
	CreateDynamicObject(1238, -1076.2346191406,-992.55786132813,128.53692626953,0,0,0);
	CreateDynamicObject(1225, -1026.4404296875,-985.31573486328,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1027.2855224609,-985.28759765625,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1028.1348876953,-985.32678222656,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1029.0363769531,-985.46325683594,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1029.9169921875,-985.50067138672,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1030.8148193359,-985.47485351563,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1031.6197509766,-985.57409667969,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1032.5185546875,-985.54895019531,128.61840820313,0,0,0);
	CreateDynamicObject(1225, -1033.4260253906,-985.57495117188,128.62451171875,0,0,0);
	CreateDynamicObject(1584, -1030.4234619141,-981.47332763672,129.23260498047,0,0,0);
	CreateDynamicObject(1584, -1033.0135498047,-981.47332763672,129.28108215332,0,0,0);
	CreateDynamicObject(1583, -1031.8081054688,-981.47332763672,129.31455993652,0,0,0);
	CreateDynamicObject(1583, -1029.1401367188,-981.47332763672,129.26609802246,0,0,0);
	CreateDynamicObject(1583, -1026.0560302734,-981.47332763672,129.23442077637,0,0,0);
	CreateDynamicObject(1586, -1027.4815673828,-981.47332763672,129.23382568359,0,0,0);
	CreateDynamicObject(1585, -1027.7590332031,-1013.9027099609,128.21875,0,0,0);
	CreateDynamicObject(1585, -1031.7421875,-1002.9291381836,128.21264648438,0,0,0);
	CreateDynamicObject(1585, -1027.2567138672,-993.05810546875,128.21264648438,0,0,0);
	CreateDynamicObject(1585, -1029.5129394531,-1024.5794677734,128.21875,0,0,0);
	CreateDynamicObject(1585, -1026.4133300781,-1030.7718505859,128.21875,0,0,0);
	CreateDynamicObject(1585, -1032.0028076172,-1030.724609375,128.21875,0,0,0);
	CreateDynamicObject(3057, -1094.8168945313,-1002.8583984375,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1094.9366455078,-1002.9426269531,129.35327148438,0,0,0);
	CreateDynamicObject(3057, -1092.6062011719,-1005.0762329102,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1050.4592285156,-1010.848815918,128.5979309082,0,0,0);
	CreateDynamicObject(3057, -1064.3806152344,-1003.0504150391,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1058.373046875,-1006.6984863281,128.5979309082,0,0,0);
	CreateDynamicObject(3057, -1088.9763183594,-1007.3713989258,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1082.5747070313,-1003.3744506836,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1094.1127929688,-1010.0314331055,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1081.6788330078,-1009.5712890625,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1072.9093017578,-1006.8629150391,128.60475158691,0,0,0);
	CreateDynamicObject(3057, -1065.6661376953,-1011.0735473633,128.60475158691,0,0,0);
	CreateDynamicObject(1225, -1093.0480957031,-1007.4925537109,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1081.826171875,-1006.212890625,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1051.3984375,-1002.862487793,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1063.841796875,-1009.0783691406,128.61769104004,0,0,0);
	CreateDynamicObject(1225, -1075.2829589844,-1002.926574707,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1087.3864746094,-1002.5881958008,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1084.6796875,-1011.3630371094,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1072.5864257813,-1010.0866699219,128.62451171875,0,0,0);
	CreateDynamicObject(1225, -1047.1301269531,-1007.9602050781,128.61769104004,0,0,0);
	CreateDynamicObject(1584, -1068.1547851563,-1004.8316040039,128.21875,0,0,90);
	CreateDynamicObject(1584, -1076.3332519531,-1008.3159790039,128.21875,0,0,90);
	CreateDynamicObject(1584, -1086.2346191406,-1004.9345092773,128.21875,0,0,90);
	CreateDynamicObject(1583, -1088.7388916016,-1009.7576293945,128.21875,0,0,90);
	CreateDynamicObject(1583, -1057.4384765625,-1011.3288574219,128.21192932129,0,0,45);
	CreateDynamicObject(1583, -1059.1315917969,-1003.2015991211,128.21875,0,0,90);
	CreateDynamicObject(2933, -1046.5081787109,-1018.1373291016,129.92755126953,0,0,90);
	CreateDynamicObject(2933, -1046.4378662109,-1023.9157104492,129.92755126953,0,0,90);
	CreateDynamicObject(2933, -1057.0036621094,-1018.1633300781,129.92755126953,0,0,90);
	CreateDynamicObject(2933, -1057.0192871094,-1023.662902832,129.92755126953,0,0,90);
	CreateDynamicObject(2991, -1053.369140625,-1020.8155517578,128.83966064453,0,0,90);
	CreateDynamicObject(2991, -1055.4852294922,-1020.8130493164,128.83966064453,0,0,90);
	CreateDynamicObject(2991, -1055.1802978516,-1020.8026733398,130.09744262695,0,0,90);
	CreateDynamicObject(2933, -1056.958984375,-1023.9031982422,132.45402526855,0,0,90);
	CreateDynamicObject(2933, -1056.943359375,-1018.1691894531,132.443359375,0,0,90);
	CreateDynamicObject(12861, -1076.5850830078,-1034.6114501953,128.30700683594,0,0,90);
	CreateDynamicObject(12861, -1070.6254882813,-1042.5772705078,128.30700683594,0,0,270);
	CreateDynamicObject(2991, -1099.4835205078,-1035.5684814453,128.83966064453,0,0,0);
	CreateDynamicObject(2991, -1099.5808105469,-1033.5961914063,128.84648132324,0,0,0);
	CreateDynamicObject(2991, -1099.5544433594,-1040.4578857422,132.9393157959,0,0,0);
	CreateDynamicObject(2991, -1085.6302490234,-1040.5162353516,136.9393157959,0,0,0);
	CreateDynamicObject(3575, -1071.7531738281,-1022.8167724609,130.91044616699,0,0,270);
	CreateDynamicObject(3575, -1087.2078857422,-1019.1729125977,130.91044616699,0,0,90);
	CreateDynamicObject(3572, -1064.8291015625,-1017.8115234375,129.56669616699,0,0,90);
	CreateDynamicObject(3572, -1093.892578125,-1025.2879638672,129.56669616699,0,0,90);
	CreateDynamicObject(1584, -1066.3786621094,-1015.5088500977,128.21875,0,0,90);
	CreateDynamicObject(1583, -1078.7742919922,-1014.9716186523,128.21875,0,0,90);
	CreateDynamicObject(1583, -1078.1843261719,-1025.1430664063,128.21875,0,0,0);
	CreateDynamicObject(1585, -1092.1649169922,-1026.3736572266,128.21875,0,0,90);
	CreateDynamicObject(1586, -1085.7464599609,-1016.75,128.21875,0,0,0);
	CreateDynamicObject(1583, -1084.3529052734,-1031.0231933594,128.21875,0,0,90);
	CreateDynamicObject(1583, -1085.2540283203,-1029.3433837891,128.21875,0,0,272);
	CreateDynamicObject(1585, -1085.7457275391,-1030.1610107422,128.21875,0,0,272);
	CreateDynamicObject(1585, -1095.0627441406,-1043.3806152344,136.31158447266,0,0,0);
	CreateDynamicObject(1584, -1095.578125,-1043.9815673828,136.31158447266,0,0,0);
	CreateDynamicObject(1583, -1088.2277832031,-1043.8624267578,136.31158447266,0,0,30);
	CreateDynamicObject(1584, -1087.74609375,-1037.93359375,136.31158447266,0,0,308);
	CreateDynamicObject(1584, -1067.0753173828,-1033.7235107422,140.31158447266,0,0,312);
	CreateDynamicObject(1584, -1080.8199462891,-1042.7963867188,140.31158447266,0,0,52);
	CreateDynamicObject(1583, -1073.7806396484,-1038.8657226563,140.31158447266,0,0,274);
	CreateDynamicObject(1585, -1069.1859130859,-1034.6282958984,140.31158447266,0,0,314);
	CreateDynamicObject(1583, -1080.8787841797,-1034.8863525391,140.31158447266,0,0,318);
	CreateDynamicObject(1585, -1065.9908447266,-1042.8703613281,140.31158447266,0,0,248);
	CreateDynamicObject(1585, -1075.0922851563,-1038.7633056641,140.31158447266,0,0,90);
	CreateDynamicObject(9697, -1147.4162597656,-914.90765380859,128.2331237793,0,0,0);
	CreateDynamicObject(8262, -1078.7117919922,-908.52081298828,131.46502685547,0,0,270);
	CreateDynamicObject(8262, -1002.1146850586,-989.25860595703,131.31977844238,0,0,180);
	CreateDynamicObject(8262, -1117.8884277344,-1065.7889404297,131.31977844238,0,0,90);
	CreateDynamicObject(8210, -1035.2358398438,-1065.767578125,131.31977844238,0,0,180);
	CreateDynamicObject(8210, -1164.0887451172,-908.82604980469,131.46426391602,0,0,0);
	CreateDynamicObject(8210, -1194.8961181641,-908.87658691406,131.30535888672,0,0,0);
	CreateDynamicObject(2990, -1219.7568359375,-1041.5,131.60000610352,0,0,0);
	CreateDynamicObject(2990, -1199.6011962891,-1041.5,131.5,0,0,0); //PORTAO CT
	//BLITZ
	/*CreateDynamicObject(1237, 1946.0908203125, -1515.4000244141, 2.3326406478882, 0, 0, 0);
	CreateDynamicObject(1237, 1948.6259765625,-1515.4000244141,2.3369741439819,0,0,0);
	CreateDynamicObject(1237, 1951.0810546875,-1515.4000244141,2.3411707878113,0,0,0);
	CreateDynamicObject(1237, 1953.611328125,-1515.4000244141,2.345495223999,0,0,0);
	CreateDynamicObject(1237, 1956.5380859375,-1515.4000244141,2.3496441841125,0,0,0);
	CreateDynamicObject(1237, 1959.564453125,-1515.4000244141,2.3552579879761,0,0,0);
	CreateDynamicObject(1237, 1962.970703125,-1515.4000244141,2.3614950180054,0,0,0);
	CreateDynamicObject(1422, 1965.1611328125,-1515.369140625,2.7899148464203,0,0,0);
	CreateDynamicObject(1422, 1967.7786865234,-1514.0537109375,2.7727344036102,0,0,45);
	CreateDynamicObject(1422, 1970.2738037109,-1511.3916015625,2.7740895748138,0,0,44);
	CreateDynamicObject(1422, 1973.5765380859,-1509.4405517578,2.7911937236786,0,0,0);
	CreateDynamicObject(1422, 1977.8537597656,-1509.4246826172,2.7932832241058,0,0,0);
	CreateDynamicObject(1422, 1981.3505859375,-1509.353515625,2.7949912548065,0,0,0);
	CreateDynamicObject(1422, 1984.9184570313,-1509.3233642578,2.7967336177826,0,0,0);
	CreateDynamicObject(1423, 1987.6999511719,-1510.7844238281,3.098406791687,0,0,90);
	CreateDynamicObject(1423, 1987.6999511719,-1514.1087646484,3.0829629898071,0,0,90);
	CreateDynamicObject(1423, 1987.6999511719,-1504.8837890625,3.0830221176147,0,0,90);
	CreateDynamicObject(5837, 1981.232421875,-1504.4237060547,4.0862236022949,0,0,0);
	CreateDynamicObject(5837, 1994.1707763672,-1511.0733642578,4.1082162857056,0,0,180);
	CreateDynamicObject(1423, 1987.6999511719,-1501.7969970703,3.0905337333679,0,0,90);
	CreateDynamicObject(1422, 1990.1611328125,-1506.1629638672,2.7836644649506,0,0,0);
	CreateDynamicObject(1422, 1993.5124511719,-1506.0249023438,2.7853019237518,0,0,0);
	CreateDynamicObject(1422, 1996.7098388672,-1506.1684570313,2.7868630886078,0,0,0);
	CreateDynamicObject(1422, 2000.0958251953,-1506.0993652344,2.7885177135468,0,0,0);
	CreateDynamicObject(1422, 2002.8205566406,-1504.1995849609,2.8054769039154,0,0,45);
	CreateDynamicObject(1422, 2004.8323974609,-1501.8637695313,2.8064591884613,0,0,45);
	CreateDynamicObject(1422, 2007.5400390625,-1500.3189697266,2.8077809810638,0,0,0);
	CreateDynamicObject(1237, 2009.7583007813,-1500.1771240234,2.3870010375977,0,0,0);
	CreateDynamicObject(1237, 2011.4001464844,-1500.0588378906,2.3876876831055,0,0,0);
	CreateDynamicObject(1237, 2013.2354736328,-1499.9879150391,2.3883743286133,0,0,0);
	CreateDynamicObject(1237, 2015.1348876953,-1499.9990234375,2.3890590667725,0,0,0);
	CreateDynamicObject(1237, 2017.0419921875,-1500.0909423828,2.3904733657837,0,0,0);
	CreateDynamicObject(1237, 2019.005859375,-1499.9711914063,2.3982315063477,0,0,0);
	CreateDynamicObject(1237, 2021.2646484375,-1500.2574462891,2.3987064361572,0,0,0);
	CreateDynamicObject(3578, 1981.3544921875,-1500.3936767578,3.162766456604,0,0,0);
	CreateDynamicObject(3578, 1993.9611816406,-1515.3892822266,3.1536273956299,0,0,0);*/
// Posto da Policia Federal Las Venturas
    /*CreateDynamicObject(5837,1778.78125000,2242.05175781,5.77934647,0.00000000,0.00000000,268.00000000); //object(ci_guardhouse1) (1)
    CreateDynamicObject(5837,1815.99682617,2242.30371094,5.78407335,0.00000000,0.00000000,89.99951172); //object(ci_guardhouse1) (4)
    CreateDynamicObject(1237,1816.85327148,2181.62084961,3.02968597,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,1812.65734863,2185.02465820,2.94451904,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (2)
    CreateDynamicObject(1237,1806.49511719,2194.87182617,3.11388493,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (3)
    CreateDynamicObject(1237,1813.54321289,2181.56542969,2.93513393,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (4)
    CreateDynamicObject(1237,1820.26330566,2181.63330078,4.72938871,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (5)
    CreateDynamicObject(1237,1818.57519531,2181.66601562,3.79464436,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (6)
    CreateDynamicObject(1237,1822.26245117,2181.59741211,5.83637524,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (7)
    CreateDynamicObject(1237,1822.26171875,2181.59667969,5.83637524,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (8)
    CreateDynamicObject(1237,1809.84997559,2189.14379883,3.00757694,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (9)
    CreateDynamicObject(1237,1811.14111328,2187.22827148,2.97202492,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (10)
    CreateDynamicObject(1237,1808.64892578,2190.94775391,3.04105759,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (11)
    CreateDynamicObject(1237,1815.10925293,2181.60839844,2.97985649,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (12)
    CreateDynamicObject(1237,1807.33618164,2193.01855469,3.07949066,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (13)
    CreateDynamicObject(1237,1806.25317383,2196.80004883,3.14966965,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (14)
	CreateDynamicObject(1237,1798.85363770,2178.17895508,2.86880398,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (15)
    CreateDynamicObject(1237,1800.24121094,2196.42187500,3.13437939,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (16)
    CreateDynamicObject(1237,1800.21972656,2193.41015625,3.07818508,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (17)
    CreateDynamicObject(1237,1800.22558594,2190.74902344,3.02885914,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (18)
    CreateDynamicObject(1237,1800.14843750,2187.54199219,2.96827984,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (19)
    CreateDynamicObject(1237,1800.20410156,2184.88085938,2.91964722,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (20)
    CreateDynamicObject(1237,1800.31787109,2181.39892578,2.88804054,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (21)
    CreateDynamicObject(1237,1800.51367188,2178.24804688,2.89682674,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (22)
    CreateDynamicObject(1251,1803.03381348,2241.95410156,4.05584812,0.00000000,0.00000000,90.00000000); //object(smashbar) (1)
    CreateDynamicObject(1251,1803.03930664,2245.19165039,4.11098385,0.00000000,0.00000000,90.00000000); //object(smashbar) (2)
    CreateDynamicObject(1251,1803.09338379,2243.57836914,4.08222437,0.00000000,0.00000000,90.00000000); //object(smashbar) (3)
    CreateDynamicObject(1251,1802.86535645,2240.45239258,4.02981138,0.00000000,0.00000000,90.00000000); //object(smashbar) (4)
    CreateDynamicObject(1237,1798.58251953,2240.54907227,3.89603043,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (23)
    CreateDynamicObject(1237,1798.68908691,2245.13940430,3.98156452,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (24)
    CreateDynamicObject(1237,1798.62597656,2242.90429688,3.93746948,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (25)
    CreateDynamicObject(1009,1803.90039062,2252.93261719,3.96240926,0.00000000,0.00000000,0.00000000); //object(nto_b_s) (1)
    CreateDynamicObject(9245,1820.85046387,2215.30297852,16.49202919,0.00000000,0.00000000,270.00000000); //object(cstguard_sfn01) (1)
    CreateDynamicObject(8873,1798.59265137,2261.18994141,10.35762596,0.00000000,0.00000000,346.00000000); //object(vgsecnstrct12) (1)
    CreateDynamicObject(8873,1795.65356445,2183.78027344,8.98527622,0.00000000,0.00000000,171.99798584); //object(vgsecnstrct12) (2)
    CreateDynamicObject(8873,1815.14123535,2261.34106445,10.47862720,0.00000000,0.00000000,299.99792480); //object(vgsecnstrct12) (3)
    CreateDynamicObject(8873,1779.02539062,2187.07128906,9.17344856,0.00000000,0.00000000,119.99267578); //object(vgsecnstrct12) (4)
    CreateDynamicObject(3502,1802.44055176,2248.97436523,2.59155560,0.00000000,0.00000000,270.00000000); //object(vgsn_con_tube) (1)
    CreateDynamicObject(3502,1775.81091309,2199.82080078,5.81633282,0.00000000,0.00000000,270.00000000); //object(vgsn_con_tube) (2)
    CreateDynamicObject(1237,1806.21081543,2201.35229492,3.23415852,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (26)
    CreateDynamicObject(1237,1806.23132324,2199.05615234,3.19154072,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (27)
    CreateDynamicObject(1237,1811.55590820,2204.04736328,3.28611374,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (28)
    CreateDynamicObject(1237,1806.19812012,2203.73535156,3.28070450,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (29)
    CreateDynamicObject(1237,1813.34594727,2204.04199219,3.31145287,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (30)
    CreateDynamicObject(1237,1800.28649902,2206.72094727,3.31916046,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (31)
    CreateDynamicObject(1237,1800.27734375,2204.70336914,3.28401089,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (32)
    CreateDynamicObject(1237,1800.30310059,2202.12817383,3.24261856,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (33)
    CreateDynamicObject(1237,1800.30114746,2199.35839844,3.19184685,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (34)
    CreateDynamicObject(1237,1816.77954102,2204.11743164,3.41091061,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (35)
    CreateDynamicObject(1237,1815.07165527,2204.13696289,3.36242485,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (36)
    CreateDynamicObject(1251,1813.54895020,2225.59082031,3.80355763,0.00000000,0.00000000,90.00000000); //object(smashbar) (5)
    CreateDynamicObject(1422,1799.70178223,2225.39965820,4.05132866,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_5) (1)
    CreateDynamicObject(1237,1797.60107422,2228.11914062,3.67221832,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (37)
    CreateDynamicObject(1237,1806.19995117,2228.28808594,3.70640564,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (38)
    CreateDynamicObject(1237,1813.17456055,2242.90234375,3.99628639,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (39)
    CreateDynamicObject(1237,1806.25280762,2226.69213867,3.67873192,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (40)
    CreateDynamicObject(1237,1797.53637695,2226.22998047,3.63946533,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (41)
    CreateDynamicObject(1237,1797.58923340,2224.45410156,3.60867310,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (42)
    CreateDynamicObject(1237,1798.52673340,2255.24121094,4.15397835,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (43)
    CreateDynamicObject(1237,1798.57897949,2251.23046875,4.08531380,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (44)
    CreateDynamicObject(1237,1807.25866699,2264.00317383,4.34070969,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (45)
    CreateDynamicObject(1237,1798.55224609,2259.51562500,5.22854424,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (46)
    CreateDynamicObject(1237,1807.12402344,2255.28125000,4.18989944,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (47)
    CreateDynamicObject(1237,1806.74255371,2244.48193359,3.99784660,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (48)
    CreateDynamicObject(1237,1807.05529785,2250.15820312,4.09865665,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (49)
    CreateDynamicObject(1237,1806.29003906,2230.66381836,3.74759293,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (50)
    CreateDynamicObject(1251,1814.69946289,2247.59692383,5.22617435,0.00000000,0.00000000,53.99536133); //object(smashbar) (7)
    CreateDynamicObject(1251,1814.71594238,2253.18554688,4.32960129,0.00000000,0.00000000,53.99182129); //object(smashbar) (8)
    CreateDynamicObject(1251,1814.79211426,2259.18676758,4.43601036,0.00000000,0.00000000,53.98730469); //object(smashbar) (9)
    CreateDynamicObject(1237,1813.00793457,2239.65673828,3.93522263,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (51)
    CreateDynamicObject(1237,1806.95996094,2247.62329102,4.05358124,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (52)
    CreateDynamicObject(1237,1806.76269531,2241.47119141,3.94278908,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (53)
    CreateDynamicObject(1237,1806.67285156,2238.60351562,3.89308071,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (54)
    CreateDynamicObject(1237,1813.00000000,2183.25097656,2.91356277,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (55)
    CreateDynamicObject(1425,1806.10644531,2214.67895508,3.92294407,0.00000000,0.00000000,0.00000000); //object(dyn_roadbarrier_3) (1)
    CreateDynamicObject(1422,1806.15954590,2216.28613281,3.90884328,0.00000000,0.00000000,270.00000000); //object(dyn_roadbarrier_5) (2)
    CreateDynamicObject(1422,1806.19470215,2224.72436523,4.05514717,0.00000000,0.00000000,270.00000000); //object(dyn_roadbarrier_5) (3)
    CreateDynamicObject(1422,1806.18237305,2221.88891602,4.00598526,0.00000000,0.00000000,270.00000000); //object(dyn_roadbarrier_5) (4)
    CreateDynamicObject(1422,1806.17053223,2219.06835938,3.95708203,0.00000000,0.00000000,270.00000000); //object(dyn_roadbarrier_5) (5)
    CreateDynamicObject(3502,1806.58666992,2208.74414062,1.87918234,0.00000000,0.00000000,2.00000000); //object(vgsn_con_tube) (3)*/
  // mini posto da policia
    /*CreateDynamicObject(4597,2867.96069336,-1110.83520508,10.36416626,0.00000000,0.00000000,89.32501221); //object(crprkblok4_lan2) (1)
    CreateDynamicObject(3881,2877.62133789,-1089.47570801,11.73432541,0.00000000,0.00000000,0.00000000); //object(airsecbooth_sfse) (1)
  	CreateDynamicObject(979,2863.04370117,-1090.81738281,10.72298336,0.00000000,0.00000000,334.19494629); //object(sub_roadleft) (1)
    CreateDynamicObject(1216,2873.93676758,-1084.89050293,10.57476521,0.00000000,1.98501587,276.62997437); //object(phonebooth1) (1)
    CreateDynamicObject(1257,2874.88549805,-1081.24658203,11.16195488,0.00000000,0.00000000,0.00000000); //object(bustopm) (1)
    CreateDynamicObject(1257,2881.98779297,-1081.27807617,11.16195488,0.00000000,0.00000000,178.65002441); //object(bustopm) (2)
    CreateDynamicObject(1215,2889.51831055,-1165.06311035,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
    CreateDynamicObject(1215,2888.44213867,-1149.56884766,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
    CreateDynamicObject(1215,2888.36938477,-1141.48547363,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (6)
    CreateDynamicObject(4597,2888.03833008,-1110.46166992,10.35640335,0.00000000,0.00000000,91.30932617); //object(crprkblok4_lan2) (2)
    CreateDynamicObject(1215,2887.93872070,-1089.97070312,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (10)
    CreateDynamicObject(1215,2888.06982422,-1081.75317383,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (11)
    CreateDynamicObject(1215,2888.20068359,-1073.06689453,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (12)
    CreateDynamicObject(1215,2888.02465820,-1063.55236816,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (13)
    CreateDynamicObject(1215,2888.36987305,-1054.46057129,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (14)
    CreateDynamicObject(1215,2868.21484375,-1063.97717285,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (25)
    CreateDynamicObject(1215,2868.21850586,-1072.91210938,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (26)
    CreateDynamicObject(1215,2868.22729492,-1131.02807617,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (30)
    CreateDynamicObject(1215,2868.51220703,-1143.10266113,10.44708633,0.00000000,0.00000000,0.00000000); //object(bollardlight) (31)
    CreateDynamicObject(1215,2868.93530273,-1153.51635742,10.43932343,0.00000000,0.00000000,0.00000000); //object(bollardlight) (33)
    CreateDynamicObject(1215,2869.68310547,-1165.91528320,10.44708633,0.00000000,0.00000000,0.00000000); //object(bollardlight) (34)
    CreateDynamicObject(1215,2868.09033203,-1079.75854492,10.44708633,0.00000000,0.00000000,0.00000000); //object(bollardlight) (37)
    CreateDynamicObject(1215,2862.83471680,-1087.44104004,10.61119843,0.00000000,0.00000000,0.00000000); //object(bollardlight) (40)
    CreateDynamicObject(979,2868.50122070,-1136.15710449,10.72298336,0.00000000,0.00000000,91.30725098); //object(sub_roadleft) (2)
    CreateDynamicObject(979,2891.91601562,-1132.50097656,10.90216637,0.00000000,0.00000000,136.95556641); //object(sub_roadleft) (3)
    CreateDynamicObject(1427,2862.43896484,-1079.43688965,10.59401894,0.00000000,0.00000000,342.13073730); //object(cj_roadbarrier) (5)
    CreateDynamicObject(1427,2862.41479492,-1085.26171875,10.59401894,0.00000000,0.00000000,342.13073730); //object(cj_roadbarrier) (6)
    CreateDynamicObject(1427,2894.01000977,-1141.19531250,10.62373924,0.00000000,0.00000000,342.13073730); //object(cj_roadbarrier) (12)
    CreateDynamicObject(1427,2866.68261719,-1129.08496094,10.42214394,0.00000000,0.00000000,342.13073730); //object(cj_roadbarrier) (16)
    CreateDynamicObject(979,2890.16943359,-1088.58093262,10.71522045,0.00000000,0.00000000,61.52688599); //object(sub_roadleft) (4)
    CreateDynamicObject(1238,2891.12353516,-1181.82116699,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (6)
    CreateDynamicObject(1238,2890.08544922,-1168.44360352,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (7)
    CreateDynamicObject(1238,2888.85473633,-1153.27709961,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (8)
    CreateDynamicObject(1238,2888.56591797,-1142.47265625,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (9)
    CreateDynamicObject(1238,2893.77368164,-1145.97998047,10.38284969,0.00000000,0.00000000,0.00000000); //object(trafficcone) (10)
    CreateDynamicObject(1238,2875.12353516,-1169.92517090,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (16)
    CreateDynamicObject(1238,2874.17846680,-1156.92419434,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (17)
    CreateDynamicObject(1238,2873.59790039,-1139.73242188,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (18)
    CreateDynamicObject(1238,2868.06323242,-1110.59094238,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (19)
    CreateDynamicObject(1238,2888.05664062,-1110.38610840,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (20)
    CreateDynamicObject(1238,2888.12695312,-1084.42724609,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (21)
    CreateDynamicObject(1238,2888.32299805,-1068.11938477,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (22)
    CreateDynamicObject(1238,2888.29638672,-1057.86450195,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (23)
    CreateDynamicObject(1238,2888.54077148,-1045.84326172,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (24)
    CreateDynamicObject(1238,2882.98071289,-1075.18505859,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (25)
    CreateDynamicObject(1238,2883.23852539,-1058.64074707,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (26)
    CreateDynamicObject(1238,2868.80810547,-1041.88854980,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (40)
    CreateDynamicObject(1238,2863.45410156,-1040.23986816,10.36505508,0.00000000,0.00000000,0.00000000); //object(trafficcone) (43)
    CreateDynamicObject(1238,2868.40209961,-1057.97058105,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (44)
    CreateDynamicObject(1238,2862.98535156,-1075.52612305,10.36505508,0.00000000,0.00000000,0.00000000); //object(trafficcone) (46)
    CreateDynamicObject(1238,2868.12988281,-1075.83862305,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (47)
    CreateDynamicObject(1238,2862.75366211,-1089.37268066,10.36505508,0.00000000,0.00000000,0.00000000); //object(trafficcone) (48)
    CreateDynamicObject(1238,2871.30346680,-1084.99536133,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (49)
    CreateDynamicObject(1238,2873.25390625,-1092.94775391,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (50)
    CreateDynamicObject(1238,2873.23876953,-1074.35656738,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (51)
    CreateDynamicObject(1238,2870.12475586,-1170.58605957,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (52)
    CreateDynamicObject(1238,2869.41870117,-1159.24340820,10.19318008,0.00000000,0.00000000,0.00000000); //object(trafficcone) (53)
    CreateDynamicObject(1238,2868.64843750,-1148.50805664,10.20094299,0.00000000,0.00000000,0.00000000); //object(trafficcone) (54)
    CreateDynamicObject(1237,2882.67285156,-1126.14965820,9.88276291,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,2879.94677734,-1126.03894043,9.88276291,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,2877.03271484,-1125.28149414,9.88276291,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
    CreateDynamicObject(1237,2874.50659180,-1124.91503906,9.88276291,0.00000000,0.00000000,0.00000000); //object(strtbarrier01) (1)
    CreateDynamicObject(979,2899.65527344,-1139.86010742,11.07099056,0.00000000,0.00000000,136.95559692); //object(sub_roadleft) (3)
    CreateDynamicObject(979,2907.35034180,-1146.70739746,10.91843796,0.00000000,0.00000000,136.95559692); //object(sub_roadleft) (3)*/
	  //MAREIA
	/*CreateDynamicObject(3250,-1822.77844238,-720.94781494,27.93272400,0.00000000,5.95498657,93.29501343); //object(des_westrn9_) (1)
	CreateDynamicObject(3253,-1744.39697266,-905.27899170,75.43759918,0.00000000,356.03002930,273.92993164); //object(des_westrn11_) (1)
	CreateDynamicObject(3283,-1791.46887207,-748.10504150,45.61333466,0.00000000,0.00000000,0.00000000); //object(conhoos3) (1)
	CreateDynamicObject(3284,-1770.32067871,-746.25079346,50.44205856,328.23999023,354.04501343,15.88000488); //object(conhoos5) (1)
	CreateDynamicObject(3285,-1819.48876953,-739.12145996,32.11851883,3.97000122,354.04501343,184.60504150); //object(conhoos4) (1)
	CreateDynamicObject(3356,-1822.41564941,-815.25762939,39.53607178,0.00000000,1.98498535,85.35501099); //object(cxrf_savhus2_) (1)
	CreateDynamicObject(3362,-1787.91516113,-771.24884033,48.76081467,0.00000000,0.00000000,182.62005615); //object(des_ruin2_) (1)
	CreateDynamicObject(3415,-1819.88720703,-828.77447510,35.73047256,358.01501465,3.97000122,87.34002686); //object(ce_loghut1) (1)
	CreateDynamicObject(3418,-1777.55249023,-803.02288818,60.99352646,0.00000000,0.00000000,77.41500854); //object(ce_oldhut02) (1)
	CreateDynamicObject(3596,-1829.67895508,-777.18572998,36.56805420,0.00000000,3.97000122,89.32501221); //object(dingbat02aex_la) (1)
	CreateDynamicObject(3600,-1790.46875000,-794.45996094,42.03217316,0.00000000,356.02844238,276.62475586); //object(hillhouse06_la) (1)
	CreateDynamicObject(3601,-1822.02307129,-799.16229248,41.51059341,0.00000000,0.00000000,0.00000000); //object(hillhouse04_la) (1)
	CreateDynamicObject(3602,-1798.03845215,-855.83557129,44.34806824,0.00000000,356.02999878,264.71997070); //object(hillhouse05_la) (1)
	CreateDynamicObject(3608,-1774.41284180,-824.65728760,57.74568939,0.00000000,0.00000000,83.37002563); //object(hillhouse08_la) (1)
	CreateDynamicObject(3617,-1798.91418457,-823.53247070,38.02190018,0.00000000,0.00000000,266.70498657); //object(midranhus_las) (1)
	CreateDynamicObject(3626,-1787.18310547,-780.57385254,52.26401138,0.00000000,0.00000000,0.00000000); //object(dckwrkhut) (1)
	CreateDynamicObject(3642,-1770.49560547,-803.67852783,65.31523895,0.00000000,0.00000000,264.71997070); //object(glenphouse03_lax) (1)
	CreateDynamicObject(3702,-1779.23742676,-759.96563721,53.42163086,1.98498535,358.01501465,191.27490234); //object(barrio6b_lae2) (1)
	CreateDynamicObject(3626,-1788.97497559,-780.27593994,49.16436768,0.00000000,0.00000000,0.00000000); //object(dckwrkhut) (1)
	CreateDynamicObject(3626,-1790.45629883,-780.30987549,46.63046646,0.00000000,0.00000000,0.00000000); //object(dckwrkhut) (1)
	CreateDynamicObject(3626,-1792.03979492,-780.28649902,43.91571808,0.00000000,0.00000000,0.00000000); //object(dckwrkhut) (1)
	CreateDynamicObject(3626,-1793.53234863,-780.48468018,41.37931061,0.00000000,0.00000000,0.00000000); //object(dckwrkhut) (1)
	CreateDynamicObject(3626,-1795.30847168,-780.53887939,38.34250259,0.00000000,0.00000000,0.00000000); //object(dckwrkhut) (1)
	CreateDynamicObject(3626,-1797.12060547,-780.69464111,35.25437164,0.00000000,0.00000000,0.00000000); //object(dckwrkhut) (1)
	CreateDynamicObject(3362,-1790.18859863,-771.17504883,44.69792938,0.00000000,0.00000000,184.60504150); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1792.71813965,-771.49450684,40.95265198,0.00000000,0.00000000,184.60327148); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1795.23803711,-771.62091064,36.72851944,0.00000000,0.00000000,184.60327148); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1796.96142578,-771.52740479,32.55242157,0.00000000,0.00000000,184.60327148); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1788.69714355,-760.91662598,47.96205902,0.00000000,0.00000000,182.61474609); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1791.39538574,-761.13769531,44.04658890,0.00000000,0.00000000,184.59973145); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1793.39392090,-761.38842773,40.18552399,0.00000000,0.00000000,184.59973145); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1795.30932617,-761.56726074,36.13069534,0.00000000,0.00000000,182.61474609); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1797.98510742,-761.89123535,32.03762054,0.00000000,0.00000000,182.61474609); //object(des_ruin2_) (1)
	CreateDynamicObject(3283,-1793.26074219,-748.30694580,41.90508270,0.00000000,0.00000000,0.00000000); //object(conhoos3) (1)
	CreateDynamicObject(3283,-1795.22167969,-748.00531006,38.79854584,0.00000000,0.00000000,0.00000000); //object(conhoos3) (1)
	CreateDynamicObject(3283,-1796.68786621,-748.46392822,35.10452271,0.00000000,0.00000000,0.00000000); //object(conhoos3) (1)
	CreateDynamicObject(3283,-1797.47680664,-748.65393066,31.47046089,356.02999878,358.01501465,0.00000000); //object(conhoos3) (1)
	CreateDynamicObject(3283,-1817.72290039,-751.28985596,31.51954842,354.04501343,0.00000000,0.00000000); //object(conhoos3) (1)
	CreateDynamicObject(3418,-1779.57324219,-801.75164795,57.19009018,0.00000000,0.00000000,77.40966797); //object(ce_oldhut02) (1)
	CreateDynamicObject(3418,-1783.70666504,-801.00793457,53.09578705,0.00000000,0.00000000,77.40966797); //object(ce_oldhut02) (1)
	CreateDynamicObject(14467,-1804.71960449,-710.36132812,28.80734062,0.00000000,0.00000000,220.33508301); //object(carter_statue) (1)
	CreateDynamicObject(14467,-1819.04077148,-710.67346191,28.67111015,3.97000122,1.98498535,105.20077515); //object(carter_statue) (2)
	CreateDynamicObject(3362,-1804.34716797,-869.41906738,38.83901215,3.97000122,0.00000000,182.61474609); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1804.02465820,-877.80932617,40.01393127,3.97000122,0.00000000,178.64471436); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1804.67077637,-886.02917480,40.76560974,5.95498657,0.00000000,182.61474609); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1804.13183594,-895.25329590,41.74933624,3.97000122,0.00000000,178.64471436); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1821.35961914,-838.94195557,35.93644333,356.02999878,0.00000000,357.29400635); //object(des_ruin2_) (1)
	CreateDynamicObject(3600,-1794.97607422,-920.89392090,52.70623779,0.00000000,354.04339600,270.66979980); //object(hillhouse06_la) (1)
	CreateDynamicObject(13701,-1777.55957031,-956.35607910,70.21237946,0.00000000,0.00000000,278.61499023); //object(tcehilouse02) (1)
	CreateDynamicObject(3362,-1786.00488281,-805.13800049,46.80889893,0.00000000,0.00000000,184.60327148); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1788.34045410,-805.25866699,42.85494995,0.00000000,0.00000000,184.60327148); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1791.08947754,-806.71905518,39.39440536,0.00000000,0.00000000,184.60327148); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1794.46374512,-807.92950439,35.88141632,0.00000000,0.00000000,188.57324219); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1789.07165527,-818.26257324,39.96125793,0.00000000,0.00000000,180.62933350); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1790.05920410,-827.48077393,40.28606415,3.97000122,0.00000000,174.67431641); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1781.83740234,-828.37646484,47.29409790,0.00000000,0.00000000,176.65930176); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1786.08605957,-828.41033936,43.96449661,0.00000000,0.00000000,184.59936523); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1782.58886719,-837.10675049,47.87614822,3.97000122,0.00000000,172.68933105); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1787.51782227,-837.52862549,44.48152924,3.97000122,0.00000000,182.61431885); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1792.11645508,-837.60906982,40.91739655,3.97000122,0.00000000,178.64434814); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1796.90893555,-838.52239990,37.29444504,7.94000244,0.00000000,180.62933350); //object(des_ruin2_) (1)
	CreateDynamicObject(3600,-1783.96948242,-856.60412598,59.34801483,0.00000000,356.02844238,264.71484375); //object(hillhouse06_la) (1)
	CreateDynamicObject(3362,-1784.95312500,-788.15295410,49.00476074,0.00000000,0.00000000,194.52825928); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1782.69836426,-787.42425537,53.38523865,0.00000000,0.00000000,188.57324219); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1777.12487793,-787.40246582,56.96875381,0.00000000,0.00000000,176.66326904); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1772.15197754,-788.97680664,60.36925888,3.97000122,0.00000000,176.66015625); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1765.22961426,-771.92730713,57.97428131,11.90979004,0.00000000,184.60015869); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1763.85864258,-780.86352539,59.73003387,11.91000366,0.00000000,190.55218506); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1761.96191406,-789.39056396,61.40444183,7.94000244,0.00000000,180.62713623); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1759.06835938,-798.83984375,62.92491150,7.93762207,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1777.82910156,-839.60437012,51.99016190,9.92498779,0.00000000,178.64215088); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1765.19531250,-763.81500244,56.25699997,17.86474609,0.00000000,182.61218262); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1767.17773438,-755.04309082,53.47030640,356.02990723,0.00000000,93.28713989); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1819.51342773,-763.65515137,32.02297592,358.01501465,0.00000000,357.29400635); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1824.57495117,-763.37304688,34.40976715,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1831.15100098,-763.12878418,36.87029266,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1826.25207520,-752.68115234,34.75885391,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1832.60375977,-751.27893066,37.57104492,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1826.26037598,-741.35461426,33.88829422,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1827.03002930,-731.84472656,33.22782135,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1820.61218262,-729.11785889,29.16813087,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1829.86083984,-719.68267822,33.34819031,358.01147461,0.00000000,357.29187012); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1792.25903320,-738.01123047,41.30881882,358.01147461,0.00000000,166.01556396); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1793.70397949,-737.90734863,37.67057800,358.01147461,0.00000000,177.92358398); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1795.79711914,-737.73364258,33.34042358,358.01147461,0.00000000,177.92358398); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1788.97668457,-729.64947510,36.79753876,358.01147461,0.00000000,128.29858398); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1792.64782715,-728.65509033,32.38303757,358.01147461,0.00000000,148.14855957); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1797.59118652,-729.07641602,28.73439598,5.95141602,0.00000000,177.92358398); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1782.80407715,-709.90551758,32.61556244,352.05651855,0.00000000,98.52355957); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1788.78613281,-719.95361328,32.48551178,358.01147461,0.00000000,126.31356812); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1780.20300293,-720.92242432,35.37413025,358.01147461,0.00000000,112.41857910); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1793.54418945,-714.84997559,28.78693390,358.01147461,0.00000000,150.13357544); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1797.80285645,-737.79589844,29.59496498,1.98144531,0.00000000,177.92358398); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1767.31896973,-735.14099121,39.48715210,358.01147461,0.00000000,50.88256836); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1763.51000977,-730.87823486,35.44448853,3.96643066,0.00000000,38.97259521); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1758.99108887,-728.42852783,32.09273911,358.01147461,0.00000000,38.97259521); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1763.88073730,-721.11779785,30.88204575,354.04150391,0.00000000,36.98757935); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1768.07031250,-722.71105957,34.85083771,358.01147461,0.00000000,31.03259277); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1772.85949707,-726.23455811,38.56607056,358.01147461,0.00000000,33.01757812); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1769.46472168,-715.25823975,30.25297165,5.95141602,354.04501343,46.91259766); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1773.77331543,-716.46801758,34.90714264,358.01147461,3.97000122,38.97259521); //object(des_ruin2_) (1)
	CreateDynamicObject(2891,-1767.20666504,-821.28039551,70.99631500,0.00000000,0.00000000,0.00000000); //object(kmb_packet) (1)
	CreateDynamicObject(16093,-1785.24011230,-890.08239746,68.03045654,0.00000000,0.00000000,276.62997437); //object(a51_gatecontrol) (1)
	CreateDynamicObject(16093,-1757.76342773,-850.06915283,76.93218231,1.98498535,1.98498535,240.89999390); //object(a51_gatecontrol) (2)
	CreateDynamicObject(16093,-1781.23107910,-732.47692871,44.18872070,0.00000000,0.00000000,194.53002930); //object(a51_gatecontrol) (3)
	CreateDynamicObject(3887,-1793.94946289,-963.62048340,55.98252106,356.02999878,0.00000000,7.94000244); //object(demolish4_sfxrf) (1)
	CreateDynamicObject(3253,-1745.28088379,-898.60394287,75.48530579,0.00000000,356.02844238,273.92761230); //object(des_westrn11_) (1)
	CreateDynamicObject(3253,-1745.78540039,-892.84161377,75.51792908,0.00000000,356.02844238,273.92761230); //object(des_westrn11_) (1)
	CreateDynamicObject(3253,-1745.69079590,-888.09271240,75.54552460,0.00000000,356.02844238,273.92761230); //object(des_westrn11_) (1)
	CreateDynamicObject(3253,-1745.63928223,-882.35528564,75.61015320,0.00000000,356.02844238,260.03271484); //object(des_westrn11_) (1)
	CreateDynamicObject(3887,-1829.66162109,-875.80004883,47.26301575,5.95498657,0.00000000,177.38000488); //object(demolish4_sfxrf) (2)
	CreateDynamicObject(8168,-1808.94042969,-629.56152344,17.51627350,1.98498535,358.01501465,290.52499390); //object(vgs_guardhouse01) (1)
	CreateDynamicObject(11428,-1794.10998535,-894.03924561,64.40586853,0.00000000,336.17999268,3.96997070); //object(des_indruin02) (1)
	CreateDynamicObject(11443,-1786.29748535,-877.83630371,63.69218826,23.82000732,9.92498779,230.97497559); //object(des_pueblo4) (1)
	CreateDynamicObject(11459,-1764.92578125,-863.32086182,74.42083740,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (1)
	CreateDynamicObject(11459,-1767.23046875,-863.53460693,72.52783203,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (2)
	CreateDynamicObject(11459,-1769.77490234,-863.77062988,70.51381683,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (3)
	CreateDynamicObject(11459,-1771.58837891,-862.55828857,68.43355560,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (4)
	CreateDynamicObject(11459,-1773.63830566,-878.10272217,71.54563141,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (5)
	CreateDynamicObject(11459,-1777.43737793,-877.98260498,69.25521088,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (6)
	CreateDynamicObject(11459,-1781.88415527,-877.84375000,66.57434845,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (7)
	CreateDynamicObject(11459,-1774.94775391,-862.34332275,65.48213196,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (8)
	CreateDynamicObject(11459,-1775.16137695,-854.41113281,63.12789154,0.00000000,0.00000000,0.00000000); //object(des_pueblo11) (9)
	CreateDynamicObject(3865,-1818.56164551,-597.39154053,13.62314796,0.00000000,9.92498779,93.29501343); //object(concpipe_sfxrf) (1)
	CreateDynamicObject(3865,-1814.63964844,-675.05596924,17.97270012,0.00000000,0.00000000,93.29501343); //object(concpipe_sfxrf) (2)
	CreateDynamicObject(3865,-1809.90747070,-736.83197021,28.10007477,0.00000000,0.00000000,99.25003052); //object(concpipe_sfxrf) (3)
	CreateDynamicObject(3865,-1810.75964355,-828.30212402,33.79455948,0.00000000,0.00000000,85.35501099); //object(concpipe_sfxrf) (4)
	CreateDynamicObject(3865,-1813.18493652,-925.60852051,43.14387894,0.00000000,0.00000000,91.31002808); //object(concpipe_sfxrf) (5)
	CreateDynamicObject(3865,-1803.74304199,-1000.07788086,48.43908310,0.00000000,0.00000000,101.23501587); //object(concpipe_sfxrf) (6)
	CreateDynamicObject(16601,-1754.56872559,-819.26788330,71.59024048,0.00000000,0.00000000,0.00000000); //object(by_fuel07) (1)
	CreateDynamicObject(16601,-1793.96618652,-877.08123779,61.99497604,0.00000000,0.00000000,0.00000000); //object(by_fuel07) (2)
	CreateDynamicObject(16601,-1787.12500000,-926.23992920,68.16166687,0.00000000,0.00000000,0.00000000); //object(by_fuel07) (3)
	CreateDynamicObject(3362,-1745.28198242,-914.59967041,74.85504913,359.99761963,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1743.45910645,-924.04730225,74.71472931,359.99761963,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1742.69360352,-932.87957764,74.65261078,1.98263550,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1741.15649414,-942.55700684,74.76028442,359.99761963,0.00000000,188.56225586); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1739.92749023,-951.23376465,74.41967010,359.99761963,0.00000000,188.56225586); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1738.46850586,-960.28991699,75.29420471,358.01263428,0.00000000,192.53228760); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1736.75671387,-969.00909424,74.30378723,359.99761963,0.00000000,188.56225586); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1767.72143555,-995.09619141,71.14899445,359.99761963,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1768.91748047,-985.26916504,70.49554443,3.96762085,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1776.66320801,-987.35870361,68.14185333,1.98263550,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1783.87988281,-989.30938721,65.68986511,359.99761963,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1790.73608398,-990.38702393,63.65389252,1.98263550,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1790.55419922,-979.82067871,64.14371490,1.98263550,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1792.80212402,-969.56384277,63.90401459,359.99761963,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1793.78112793,-955.86224365,64.12270355,3.96762085,0.00000000,176.65228271); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1774.54260254,-996.94604492,69.17715454,5.95263672,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1782.06701660,-998.85424805,66.76385498,5.95263672,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1789.53918457,-998.97308350,65.20077515,3.96762085,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1788.94384766,-1007.49853516,65.02940369,3.96762085,0.00000000,184.59228516); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1751.59130859,-994.51715088,74.08734131,359.99450684,0.00000000,7.92175293); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1753.85705566,-985.38403320,74.18307495,359.98901367,0.00000000,7.92114258); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1755.21936035,-975.25756836,75.28891754,359.98901367,0.00000000,7.92114258); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1761.99719238,-932.82495117,74.71781921,359.98901367,0.00000000,7.92114258); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1762.44531250,-923.48931885,74.79566193,359.98901367,0.00000000,7.92114258); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1763.01135254,-914.77838135,74.87025452,359.98901367,0.00000000,1.96615601); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1764.14978027,-905.88726807,74.94951630,359.98901367,0.00000000,7.92114258); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1765.34411621,-896.27819824,75.01322937,359.98901367,0.00000000,7.92114258); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1765.44848633,-887.11492920,75.05114746,359.98901367,0.00000000,3.95114136); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1764.84472656,-877.25006104,75.13855743,359.98901367,0.00000000,348.07113647); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1772.36938477,-928.51959229,71.19108582,359.98901367,5.95498657,178.63116455); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1772.66052246,-919.45605469,71.28897095,359.98352051,7.94000244,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1771.58715820,-910.04602051,70.43316650,359.98352051,7.94000244,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1772.46325684,-899.54748535,69.93696594,359.98352051,5.95498657,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1777.83984375,-899.98583984,66.51278687,359.98352051,0.00000000,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1783.73315430,-901.01348877,62.91747284,359.98352051,0.00000000,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1778.54919434,-909.09680176,65.48303223,356.01354980,7.94000244,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1779.32800293,-918.71844482,64.96400452,359.98352051,0.00000000,158.77673340); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1779.36840820,-928.96087646,67.98779297,359.98352051,0.00000000,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1784.61145020,-912.85321045,60.55940247,352.04357910,0.00000000,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1774.49218750,-889.27429199,70.06300354,359.98352051,7.94000244,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1762.62573242,-840.05743408,71.03945160,359.98352051,0.00000000,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1760.82873535,-830.16650391,69.74733734,359.98352051,0.00000000,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1753.71582031,-830.71044922,71.81993103,359.98352051,0.00000000,178.62670898); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1742.40246582,-835.01837158,77.50616455,3.95349121,0.00000000,323.53125000); //object(des_ruin2_) (1)
	CreateDynamicObject(3362,-1747.95019531,-843.36499023,76.85499573,1.96850586,0.00000000,327.50122070); //object(des_ruin2_) (1)
	CreateDynamicObject(3865,-1739.91845703,-1005.74682617,72.50188446,0.00000000,0.00000000,99.24542236); //object(concpipe_sfxrf) (7)
	CreateDynamicObject(3865,-1751.26232910,-941.17382812,73.18584442,0.00000000,0.00000000,99.24542236); //object(concpipe_sfxrf) (8)
	CreateDynamicObject(3865,-1755.42639160,-877.05462646,73.87758636,0.00000000,0.00000000,81.38040161); //object(concpipe_sfxrf) (9)
	CreateDynamicObject(3865,-1711.02697754,-818.99041748,78.64311218,0.00000000,0.00000000,210.40539551); //object(concpipe_sfxrf) (10)
	CreateDynamicObject(1215,-1818.24291992,-604.60913086,15.76344490,0.00000000,0.00000000,0.00000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,-1818.02331543,-614.91619873,15.75005531,0.00000000,0.00000000,0.00000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,-1817.54638672,-630.31610107,16.06091690,0.00000000,0.00000000,0.00000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,-1815.67919922,-655.08465576,17.33734131,0.00000000,0.00000000,0.00000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,-1813.75354004,-681.24365234,21.23342514,0.00000000,0.00000000,0.00000000); //object(bollardlight) (5)
	CreateDynamicObject(1238,-1817.85717773,-626.04742432,15.70425129,0.00000000,0.00000000,0.00000000); //object(trafficcone) (1)
	CreateDynamicObject(1223,-1805.20275879,-719.71356201,27.53405380,0.00000000,0.00000000,182.62005615); //object(lampost_coast) (1)
	CreateDynamicObject(1223,-1816.95385742,-726.08300781,28.31358719,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (2)
	CreateDynamicObject(1223,-1802.48510742,-742.10339355,30.12352753,0.00000000,0.00000000,164.75500488); //object(lampost_coast) (3)
	CreateDynamicObject(1223,-1815.20068359,-742.59075928,30.26288795,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (4)
	CreateDynamicObject(1223,-1801.50610352,-777.36206055,33.20395660,0.00000000,0.00000000,170.71002197); //object(lampost_coast) (5)
	CreateDynamicObject(1223,-1813.35864258,-785.61053467,33.28268433,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (6)
	CreateDynamicObject(1223,-1803.01782227,-809.16168213,34.41530609,0.00000000,0.00000000,168.72503662); //object(lampost_coast) (7)
	CreateDynamicObject(1223,-1814.79101562,-808.74804688,35.22253418,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (8)
	CreateDynamicObject(1223,-1803.83703613,-839.92993164,36.32912445,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (9)
	CreateDynamicObject(1223,-1818.43872070,-835.10742188,35.91046143,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (10)
	CreateDynamicObject(1223,-1807.42761230,-881.75341797,40.56375885,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (11)
	CreateDynamicObject(1223,-1822.78112793,-907.75286865,43.23880768,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (12)
	CreateDynamicObject(1223,-1805.09204102,-914.01483154,44.09047699,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (13)
	CreateDynamicObject(1223,-1817.37475586,-958.25976562,47.30220032,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (14)
	CreateDynamicObject(1223,-1819.64416504,-940.05358887,45.93546295,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (15)
	CreateDynamicObject(1223,-1798.20373535,-994.49993896,49.83733749,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (16)
	CreateDynamicObject(1223,-1788.71166992,-764.92718506,47.47109604,0.00000000,0.00000000,286.55499268); //object(lampost_coast) (17)
	CreateDynamicObject(1223,-1795.51098633,-765.72698975,35.36076355,0.00000000,0.00000000,282.58499146); //object(lampost_coast) (18)
	CreateDynamicObject(1223,-1788.16674805,-775.36157227,48.56937790,0.00000000,0.00000000,284.56997681); //object(lampost_coast) (19)
	CreateDynamicObject(1223,-1788.49157715,-782.72448730,48.28320694,0.00000000,0.00000000,290.52499390); //object(lampost_coast) (20)
	CreateDynamicObject(1223,-1793.87695312,-783.15338135,39.15657043,0.00000000,0.00000000,242.17004395); //object(lampost_coast) (21)
	CreateDynamicObject(1223,-1791.18225098,-733.37835693,41.37726593,0.00000000,0.00000000,174.68005371); //object(lampost_coast) (22)
	CreateDynamicObject(1223,-1787.30468750,-713.02569580,32.63337708,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (23)
	CreateDynamicObject(1223,-1775.74572754,-792.93292236,59.47404480,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (24)
	CreateDynamicObject(1223,-1780.91870117,-792.13812256,54.99002075,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (25)
	CreateDynamicObject(1223,-1775.19506836,-813.68475342,57.81948471,0.00000000,0.00000000,168.72503662); //object(lampost_coast) (26)
	CreateDynamicObject(1223,-1780.72424316,-813.63092041,49.14785004,0.00000000,0.00000000,174.68005371); //object(lampost_coast) (27)
	CreateDynamicObject(1223,-1791.51831055,-814.45941162,39.37139130,0.00000000,0.00000000,190.56005859); //object(lampost_coast) (28)
	CreateDynamicObject(1223,-1788.95568848,-843.78088379,46.35070038,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (29)
	CreateDynamicObject(1223,-1760.72595215,-870.53771973,75.63806152,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (30)
	CreateDynamicObject(1223,-1761.74267578,-900.35693359,75.17485046,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (31)
	CreateDynamicObject(1223,-1757.76892090,-939.00250244,74.96302032,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (32)
	CreateDynamicObject(1223,-1753.79919434,-968.29003906,74.79673004,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (33)
	CreateDynamicObject(1223,-1740.32556152,-967.56896973,75.24771881,0.00000000,0.00000000,181.34996033); //object(lampost_coast) (34)
	CreateDynamicObject(1223,-1744.83117676,-939.57012939,74.79864502,0.00000000,0.00000000,191.27496338); //object(lampost_coast) (35)
	CreateDynamicObject(1223,-1745.77954102,-870.13317871,75.46659851,0.00000000,0.00000000,170.71002197); //object(lampost_coast) (36)
	CreateDynamicObject(1223,-1748.32873535,-909.63702393,74.98369598,0.00000000,0.00000000,178.65002441); //object(lampost_coast) (37)
	CreateDynamicObject(1223,-1811.76074219,-608.22607422,15.11472893,0.00000000,0.00000000,184.60504150); //object(lampost_coast) (38)
	CreateDynamicObject(1223,-1823.99560547,-608.88464355,15.22771835,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (39)
	CreateDynamicObject(1223,-1823.74719238,-636.86975098,15.79147339,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (40)
	CreateDynamicObject(1223,-1810.70898438,-637.49237061,15.60021973,0.00000000,0.00000000,178.65002441); //object(lampost_coast) (41)
	CreateDynamicObject(1223,-1774.63781738,-708.76239014,32.87520981,1.98498535,0.00000000,39.70001221); //object(lampost_coast) (42)
	CreateDynamicObject(1223,-1763.30175781,-726.14367676,34.79927444,0.00000000,0.00000000,99.25003052); //object(lampost_coast) (43)
	CreateDynamicObject(1223,-1774.98583984,-738.22998047,43.72068405,0.00000000,0.00000000,0.00000000); //object(lampost_coast) (44)
	CreateDynamicObject(1238,-1818.33593750,-598.56420898,15.61012459,0.00000000,0.00000000,0.00000000); //object(trafficcone) (2)
	CreateDynamicObject(1238,-1818.06372070,-611.50518799,15.47423649,0.00000000,0.00000000,0.00000000); //object(trafficcone) (3)
	CreateDynamicObject(1238,-1816.67883301,-640.71032715,16.13913918,0.00000000,0.00000000,0.00000000); //object(trafficcone) (4)
	CreateDynamicObject(1238,-1811.50915527,-625.18658447,15.77217293,0.00000000,0.00000000,0.00000000); //object(trafficcone) (5)
	CreateDynamicObject(1238,-1815.27014160,-660.13140869,17.63900375,0.00000000,0.00000000,0.00000000); //object(trafficcone) (6)
	CreateDynamicObject(1238,-1814.54907227,-673.14068604,19.54568481,0.00000000,0.00000000,0.00000000); //object(trafficcone) (7)
	CreateDynamicObject(1238,-1813.07531738,-692.14202881,23.09391975,0.00000000,0.00000000,0.00000000); //object(trafficcone) (8)
	CreateDynamicObject(18451,-1719.19104004,-1087.82482910,73.42898560,0.00000000,0.00000000,0.00000000); //object(cs_oldcarjmp) (1)
	CreateDynamicObject(18451,-1708.58520508,-1091.22473145,73.31323242,0.00000000,0.00000000,0.00000000); //object(cs_oldcarjmp) (2)
	CreateDynamicObject(18451,-1808.40771484,-909.10906982,43.61380768,0.00000000,0.00000000,0.00000000); //object(cs_oldcarjmp) (3)
	CreateDynamicObject(6976,-1805.29150391,-933.85620117,49.13307953,358.01501465,338.16500854,0.00000000); //object(shamheliprt04) (1)
	CreateDynamicObject(16436,-1703.13354492,-1112.90905762,74.31057739,0.00000000,0.00000000,202.47003174); //object(cn2_roadblock01) (1)
	CreateDynamicObject(4517,-1640.49560547,-985.42565918,102.06765747,0.00000000,0.00000000,180.63500977); //object(cn2_roadblock04ld) (1)
	CreateDynamicObject(1282,-1824.62414551,-613.35241699,15.95380020,0.00000000,0.00000000,55.58001709); //object(barrierm) (1)
	CreateDynamicObject(1282,-1824.40075684,-628.26971436,16.17652702,0.00000000,0.00000000,51.61001587); //object(barrierm) (2)
	CreateDynamicObject(1282,-1811.91357422,-614.81140137,15.89622116,0.00000000,0.00000000,63.52001953); //object(barrierm) (3)
	CreateDynamicObject(1282,-1809.51831055,-655.38385010,17.53443718,0.00000000,0.00000000,49.62500000); //object(barrierm) (4)
	CreateDynamicObject(1282,-1824.53869629,-592.91882324,16.18064117,0.00000000,0.00000000,33.74499512); //object(barrierm) (5)
	CreateDynamicObject(9320,-1698.57800293,-836.41369629,84.69059753,3.97000122,1.98498535,11.91000366); //object(preshoosbig02_sfn01) (1)*/
 // UPP DA POLICIA MILITAR
    /*F_CreateDynamicObject(3031,-141.90797424,-1310.77062988,3.29906940,0.00000000,357.99499512,233.99780273); //object(wong_dish) (1)
    F_CreateDynamicObject(16093,-134.86506653,-1293.78686523,5.60330725,0.00000000,0.00000000,262.00000000); //object(a51_gatecontrol) (1)
    F_CreateDynamicObject(2921,-138.61640930,-1297.92272949,5.73611975,0.00000000,0.00000000,0.00000000); //object(kmb_cam) (1)
    F_CreateDynamicObject(14877,-134.80502319,-1287.55676270,3.78557754,0.00000000,0.00000000,354.00000000); //object(michelle-stairs) (1)
    F_CreateDynamicObject(1451,139.94836426,153.32992554,452.03240967,0.00000000,0.00000000,0.00000000); //object(dyn_coup) (1)
    F_CreateDynamicObject(1337,-138.11071777,-1293.28027344,2.66586304,0.00000000,0.00000000,258.00000000); //object(binnt07_la) (3)
    F_CreateDynamicObject(944,-79.40144348,-1239.34863281,8.75997066,0.00000000,0.00000000,0.00000000); //object(packing_carates04) (1)
    F_CreateDynamicObject(3502,-146.40594482,-1297.46887207,0.12395287,0.00000000,0.00000000,80.00000000); //object(vgsn_con_tube) (1)
    F_CreateDynamicObject(3502,-143.69059753,-1275.27246094,0.12395287,0.00000000,0.00000000,79.99694824); //object(vgsn_con_tube) (2)
    F_CreateDynamicObject(3502,-139.56066895,-1244.94775391,0.12395287,0.00000000,0.00000000,79.99694824); //object(vgsn_con_tube) (3)
 	F_CreateDynamicObject(3578,-152.88061523,-1345.26647949,0.97334576,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (1)
    F_CreateDynamicObject(3578,-152.68920898,-1338.45532227,0.97334576,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (2)
    F_CreateDynamicObject(3578,-151.99557495,-1332.83483887,0.97334576,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (3)
    F_CreateDynamicObject(3578,-151.27728271,-1326.69287109,0.97334576,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (4)
    F_CreateDynamicObject(3578,-150.93882751,-1320.42492676,0.97334576,0.00000000,0.00000000,0.00000000); //object(dockbarr1_la) (5)
    F_CreateDynamicObject(3578,-149.79342651,-1312.78442383,0.97334576,0.00000000,0.00000000,356.00000000); //object(dockbarr1_la) (6)
    F_CreateDynamicObject(3578,-148.06117249,-1306.06677246,1.03262901,0.00000000,0.00000000,355.99548340); //object(dockbarr1_la) (7)
    F_CreateDynamicObject(3578,-147.28303528,-1299.38403320,0.97334576,0.00000000,0.00000000,351.99548340); //object(dockbarr1_la) (8)
    CreateDynamicObject(3666,-151.55868530,-1282.10559082,2.26238704,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (1)
    CreateDynamicObject(3666,-152.99240112,-1292.95043945,2.25967860,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (2)
    CreateDynamicObject(3666,-154.04629517,-1301.13439941,2.25713658,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (3)
    CreateDynamicObject(3666,-154.76760864,-1306.51721191,2.26563716,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (5)
    CreateDynamicObject(3666,-155.35556030,-1311.75012207,2.25916886,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (6)
    CreateDynamicObject(3666,-155.97715759,-1316.27746582,2.27229953,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (7)
    CreateDynamicObject(3666,-138.70507812,-1282.87255859,2.31463218,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (8)
    CreateDynamicObject(3666,-140.43014526,-1294.84228516,2.29324484,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (9)
    CreateDynamicObject(3666,-141.48464966,-1303.38122559,2.30224013,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (10)
    CreateDynamicObject(3666,-142.05358887,-1308.43469238,2.31962037,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (11)
    CreateDynamicObject(3666,-142.56718445,-1313.60717773,2.34434724,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (12)
    CreateDynamicObject(3666,-143.44471741,-1319.70849609,1.99561000,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (13)
    CreateDynamicObject(3666,-150.16510010,-1271.50390625,2.27721715,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (14)
    CreateDynamicObject(3666,-148.61846924,-1258.96362305,2.31288552,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (17)
    CreateDynamicObject(3666,-146.80148315,-1247.01916504,2.27492785,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (18)
    CreateDynamicObject(3666,-133.82208252,-1249.54577637,2.36597300,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (19)
    CreateDynamicObject(3666,-145.77439880,-1287.20349121,1.46645713,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (20)
    CreateDynamicObject(3666,-147.35601807,-1299.22058105,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (21)
  	CreateDynamicObject(3666,-148.82170105,-1311.13195801,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (22)
    CreateDynamicObject(3666,-150.29565430,-1324.45324707,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (23)
    CreateDynamicObject(3666,-151.18933105,-1332.66540527,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (24)
    CreateDynamicObject(3666,-151.61291504,-1337.95520020,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (25)
    CreateDynamicObject(3666,-152.05093384,-1345.21203613,1.46629906,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (26)
    CreateDynamicObject(3666,-152.31164551,-1349.54101562,1.46706629,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (27)
    CreateDynamicObject(3666,-152.66146851,-1355.29907227,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (28)
    CreateDynamicObject(3666,-152.62336731,-1360.12829590,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (29)
    CreateDynamicObject(3666,-152.77920532,-1366.05786133,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (30)
    CreateDynamicObject(3666,-152.61889648,-1374.31518555,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (31)
    CreateDynamicObject(3666,-152.09260559,-1382.69506836,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (32)
    CreateDynamicObject(3666,-151.58471680,-1389.76660156,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (33)
    CreateDynamicObject(3666,-151.14086914,-1393.50231934,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (34)
    CreateDynamicObject(3666,-149.53765869,-1404.34094238,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (35)
    CreateDynamicObject(3666,-145.93026733,-1419.31311035,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (36)
    CreateDynamicObject(3666,-138.11158752,-1441.23339844,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (37)
    CreateDynamicObject(3666,-126.88639069,-1462.06506348,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (38)
    CreateDynamicObject(3666,-114.87015533,-1478.44860840,1.46617293,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (39)
    CreateDynamicObject(3666,-103.35697174,-1489.73571777,1.45899749,0.00000000,0.00000000,0.00000000); //object(airuntest_las) (40)
    F_CreateDynamicObject(8253,-124.78903961,-1272.89782715,5.80263805,0.00000000,0.00000000,172.00000000); //object(pltschlhnger01_lvs) (1)
    F_CreateDynamicObject(1238,-149.53009033,-1316.85583496,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (3)
    F_CreateDynamicObject(1238,-150.87207031,-1329.18457031,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (4)
    F_CreateDynamicObject(1238,-151.81857300,-1340.83081055,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (5)
    F_CreateDynamicObject(1238,-156.64697266,-1325.23986816,2.04848719,0.00000000,0.00000000,0.00000000); //object(trafficcone) (6)
    F_CreateDynamicObject(1238,-144.55815125,-1325.49536133,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (7)
    F_CreateDynamicObject(1238,-157.70492554,-1336.79687500,2.03539658,0.00000000,0.00000000,0.00000000); //object(trafficcone) (8)
    F_CreateDynamicObject(1238,-146.37875366,-1337.49621582,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (9)
    F_CreateDynamicObject(1238,-158.43768311,-1346.58691406,2.04349089,0.00000000,0.00000000,0.00000000); //object(trafficcone) (10)
    F_CreateDynamicObject(1238,-147.15528870,-1346.53417969,1.94632268,0.00000000,0.00000000,0.00000000); //object(trafficcone) (11)
    F_CreateDynamicObject(1238,-152.36750793,-1352.49548340,2.01773834,0.00000000,0.00000000,0.00000000); //object(trafficcone) (12)
    F_CreateDynamicObject(1238,-152.55682373,-1361.13549805,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (13)
    F_CreateDynamicObject(1238,-158.87528992,-1355.76464844,2.04507542,0.00000000,0.00000000,0.00000000); //object(trafficcone) (14)
    F_CreateDynamicObject(1238,-147.47283936,-1354.69152832,1.77840328,0.00000000,0.00000000,0.00000000); //object(trafficcone) (15)
    F_CreateDynamicObject(1238,-159.00343323,-1362.23376465,2.05400133,0.00000000,0.00000000,0.00000000); //object(trafficcone) (16)
    F_CreateDynamicObject(1238,-148.06912231,-1362.42346191,1.95966315,0.00000000,0.00000000,0.00000000); //object(trafficcone) (17)
    F_CreateDynamicObject(1238,-152.60443115,-1371.90905762,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (18)
    F_CreateDynamicObject(1238,-151.90324402,-1384.45690918,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (19)
    F_CreateDynamicObject(1238,-158.90309143,-1371.27624512,2.04148293,0.00000000,0.00000000,0.00000000); //object(trafficcone) (20)
    F_CreateDynamicObject(1238,-158.29849243,-1380.82287598,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (21)
    F_CreateDynamicObject(1238,-157.99214172,-1388.09423828,2.04267550,0.00000000,0.00000000,0.00000000); //object(trafficcone) (22)
    F_CreateDynamicObject(1238,-147.88728333,-1303.21276855,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (23)
    F_CreateDynamicObject(1238,-146.26782227,-1290.80541992,2.02095222,0.00000000,0.00000000,0.00000000); //object(trafficcone) (24)
    F_CreateDynamicObject(1238,-142.69107056,-1311.35986328,2.04905438,0.00000000,0.00000000,0.00000000); //object(trafficcone) (25)
    F_CreateDynamicObject(1238,-140.95651245,-1297.04016113,2.03102207,0.00000000,0.00000000,0.00000000); //object(trafficcone) (26)
    F_CreateDynamicObject(1238,-140.41691589,-1285.49438477,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (27)
    F_CreateDynamicObject(1238,-144.68952942,-1386.51098633,2.01349258,0.00000000,0.00000000,0.00000000); //object(trafficcone) (28)
    F_CreateDynamicObject(1238,-142.42399597,-1375.67810059,1.91376901,0.00000000,0.00000000,0.00000000); //object(trafficcone) (29)
    F_CreateDynamicObject(1238,-140.52882385,-1364.74890137,1.38569832,0.00000000,0.00000000,0.00000000); //object(trafficcone) (30)
    F_CreateDynamicObject(1238,-139.15106201,-1356.68652344,0.99789661,0.00000000,0.00000000,0.00000000); //object(trafficcone) (31)
    F_CreateDynamicObject(1238,-137.18460083,-1347.55212402,0.98310274,0.00000000,0.00000000,0.00000000); //object(trafficcone) (32)
    F_CreateDynamicObject(1238,-135.28727722,-1339.09802246,1.14012718,0.00000000,0.00000000,0.00000000); //object(trafficcone) (33)
    F_CreateDynamicObject(1290,-147.77493286,-1301.92407227,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (1)
    F_CreateDynamicObject(1290,-149.54090881,-1316.58020020,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (2)
    F_CreateDynamicObject(1290,-150.70034790,-1328.31921387,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (3)
    F_CreateDynamicObject(1290,-141.42523193,-1254.53076172,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (4)
    F_CreateDynamicObject(1290,-139.33773804,-1241.53259277,7.72619343,0.00000000,0.00000000,0.00000000); //object(lamppost2) (5)
    F_CreateDynamicObject(1290,-137.01791382,-1229.77795410,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (6)
    F_CreateDynamicObject(1290,-134.08944702,-1218.80029297,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (7)
    F_CreateDynamicObject(1290,-130.51797485,-1206.57739258,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (8)
    F_CreateDynamicObject(1290,-124.80271149,-1191.00817871,7.71873379,0.00000000,0.00000000,0.00000000); //object(lamppost2) (9)*/
	//Lombadas
	/*F_CreateDynamicObject(3502, 1298,-1405.8693847656,10.800000190735,0,0,0);
	F_CreateDynamicObject(3502, 1298,-1395.2796630859,10.800000190735,0,0,180);
	F_CreateDynamicObject(3502, 1160.5,-1405.923828125,11,0,0,0);
	F_CreateDynamicObject(3502, 1160.5208740234,-1395.1662597656,11,0,0,180);
	F_CreateDynamicObject(3502, 1206.0806884766,-1355,11,0,0,90);
	F_CreateDynamicObject(3502, 1195.5300292969,-1354.9975585938,11,0,0,270);
	F_CreateDynamicObject(3502, 1216.1193847656,-1224.5467529297,14.89999961853,0,0,270);
	F_CreateDynamicObject(3502, 1216.2495117188,-1184.6458740234,19,0,0,270);
	F_CreateDynamicObject(3502, 1162.4688720703,-1092.5241699219,23,0,0,270);
	F_CreateDynamicObject(3502, 1227.0999755859,-1406.0152587891,10.800000190735,0,0,0);
	F_CreateDynamicObject(3502, 1227.0999755859,-1395.2319335938,10.800000190735, 0, 0, 180);
	F_CreateDynamicObject(3502, 1013.9979858398,-1405.8697509766,10.800000190735, 0, 0, 0);
	F_CreateDynamicObject(3502, 1014,-1395.1697998047,10.800000190735,0,0,180);
	F_CreateDynamicObject(3502, 882.998046875,-1405.8826904297,10.699999809265,0,0,0);
	F_CreateDynamicObject(3502, 883,-1395.2655029297,10.699999809265,0,0,180);
	F_CreateDynamicObject(3502, 766.99700927734,-1405.7993164063,10.800000190735,0,0,0);
	F_CreateDynamicObject(3502, 767.02093505859,-1395.1680908203,10.800000190735,0,0,180);
	F_CreateDynamicObject(3502, 680,-1405.8426513672,10.800000190735,0,0,0);
	F_CreateDynamicObject(3502, 679.99383544922,-1395.1109619141,10.800000190735,0,0,180);
	F_CreateDynamicObject(3502, 592.68139648438,-1407.8592529297,11,0,0,5);
	F_CreateDynamicObject(3502, 591.67639160156,-1397.4936523438,11,0,0,185);
	F_CreateDynamicObject(3502, 539.70001220703,-1460,12.699999809265,0,0,90);
	F_CreateDynamicObject(3502, 529,-1460,12.699999809265,0,0,270);
	F_CreateDynamicObject(3502, 400,-1592.4000244141,26,0,0,0);
	F_CreateDynamicObject(3502, 400,-1582.5,26,0,0,180);
	F_CreateDynamicObject(3502, 505,-1593.1088867188,13.699999809265,0,0,0);
	F_CreateDynamicObject(3502, 504.98516845703,-1582.8917236328,13.699999809265,0,0,180);
	F_CreateDynamicObject(3502, 585,-1592.1251220703,13.699999809265,0,0,0);
	F_CreateDynamicObject(3502, 585.01623535156,-1582.3166503906,13.699999809265,0,0,180);
	F_CreateDynamicObject(3502, 664.89660644531,-1586.7006835938,11.800000190735,0,0,0);
	F_CreateDynamicObject(3502, 715,-1586.4637451172,11.699999809265,0,0,0);
	F_CreateDynamicObject(3502, 810.17175292969,-1731.1951904297,11,0,0,90);*/
	//HQ CET
	CreateDynamicObject(10789,2257.07714844,-3757.49804688,-0.75000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(10789,2285.70483398,-3757.39428711,-0.75000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(10789,2312.67065430,-3757.34082031,-0.75000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(10789,2341.26513672,-3757.49023438,-0.75000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(10789,2257.12939453,-3787.59887695,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(10789,2285.78295898,-3787.53564453,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(10789,2312.74536133,-3787.51318359,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(10789,2341.28393555,-3787.63134766,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(10789,2257.22314453,-3817.76123047,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(10789,2285.85693359,-3817.71362305,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(10789,2312.90673828,-3817.67553711,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(10789,2341.38110352,-3817.76831055,-0.75000000,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2355.54492188,-3755.35546875,2.55855465,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2355.53271484,-3780.92163086,2.55855465,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2355.54663086,-3806.49365234,2.55855465,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(983,2410.59375000,-3830.82812500,-54.59009552,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(983,2355.53247070,-3822.48291016,2.55855465,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(983,2355.53076172,-3828.85009766,2.55855465,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(983,2355.50805664,-3829.82104492,2.55855465,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2342.78686523,-3832.95654297,2.50000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2317.60449219,-3832.91210938,2.75000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2291.95996094,-3832.97119141,2.75000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2266.29394531,-3832.90844727,2.75000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(984,2248.99438477,-3832.83642578,2.50000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2242.90527344,-3820.04907227,2.55138135,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2242.88867188,-3794.44433594,2.55138135,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2242.86987305,-3768.83544922,2.55138135,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(984,2242.85571289,-3749.66577148,2.51167965,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2255.57177734,-3743.38476562,2.50000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2279.69897461,-3743.42407227,2.50000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2305.29638672,-3743.28344727,2.50000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2330.75927734,-3743.32080078,2.50000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(982,2346.77050781,-3672.91894531,-50.50709534,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(982,2343.57934570,-3743.34277344,2.50000000,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(9241,2259.16577148,-3816.88159180,3.93389893,0.00000000,0.00000000,179.99993896);
	F_CreateDynamicObject(972,1037.95788574,-1467.31958008,12.12110901,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(972,1041.20336914,-1467.16320801,15.87110901,0.00000000,271.99993896,0.00000000);
	F_CreateDynamicObject(972,1036.94763184,-1467.32116699,16.37110901,0.00000000,258.00000000,0.00000000);
	F_CreateDynamicObject(987,953.32226562,-1479.31005859,12.60158157,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(987,941.40313721,-1479.28149414,12.55463409,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(987,941.50347900,-1467.30456543,12.55463409,0.00000000,0.00000000,270.00000000);
	F_CreateDynamicObject(987,953.58239746,-1415.97143555,12.38488770,0.00000000,0.00000000,179.99993896);
	F_CreateDynamicObject(987,941.83203125,-1415.87890625,12.38488770,0.00000000,0.00000000,269.99450684);
	F_CreateDynamicObject(1251,964.92810059,-1416.96423340,16.62477493,0.00000000,0.00000000,358.00000000);
	F_CreateDynamicObject(1282,950.86608887,-1422.67871094,13.64194107,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,965.01153564,-1413.67675781,16.74282837,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,964.99987793,-1413.95288086,16.74282837,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,964.93060303,-1415.11816406,16.72019005,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,964.95611572,-1414.84204102,16.74282837,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,964.54669189,-1439.09509277,13.06449699,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,964.49163818,-1455.61608887,12.89786911,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,1032.07922363,-1455.59191895,13.06831932,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(3666,1031.87841797,-1464.02844238,13.08989239,0.00000000,0.00000000,0.00000000);
	F_CreateDynamicObject(18284,987.97747803,-1434.83679199,15.49171448,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(18284,1004.50415039,-1434.83728027,15.49171448,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(18284,1021.00915527,-1434.85498047,15.49171448,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(18284,1002.10662842,-1459.22436523,15.49171448,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(18284,1013.18377686,-1459.29003906,15.49171448,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(1290,1012.46466064,-1446.90686035,18.57805634,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(1290,1029.92858887,-1447.82800293,18.57805634,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(1294,990.62658691,-1438.88317871,17.06499863,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(1294,976.03698730,-1440.14501953,17.05750084,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(1294,965.70996094,-1440.19726562,17.05695534,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(1294,990.48870850,-1454.94702148,15.80750084,0.00000000,0.00000000,272.00000000);
	F_CreateDynamicObject(1294,979.49096680,-1454.72070312,15.80750084,0.00000000,0.00000000,271.99951172);
	F_CreateDynamicObject(1294,965.23864746,-1454.67846680,15.80750084,0.00000000,0.00000000,271.99951172);
	F_CreateDynamicObject(1294,954.53936768,-1475.25012207,17.06499863,0.00000000,0.00000000,180.00000000);
	F_CreateDynamicObject(1294,953.69873047,-1450.77929688,14.80695534,0.00000000,0.00000000,179.99450684);
	F_CreateDynamicObject(1294,953.27197266,-1441.78808594,14.80695534,0.00000000,0.00000000,179.99450684);
	F_CreateDynamicObject(1294,952.85705566,-1433.04663086,14.80695534,0.00000000,0.00000000,179.99450684);
	F_CreateDynamicObject(1294,954.70275879,-1419.92370605,17.30695534,0.00000000,0.00000000,179.99450684);
	F_CreateDynamicObject(1294,963.46215820,-1417.66918945,17.05695534,0.00000000,0.00000000,1.99450684);
	F_CreateDynamicObject(1294,963.62591553,-1428.61120605,17.05695534,0.00000000,0.00000000,1.99401855);
	F_CreateDynamicObject(1294,963.34777832,-1460.26013184,15.55695534,0.00000000,0.00000000,1.99401855);
	F_CreateDynamicObject(1294,963.33569336,-1477.61621094,15.55695534,0.00000000,0.00000000,1.99401855);
	F_CreateDynamicObject(1294,955.21972656,-1461.76855469,14.80695534,0.00000000,0.00000000,179.99450684);
 //ESTACIONAMENTO PREFEITURA
	CreateDynamicObject(18284, 1502.3000488281, -1723.6999511719, 15.5, 0, 0, 270);
	CreateDynamicObject(18284, 1482.3000488281, -1723.8000488281, 15.5, 0, 0, 270);
	CreateDynamicObject(18284, 1465.0999755859, -1723.8000488281, 15.5, 0, 0, 270);
	CreateDynamicObject(18284, 1448.5999755859, -1723.9000244141, 15.5, 0, 0, 270.25);
  	F_CreateDynamicObject(979,1537.80126953,-1668.35107422,13.38709545,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(979,1537.80078125,-1677.70642090,13.38709545,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(979,1534.67395020,-1686.21923828,13.38709545,0.00000000,0.00000000,90.00000000);
	F_CreateDynamicObject(979,1534.88537598,-1658.98535156,13.38709545,0.00000000,0.00000000,90.00000000);
	//F_CreateDynamicObject(4882, 1529.4072265625, -1645.0849609375, 17.247444152832, 0, 0, 270.67565917969);
//Policia Militar
	PDDOORa = F_CreateDynamicObject(1495, 247.14717102051, 72.455833435059, 1002.6619873047, 0, 0, 179.5);
	PDDOORb = F_CreateDynamicObject( 1495, 250.5412902832, 64.09854888916, 1002.640625, 0, 0, 269.75);
	PDDOORc = F_CreateDynamicObject(1495, 248.01477050781, 76.579116821289, 1002.640625, 0, 0, 269.75);
	PDGATE = F_CreateDynamicObject(971,1544.469,-1628.097,13.353,0.0,0.0,-91.100);
	gt3gate = F_CreateDynamicObject(971, 283.095062, -1542.899170, 25.510294, 0.0000, 0.0000, 326.2500);
	gt3gate3 = F_CreateDynamicObject(971, 321.832672, -1488.615112, 25.527353, 0.0000, 0.0000, 323.6717);
	//PDGARAGE = F_CreateDynamicObject(971, 1588.555786, -1637.811157, 15.911808, 0.0000, 0.0000, 0.0000);
	PDGARAGE = F_CreateDynamicObject(980,1588.195,-1637.969,15.193,0.0,0.0,0.0);
//G.T.3
	gatepf2 = F_CreateDynamicObject(971, 2334.757568, 2443.675537, 8.250650, 0.0000, 0.0000, 236.2500);
	gatepf3 = F_CreateDynamicObject(971, 2293.928467, 2499.322021, 5.825822, 0.0000, 0.0000, 90.0000);
	//PORTAO COMANDO VERMELHO
    cv2 = F_CreateDynamicObject(980,2424.8999023438, -2093.6799316406, 15.329999923706, 0, 0, 90);
    cv3 = F_CreateDynamicObject(980,2424.8999023438, -2082.1201171875, 15.329999923706, 0, 0, 90);
    portaogroove = F_CreateDynamicObject(980, 2465.8999023438, -1659.8000488281, 15.10000038147, 0, 0, 90.5);
 //Policia Civil
	ppc2 = F_CreateDynamicObject(980, 923.40002441406, -1229, 18.700000762939, 0, 0, 270);
    ppc3 = F_CreateDynamicObject(980, 923.40002441406, -1217.5, 18.700000762939, 0, 0, 90);
//PORTAOZINHO PC
	PPPC = F_CreateDynamicObject(988, 925.20001220703, -1208.9000244141, 16, 0, 0, 90);
//Portao FT/ROCAM
	PFT = F_CreateDynamicObject(972, 1282.9000244141, -1649.1999511719, 12.5, 0, 0, 0);
//PORTAO PRF
	pprf = F_CreateDynamicObject(980, -3.2999999523163,-268.5,7.2030787467957,0,0,180);
	CreateDynamicObject(980, 8.1000003814697,-268.5,7.2030787467957,0,0,0);
//PORTAO GRADE CT
	pct = F_CreateDynamicObject(2990, -1209.6999511719, -1041.5, 131.5, 0, 0, 0);
//B.O.P.E
	//portaobope = F_CreateDynamicObject(980, 1025.799316, -368.267792, 75.509537, 0.0000, 0.0000, 0.0000);
//Exercito
	PDEx = F_CreateDynamicObject(980, -1531.3978271484, 482.25979614258, 8.9530792236328, 0, 0, 359.99975585938);
// PORTAO GOVERNO
	PortaoGov = F_CreateDynamicObject(980, 1539.2235107422, -1838.2176513672, 15.320266723633, 0, 0, 91.309509277344);
	PortaoPre = F_CreateDynamicObject(2990, 369.15893554688, 162.35037231445, 1028.6030273438, 0, 0, 270.67565917969);
// PORTOES REP�RTER
    PortaoReporter = F_CreateDynamicObject(971, 777.80017089844, -1330.2664794922, 15.200000762939, 0, 0, 0);
    PortaoReporterr = F_CreateDynamicObject(971, 777.97308349609, -1384.7303466797, 15.299999237061, 0, 0, 0);
// Portao Rally
	PortaoRally = F_CreateDynamicObject(971, -2368.4670410156, -2192.6381835938, 36.037666320801, 0, 0, 292.51049804688);
// Porta X1 Monte Chiliad
	PortaoX1 = F_CreateDynamicObject(7891, -2321.5114746094, -1619.4454345703, 484.98388671875, 90, 0, 274.64562988281);
// Portao Policia Civil
	PortaoPC = F_CreateDynamicObject(971,-75.570,-357.211,3.960,0.0,0.0,-89.381);
	PortaoPC3 = F_CreateDynamicObject(971,-75.598,-348.424,3.908,0.0,0.859,-269.863);
// Portao Taxistas
    PortaoMecs = F_CreateDynamicObject(980,958.840,-1415.794,15.151,0.0,0.0,0.0);//22 objetos de port�o
//Portao hitmans
    portaohit = F_CreateDynamicObject(980, 1535.4083251953, -1451.5765380859, 15.161214828491, 0, 0, 0);
//Portao ROTA
//Port�o Policia Federal
	PortaoPF = F_CreateDynamicObject(972, -491.20001220703, -559.09997558594, 24.5, 0, 0, 270);

//--------------------------------=[OBJETOS]=-------------------------------------------------
//HQ YAKUZA
	pyakuza1 = F_CreateDynamicObject(980,664.862,-1309.311,15.234,0.0,0.0,0.0);
	pyakuza3 = F_CreateDynamicObject(980,785.128,-1152.442,25.430,0.0,0.0,88.522);
	CreateDynamicObject(980,659.657,-1227.171,17.185,0.0,0.0,-118.602);
	CreateDynamicObject(971,665.185,-1215.183,19.240,0.0,-0.859,54.144);
	CreateDynamicObject(987,674.915,-1309.409,13.373,0.0,0.0,0.0);
	CreateDynamicObject(987,686.904,-1309.404,13.393,0.0,0.0,0.0);
	CreateDynamicObject(987,698.796,-1309.306,13.313,0.0,0.0,0.0);
	CreateDynamicObject(987,710.760,-1309.391,13.352,0.0,0.0,0.0);
	CreateDynamicObject(987,722.756,-1309.391,13.331,0.0,0.0,0.0);
	CreateDynamicObject(987,734.752,-1309.396,13.255,0.0,0.0,0.0);
	CreateDynamicObject(987,746.734,-1309.413,13.257,0.0,0.0,0.0);
	CreateDynamicObject(987,758.750,-1309.462,13.311,0.0,0.0,-0.859);
	CreateDynamicObject(987,770.761,-1309.641,13.258,0.0,0.0,-1.719);
	CreateDynamicObject(987,775.558,-1309.831,13.255,0.0,0.0,-0.859);
	CreateDynamicObject(987,787.236,-1310.090,13.246,0.0,0.0,90.241);
	CreateDynamicObject(987,787.203,-1298.085,13.257,0.0,0.0,90.241);
	CreateDynamicObject(987,787.245,-1286.027,13.274,0.0,0.0,90.241);
	CreateDynamicObject(987,787.320,-1274.071,13.338,0.0,0.0,90.241);
	CreateDynamicObject(987,787.320,-1262.105,13.402,0.0,0.0,90.241);
	CreateDynamicObject(987,787.314,-1250.093,13.456,0.0,0.0,91.100);
	CreateDynamicObject(987,787.264,-1238.047,14.006,0.0,0.0,90.241);
	CreateDynamicObject(987,787.320,-1226.222,14.665,0.0,-6.875,90.241);
	CreateDynamicObject(987,787.345,-1214.314,16.108,0.0,-8.594,91.100);
	CreateDynamicObject(987,787.245,-1202.435,17.965,0.0,-8.594,91.100);
	CreateDynamicObject(987,787.270,-1190.620,20.105,0.0,-6.875,90.241);
	CreateDynamicObject(987,787.239,-1178.684,21.563,0.0,-6.016,90.318);
	CreateDynamicObject(987,787.403,-1172.777,22.678,0.0,-3.438,91.100);
	CreateDynamicObject(987,787.260,-1142.088,22.836,0.0,-0.859,89.381);
	CreateDynamicObject(996,740.164,-1089.698,25.585,0.0,0.0,-36.096);
	CreateDynamicObject(996,735.935,-1095.939,25.625,0.0,0.0,60.161);
	CreateDynamicObject(996,731.709,-1103.247,25.604,0.0,0.0,60.161);
	CreateDynamicObject(996,727.577,-1110.477,25.607,0.0,0.0,60.161);
	CreateDynamicObject(996,727.723,-1111.254,25.655,0.0,0.0,-28.361);
	CreateDynamicObject(996,728.035,-1119.358,23.311,0.0,0.0,64.458);
	CreateDynamicObject(996,725.276,-1127.288,23.300,0.0,0.0,64.458);
	CreateDynamicObject(996,720.464,-1135.281,23.311,0.0,0.0,64.458);
	CreateDynamicObject(996,717.206,-1135.067,24.131,0.0,0.0,-32.659);
	CreateDynamicObject(996,713.397,-1141.607,24.124,0.0,0.0,64.458);
	CreateDynamicObject(980,693.242,-1177.234,17.176,0.0,0.0,-120.321);
	CreateDynamicObject(980,687.438,-1187.124,17.193,0.0,0.0,-120.321);
	CreateDynamicObject(973,690.601,-1181.144,21.138,0.0,0.0,59.301);
	CreateDynamicObject(973,686.419,-1188.226,21.145,0.0,0.0,59.301);
	CreateDynamicObject(987,654.622,-1235.148,16.722,0.0,-5.297,168.450);
	CreateDynamicObject(987,643.632,-1232.738,17.974,0.0,3.438,-83.365);
	CreateDynamicObject(987,645.039,-1244.596,17.215,0.0,3.438,-83.365);
	CreateDynamicObject(987,646.454,-1256.561,16.810,0.0,1.719,-85.225);
	CreateDynamicObject(987,647.753,-1268.431,16.519,0.0,1.719,-85.084);
	CreateDynamicObject(987,648.727,-1280.450,16.180,0.0,5.157,-91.960);
	CreateDynamicObject(987,648.459,-1292.185,14.982,0.0,5.157,-91.960);
	CreateDynamicObject(987,648.434,-1297.687,15.218,0.0,5.157,-91.960);
	CreateDynamicObject(986,651.989,-1309.452,15.299,0.0,0.0,-11.250);
//HQ COSA NOSTRA
	CreateDynamicObject(3578, 1506.5350341797, -685.29895019531, 103.90502166748, 0, 0, 0);
    CreateDynamicObject(3578, 1488.5340576172, -684.99731445313, 103.90502166748, 0, 0, 0);
    CreateDynamicObject(3578, 1481.9154052734, -678.74987792969, 103.90502166748, 0, 0, 271.08032226563);
    CreateDynamicObject(3578, 1512.9066162109, -678.70770263672, 103.78001403809, 0, 0, 270.07141113281);
    CreateDynamicObject(5822, 1511.8214111328, -666.77313232422, 97.435821533203, 0, 0, 275.6103515625);
	CreateDynamicObject(3749, 1496.1419677734, -699.82165527344, 99.608413696289, 0, 0, 0);
    CreateDynamicObject(987, 1456.7333984375, -657.06579589844, 93.75, 0, 0, 270.02026367188);
    CreateDynamicObject(987, 1456.7827148438, -669.10290527344, 93.75, 0, 0, 270.01647949219);
    CreateDynamicObject(987, 1456.822265625, -681.12384033203, 93.75, 0, 0, 270.01647949219);
    CreateDynamicObject(987, 1468.6832275391, -657.26861572266, 93.75, 0, 0, 179.7265625);
    CreateDynamicObject(987, 1480.7132568359, -657.20452880859, 93.75, 0, 0, 179.97534179688);
    CreateDynamicObject(987, 1492.7427978516, -657.16522216797, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1504.6442871094, -657.22448730469, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1516.59765625, -657.2333984375, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1528.5245361328, -657.34295654297, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1531.0043945313, -657.33306884766, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1530.8057861328, -669.26306152344, 93.75, 0, 0, 89.412719726563);
    CreateDynamicObject(987, 1530.7158203125, -681.26739501953, 93.75, 0, 0, 89.412231445313);
    CreateDynamicObject(987, 1530.8011474609, -693.25598144531, 93.75, 0, 0, 90.162231445313);
    CreateDynamicObject(987, 1530.7866210938, -699.60687255859, 93.75, 0, 0, 90.159301757813);
    CreateDynamicObject(987, 1518.7559814453, -699.52844238281, 93.75, 0, 0, 0.2093505859375);
    CreateDynamicObject(987, 1506.8061523438, -699.56646728516, 93.75, 0, 0, 0.208740234375);
    CreateDynamicObject(987, 1505.0556640625, -699.57196044922, 93.75, 0, 0, 0.208740234375);
    CreateDynamicObject(3095, 1496.794921875, -692.64691162109, 102.25841522217, 0, 0, 0);
    CreateDynamicObject(3934, 1496.83203125, -692.44268798828, 102.81378173828, 0, 0, 0);
    acn = F_CreateDynamicObject(980, 1496.1875, -699.90942382813, 96.523391723633, 0, 0, 180.54052734375);
    CreateDynamicObject(971, 1485.5874023438, -701.50988769531, 96.005561828613, 0, 0, 194.42028808594);
    CreateDynamicObject(971, 1481.2894287109, -698.20007324219, 96.005561828613, 0, 0, 90.947570800781);
    CreateDynamicObject(987, 1469.3878173828, -693.7822265625, 93.75, 0, 0, 1.0908203125);
    CreateDynamicObject(987, 1457.4541015625, -693.63488769531, 93.75, 0, 0, 1.087646484375);
    CreateDynamicObject(987, 1456.8669433594, -682.24108886719, 93.75, 0, 0, 270.01647949219);
//HQ POLICIA FEDERAL
	/*F_CreateDynamicObject(972, 1053.150635, -364.751801, 72.989067, 0.0000, 0.0000, 270.0000);//PF
	F_CreateDynamicObject(972, 1077.798340, -364.761169, 73.007172, 0.0000, 0.0000, 270.0000);//PF
	F_CreateDynamicObject(972, 1102.515869, -364.742371, 73.007668, 0.0000, 0.0000, 270.0000);//PF
	F_CreateDynamicObject(972, 1115.845093, -357.260559, 72.989067, 0.0000, 0.0000, 348.7500);//PF
	F_CreateDynamicObject(972, 1118.664429, -333.338318, 73.188026, 0.0000, 0.0000, 0.0000);//PF
	F_CreateDynamicObject(972, 1118.645996, -308.523041, 73.063805, 0.0000, 0.0000, 0.0000);//PF
	F_CreateDynamicObject(972, 1011.444641, -353.724670, 72.964851, 0.0000, 0.0000, 180.0000);//PF
	F_CreateDynamicObject(972, 1011.419922, -328.909668, 72.989067, 0.0000, 0.0000, 180.0000);//PF
	F_CreateDynamicObject(972, 1011.446655, -305.261566, 72.989067, 0.0000, 0.0000, 180.0000);//PF
	F_CreateDynamicObject(972, 1011.416931, -289.040314, 73.104477, 0.0000, 0.0000, 180.0000);//PF
	F_CreateDynamicObject(972, 1022.643921, -282.154694, 72.309181, 0.0000, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(972, 1047.532227, -282.128693, 72.329407, 0.0000, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(972, 1072.383057, -282.127045, 72.338379, 0.0000, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(972, 1097.220825, -282.118805, 72.327057, 0.0000, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(972, 1113.790527, -290.517548, 72.486343, 0.0000, 0.0000, 43.2811);//PF
	F_CreateDynamicObject(1437, 1017.094604, -318.952972, 73.204353, 321.3253, 0.0000, 349.6868);//PF
	F_CreateDynamicObject(1437, 1047.878662, -319.296265, 73.179352, 321.3253, 0.0000, 9.4538);//PF
	F_CreateDynamicObject(971, 1045.807861, -285.811310, 72.785492, 359.1406, 0.0000, 0.0000);//PF
	F_CreateDynamicObject(971, 1019.767822, -285.511688, 72.586891, 359.1406, 0.0000, 0.0000);//PF
	F_CreateDynamicObject(971, 1038.222412, -290.416077, 72.062996, 359.1406, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(971, 1052.792114, -308.392609, 72.012993, 359.1406, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(971, 1026.699341, -307.976349, 72.008743, 359.1406, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(971, 1012.012756, -290.716187, 72.162895, 359.1406, 0.0000, 90.0000);//PF
	F_CreateDynamicObject(987, 1008.240723, -368.009552, 72.812233, 0.0000, 0.0000, 0.0000);//PF
	F_CreateDynamicObject(987, 1030.928223, -368.019928, 72.926926, 0.0000, 0.0000, 0.0000);//PF*/
    /*F_CreateDynamicObject(17324, 1909.405396, -1086.097656, 23.266682, 0.0000, 0.0000, 90.0000);//Ballas
	F_CreateDynamicObject(974, 1921.312988, -1083.677612, 26.157940, 0.0000, 0.0000, 90.0000);//Ballas
	F_CreateDynamicObject(993, 1921.616089, -1086.758789, 27.863852, 0.0000, 0.0000, 90.0000);//Ballas*/
    F_CreateDynamicObject(976, -1318.929932, 485.502075, 2.495463, 0.0000, 0.0000, 0.0000);//Exercito
	F_CreateDynamicObject(975, -1310.243286, 483.695221, 1.255584, 0.0000, 90.2408, 90.0000);//Exercito
	F_CreateDynamicObject(976, -1456.115601, 485.440247, 2.572548, 0.0000, 0.0000, 0.0000);//Exercito
	F_CreateDynamicObject(975, -1456.180420, 483.701660, 1.334991, 0.0000, 90.2408, 90.0000);//Exercito
	F_CreateDynamicObject(975, -1635.722046, 258.053223, 1.358051, 0.0000, 90.2408, 90.0000);//Exercito
	F_CreateDynamicObject(975, -1631.299805, 256.540588, 4.100387, 0.0000, 0.0000, 0.0000);//Exercito
	F_CreateDynamicObject(975, -1437.401978, 288.470612, 3.908910, 0.0000, 1.7189, 180.0000);//Exercito
	F_CreateDynamicObject(969, -1433.067993, 291.634735, -2.983646, 0.0000, 269.7592, 91.7962);//Exercito
	F_CreateDynamicObject(971, -1421.895752, 493.653046, 5.583976, 0.0000, 0.0000, 90.0000);//Exercito
	F_CreateDynamicObject(971, -1421.889771, 502.442719, 5.583976, 0.0000, 0.0000, 90.0000);//Exercito
	F_CreateDynamicObject(987, -1494.882935, 481.541107, 6.155916, 0.0000, 0.0000, 180.0000);//Exercito
	F_CreateDynamicObject(987, -1482.924683, 481.518555, 6.187500, 0.0000, 0.0000, 180.0000);//Exercito
	F_CreateDynamicObject(987, -1470.973511, 481.511017, 6.187500, 0.0000, 0.0000, 180.0000);//Exercito
	F_CreateDynamicObject(987, -1459.033325, 481.521851, 6.187500, 0.0000, 0.0000, 180.0000);//Exercito
	F_CreateDynamicObject(987, -1447.090210, 481.533997, 6.171634, 0.0000, 0.0000, 180.0000);//Exercito
	F_CreateDynamicObject(8209, -1657.5897216797, 309.62448120117, 6.6885266304016, 0, 0, 9.9249267578125);//Exercito
    F_CreateDynamicObject(7657, -1516.1883544922, 481.56393432617, 12.896530151367, 0, 0, 178.6494140625);//Exercito
    F_CreateDynamicObject(5822, -1311.8383789063, 484.17300415039, 12.087057113647, 0, 0, 92.85986328125);//Exercito Escada//151 objetos
    /*F_CreateDynamicObject(1215, 1546.012329, -1678.610352, 13.106312, 0.0000, 0.0000, 0.0000);//Luzes DP
	F_CreateDynamicObject(1215, 1546.057739, -1672.688843, 13.100897, 0.0000, 0.0000, 0.0000);//Luzes DP
	F_CreateDynamicObject(1216, 1535.088379, -1637.508545, 13.238877, 0.0000, 0.0000, 78.7500);//Orelhao DP//3 objetos*/
// Caixas Eletronicos
    F_CreateDynamicObject(2942, 1928.771484, -1785.187012, 13.139766, 0.0000, 0.0000, 90.0000);
	F_CreateDynamicObject(2942, 2233.052490, -1162.624023, 25.483516, 0.0000, 0.0000, 270.0000);
	F_CreateDynamicObject(2942, 1551.242798, -1669.691528, 13.154342, 0.0000, 0.0000, 270.0000);
	F_CreateDynamicObject(2942, 1467.9844970703, -1767.4049072266, 18.438655853271, 0, 0, 90);
//Caixas M�fias
 	F_CreateDynamicObject(1271, 1324.886841, -635.915161, 108.484901, 0.0000, 0.0000, 17.1887);
	F_CreateDynamicObject(1271, 1325.540649, -635.743835, 108.484901, 0.0000, 0.0000, 17.1887);
	F_CreateDynamicObject(1271, 1325.286255, -635.804565, 109.175873, 0.0000, 0.0000, 17.1887);
//OBJETOS ESPALHADOS NA CIDADE
    /*CreateDynamicObject(4100, 1942.1629638672, -1772.4167480469, 14.342294692993, 0, 0, 49.624786376953);//grades posto sul
    CreateDynamicObject(4100, 1941.0621337891, -1772.3591308594, 14.342294692993, 0, 0, 49.624694824219);//grades posto sul*/
//GRADES DP
	CreateDynamicObject(8657, 1540.112427, -1617.834595, 17.085871, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8657, 1556.128052, -1602.815186, 17.098783, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(8657, 1587.115356, -1602.819092, 17.098783, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(8657, 1607.599365, -1617.712524, 17.109379, 0.0000, 0.0000, 180.0000);
    CreateDynamicObject(8657, 1591.488159, -1602.809937, 17.089760, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(8657, 1607.609253, -1623.373291, 17.110785, 0.0000, 0.0000, 180.0000);
    CreateDynamicObject(8657, 1591.651611, -1638.419434, 17.102463, 0.0000, 0.0000, 90.0000);
    CreateDynamicObject(8657, 1540.150635, -1636.671021, 2.744139, 89.3814, 0.0000, 0.0000);
    CreateDynamicObject(8657, 1540.156250, -1622.265869, 17.059849, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8657, 1542.021240, -1637.111450, 2.803216, 89.3814, 0.0000, 90.0000);
    CreateDynamicObject(8657, 1540.112549, -1619.037598, 0.984375, 89.3814, 0.0000, 0.0000);
    CreateDynamicObject(8657, 1540.132324, -1621.366089, 1.984375, 89.3814, 0.0000, 0.0000);
    CreateDynamicObject(8657, 1540.738281, -1635.044067, 2.684377, 89.3814, 0.0000, 315.0000);
    CreateDynamicObject(8657, 1542.445679, -1633.612427, 2.684394, 89.3814, 0.0000, 303.7500);
    CreateDynamicObject(8657, 1540.963623, -1622.405884, 2.695315, 89.3814, 0.0000, 67.5000);
    CreateDynamicObject(8657, 1543.109497, -1623.053467, 2.745330, 89.3814, 0.0000, 78.7500);
    CreateDynamicObject(8657, 1540.090210, -1622.250610, 19.386414, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8657, 1540.108521, -1617.812622, 19.378399, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8657, 1556.136719, -1602.798706, 19.399326, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(8657, 1587.145874, -1602.803711, 19.396963, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(8657, 1592.585449, -1602.805420, 19.403933, 0.0000, 0.0000, 270.0000);
    CreateDynamicObject(8657, 1607.598877, -1618.815674, 19.411327, 0.0000, 0.0000, 180.0000);
    CreateDynamicObject(8657, 1592.735474, -1638.416748, 19.416664, 0.0000, 0.0000, 90.0000);//200 objetos
    CreateDynamicObject(8657, 1607.608032, -1622.280396, 19.412531, 0.0000, 0.0000, 180.0000);
    CreateDynamicObject(8657, 1555.494385, -1640.067505, 19.371500, 0.0000, 0.0000, 78.7500);
    CreateDynamicObject(8402, 1602.803345, -1622.288452, 19.232428, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1588.780640, -1618.344604, 19.207428, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1570.445190, -1622.264160, 19.232428, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1578.829590, -1622.416626, 19.207428, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1570.725830, -1614.966431, 19.207428, 0.0000, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1602.511597, -1623.147461, 19.157429, 180.4820, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1591.326050, -1622.262207, 19.149426, 180.4820, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1570.105103, -1623.221069, 19.132801, 180.4820, 0.0000, 0.0000);
    CreateDynamicObject(8402, 1581.437134, -1622.246338, 19.146805, 180.4820, 0.0000, 0.0000);
    CreateDynamicObject(2930, 1582.6254882813, -1638.0324707031, 15.007925987244, 0, 0, 91.309509277344);//36 objetos*/
// Bate-Bate
    CreateDynamicObject(7921, 2737.6628417969, -1759.4056396484, 44.521724700928, 0, 0, 0);
    CreateDynamicObject(7921, 2737.7473144531, -1760.2904052734, 44.549240112305, 0, 0, 179.36633300781);
    CreateDynamicObject(7921, 2735.8483886719, -1759.4578857422, 44.495727539063, 0, 0, 0);
    CreateDynamicObject(7921, 2735.9426269531, -1760.1951904297, 44.500312805176, 0, 0, 178.6494140625);//4 objetos*/
// TANQUES POSTO NORTE
    CreateDynamicObject(1676, 1000.5368041992, -937.51239013672, 42.908992767334, 0, 0, 9.9249267578125);
    CreateDynamicObject(1676, 1007.5074462891, -936.49285888672, 42.908992767334, 0, 0, 7.939208984375);//2 objetos*/
// PORTOES GOVERNO
    CreateDynamicObject(987, 1490.6391601563, -1824.5861816406, 12.546875, 0, 0, 268.69067382813);
    CreateDynamicObject(987, 1490.3248291016, -1836.5666503906, 12.546875, 0, 0, 268.68713378906);
    CreateDynamicObject(986, 1539.1845703125, -1828.4642333984, 12.546875, 0, 0, 268.69067382813);
    CreateDynamicObject(971, 1499.8586425781, -1860.7644042969, 16.116792678833, 0, 0, 0);//4 objetos
//ESTACIONAMENTO DA RUA DP
    CreateDynamicObject(11547, 1521.1174316406, -1677.9721679688, 15.49153137207, 0, 0, 0);
    CreateDynamicObject(11547, 1521.0534667969, -1658.5024414063, 15.48383140564, 0, 0, 0);
// ORELHOES
    CreateDynamicObject(1216, 1124.8205566406, -1472.7642822266, 15.472403526306, 0, 0, 178.6494140625);
    CreateDynamicObject(1216, 1804.5754394531, -1167.1788330078, 23.520128250122, 0, 0, 344.1201171875);
    CreateDynamicObject(1216, 1363.7294921875, -1749.3428955078, 13.222763061523, 0, 0, 264.720703125);
    CreateDynamicObject(1216, 1363.7303466797, -1752.9660644531, 13.214802742004, 0, 0, 264.71557617188);
// Passarela bar e outros
    //CreateDynamicObject(4882, 1529.4072265625, -1645.0849609375, 17.247444152832, 0, 0, 270.67565917969);//passarela
    F_CreateDynamicObject(16151, 1551.0268554688, -1715.4868164063, 12.546875, 0, 0, 89.324493408203, 300.0);
// Cela Ex�rcito
    CreateDynamicObject(2930, -1297.6999511719, 491.39999389648, 12.89999961853, 0, 0, 0);
//Pista de Rally
    CreateDynamicObject(8251, -2393.5866699219, -2206.2165527344, 36.216876983643, 0, 0, 30.6298828125);
    CreateDynamicObject(987, -2376.7141113281, -2210.048828125, 32.44575881958, 0, 0, 80.404846191406);
    CreateDynamicObject(987, -2377.7255859375, -2192.9619140625, 32.2890625, 0, 0, 162.41345214844);
    CreateDynamicObject(987, -2376.8635253906, -2193.6000976563, 32.563995361328, 0, 0, 25.095886230469);
    CreateDynamicObject(987, -2363.47265625, -2193.3618164063, 32.327827453613, 0, 0, 204.55285644531);
//Pista de Skate
    CreateDynamicObject(11292, 1920.9520263672, -1414.4202880859, 14.034344673157, 0, 0, 178.6494140625);//Telhadinho Drogas
//PARQUE GLEEN
    CreateDynamicObject(1637, 1991.6693115234, -1184.0124511719, 19.441257476807, 0, 0, 342.13513183594);
    CreateDynamicObject(1637, 1948.6083984375, -1214.7890625, 19.431552886963, 0, 0, 162.75695800781);
//HQ REPORTER
    CreateDynamicObject(7657, 787.4609375, -1340.359375, 18.264627456665, 0, 0, 89.324493408203);
    CreateDynamicObject(7657, 787.25671386719, -1360.3143310547, 18.263717651367, 0, 0, 89.324340820313);
    CreateDynamicObject(7657, 787.26574707031, -1375.0749511719, 18.329557418823, 0, 0, 89.324340820313);
    CreateDynamicObject(7657, 777.21832275391, -1385.0466308594, 18.436908721924, 0, 0, 359.99975585938);
    CreateDynamicObject(7657, 760.88116455078, -1384.9207763672, 18.439277648926, 0, 0, 359.99450683594);
    CreateDynamicObject(7657, 777.40789794922, -1330.0454101563, 18.26703453064, 0, 0, 178.64379882813);
    CreateDynamicObject(7657, 757.46813964844, -1329.6379394531, 18.265003204346, 0, 0, 178.64318847656);
    CreateDynamicObject(7657, 740.240234375, -1329.53125, 18.268165588379, 0, 0, 180.62817382813);
//HQ TAXISTAS
	/*CreateDynamicObject(980,1041.181,-1460.063,15.419,0.0,0.0,-92.742);
	CreateDynamicObject(987,953.222,-1473.284,12.536,0.0,0.0,-0.859);
	CreateDynamicObject(983,949.976,-1473.470,16.832,0.0,0.0,-90.241);
	CreateDynamicObject(983,950.004,-1473.339,18.154,0.0,0.0,-90.241);
	CreateDynamicObject(987,952.874,-1415.724,12.635,0.0,0.0,-89.381);
	CreateDynamicObject(983,952.715,-1430.705,16.519,0.0,0.0,-2.578);
	CreateDynamicObject(983,952.724,-1430.727,17.820,0.0,0.0,-1.719);
	CreateDynamicObject(978,948.092,-1427.209,16.919,0.0,0.0,0.0);*/
//Cofre(ROUBO) Prefeitura
	//CreateDynamicObject(1829,355.28314208984,171.98362731934,1007.8456420898,0.0,0.0,91.0);
	//CreateDynamicObject(1550,353.82382202148,172.66203308105,1007.7756347656,0.0,0.0,315.0);
//Cofre(ROUBO) Lot�rica e Banco
    CreateDynamicObject(1829, 820.33020019531, 8.3643178939819, 1003.6611938477, 0, 0, 91.309509277344);
    CreateDynamicObject(1829, 2305.9875488281, -6.1657295227051, 26.206716537476, 0, 0, 91.309387207031);
//Roubo Loja de Armas 1 e 2(Cofre e Armas)
    CreateDynamicObject(2035, 2169.0065917969, 1589.9106445313, 998.99560546875, 0, 0, 320.30029296875);
    CreateDynamicObject(2036, 2169.0502929688, 1589.8255615234, 999.00512695313, 0, 0, 0);
    CreateDynamicObject(1829, 2168.7346191406, 1589.8250732422, 999.43542480469, 0, 0, 93.294494628906);
    CreateDynamicObject(1550, 2168.5485839844, 1590.4002685547, 999.36407470703, 0, 0, 7.9400024414063);
    CreateDynamicObject(1829, 451.28546142578, -79.360252380371, 999.11920166016, 0, 0, 0.000244140625);
    CreateDynamicObject(1550, 451.82040405273, -79.421600341797, 998.94805908203, 0, 0, 71.459594726563);
    CreateDynamicObject(2035, 451.41320800781, -79.704383850098, 998.5791015625, 0, 0, 0);
    CreateDynamicObject(2036, 451.53814697266, -79.866546630859, 998.58862304688, 0, 0, 318.31530761719);
    CreateDynamicObject(2057, 451.29110717773, -79.280700683594, 999.31091308594, 0, 0, 0);
//HQ Policia Federal
    CreateDynamicObject(3109, 321.46438598633, 302.0078125, 999.40002441406, 0, 0, 268.69067382813);
//caixa e orelhao spawn civil
	/*CreateDynamicObject(1216, 2233.3046875, -1165.7521972656, 25.589185714722, 0, 0, 266.7041015625);
	CreateDynamicObject(1216, 2219.9748535156, -1155.2331542969, 1025.4888916016, 0, 0, 179.36633300781);
	CreateDynamicObject(2942, 2224.169921875, -1141.1091308594, 1025.396875, 0, 0, 0);*/
// Arena de X1 Monte Chiliad
    CreateDynamicObject(972, -2317.9733886719, -1607.8778076172, 481.92987060547, 0, 0, 5.95263671875);
    CreateDynamicObject(972, -2333.5573730469, -1582.4885253906, 481.92987060547, 0, 0, 97.262329101563);
    CreateDynamicObject(972, -2342.1125488281, -1607.5842285156, 481.92987060547, 0, 0, 186.58666992188);
    CreateDynamicObject(972, -2322.4345703125, -1589.484375, 481.92987060547, 0, 0, 29.772521972656);//300 objetos
    CreateDynamicObject(972, -2315.3129882813, -1635.2191162109, 481.92987060547, 0, 0, 5.95263671875);
    CreateDynamicObject(972, -2339.2004394531, -1632.3326416016, 481.92987060547, 0, 0, 186.58703613281);
    CreateDynamicObject(8650, -2316.6611328125, -1618.7884521484, 474.04272460938, 90, 90, 7.93994140625);
    CreateDynamicObject(8650, -2328.5708007813, -1620.1850585938, 488.14788818359, 180, 180, 97.262329101563);
    CreateDynamicObject(8650, -2328.5256347656, -1620.2603759766, 486.49984741211, 179.99450683594, 179.99450683594, 97.261962890625);
    CreateDynamicObject(972, -2315.8947753906, -1624.5148925781, 481.92987060547, 0, 0, 5.9490966796875);
    CreateDynamicObject(8650, -2314.5227050781, -1618.5999755859, 474.04272460938, 90, 90, 7.9376220703125);
    CreateDynamicObject(8650, -2318.1958007813, -1618.8737792969, 474.04272460938, 90, 90, 5.9549560546875);
    CreateDynamicObject(972, -2344.6188964844, -1584.1512451172, 481.92987060547, 0, 0, 186.58630371094);
    CreateDynamicObject(972, -2330.990234375, -1642.7630615234, 481.92987060547, 0, 0, 275.91064453125);
    CreateDynamicObject(972, -2325.4072265625, -1642.2864990234, 481.92987060547, 0, 0, 275.90515136719);
    CreateDynamicObject(7657, -2333.6726074219, -1620.9918212891, 484.42767333984, 0, 0, 7.93994140625);
//GRADES CELAS PM,PF
	CreateDynamicObject(988, 266.3486328125, 82.4482421875, 1000.0884399414, 0, 0, 89.324340820313);
	CreateDynamicObject(988, 266.34918212891, 86.14559173584, 1000.0390625, 0, 0, 89.324340820313);
	//CreateDynamicObject(988, 320.89068603516, 315.35446166992, 998.1484375, 0, 0, 89.324493408203);
	//CreateDynamicObject(988, 320.89068603516, 312.80841064453, 998.29431152344, 0, 0, 89.324340820313);
//CAIXAS ELETRONICOS PC,BOPE,PF,EXE
    CreateDynamicObject(2942, 228.90814208984, 153.8551940918, 1002.6234375, 0, 0, 87.339508056641);
    CreateDynamicObject(2942, 240.31645202637, 115.30052947998, 1002.81875, 0, 0, 89.324493408203);
    //CreateDynamicObject(2942, 320.70361328125, 305.59274291992, 998.7484375, 0, 0, 91.309509277344);
    CreateDynamicObject(2942, -1347.6359863281, 500.72186279297, 10.7953125, 0, 0, 0);
//OBJETOS ESTACIONAMENTO HQ CIVIL
/*	CreateDynamicObject(982,1101.896,-1765.282,13.200,0.0,0.0,0.0);
	CreateDynamicObject(982,1089.041,-1777.130,13.277,0.0,0.0,90.241);
	CreateDynamicObject(983,1073.032,-1777.144,13.280,0.0,0.0,90.241);
	CreateDynamicObject(983,1066.678,-1777.140,13.236,0.0,0.0,90.241);
	CreateDynamicObject(983,1061.946,-1777.102,13.264,0.0,0.0,90.241);
	CreateDynamicObject(982,1059.059,-1764.302,13.240,0.0,0.0,0.0);
	CreateDynamicObject(983,1059.091,-1748.272,13.292,0.0,0.0,0.0);
	CreateDynamicObject(983,1059.151,-1741.842,13.311,0.0,0.0,0.0);
	CreateDynamicObject(983,1059.125,-1738.650,13.347,0.0,0.0,0.0);
	CreateDynamicObject(982,1071.950,-1735.551,13.400,0.0,0.0,-90.241);
	CreateDynamicObject(982,1097.673,-1735.698,13.462,0.0,0.0,-90.241);
	CreateDynamicObject(983,1103.864,-1749.029,13.252,0.0,0.0,-39.534);
	CreateDynamicObject(983,1109.084,-1746.583,13.254,0.0,0.0,-89.381);
	CreateDynamicObject(983,1108.863,-1735.742,13.457,0.0,0.0,-89.381);
	CreateDynamicObject(997,1084.067,-1752.728,12.691,0.0,0.0,0.0);
	CreateDynamicObject(997,1074.527,-1752.695,12.508,0.0,0.0,0.0);
	CreateDynamicObject(997,1079.379,-1752.766,12.686,0.0,0.0,0.0);
	CreateDynamicObject(997,1074.665,-1748.129,12.693,0.0,0.0,0.0);
	CreateDynamicObject(997,1084.094,-1748.147,12.695,0.0,0.0,0.0);
	CreateDynamicObject(997,1079.266,-1748.143,12.532,0.0,0.0,0.0);//400 objetos
	CreateDynamicObject(997,1074.429,-1751.866,12.510,0.0,0.0,90.241);
	CreateDynamicObject(997,1087.321,-1752.118,12.681,0.0,0.0,90.241);
	CreateDynamicObject(1251,1112.236,-1742.535,12.503,0.0,0.0,0.0);
	CreateDynamicObject(1251,1112.248,-1737.048,12.503,0.0,0.0,0.0);
	CreateDynamicObject(1215,1113.116,-1746.001,13.135,0.0,0.0,0.0);
	CreateDynamicObject(1215,1113.227,-1735.718,13.338,0.0,0.0,0.0);
	CreateDynamicObject(1215,1059.156,-1776.992,13.080,0.0,0.0,0.0);
	CreateDynamicObject(1215,1059.349,-1735.715,13.220,0.0,0.0,0.0);
	CreateDynamicObject(1215,1101.736,-1777.019,12.908,0.0,0.0,0.0);*/
//PORTA BURGER SHOT 2
    /*CreateDynamicObject(2957, 681.56121826172, -446.03887939453, -24.989976882935, 0, 90, 0);
    CreateDynamicObject(2957, 680.94635009766, -449.14892578125, -26.681901931763, 90, 0, 0);
    CreateDynamicObject(2957, 680.94635009766, -447.4892578125, -26.681901931763, 90, 0, 0);*/
//objetos nos interiores dp e puteiro
    CreateDynamicObject(3037, 968.423828125, -55.8310546875, 1002.323059082, 0, 0, 0);
    CreateDynamicObject(1649, 250.51708984375, 67.329261779785, 1005.8063964844, 0, 0, 268);
    CreateDynamicObject(1649, 250.55484008789, 68.194267272949, 1005.8098144531, 0, 0, 267.99499511719);
    CreateDynamicObject(1649, 250.81039428711, 67.307945251465, 1005.9599609375, 0, 0, 89.494995117188);
    CreateDynamicObject(1649, 250.81809997559, 68.34211730957, 1005.9580078125, 0, 0, 89.994506835938);
    CreateDynamicObject(2690, 252.50610351563, 71.3359375, 1003.7658691406, 0, 0, 177.99987792969);
    CreateDynamicObject(2690, 257.83972167969, 72.897361755371, 1003.8541259766, 0, 0, 177.99499511719);
    CreateDynamicObject(2690, 241.35848999023, 77.555992126465, 1005.2669677734, 0, 0, 267.99499511719);
    CreateDynamicObject(2690, 258.87344360352, 89.140907287598, 1002.7399902344, 0, 0, 267.99499511719);
    CreateDynamicObject(2690, 262.42337036133, 89.355735778809, 1001.2899169922, 0, 0, 89.994995117188);
    CreateDynamicObject(1829, 947.28375244141, -41.441524505615, 1000.5811767578, 0, 0, 0);
    CreateDynamicObject(1550, 948.18011474609, -40.878971099854, 1000.5100097656, 0, 0, 0);
    CreateDynamicObject(1649, 253.00276184082, 117.26930236816, 1005.3801269531, 0, 0, 270);
    CreateDynamicObject(1649, 253.31997680664, 117.27327728271, 1005.3801269531, 0, 0, 90.494567871094);
    CreateDynamicObject(1649, 239.72468566895, 112.80972290039, 1005.3551025391, 0, 0, 90.494384765625);
    CreateDynamicObject(1649, 239.43579101563, 112.64543151855, 1005.4301757813, 0, 0, 270.74450683594);
    CreateDynamicObject(2412, 248.78071594238, 62.83519744873, 1002.640625, 0, 0, 0);
    CreateDynamicObject(2412, 245.5270690918, 62.849220275879, 1002.640625, 0, 0, 0);
    CreateDynamicObject(2412, 248.36656188965, 107.60803222656, 1002.21875, 0, 0, 0);
    CreateDynamicObject(2412, 245.08518981934, 107.6265411377, 1002.21875, 0, 0, 0);
    CreateDynamicObject(2412, 240.5962677002, 138.89042663574, 1002.0234375, 0, 0, 0);
    CreateDynamicObject(2412, 237.41877746582, 138.96696472168, 1002.0234375, 0, 0, 0);


//modifica�oes na dp by:Leonardo

   /* CreateDynamicObject(1411, 1541.697265625, -1651.1416015625, 14.59086227417, 0, 0, 0);
    CreateDynamicObject(1411, 1539.3271484375, -1648.7568359375, 14.59086227417, 0, 0, 270);
    CreateDynamicObject(1411, 1539.3380126953, -1643.5551757813, 14.59086227417, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1539.3529052734, -1638.3835449219, 14.59086227417, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1541.7259521484, -1636.0030517578, 14.59086227417, 0, 0, 180);
    CreateDynamicObject(1411, 1542.8059082031, -1636.0393066406, 14.59086227417, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1545.2203369141, -1638.3770751953, 14.59086227417, 0, 0, 90);
    CreateDynamicObject(1411, 1544.0759277344, -1648.7111816406, 14.59086227417, 0, 0, 90);
    CreateDynamicObject(3526, 1524.7878417969, -1723.0291748047, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1525.4887695313, -1723.0168457031, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1526.1381835938, -1723.0074462891, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1526.7905273438, -1722.9997558594, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1527.4576416016, -1723.0162353516, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1528.1264648438, -1723.0101318359, 12.459025382996, 0, 0, 90);
    CreateDynamicObject(3526, 1528.7918701172, -1723.0280761719, 12.459025382996, 0, 0, 90);
    CreateDynamicObject(3526, 1529.4600830078, -1723.0207519531, 12.459025382996, 0, 0, 90);
    CreateDynamicObject(3526, 1530.1362304688, -1723.0211181641, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1530.8541259766, -1723.0290527344, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1531.5345458984, -1723.0225830078, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1532.2210693359, -1723.0297851563, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1532.8807373047, -1723.0301513672, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1533.5349121094, -1723.0361328125, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1535.2083740234, -1723.0361328125, 12.451230049133, 0, 0, 90);
    CreateDynamicObject(3526, 1534.3848876953, -1601.5823974609, 12.451230049133, 0, 0, 270);
    CreateDynamicObject(3526, 1533.7309570313, -1601.5877685547, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1533.1036376953, -1601.6002197266, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1532.4606933594, -1601.6053466797, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1531.8131103516, -1601.6025390625, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1531.1560058594, -1601.6003417969, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1530.5056152344, -1601.6141357422, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1529.8623046875, -1601.619140625, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.2231445313, -1601.6251220703, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1528.5754394531, -1601.6311035156, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1527.9240722656, -1601.6292724609, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1527.2709960938, -1601.6357421875, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1526.6270751953, -1601.6260986328, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1525.9973144531, -1601.6317138672, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1525.3603515625, -1601.6300048828, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(3526, 1524.7032470703, -1601.6372070313, 12.451230049133, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1539.3249511719, -1713.2457275391, 14.59086227417, 0, 0, 270);
    CreateDynamicObject(1411, 1539.2888183594, -1708.0737304688, 14.59086227417, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1539.3087158203, -1702.9084472656, 14.59086227417, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1541.7149658203, -1715.6368408203, 14.59086227417, 0, 0, 0);
    CreateDynamicObject(1411, 1544.0852050781, -1713.2567138672, 14.59086227417, 0, 0, 90);
    CreateDynamicObject(1411, 1541.6865234375, -1700.5263671875, 14.59086227417, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1544.0832519531, -1702.9571533203, 14.59086227417, 0, 0, 90);
    CreateDynamicObject(1363, 1535.7730712891, -1662.5981445313, 13.383237838745, 0, 0, 0); //orelhao
   // CreateDynamicObject(1257, 1538.4375, -1672.1552734375, 13.826066970825, 0, 0, 0); // ponto de onibus
    CreateDynamicObject(3472, 1544.1375732422, -1695.1625976563, 12.921438217163, 0, 0, 0);
    CreateDynamicObject(3472, 1544.1533203125, -1684.7685546875, 12.921438217163, 0, 0, 0);
    CreateDynamicObject(3472, 1544.322265625, -1666.3076171875, 12.921457290649, 0, 0, 0);
    CreateDynamicObject(3472, 1544.3125, -1656.2646484375, 12.921457290649, 0, 0, 0);
    CreateDynamicObject(3526, 1529.5568847656, -1604.9979248047, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5693359375, -1611.2015380859, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5881347656, -1617.9642333984, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5753173828, -1625.0473632813, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.6032714844, -1630.4400634766, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.61328125, -1636.8049316406, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.6263427734, -1644.7578125, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5905761719, -1651.6480712891, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.61328125, -1658.1978759766, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.63671875, -1664.5889892578, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.6158447266, -1670.6638183594, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.6042480469, -1678.7481689453, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.6137695313, -1686.8438720703, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.6066894531, -1694.7250976563, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5911865234, -1700.8880615234, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5988769531, -1707.34375, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5811767578, -1713.1806640625, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(3526, 1529.5748291016, -1718.8275146484, 12.451230049133, 0, 0, 269.98901367188);
    CreateDynamicObject(618, 1513.9613037109, -1641.6026611328, 13.046875, 0, 0, 0);
    CreateDynamicObject(618, 1507.1820068359, -1651.5858154297, 12.987964630127, 0, 0, 0);
    CreateDynamicObject(618, 1504.5618896484, -1659.6262207031, 12.994859695435, 0, 0, 0);
    CreateDynamicObject(618, 1504.0571289063, -1670.3388671875, 13.046873092651, 0, 0, 0);
    CreateDynamicObject(618, 1507.1022949219, -1680.4248046875, 13.046875, 0, 0, 0);
    CreateDynamicObject(618, 1514.6048583984, -1690.0718994141, 13.046875, 0, 0, 0);
    CreateDynamicObject(996, 1543.9652099609, -1692.5424804688, 13.67019367218, 0, 0, 90);
    CreateDynamicObject(996, 1543.9486083984, -1695.2576904297, 13.67019367218, 0, 0, 90);
    CreateDynamicObject(996, 1549.5052490234, -1692.4100341797, 13.67019367218, 0, 0, 90);
    CreateDynamicObject(3472, 1549.2869873047, -1684.7990722656, 12.921438217163, 0, 0, 0);
    CreateDynamicObject(3472, 1549.2122802734, -1695.2510986328, 12.921438217163, 0, 0, 0);
    CreateDynamicObject(996, 1549.5180664063, -1694.4276123047, 13.67019367218, 0, 0, 90);
    CreateDynamicObject(996, 1544.1453857422, -1664.0186767578, 13.670212745667, 0, 0, 90);
    CreateDynamicObject(996, 1544.1048583984, -1665.4074707031, 13.670212745667, 0, 0, 90);
    CreateDynamicObject(3472, 1549.1436767578, -1656.2265625, 12.921457290649, 0, 0, 0);
    CreateDynamicObject(3472, 1549.1112060547, -1666.1796875, 12.921457290649, 0, 0, 0);
    CreateDynamicObject(996, 1549.3807373047, -1663.7534179688, 13.670212745667, 0, 0, 90);
    CreateDynamicObject(996, 1549.3780517578, -1665.2409667969, 13.670212745667, 0, 0, 90);
    //CreateDynamicObject(10244, 2173.1188964844, -1587.6756591797, 13.939170837402, 0, 358.00012207031, 69); // escada ballas
//=================================[prefeitura]===============================/
    CreateDynamicObject(3472, 1511.4351806641, -1744.7274169922, 13.039182662964, 0, 0, 0);
    CreateDynamicObject(3472, 1511.4090576172, -1751.9245605469, 13.046875, 0, 0, 0);
    CreateDynamicObject(3472, 1557.7651367188, -1744.5749511719, 13.046875, 0, 0, 0);
    CreateDynamicObject(3472, 1549.2703857422, -1752.0296630859, 13.046875, 0, 0, 0);
    CreateDynamicObject(3472, 1557.4956054688, -1768.0762939453, 13.046876907349, 0, 0, 0);
    CreateDynamicObject(3472, 1549.5379638672, -1768.240234375, 13.046875, 0, 0, 0);
    CreateDynamicObject(3472, 1450.5418701172, -1744.7081298828, 13.046875, 0, 0, 0);
    CreateDynamicObject(3472, 1450.6192626953, -1751.9587402344, 13.046875, 0, 0, 0);
    CreateDynamicObject(3472, 1402.0091552734, -1744.6756591797, 13.046874046326, 0, 0, 0);
    CreateDynamicObject(3472, 1409.2904052734, -1752.0018310547, 13.046875, 0, 0, 0);
    CreateDynamicObject(3472, 1401.9152832031, -1768.5206298828, 13.03918170929, 0, 0, 0);
    CreateDynamicObject(3472, 1409.2719726563, -1768.3668212891, 13.046875, 0, 0, 0);
    CreateDynamicObject(7313, 1481.1131591797, -1772.6640625, 20.678207397461, 0, 0, 180);
    CreateDynamicObject(7313, 1475.2937011719, -1772.6640625, 20.67155456543, 0, 0, 179.99450683594);
    CreateDynamicObject(7313, 1487.9061279297, -1772.6640625, 20.668302536011, 0, 0, 179.99450683594);
    CreateDynamicObject(7313, 1494.6947021484, -1772.6640625, 20.665311813354, 0, 0, 179.99450683594);
    CreateDynamicObject(7313, 1467.5950927734, -1772.6640625, 20.672222137451, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1514.5180664063, -1744.9841308594, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1514.5180664063, -1744.9841308594, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1519.7707519531, -1744.9841308594, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1525.0270996094, -1744.9837646484, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1530.2629394531, -1745.005859375, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1535.5249023438, -1744.9970703125, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1540.765625, -1744.9926757813, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1545.9935302734, -1744.9995117188, 14.6484375, 0, 0, 0);
    CreateDynamicObject(1411, 1551.2390136719, -1744.9985351563, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1554.5285644531, -1745.0211181641, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1557.3336181641, -1747.8570556641, 14.656129837036, 0, 0, 270);
    CreateDynamicObject(1411, 1557.3386230469, -1753.0954589844, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1557.3094482422, -1758.3291015625, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1557.3154296875, -1763.5919189453, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1557.3773193359, -1765.3216552734, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1554.5670166016, -1768.1511230469, 14.6484375, 0, 0, 180);
    CreateDynamicObject(1411, 1552.6522216797, -1768.1673583984, 14.6484375, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1549.8577880859, -1765.2995605469, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1549.8389892578, -1760.0372314453, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1549.8391113281, -1754.7962646484, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1549.8410644531, -1754.0668945313, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1547.3967285156, -1751.6599121094, 14.656129837036, 0, 0, 180);
    CreateDynamicObject(1411, 1542.1813964844, -1751.6591796875, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1536.9317626953, -1751.6657714844, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1531.6812744141, -1751.6199951172, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1526.4320068359, -1751.6306152344, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1521.18359375, -1751.6516113281, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1515.8817138672, -1751.6363525391, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1514.4837646484, -1751.6175537109, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1511.6921386719, -1747.8474121094, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1511.6817626953, -1748.7585449219, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1447.4282226563, -1744.9907226563, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1442.1787109375, -1745.0012207031, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1436.9272460938, -1744.9921875, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1431.6643066406, -1744.9807128906, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1426.4013671875, -1744.9868164063, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1421.1176757813, -1744.9622802734, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1415.8481445313, -1744.9532470703, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1410.6116943359, -1744.9555664063, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1405.3530273438, -1744.9401855469, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1404.9875488281, -1744.9958496094, 14.656129837036, 0, 0, 0);
    CreateDynamicObject(1411, 1402.1829833984, -1747.9044189453, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1402.162109375, -1753.1638183594, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1402.1420898438, -1758.4216308594, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1402.1571044922, -1763.6702880859, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1402.1961669922, -1765.3480224609, 14.656129837036, 0, 0, 90);
    CreateDynamicObject(1411, 1405.0533447266, -1768.1534423828, 14.6484375, 0, 0, 180);
    CreateDynamicObject(1411, 1406.1724853516, -1768.1573486328, 14.6484375, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1408.9747314453, -1765.2706298828, 14.656129837036, 0, 0, 270);
    CreateDynamicObject(1411, 1409.0010986328, -1760.0036621094, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1408.9851074219, -1754.7545166016, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1408.9680175781, -1754.0671386719, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1411, 1411.3686523438, -1751.6340332031, 14.656129837036, 0, 0, 180);
    CreateDynamicObject(1411, 1416.6257324219, -1751.6104736328, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1421.98046875, -1751.6005859375, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1427.2336425781, -1751.5980224609, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1432.4855957031, -1751.6016845703, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1437.7338867188, -1751.6000976563, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1442.9593505859, -1751.6151123047, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1447.4406738281, -1751.6375732422, 14.656129837036, 0, 0, 179.99450683594);
    CreateDynamicObject(1411, 1450.2410888672, -1748.7685546875, 14.656129837036, 0, 0, 270);
    CreateDynamicObject(1411, 1450.2216796875, -1747.8464355469, 14.656129837036, 0, 0, 269.99450683594);
    CreateDynamicObject(1649, 1475.7414550781, -1751.4650878906, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1475.7114257813, -1751.3955078125, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.1568603516, -1751.4753417969, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.1412353516, -1751.4484863281, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1480.9929199219, -1751.3978271484, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1475.5966796875, -1751.3641357422, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1475.5704345703, -1751.3984375, 15.361055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.115234375, -1751.4887695313, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.1062011719, -1751.4973144531, 15.361055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1480.9962158203, -1751.3686523438, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.5280761719, -1751.3902587891, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.5268554688, -1751.4069824219, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.5393066406, -1751.3807373047, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.5349121094, -1751.4107666016, 15.361055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1940917969, -1751.3901367188, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1243896484, -1751.3283691406, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1198730469, -1751.4152832031, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1379394531, -1751.4097900391, 15.361055374146, 0, 0, 0);
    CreateDynamicObject(3472, 1459.0251464844, -1746.0966796875, 12.546875, 0, 0, 0);
    CreateDynamicObject(3472, 1503.111328125, -1746.0207519531, 12.546875, 0, 0, 0);
    CreateDynamicObject(17639, 1483.3518066406, -1770.5943603516, 31.788520812988, 0, 0, 0);
    CreateDynamicObject(1649, 1475.7412109375, -1751.46484375, 25.111055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1475.7109375, -1751.3955078125, 21.861055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1470.15625, -1751.474609375, 25.111055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1470.140625, -1751.4482421875, 21.861055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1480.9921875, -1751.3974609375, 25.111055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1475.5966796875, -1751.36328125, 18.611055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1475.5703125, -1751.3984375, 15.361055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1470.115234375, -1751.48828125, 18.611055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1470.10546875, -1751.4970703125, 15.361055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1480.99609375, -1751.3681640625, 21.861055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1486.52734375, -1751.3896484375, 25.111055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1486.5263671875, -1751.40625, 21.861055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1486.5390625, -1751.3798828125, 18.611055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1486.5341796875, -1751.41015625, 15.361055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1492.193359375, -1751.3896484375, 25.111055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1492.1240234375, -1751.328125, 21.861055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1492.119140625, -1751.4150390625, 18.611055374146, 0, 0, 180);
    CreateDynamicObject(1649, 1492.1376953125, -1751.4091796875, 15.361055374146, 0, 0, 180);
    CreateDynamicObject(3472, 1459.0251464844, -1746.0966796875, 12.546875, 0, 0, 0);
    CreateDynamicObject(3472, 1503.111328125, -1746.0207519531, 12.546875, 0, 0, 0);
    CreateDynamicObject(17639, 1483.3518066406, -1770.5943603516, 31.788520812988, 0, 0, 0);
    CreateDynamicObject(1649, 1481.1287841797, -1751.4475097656, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1481.2436523438, -1751.3516845703, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1475.7419433594, -1751.4052734375, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1475.7396240234, -1751.3984375, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1475.6936035156, -1751.3984375, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1475.6923828125, -1751.4157714844, 15.361055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.2039794922, -1751.4970703125, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.1912841797, -1751.4970703125, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.2127685547, -1751.4970703125, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1470.2354736328, -1751.4970703125, 15.361055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.6368408203, -1751.41015625, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.6333007813, -1751.41015625, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.6148681641, -1751.41015625, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1486.6254882813, -1751.4438476563, 15.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1931152344, -1751.4091796875, 25.111055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1662597656, -1751.4091796875, 21.861055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1754150391, -1751.4091796875, 18.611055374146, 0, 0, 0);
    CreateDynamicObject(1649, 1492.1767578125, -1751.4091796875, 15.361055374146, 0, 0, 0);
    CreateDynamicObject(2773, 1484.7550048828, -1771.25390625, 18.312984466553, 0, 0, 0);
    CreateDynamicObject(2773, 1477.3216552734, -1771.3460693359, 18.312984466553, 0, 0, 0);
    CreateDynamicObject(2773, 1469.9423828125, -1771.3479003906, 18.312984466553, 0, 0, 0);
    CreateDynamicObject(2773, 1491.962890625, -1771.2373046875, 18.312984466553, 0, 0, 0);
    CreateDynamicObject(3578, 1510.2416992188, -1732.3093261719, 11.660845756531, 0, 0, 90);
    CreateDynamicObject(3578, 1511.0211181641, -1732.3619384766, 11.660845756531, 0, 0, 90);
    CreateDynamicObject(3578, 1440.7823486328, -1732.3254394531, 11.660845756531, 0, 0, 90);
    CreateDynamicObject(3578, 1439.7412109375, -1732.2984619141, 11.660845756531, 0, 0, 90);*/
//================================[Centro de treinamento]============================//
    /*CreateDynamicObject(1237, -1028.0593261719, -621.93103027344, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1028.0463867188, -634.61633300781, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1028.0660400391, -647.37249755859, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1028.0343017578, -660.05767822266, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1028.0651855469, -672.77551269531, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1028.0444335938, -685.48321533203, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.6223754883, -621.84912109375, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.603515625, -634.54437255859, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.62890625, -647.29577636719, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.633972168, -659.95001220703, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.5896606445, -670.19671630859, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.5992431641, -682.90209960938, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1006.4113769531, -611.47265625, 31.012603759766, 0, 0, 0);
    CreateDynamicObject(1237, -1006.1306762695, -606.45013427734, 31.012603759766, 0, 0, 0);
    CreateDynamicObject(1237, -1004.7188720703, -606.43988037109, 31.012603759766, 0, 0, 0);
    CreateDynamicObject(1237, -1006.3675537109, -608.80963134766, 31.012603759766, 0, 0, 0);
    CreateDynamicObject(1237, -1003.225769043, -606.42437744141, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.1170654297, -608.92749023438, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -1003.1102294922, -611.53399658203, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -985.54638671875, -688.09552001953, 31.012603759766, 0, 0, 0);
    CreateDynamicObject(1237, -985.50463867188, -675.31024169922, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -985.43835449219, -662.44488525391, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -985.42834472656, -649.84527587891, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -985.44299316406, -636.96862792969, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -985.48291015625, -625.29302978516, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -987.37493896484, -617.59753417969, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -983.49493408203, -617.56988525391, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -987.48681640625, -614.95190429688, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -987.67156982422, -611.55859375, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -983.44714355469, -614.90625, 31.0078125, 0, 0, 0);
    CreateDynamicObject(1237, -983.54931640625, -611.44207763672, 31.0078125, 0, 0, 0);
    CreateDynamicObject(3279, -1047.9162597656, -591.32659912109, 31.0078125, 0, 0, 0);
    CreateDynamicObject(16093, -1046.3145751953, -655.34948730469, 35.28865814209, 0, 0, 90);
    CreateDynamicObject(16638, -1045.3952636719, -655.26873779297, 33.459938049316, 0, 0, 90);
    CreateDynamicObject(3030, -1046.6051025391, -655.25213623047, 38.67147064209, 0, 0, 0);
    CreateDynamicObject(11611, -1042.8100585938, -651.35968017578, 37.713039398193, 0, 0, 45);
    CreateDynamicObject(11611, -1031.3760986328, -586.58361816406, 33.799381256104, 0, 0, 315);
    CreateDynamicObject(3359, -980.70343017578, -704.09869384766, 31.0078125, 0, 0, 180);
    CreateDynamicObject(2985, -1043.1938476563, -659.89282226563, 35.42147064209, 0, 0, 0);
    CreateDynamicObject(16770, -1041.6735839844, -677.01025390625, 32.603160858154, 0, 0, 180);
    CreateDynamicObject(983, -1049.6257324219, -670.14605712891, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6468505859, -671.63128662109, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6291503906, -673.11169433594, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6062011719, -674.63446044922, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.5498046875, -676.13641357422, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.5953369141, -677.61767578125, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6264648438, -679.13452148438, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6541748047, -680.63629150391, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6331787109, -682.13818359375, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6394042969, -683.63275146484, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6639404297, -685.13928222656, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1049.6529541016, -686.63342285156, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.005859375, -670.14184570313, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0402832031, -671.63287353516, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0252685547, -673.11206054688, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1055.9949951172, -674.63244628906, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1055.962890625, -676.12634277344, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1055.9688720703, -677.61401367188, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0108642578, -679.11047363281, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0606689453, -680.63177490234, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0577392578, -682.13610839844, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0126953125, -683.64300537109, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0380859375, -685.14672851563, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1056.0628662109, -686.60699462891, 32.035118103027, 0, 0, 90);
    CreateDynamicObject(983, -1059.2232666016, -673.29064941406, 32.035118103027, 0, 0, 0);
    CreateDynamicObject(983, -1059.2854003906, -679.04644775391, 32.035118103027, 0, 0, 0);
    CreateDynamicObject(983, -1059.2947998047, -685.42999267578, 32.035118103027, 0, 0, 0);
    CreateDynamicObject(7933, -1028.3522949219, -611.59399414063, 31.568428039551, 0, 0, 180);
    CreateDynamicObject(7933, -1003.5761108398, -690.64135742188, 31.568428039551, 0, 0, 0);
    CreateDynamicObject(7933, -1015.4504394531, -593.29113769531, 31.573219299316, 0, 0, 179.99450683594);
    CreateDynamicObject(7933, -1013.8284912109, -599.20642089844, 31.573219299316, 0, 0, 30);
    CreateDynamicObject(3276, -1058.7696533203, -682.86889648438, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1058.6666259766, -684.52044677734, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1058.6040039063, -686.01715087891, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1058.5924072266, -681.40411376953, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1058.4217529297, -679.90911865234, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1058.2624511719, -678.37237548828, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1058.3156738281, -676.85797119141, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1058.1110839844, -675.47528076172, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1057.9387207031, -673.95953369141, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1057.8918457031, -672.38885498047, 29.004081726074, 0, 90, 90);
    CreateDynamicObject(3276, -1057.8081054688, -670.84637451172, 28.754081726074, 0, 90, 90);*/
    //FIM OBJETOS - TOTAL 487 OBJETOS
//|========================================CARROS ORGS/GANGS/MAFIAS==================================|
	//============================================Policia Militar 18�=====================================//
	AddStaticVehicleEx(523,-1385.3583,-129.4601,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1385.2240,-125.3000,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1385.0779,-120.7650,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1384.9271,-116.0911,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1384.8253,-112.9396,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1384.6996,-109.0456,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1384.5649,-104.8731,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1384.4456,-101.1735,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1384.3276,-97.5176,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,-1384.1864,-93.1438,5.5662,268.1515,0,7,60000); //
	AddStaticVehicleEx(523,1215.3207,-1640.7471,11.3676,272.9214,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1216.4009,-1642.4320,11.3633,270.7734,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.5549,-1644.0961,11.3635,270.0979,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.8202,-1645.8358,11.3651,270.7635,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.5967,-1647.3685,11.3672,269.7439,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.8850,-1649.1693,11.3668,270.2215,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.7422,-1650.8978,11.3675,268.7527,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.6609,-1652.4929,11.3674,270.5520,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.5266,-1654.1094,11.3675,270.1549,0,7,60000); //HPV1000
	AddStaticVehicleEx(523,1215.6051,-1655.8580,11.3673,270.6830,0,7,60000); //HPV1000 20
	AddStaticVehicleEx(597,-1337.6265,45.0717,5.8269,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1337.3906,40.5747,5.8271,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1337.1571,36.1188,5.8273,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1336.9364,31.9073,5.8274,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1336.7520,28.3890,5.8275,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1336.5302,24.1571,5.8277,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1336.3035,19.8325,5.8278,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1336.1090,16.1219,5.8280,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1335.8761,11.6773,5.8281,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1335.6764,7.8659,5.8282,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1335.4355,3.2667,5.8284,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1335.2449,-0.3669,5.8285,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1335.9045,-5.2461,5.8139,93.0009,0,7,60000); //
	AddStaticVehicleEx(597,-1335.6890,-9.3616,5.8141,93.0009,0,7,60000); //
	AddStaticVehicleEx(490,1225.2794,-1674.1470,11.8930,0.5407,0,7,60000); //Police Car (SFPD)
	AddStaticVehicleEx(490,1227.6523,-1674.8160,11.8909,0.9963,0,7,60000); //Police Car (SFPD)
	AddStaticVehicleEx(490,1230.7885,-1674.0256,11.8909,359.8776,0,7,60000); //Police Car (SFPD)
	AddStaticVehicleEx(490,1234.1552,-1673.6392,11.8935,359.9705,0,7,60000); //Police Car (SFPD)
	AddStaticVehicleEx(490,1267.5179,-1672.0710,13.6457,359.5086,0,7,60000); //Police Car (SFPD)
	AddStaticVehicleEx(490,1260.7042,-1672.5420,13.6400,1.7469,0,7,60000); //Police Car (SFPD) 1 � 40
//============================================23�batalh�o====================================================//
	AddStaticVehicleEx(599,-1427.6525,-246.2029,5.5709,1.2522,0,6,60000); //HPV1000 41
	AddStaticVehicleEx(599,-1432.2397,-246.3032,5.5709,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1435.6716,-246.3782,5.5709,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1439.7815,-246.4681,5.5708,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1443.8618,-246.5573,5.5708,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1447.8994,-246.6455,5.5708,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1451.8525,-246.7319,5.5707,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1456.3613,-246.8305,5.5707,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1460.2579,-246.9156,5.5706,1.2522,0,6,60000); //HPV1000
	AddStaticVehicleEx(599,-1464.3507,-247.0051,5.5706,1.2522,0,6,60000); //HPV1000 50
	AddStaticVehicleEx(599,306.97528076,-1482.74194336,24.66387558,235.23010254,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,304.30285645,-1486.26464844,24.66387558,235.22851562,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,301.28768921,-1491.14904785,24.66387558,235.22851562,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,303.80569458,-1501.62658691,24.92082977,235.22851562,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,301.1109,-1504.5419,24.6937,233.6757,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,297.84185791,-1508.81115723,24.91387558,235.22851562,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,294.36123657,-1513.03735352,24.91387558,235.22851562,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,290.97650146,-1517.65014648,24.91387558,235.22851562,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,287.20092773,-1522.27624512,24.91387558,235.22851562,0,6,60000); //FBI Rancher
	AddStaticVehicleEx(599,284.36962891,-1526.67138672,24.91387558,235.22851562,0,6,60000); //FBI Rancher 60
	AddStaticVehicleEx(497,349.26705933,-1481.26733398,76.80406189,352.05993652,0,6,60000); //Police Maverick
	AddStaticVehicleEx(497,336.05172729,-1490.82885742,76.80406189,3.96997070,0,6,60000); //Police Maverick
	AddStaticVehicleEx(497,324.52944946,-1502.66735840,76.80406189,11.91003418,0,6,60000); //Police Maverick 1 � 63
	//===========================================Policia Civil================================================//
	AddStaticVehicleEx(597,-18.4257,-218.1307,5.2593,175.2630,123,123,60000); //1
	AddStaticVehicleEx(597,-22.3567,-217.7357,5.2592,175.2630,123,123,60000); //2
	AddStaticVehicleEx(597,-26.3378,-217.3358,5.2590,175.2630,123,123,60000); //3
	AddStaticVehicleEx(597,-30.2376,-216.9440,5.2589,175.2630,123,123,60000); //4
	AddStaticVehicleEx(597,-34.3034,-216.5355,5.2587,175.2630,123,123,60000); //5
	AddStaticVehicleEx(597,-37.7753,-216.1867,5.2586,175.2630,123,123,60000); //6
	AddStaticVehicleEx(597,-41.9971,-215.7626,5.2585,175.2630,123,123,60000); //7
	AddStaticVehicleEx(597,-45.9867,-215.3618,5.2583,175.2630,123,123,60000); //8
	AddStaticVehicleEx(597,-49.8509,-214.9735,5.2582,175.2630,123,123,60000); //9
	AddStaticVehicleEx(597,-53.4920,-214.6078,5.2580,175.2630,123,123,60000); //10
	AddStaticVehicleEx(597,-1.33185744,-325.55264282,4.92285156,91.31005859,123,123,60000); //Police Car (LSPD)95
	AddStaticVehicleEx(598,-30.3906,-272.9687,5.1792,270.9163,123,123,60000); //12
	AddStaticVehicleEx(598,-30.3319,-276.6408,5.1790,270.9163,123,123,60000); //13
	AddStaticVehicleEx(598,-30.2756,-280.1590,5.1788,270.9163,123,123,60000); //14
	AddStaticVehicleEx(598,-30.2248,-283.3391,5.1786,270.9163,123,123,60000); //15
	AddStaticVehicleEx(598,-2.9614,-376.6789,5.1794,0.7880,123,123,60000); //16
	AddStaticVehicleEx(598,-6.1482,-376.7227,5.1796,0.7880,123,123,60000); //17
	AddStaticVehicleEx(598,-9.8201,-376.7732,5.1798,0.7880,123,123,60000); //18
	AddStaticVehicleEx(598,-13.0718,-376.8179,5.1799,0.7880,123,123,60000); //19
	AddStaticVehicleEx(490,-16.4839,-376.8648,5.1801,0.7880,123,123,60000); //20
	AddStaticVehicleEx(490,-19.7630,-376.9099,5.1803,0.7880,123,123,60000); //21
	AddStaticVehicleEx(490,-23.0707,-376.9554,5.1804,0.7880,123,123,60000); //22
	AddStaticVehicleEx(490,-26.1932,-376.9984,5.1806,0.7880,123,123,60000); //23
	AddStaticVehicleEx(490,-30.0073,-377.0508,5.1808,0.7880,123,123,60000); //24
	AddStaticVehicleEx(490,-33.0590,-377.0928,5.1809,0.7880,123,123,60000); //25
	AddStaticVehicleEx(490,-36.2797,-377.1371,5.1811,0.7880,123,123,60000); //26
	AddStaticVehicleEx(490,-39.5883,-377.1826,5.1813,0.7880,123,123,60000); //27
	AddStaticVehicleEx(490,-2.5090,-315.0301,5.5278,89.6764,123,123,60000); //29
	AddStaticVehicleEx(490,-3.1459,-311.5087,5.5258,88.9603,123,123,60000); //
	//=======================================CARROS ROTA==================================================//
	AddStaticVehicleEx(497,-557.6212,-499.0154,25.3418,355.1882,0,11,60000);
	AddStaticVehicleEx(497,-529.8936,-498.2350,25.4084,357.4056,0,11,60000);
	AddStaticVehicleEx(596,-474.6737,-488.2325,25.2403,179.1573,0,11,60000);
	AddStaticVehicleEx(596,-479.6506,-488.0782,25.2368,179.6549,0,11,60000);
	AddStaticVehicleEx(596,-485.2775,-488.4680,25.2426,180.8931,0,11,60000);
	AddStaticVehicleEx(596,-490.1782,-488.2628,25.2240,178.4165,0,11,60000);
	AddStaticVehicleEx(596,-500.0406,-488.7978,25.0825,180.4999,0,11,60000);
	AddStaticVehicleEx(596,-505.6849,-487.6575,25.2937,178.7422,0,11,60000);
	AddStaticVehicleEx(596,-510.2821,-487.9344,25.2825,178.5286,0,11,60000);
	AddStaticVehicleEx(596,-515.1395,-488.5477,25.7336,181.0916,0,11,60000);
	AddStaticVehicleEx(596,-520.4269,-488.7303,25.7121,180.1962,0,11,60000);
	AddStaticVehicleEx(596,-524.0938,-472.3169,25.0869,176.5530,0,11,60000);
	AddStaticVehicleEx(596,-519.6386,-472.3697,25.0869,172.2434,0,11,60000);
	AddStaticVehicleEx(596,-569.6022,-474.1764,25.6223,179.0027,0,11,60000);
// ------ Carros Ballas -------
	AddStaticVehicleEx(424,1085.8004,-1192.4664,18.0469,88.0451,186,186,60000); // carro ballas 1	[ 128]
	AddStaticVehicleEx(560,1085.9071,-1196.4216,17.8994,88.0451,186,186,60000); // carro ballas 2  [ 129 ]
	AddStaticVehicleEx(560,1085.7844,-1199.9957,17.7673,88.0451,186,186,60000); // carro ballas 3  [ 130 ]
	AddStaticVehicleEx(559,1087.5824,-1218.2490,17.6748,1.8199,186,186,60000); // jester ballas    [ 131 ]
	AddStaticVehicleEx(562,1092.5609,-1218.0906,17.6748,1.8199,186,186,60000); // elegy ballas   [ 132 ]
	AddStaticVehicleEx(480,1098.1394,-1217.9133,17.6748,1.8199,186,186,60000); // carro ballas 6  [ 133 ]
	AddStaticVehicleEx(533,1102.5182,-1217.7742,17.6748,1.8199,186,186,60000); // carro ballas 7   [ 134 ]
	AddStaticVehicleEx(567,1109.0934,-1217.5652,17.6749,1.8199,186,186,60000); // savanna ballas   [ 135 ]
	AddStaticVehicleEx(609,1109.3654,-1225.8308,15.6883,2.0114,186,186,60000); // boxer ballas     [ 136 ]
	AddStaticVehicleEx(522,1103.2075,-1226.0472,15.6883,2.0114,186,186,60000); // moto ballas 1   [ 137 ] 128at�137
// ----- Carros Groove ------
	AddStaticVehicleEx(424,2499.3936,-1683.6714,13.1049,277.9147,86,86,60000); // carro groove 1	[ 138 ]
	AddStaticVehicleEx(560,2478.7664,-1683.3141,13.0958,76.2759,86,86,60000); // carro groove 2    [ 139 ]
	AddStaticVehicleEx(560,2508.3750,-1677.2435,13.2115,328.8571,86,86,60000); // carro groove 3    [ 140 ]
	AddStaticVehicleEx(559,2510.1279,-1667.1589,13.1800,15.1649,86,86,60000); // carro groove 4		[ 141 ]
	AddStaticVehicleEx(562,2496.8115,-1647.7126,13.2535,210.6379,86,86,60000); // carro groove 5    [ 142 ]
	AddStaticVehicleEx(567,2472.0945,-1678.9126,13.2561,37.5196,86,86,60000); // carro groove 6     [ 143 ]
	AddStaticVehicleEx(480,2515.0391,-1686.0542,13.2324,74.8100,86,86,60000); // carro groove 7 	    [ 144 ]
	AddStaticVehicleEx(533,2483.1802,-1653.1826,13.0933,266.6223,86,86,60000); // carro groove 8    [ 145 ]
	AddStaticVehicleEx(609,2506.48193359,-1651.95104980,13.85576248,138.00000000,86,86,60000); // heli groove       [ 146 ]
	AddStaticVehicleEx(522,2487.5161,-1685.6387,13.1070,44.6681,86,86,60000); // groove moto 1      [ 147 ]
	AddStaticVehicleEx(522,2484.9285,-1685.7277,13.1016,45.1795,86,86,60000); // groove moto 2      [ 148 ]   138at�148
// ----- Carros Terceiro comando ----- //
	AddStaticVehicleEx(424,1717.6267,-2153.6072,13.4282,265.3393,79,79,60000); // carro aztecas 1     [ 149 ]
	AddStaticVehicleEx(560,1700.1338,-2142.1211,13.4180,181.9623,79,79,60000); // carro aztecas 2     [ 150 ]
	AddStaticVehicleEx(560,1695.8102,-2142.2688,13.4194,181.9623,79,79,60000); // carro aztecas 3      [ 151 ]
	AddStaticVehicleEx(559,1692.8997,-2142.3682,13.4203,181.9623,79,79,60000); // carro aztecas 4     [ 152 ]
	AddStaticVehicleEx(562,1686.4878,-2135.2632,13.3317,181.9623,79,79,60000); // carro aztecas 5     [ 153 ]
	AddStaticVehicleEx(567,1685.3167,-2152.4861,13.4260,359.3504,79,79,60000); // carro aztecas 6     [ 154 ]
	AddStaticVehicleEx(480,1692.5270,-2152.5681,13.4260,359.3504,79,79,60000); // carro aztecas 7     [ 155 ]
	AddStaticVehicleEx(533,1699.4485,-2152.6465,13.4261,359.3504,79,79,60000); // carro aztecas 8     [ 156 ]
	AddStaticVehicleEx(609,1709.3060,-2146.8843,13.4142,270.5229,79,79,60000); // heli aztecas 1        [ 157 ]
	AddStaticVehicleEx(522,1709.2780,-2143.6353,13.4457,270.5549,79,79,60000); // moto aztecas 1      [ 158 ]
	AddStaticVehicleEx(522,1712.2781,-2119.7310,13.3759,316.3105,79,79,60000); // moto aztecas 2      [ 159 ] 149 at� 159
// ----- Lambretas e Bicicletas spawn Civil -----
    AddStaticVehicleEx(462,1668.3795,-2310.9099,-3.0582,179.0326,13,13,60000); // bike 2 [ 160 ]
	AddStaticVehicleEx(462,1670.8777,-2310.9521,-3.0578,179.0326,13,13,60000); // bike 3 [ 161 ]
	AddStaticVehicleEx(462,1673.6300,-2310.9988,-3.0574,179.0326,13,13,60000); // bike 4 [ 162 ]
	AddStaticVehicleEx(462,1676.3618,-2311.0449,-3.0569,179.0326,13,13,60000); // bike 5 [ 163 ]
	AddStaticVehicleEx(462,1687.0308,-2310.8281,-3.0526,179.0326,13,13,60000); // bike 6 [ 164 ]
    AddStaticVehicleEx(462,1689.8986,-2310.6628,-3.0530,180.0077,13,13,60000); // caran [ 165 ]
	AddStaticVehicleEx(462,1692.3927,-2310.6628,-3.0533,180.0077,13,13,60000); // caran [ 166 ]
	AddStaticVehicleEx(462,1695.2949,-2310.6626,-3.0537,180.0077,13,13,60000); // caran [ 167 ]
	AddStaticVehicleEx(462,1697.7916,-2310.6626,-3.0540,180.0077,13,13,60000); // caran [ 168 ]
	AddStaticVehicleEx(462,1708.5916,-2310.6611,-3.0552,180.0077,13,13,60000); // caran [ 169 ]   160 at� 170
	AddStaticVehicleEx(462,1711.5601,-2310.6611,-3.0555,180.0077,13,13,60000); // caran [ 170 ]
// ---- Carros Vagos ----
	AddStaticVehicleEx(424,2826.5740,-1196.3988,24.7929,358.6960,6,6,60000); // carro 1 Vagos   [ 171 ]
	AddStaticVehicleEx(560,2830.2166,-1196.7172,24.3299,6.1575,6,6,60000); // carro 2 Vagos   [ 172 ]
	AddStaticVehicleEx(560,2828.1414,-1173.3488,24.6098,273.5737,6,6,60000); // carro 3 Vagos	[ 173 ]
	AddStaticVehicleEx(559,2827.9844,-1169.7175,24.9368,275.6275,6,6,60000); // carro 4 Vagos   [ 174 ]
	AddStaticVehicleEx(562,2827.9863,-1164.9860,24.8984,273.9366,6,6,60000); // carro 5 Vagos   [ 175 ]
	AddStaticVehicleEx(567,2806.3533,-1181.2454,25.0708,266.5314,6,6,60000); // carro 6 Vagos     [ 176 ]
	AddStaticVehicleEx(480,2806.4138,-1185.2827,25.0877,265.3643,6,6,60000); // carro 7 Vagos     [ 177 ]
	AddStaticVehicleEx(533,2806.5042,-1187.4866,25.1746,269.9555,6,6,60000); // carro 8 Vagos     [ 178 ]
	AddStaticVehicleEx(609,2819.39916992,-1187.79516602,25.43511963,270.00000000,6,6,60000);//     [ 179 ]
	AddStaticVehicleEx(522,2818.7986,-1178.5625,24.8427,183.9644,6,6,60000); // moto Vagos 1      [ 180 ]
	AddStaticVehicleEx(522,2820.5830,-1178.5999,24.8175,184.8479,6,6,60000); // moto Vagos 2    [ 181 ] 171at�181
// --- Carros hitmans
	AddStaticVehicleEx(559,1510.8470,-1459.7207,9.2400,179.5617,13,13,60000); // jester hitman1 [182]
	AddStaticVehicleEx(562,1514.5343,-1459.7051,9.2400,179.9813,13,13,60000); // elegy hitman2 [182]
	AddStaticVehicleEx(560,1518.5016,-1459.8158,9.2399,180.8839,13,13,60000); // sultan hitman3 [183]
	AddStaticVehicleEx(589,1522.3914,-1459.6980,9.2400,182.3876,13,13,60000); // club hitman4 [184]
	AddStaticVehicleEx(541,1526.6094,-1459.7488,9.2400,180.6667,13,13,60000); // bullet hitman5 [185]
	AddStaticVehicleEx(411,1512.2036,-1474.6052,9.2271,268.3069,13,13,60000); // infernus hitman6 [186]
	AddStaticVehicleEx(522,1510.7513,-1478.3635,9.1690,269.7205,13,13,60000); // nrg500 hitman7 [187]
	AddStaticVehicleEx(522,1510.6777,-1480.7871,9.1691,271.3016,13,13,60000); // nrg500 hitman8 [188]
	AddStaticVehicleEx(521,1518.6885,-1480.4666,9.1696,358.8934,13,13,60000); // fcr900 hitman9 [189]
	AddStaticVehicleEx(521,1521.3656,-1480.4854,9.1691,1.7207,13,13,60000); // fcr900 hitman10 [190]    182 at� 192
	AddStaticVehicleEx(533,1512.7917,-1470.1311,9.2399,270.2104,13,13,60000); // feltzer hitman11 [191]
//	CARROS SAMU
	AddStaticVehicleEx(416,1185.4093,-1336.1479,13.7229,269.2588,1,3,60000); // carro samu 1       [ 119 ]193
	AddStaticVehicleEx(416,1177.5361,-1340.1204,14.0647,269.7826,1,3,60000); // carro SAMU 2       [ 120 ]
	AddStaticVehicleEx(416,1184.7588,-1311.7882,13.7154,270.0790,1,3,60000); // carro SAMU 3       [ 121 ]
	AddStaticVehicleEx(416,1177.3369,-1307.6559,14.0466,268.5302,1,3,60000); // carro SAMU 4       [ 122 ]
	AddStaticVehicleEx(487,1161.2926,-1321.7860,31.6694,359.7393,1,3,60000); // heli SAMU 5        [ 123 ]
	AddStaticVehicleEx(416,1184.5123,-1317.4987,13.8132,269.2199,1,3,60000); // bomb SAMU 6        [ 124 ]
	AddStaticVehicleEx(416,1184.5476,-1330.4323,13.8088,266.8372,1,3,60000); // bomb SAMU 7        [ 125 ]
	AddStaticVehicleEx(586,1187.4664,-1304.3861,13.0719,269.8548,1,3,60000); // moto SAMU 8        [ 126 ]
	AddStaticVehicleEx(586,1187.6246,-1302.4747,13.0700,270.8045,1,3,60000); // moto SAMU 1        [ 127 ]
	AddStaticVehicleEx(586,1187.7906,-1300.5535,13.0690,268.0529,1,3,60000); // moto SAMU 2        [ 128 ]
	AddStaticVehicleEx(563,1162.2268,-1309.1311,31.6690,180.6752,1,3,60000); // heli grande SAMU   [ 129 ]202 192at�203
//  Carros Reporters
	AddStaticVehicleEx(582,738.3984,-1334.7648,13.6000,181.2554,-1,-1,60000); // van reporter 1     [ 130 ] 204
	AddStaticVehicleEx(582,741.8419,-1334.8721,13.5963,178.8535,-1,-1,60000); // van reporter 2     [ 131 ]
	AddStaticVehicleEx(582,745.6342,-1334.8610,13.5953,179.1888,-1,-1,60000); // van reporter 3    [ 132 ]
	AddStaticVehicleEx(582,749.2769,-1334.8060,13.5979,180.0729,-1,-1,60000); // van reporter 4   [ 133 ]
	AddStaticVehicleEx(582,752.7092,-1334.7919,13.5958,181.4010,-1,-1,60000); // van reporter 5   [ 134 ]
	AddStaticVehicleEx(586,782.6538,-1352.6757,13.5996,88.8960,-1,-1,60000); // moto reporter 6    [ 135 ]
	AddStaticVehicleEx(586,782.7337,-1357.2595,13.5933,91.4296,-1,-1,60000); // moto reporter 7    [ 136 ]
	AddStaticVehicleEx(586,782.6810,-1361.0303,13.5949,88.9797,-1,-1,60000); // moto reporter 8      [ 137 ]
	AddStaticVehicleEx(488,741.9368,-1369.3556,25.8697,175.2482,-1,-1,60000); // heli reporter       [ 138 ]
	AddStaticVehicleEx(586,782.6296,-1348.3770,13.5955,91.3518,-1,-1,60000); // moto reporter 7    [ 139 ]
	AddStaticVehicleEx(586,782.5760,-1344.5055,13.5968,93.0199,-1,-1,60000); // moto reporter 8    [ 140 ] 203 at� 214j
// Carros Taxistas
	AddStaticVehicleEx(420,609.9765,-1495.8760,14.6764,181.1391,6,6,60000); // Carro Taxistas 1 	[ 166 ] 215
	AddStaticVehicleEx(420,606.1063,-1495.8641,14.7211,181.1089,6,6,60000); // Carro Taxistas 2 	[ 167 ]
	AddStaticVehicleEx(420,602.0869,-1495.8779,14.8076,181.8723,6,6,60000); // Carro Taxistas 3 	[ 168 ]
	AddStaticVehicleEx(420,613.6752,-1495.9307,14.6386,181.2501,6,6,60000); // Carro Taxistas 4 	[ 169 ]
	AddStaticVehicleEx(487,606.8358,-1530.8600,31.0617,85.3329,6,6,60000); // Heli Taxistas   	[ 170 ]
	AddStaticVehicleEx(438,593.3913,-1502.2491,15.0388,270.6886,6,6,60000); // Carro Taxistas 5 	[ 171 ]
	AddStaticVehicleEx(438,593.4204,-1506.4703,15.0287,270.9111,6,6,60000); // Carro Taxistas 6 	[ 172 ]
	AddStaticVehicleEx(438,593.5046,-1510.4397,15.0144,271.4762,6,6,60000); // Carro Taxistas 7	[ 173 ]
	AddStaticVehicleEx(438,593.5123,-1514.7057,15.0003,271.4834,6,6,60000); // Carro Taxistas 8	[ 174 ]
	AddStaticVehicleEx(586,602.4971,-1522.0690,14.5692,356.8931,6,6,60000); // moto taxista 1 [ 175 ]
	AddStaticVehicleEx(586,604.8030,-1521.9929,14.5701,359.3577,6,6,60000); // moto taxista 2 [ 176 ]
	AddStaticVehicleEx(586,607.0865,-1522.0839,14.5859,0.7075,6,6,60000); // moto taxista 3 [ 177 ]
	AddStaticVehicleEx(586,609.0300,-1522.0310,14.5887,1.8985,6,6,60000); // moto taxista 5       [ 178 ]
	AddStaticVehicleEx(586,611.1234,-1521.9928,14.5908,358.1297,6,6,60000); // moto taxista 6       [ 179 ]
	AddStaticVehicleEx(586,613.0426,-1521.8827,14.6021,0.1981,6,6,60000); // moto taxista 7       [ 180 ] 214 at� 229
// Carros aluguel perto loja 2
	AddStaticVehicleEx(560,1098.9557,-1754.9630,13.0587,89.4584,38,38,60000); // carro 1 [ 182 ] 230 at� 309
	AddStaticVehicleEx(411,1098.7872,-1760.8793,13.0796,91.5778,38,38,60000); // carro 2 [ 183 ]
	AddStaticVehicleEx(560,1099.1046,-1766.7146,13.0541,89.3743,38,38,60000); // carro 3 [ 184 ]
	AddStaticVehicleEx(468,1080.5958,-1757.9988,13.1013,271.0436,38,38,60000); // carro 4 [ 185 ]
	AddStaticVehicleEx(522,1080.1566,-1761.1559,12.9384,269.5523,38,38,60000); // carro 5 [ 186 ]
	AddStaticVehicleEx(468,1080.8099,-1754.9391,13.1181,271.0561,38,38,60000); // carro 5 [ 187 ]
	AddStaticVehicleEx(496,1098.9077,-1772.6394,13.0651,90.7283,38,38,60000); // carro 6 [ 188 ]
	AddStaticVehicleEx(463,1080.4183,-1766.8226,12.9007,271.4398,38,38,60000); // moto 1 [ 189 ]
	AddStaticVehicleEx(463,1080.5569,-1769.6747,12.9222,268.1613,38,38,60000); // moto 2 [ 190 ]
	AddStaticVehicleEx(581,1079.9104,-1775.8566,13.3439,271.4858,38,38,60000); // moto 3 [ 191 ]
	AddStaticVehicleEx(581,1080.3083,-1772.6448,12.8878,267.8984,38,38,60000); // moto [ 192 ]
	AddStaticVehicleEx(522,1080.2343,-1763.6558,12.9294,272.4935,38,38,60000); // moto 5 [ 193 ]
	AddStaticVehicleEx(560,-1993.1045,241.7397,34.8769,268.3880,0,0,60000); // wang [ 194 ]
	AddStaticVehicleEx(506,-1992.5270,246.2024,34.8764,265.1727,0,0,60000); // wang [ 195 ]
	AddStaticVehicleEx(458,-1992.5665,250.8353,35.0905,265.6510,0,0,60000); // wang [ 196 ]
	AddStaticVehicleEx(400,-1991.6487,255.4123,35.2642,264.4245,0,0,60000); // wang [ 197 ]
	AddStaticVehicleEx(405,-1991.1527,259.6069,35.0708,265.0295,0,0,60000); // wang [ 198 ]
	AddStaticVehicleEx(411,-1991.0232,264.3011,34.8981,264.4915,0,0,60000); // wang [ 199 ]
	AddStaticVehicleEx(415,-1990.5845,268.7502,34.9469,265.1599,0,0,60000); // wang [ 200 ]
	AddStaticVehicleEx(451,-1989.9050,273.2557,34.8807,265.2162,0,0,60000); // wang [ 201 ]
	AddStaticVehicleEx(560,-1988.3324,307.4832,34.8841,267.5136,0,0,60000); // wang [ 202 ] 249
	// Carros de aluguel perto loja 1 e tuning de sf
	AddStaticVehicleEx(411,-1987.8965,302.2708,34.9027,266.4140,0,0,60000); // wang [ 225 ]250
	AddStaticVehicleEx(562,-2714.5452,189.9252,3.9881,271.4840,0,1,60000); // wheel [ 226 ]
	AddStaticVehicleEx(562,-2714.7419,194.1241,3.9928,272.9267,0,0,60000); // wheel [ 227 ]
	AddStaticVehicleEx(562,-2714.5957,198.7781,3.9896,273.1364,0,0,60000); // wheel [ 228 ]
	AddStaticVehicleEx(560,-2714.3113,206.0082,4.0333,270.7872,0,0,60000); // wheel [ 229 ]
	AddStaticVehicleEx(560,-2714.6912,202.4119,4.0370,272.3214,0,0,60000); // wheel [ 230 ]
	AddStaticVehicleEx(462,1928.5508,-2141.9224,13.1623,176.3152,0,0,60000); // pert loja arma [ 231 ]
	AddStaticVehicleEx(462,1932.0817,-2141.9355,13.1605,178.6568,0,0,60000); // pert loja arma [ 232 ]
	AddStaticVehicleEx(462,1935.2594,-2141.9080,13.1635,179.4267,0,0,60000); // pert loja arma [ 233 ]
	AddStaticVehicleEx(462,1938.2609,-2141.9517,13.1627,182.4344,0,0,60000); // pert loja arma [ 234 ]
	AddStaticVehicleEx(462,1941.6116,-2141.7742,13.1527,180.3628,0,0,60000); // pert loja arma [ 235 ] 260
	// Carros Aluguel 1
	AddStaticVehicleEx(560,558.3553,-1289.7278,16.9551,0.8050,-1,-1,60000); // carro aluguel 1      [ 332 ] 261
	AddStaticVehicleEx(560,554.5654,-1289.6489,16.9552,2.4649,-1,-1,60000); // carro aluguel 2      [ 333 ]
	AddStaticVehicleEx(560,550.9343,-1289.6908,16.9546,3.3999,-1,-1,60000); // carro aluguel 3      [ 334 ]
	AddStaticVehicleEx(506,546.8458,-1289.9054,16.9545,4.1478,-1,-1,60000); // carro aluguel 4      [ 335 ]
	AddStaticVehicleEx(506,542.8229,-1290.2216,16.9480,3.6802,-1,-1,60000); // carro aluguel 5      [ 336 ]
	AddStaticVehicleEx(506,538.1052,-1290.2968,16.9493,1.1534,-1,-1,60000); // carro aluguel 6      [ 337 ]
	AddStaticVehicleEx(559,533.5905,-1290.3926,16.9486,2.4711,-1,-1,60000); // carro aluguel 7      [ 338 ]
	AddStaticVehicleEx(559,528.9374,-1290.5078,16.9491,2.5434,-1,-1,60000); // carro aluguel 8      [ 339 ]
	AddStaticVehicleEx(559,524.9777,-1290.4878,16.9490,4.3869,-1,-1,60000); // carro aluguel 9      [ 340 ]
	AddStaticVehicleEx(480,520.7125,-1291.0891,16.9489,5.2022,-1,-1,60000); // carro aluguel 10     [ 341 ]270
	AddStaticVehicleEx(480,552.0004,-1263.1455,16.9484,209.2874,-1,-1,60000); // carro aluguel 11   [ 342 ]
	AddStaticVehicleEx(480,548.2775,-1265.9437,16.9494,207.4516,-1,-1,60000); // carro aluguel 12   [ 343 ]
	AddStaticVehicleEx(451,544.0808,-1268.7469,16.9525,209.3285,-1,-1,60000); // carro aluguel 13   [ 344 ]
	AddStaticVehicleEx(451,540.1223,-1271.9517,16.9491,211.3782,-1,-1,60000); // carro aluguel 14   [ 345 ]
	AddStaticVehicleEx(522,567.0040,-1280.6033,16.8134,101.3406,-1,-1,60000); // moto aluguel 1     [ 346 ]
	AddStaticVehicleEx(522,567.1725,-1282.8904,16.8150,98.1773,7,79,60000); // moto aluguel 2     [ 347 ]
	AddStaticVehicleEx(522,567.9107,-1285.1788,16.8099,104.7714,8,82,60000); // moto aluguel 3     [ 348 ]
	AddStaticVehicleEx(522,568.4707,-1286.9088,16.8207,106.0463,-1,-1,60000); // moto aluguel 4     [ 349 ]
	AddStaticVehicleEx(521,569.0721,-1289.0919,16.8163,109.3813,-1,-1,60000); // moto aluguel 5     [ 350 ]
	AddStaticVehicleEx(521,569.4713,-1291.3688,16.8175,94.5475,-1,-1,60000); // moto aluguel 6      [ 351 ] 280
// Carros aluguel 2
	AddStaticVehicleEx(560,2148.0103,-1203.5555,23.6148,270.2270,-1,-1,60000); // carro aluguel 1   [ 352 ]281
	AddStaticVehicleEx(560,2147.9868,-1199.1451,23.6263,270.2075,-1,-1,60000); // carro aluguel 2   [ 353 ]
	AddStaticVehicleEx(560,2147.9705,-1194.6024,23.5921,270.2072,-1,-1,60000); // carro aluguel 3   [ 354 ]
	AddStaticVehicleEx(560,2147.9534,-1189.8275,23.6153,270.2242,-1,-1,60000); // carro aluguel 4   [ 355 ]
	AddStaticVehicleEx(506,2147.9351,-1185.1653,23.6157,270.2242,-1,-1,60000); // carro aluguel 5   [ 356 ]
	AddStaticVehicleEx(506,2147.9175,-1180.5959,23.6157,270.2242,-1,-1,60000); // carro aluguel 6   [ 357 ]
	AddStaticVehicleEx(506,2147.8982,-1175.7385,23.6157,270.2242,-1,-1,60000); // carro aluguel 7   [ 358 ]
	AddStaticVehicleEx(559,2147.8792,-1170.7815,23.6157,270.2242,-1,-1,60000); // carro aluguel 8   [ 359 ]
	AddStaticVehicleEx(559,2147.8623,-1166.5084,23.6157,270.2242,-1,-1,60000); // carro aluguel 9   [ 360 ]
	AddStaticVehicleEx(480,2147.8442,-1161.8684,23.6157,270.2242,-1,-1,60000); // carro aluguel 10  [ 361 ]
	AddStaticVehicleEx(480,2147.8279,-1157.7185,23.6250,270.2243,-1,-1,60000); // carro aluguel 11  [ 362 ]291
	AddStaticVehicleEx(451,2147.8103,-1153.2000,23.6530,270.2248,-1,-1,60000); // carro aluguel 12  [ 363 ]
	AddStaticVehicleEx(451,2147.7925,-1148.4026,24.1996,269.9953,-1,-1,60000); // carro aluguel 13  [ 364 ]
	AddStaticVehicleEx(562,2147.7927,-1143.9299,24.6300,269.9059,-1,-1,60000); // carro aluguel 14  [ 365 ]
	AddStaticVehicleEx(562,2147.8035,-1138.5513,25.2669,269.9054,-1,-1,60000); // carro aluguel 15  [ 366 ]
	AddStaticVehicleEx(562,2148.4338,-1133.9785,25.3300,267.5980,-1,-1,60000); // carro aluguel 16  [ 367 ]
	AddStaticVehicleEx(522,2162.7617,-1143.8843,24.4031,94.8846,-1,-1,60000); // moto aluguel 1     [ 368 ]
	AddStaticVehicleEx(522,2163.1655,-1148.4584,23.9399,94.9034,-1,-1,60000); // moto aluguel 2     [ 369 ]
	AddStaticVehicleEx(522,2162.3552,-1153.0013,23.4654,95.1561,-1,-1,60000); // moto aluguel 3     [ 370 ]
	AddStaticVehicleEx(522,2162.4158,-1157.6852,23.4134,87.8344,-1,-1,60000); // moto aluguel 4     [ 371 ]300
	AddStaticVehicleEx(463,2162.2075,-1163.1984,23.3819,87.8398,-1,-1,60000); // moto aluguel 5     [ 372 ]
	AddStaticVehicleEx(463,2162.0244,-1168.0548,23.3806,87.8399,-1,-1,60000); // moto aluguel 6     [ 373 ]
	AddStaticVehicleEx(463,2161.8486,-1172.7130,23.3793,87.8401,-1,-1,60000); // moto aluguel 7     [ 374 ]
	AddStaticVehicleEx(522,2161.6694,-1177.4738,23.3791,87.8403,-1,-1,60000); // moto aluguel 8     [ 375 ]
	AddStaticVehicleEx(522,2161.4736,-1182.6678,23.3799,87.8402,-1,-1,60000); // moto aluguel 9     [ 376 ]
	AddStaticVehicleEx(522,2161.2922,-1187.4727,23.3810,87.8400,-1,-1,60000); // moto aluguel 10    [ 377 ]
	AddStaticVehicleEx(468,2161.1135,-1192.2057,23.3822,87.8398,-1,-1,60000); // moto aluguel 11    [ 378 ]
	AddStaticVehicleEx(468,2161.8564,-1196.8351,23.4496,87.4995,-1,-1,60000); // moto aluguel 12    [ 379 ] 309
//Carros M�fia Cosa Nostra
	AddStaticVehicleEx(559,1459.3711,-690.7289,94.4104,269.1152,2,2,60000); // carro M�fia Cosa Nostra 1   [ 203 ] 310
	AddStaticVehicleEx(609,1473.6379,-660.5731,94.8179,178.8805,2,2,60000); // carro M�fia Cosa Nostra 2   [ 204 ]
	AddStaticVehicleEx(579,1459.8967,-666.8953,94.6868,269.7493,2,2,60000); // carro M�fia Cosa Nostra 3  [ 205 ]
	AddStaticVehicleEx(480,1459.6017,-681.9838,94.5350,268.9948,2,2,60000); // carro M�fia Cosa Nostra 4   [ 206 ]
	AddStaticVehicleEx(609,1468.2308,-660.4578,94.8277,180.4262,2,2,60000); // carro M�fia Cosa Nostra 5   [ 207 ]
	AddStaticVehicleEx(560,1459.3278,-672.6233,94.4573,270.6589,2,2,60000); // carro M�fia Cosa Nostra 6   [ 208 ]
	AddStaticVehicleEx(562,1459.2870,-686.5667,94.4004,270.3835,2,2,60000); // carro M�fia Cosa Nostra 7   [ 209 ]
	AddStaticVehicleEx(560,1459.3638,-677.3371,94.4553,268.7627,2,2,60000); // carro M�fia Cosa Nostra 8  [ 210 ]
	AddStaticVehicleEx(522,1479.2185,-679.4892,94.3065,93.7490,2,2,60000); // moto M�fia Cosa Nostra 1     [ 211 ]
	AddStaticVehicleEx(522,1479.2134,-675.9341,94.3004,92.7336,2,2,60000); // moto M�fia Cosa Nostra 2     [ 212 ]
	AddStaticVehicleEx(487,1496.8555,-692.4993,103.9904,269.7480,2,2,60000); // heli M�fia Cosa Nostra      [ 213 ] 310 at� 320
//Carros M�fia Yakuza
	AddStaticVehicleEx(609,686.7582,-1304.3781,13.2839,89.1099,0,0,60000); // carro Yakuza 1      [ 214 ] 321
	AddStaticVehicleEx(609,686.8018,-1300.0002,13.2569,90.7432,0,0,60000); // carro Yakuza 2     [ 215 ]
	AddStaticVehicleEx(579,686.4913,-1295.5823,13.3162,91.0317,0,0,60000); // carro Yakuza 3       [ 216 ]
	AddStaticVehicleEx(480,686.7732,-1290.7100,13.3501,89.3128,0,0,60000); // carro Yakuza 4       [ 217 ]
	AddStaticVehicleEx(559,686.2200,-1285.9563,13.3426,90.7709,0,0,60000); // carro Yakuza 5       [ 218 ]
	AddStaticVehicleEx(560,686.6278,-1281.2258,13.2807,90.7563,0,0,60000); // carro Yakuza 6      [ 219 ]
	AddStaticVehicleEx(562,685.8911,-1276.7478,13.3717,90.6977,0,0,60000); // carro Yakuza 7      [ 220 ]
	AddStaticVehicleEx(560,686.3205,-1270.9865,13.3532,88.2486,0,0,60000); // carro Yakuza 8      [ 221 ]
	AddStaticVehicleEx(522,687.5290,-1266.2338,13.1258,87.0329,0,79,60000); // moto yakuza 1         [ 222 ]
	AddStaticVehicleEx(522,687.2665,-1263.2662,13.1193,88.5126,0,79,60000); // moto yakuza 2       [ 223 ]
	AddStaticVehicleEx(487,706.2159,-1241.6147,13.8068,272.8419,0,79,60000); // heli yakuza         [ 224 ] 321 at� 331
 //=========================================CARROS EXERCITO=================================================//
	AddStaticVehicleEx(522,-1260.6849,441.6769,6.7520,358.8597,84,86,60000); // Moto Exercito 1        [ 265 ] 332
	AddStaticVehicleEx(522,-1259.3337,441.9116,6.7533,0.8075,84,86,60000); // Moto Exercito 2         [ 266 ]
	AddStaticVehicleEx(520,-1439.5743,496.0575,18.9576,268.8588,84,86,60000); // hydra exercito 1 	[ 267 ]
	AddStaticVehicleEx(520,-1439.6023,507.2350,18.9611,270.9881,84,86,60000); // hydra exercito 2 	[ 268 ]
	AddStaticVehicleEx(497,-1425.2408,501.4596,18.9443,269.9571,84,86,60000); // Heli exercito 3     [ 269 ]
	AddStaticVehicleEx(470,-1310.8818,442.9997,6.9083,0.0227,84,86,60000); // carro exercito 1        [ 270 ]
	AddStaticVehicleEx(470,-1314.8569,442.9108,6.9084,0.0141,84,86,60000); // carro exercito 2        [ 271 ]
	AddStaticVehicleEx(470,-1305.2025,443.2693,7.1818,0.2254,84,86,60000); // carro exercito 3       [ 272 ]
	AddStaticVehicleEx(470,-1301.4465,443.3131,7.1805,359.7649,84,86,60000); // carro exercito 4     [ 273 ]
	AddStaticVehicleEx(470,-1297.4910,443.2412,7.1766,359.0308,84,86,60000); // carro exercito 5     [ 274 ]
	AddStaticVehicleEx(470,-1293.7415,443.2815,7.1750,1.7500,84,86,60000); // carro exercito 6       [ 275 ]
	AddStaticVehicleEx(433,-1288.4304,443.4527,7.6149,1.4529,84,86,60000); // carro exercito 7       [ 276 ]
	AddStaticVehicleEx(433,-1283.3462,443.5902,7.6176,3.1533,84,86,60000); // carro exercito 8       [ 277 ]
	AddStaticVehicleEx(432,-1274.5656,442.1898,7.1933,0.0703,84,86,60000); // tanque exercito 1      [ 278 ]
	AddStaticVehicleEx(432,-1268.6372,442.3636,7.1937,1.8517,84,86,60000); // tanque exercito 2      [ 279 ]
	AddStaticVehicleEx(522,-1263.3849,441.7906,6.7517,359.7232,84,86,60000); // moto exercito 1      [ 280 ]
	AddStaticVehicleEx(522,-1262.0275,441.7494,6.7517,1.2986,84,86,60000); // moto exercito 2        [ 281 ] 349
	AddStaticVehicleEx(431,-1254.1002,448.9360,7.3758,359.3566,84,86,60000); // BUZAO EXE 1 332 at� 349
// Carros Mancha Verde
	AddStaticVehicleEx(437,382.0672,2538.5024,17.2623,179.0163,86,86,60000); // hydra al�qaeda 1      [ 282 ] 350
	AddStaticVehicleEx(437,347.0407,2539.1038,17.5199,179.0246,86,86,60000); // hydra al�qaeda 2      [ 283 ]
	AddStaticVehicleEx(437,366.0395,2537.8293,16.8276,161.9232,86,86,60000); // heli al�qaeda       [ 284 ]
	AddStaticVehicleEx(437,424.8906,2516.1953,16.4970,89.8145,86,86,60000); // tanque al�qaeda 1     [ 285 ]
	AddStaticVehicleEx(437,424.3374,2504.1704,16.4971,88.5026,86,86,60000); // tanque al�qaeda 2     [ 286 ]
	AddStaticVehicleEx(560,413.2605,2452.6563,16.2054,357.5121,86,86,60000); // carro al�qaeda 1    [ 287 ]
	AddStaticVehicleEx(560,401.1563,2453.1179,16.2052,359.3275,86,86,60000); // carro al�qaeda 2    [ 288 ]
	AddStaticVehicleEx(560,407.3538,2460.2817,16.2057,357.3129,86,86,60000); // carro al�qaeda 3    [ 289 ]
	AddStaticVehicleEx(560,418.2018,2437.5090,16.2049,359.6690,86,86,60000); // carro al�qaeda 4     [ 290 ]
	AddStaticVehicleEx(560,413.4090,2437.3838,16.2049,1.4261,86,86,60000); // carro al�qaeda 5       [ 291 ]
	AddStaticVehicleEx(560,408.0492,2437.2141,16.2053,358.9307,86,86,60000); // carro al�qaeda 6     [ 292 ]360
	AddStaticVehicleEx(560,400.6902,2437.0471,16.2054,1.0032,86,86,60000); // carro al�qaeda 7       [ 293 ]
	AddStaticVehicleEx(560,397.4241,2437.1575,16.2052,359.4397,86,86,60000); // carro al�qaeda 8     [ 294 ]
	AddStaticVehicleEx(522,392.1531,2436.7544,16.0708,359.2458,86,86,60000); // moto al�qaeda 1       [ 295 ]
	AddStaticVehicleEx(522,390.8281,2436.8748,16.0638,358.4109,86,86,60000); // moto al�qaeda 2      [ 296 ]350 at� 364
// Carros Gavi�es
	AddStaticVehicleEx(437,2765.4023,-2507.6582,14.3449,3.8515,0,0,60000); // hydra Taliban 1        [ 297 ] 365
	AddStaticVehicleEx(437,2746.2673,-2395.5330,15.2033,176.9398,0,0,60000); // hydra Taliban 2        [ 298 ]
	AddStaticVehicleEx(437,2788.3572,-2418.1135,13.6495,88.9305,0,0,60000); // tanque Taliban 1      [ 299 ]
	AddStaticVehicleEx(437,2785.8474,-2456.0635,13.6500,89.5964,0,0,60000); // tanque Taliban 2      [ 300 ]
	AddStaticVehicleEx(560,2748.9399,-2445.3259,13.5813,269.5579,0,0,60000); // carro Taliban 1       [ 301 ]
	AddStaticVehicleEx(560,2748.2117,-2458.7476,13.4802,270.2032,0,0,60000); // carro Taliban 2       [ 302 ]370
	AddStaticVehicleEx(560,2748.2192,-2462.8203,13.3048,270.5482,0,0,60000); // carro Taliban 3       [ 303 ]
	AddStaticVehicleEx(560,2748.4551,-2466.7014,13.3554,271.3549,0,0,60000); // carro Taliban 4        [ 304 ]
	AddStaticVehicleEx(560,2748.8694,-2470.7781,13.2733,271.0843,0,0,60000); // carro Taliban 5        [ 305 ]
	AddStaticVehicleEx(560,2748.3594,-2432.0737,13.3523,269.8383,0,0,60000); // carro Taliban 6        [ 306 ]
	AddStaticVehicleEx(560,2748.2373,-2440.6599,13.3484,268.3277,0,0,60000); // carro Taliban 7        [ 307 ]
	AddStaticVehicleEx(560,2747.4832,-2423.2556,13.5600,271.1836,0,0,60000); // carro Taliban 8        [ 308 ]
	AddStaticVehicleEx(522,2778.2864,-2432.5647,13.2061,179.7750,0,0,60000);// moto Taliban 1        [ 309 ]
	AddStaticVehicleEx(522,2776.2734,-2432.6140,13.2073,178.3195,0,0,60000); // moto Taliban 2          [ 310 ]
	AddStaticVehicleEx(437,2762.2505,-2394.0913,13.8093,183.8786,0,0,60000); // heli Taliban         [ 358
// turismos evento(+8)
	AddStaticVehicleEx(503,1494.9178,1770.4805,10.5396,179.9734,-1,-1,60000); // Tursimo Evento 1       [ 312 ] 359
	AddStaticVehicleEx(503,1489.3649,1770.5081,10.5396,180.2711,-1,-1,60000); // Tursimo Evento 2       [ 313 ]
	AddStaticVehicleEx(503,1485.0476,1770.4937,10.5396,179.6587,-1,-1,60000); // Tursimo Evento 3       [ 314 ]
	AddStaticVehicleEx(503,1479.9188,1770.7644,10.5396,179.4900,-1,-1,60000); // Tursimo Evento 4       [ 315 ]
	AddStaticVehicleEx(503,1474.7246,1770.6442,10.5450,179.6759,-1,-1,60000); // Tursimo Evento 5       [ 316 ]
	AddStaticVehicleEx(503,1470.1248,1770.9567,10.5472,177.4380,-1,-1,60000); // Tursimo Evento 6       [ 317 ]
	AddStaticVehicleEx(503,1465.3018,1771.0027,10.5474,179.8376,-1,-1,60000); // Tursimo Evento 7       [ 318 ]
	AddStaticVehicleEx(503,1459.6700,1770.9376,10.5448,180.2939,-1,-1,60000); // Tursimo Evento 8       [ 319 ] 366
// Onibus
	AddStaticVehicleEx(431,1278.5284,-1809.0149,13.4855,271.2380,9,125,60000); // onibus 1       [ 380 ] 367
	AddStaticVehicleEx(431,1278.6082,-1815.4225,13.5106,270.3499,9,125,60000); // onibus 2       [ 381 ] 368
	AddStaticVehicleEx(437,1277.8199,-1821.1698,13.5172,269.8261,9,125,60000); // onibus 3      [ 382 ]369
	AddStaticVehicleEx(437,1278.1145,-1827.4581,13.5183,271.0249,9,125,60000); // onibus 4        [ 383 ] 370
// Carros Governo
	AddStaticVehicleEx(409,1532.1926,-1845.8784,13.3430,180.0010,1,1,60000); // limosine governo 1 [ 384 ] 371
	AddStaticVehicleEx(560,1535.7477,-1846.8677,13.2390,181.4477,1,1,60000); // sultan governo 2 [ 385 ]
	AddStaticVehicleEx(560,1528.0491,-1846.4027,13.2592,182.8282,1,1,60000); // sultan governo 3 [ 386 ]
	AddStaticVehicleEx(522,1520.3971,-1848.8979,13.1106,182.5410,1,1,60000); // moto governo 1 [ 387 ]
	AddStaticVehicleEx(522,1521.8660,-1848.7748,13.1123,178.7587,1,1,60000); // moto governo 2 [ 388 ]
	AddStaticVehicleEx(522,1523.3265,-1848.7078,13.1173,180.0277,1,1,60000); // moto governo [ 389 ]
	AddStaticVehicleEx(457,1505.5765,-1748.5980,13.5469,1.6339,1,1,60000); // Golf   [396]
	AddStaticVehicleEx(457,1508.1027,-1749.7921,13.5469,358.1872,1,1,60000); // Golf    [397]
    AddStaticVehicleEx(487,1505.1627,-1840.7588,13.7243,88.2486,1,1,60000); // Heli Governo    [516] 379
// Veiculos de entregas de produtos
	AddStaticVehicleEx(456,1670.7562,-1476.2228,13.5562,88.9853,-1,-1,60000); // truck 1    [ 390 ] 380
	AddStaticVehicleEx(456,1680.2968,-1476.3918,13.5573,88.9854,-1,-1,60000); // truck 2    [ 391 ]
	AddStaticVehicleEx(440,1697.7805,-1476.0262,13.4957,90.0862,-1,-1,60000); // truck 3    [ 392 ]
	AddStaticVehicleEx(440,1691.4647,-1476.0363,13.5047,90.0953,-1,-1,60000); // truck 4    [ 393 ] 383
// CARRO CARANDIRU
	NPCBus = CreateVehicle(568, 93.2871,1894.5649,17.5853,87.1958, 0, 0,  5000); // carro carandiru    [394] 384
// Carrinhos Extras
	AddStaticVehicleEx(471,315.3439,-1788.6288,4.1146,179.8893,0,0,60000); // quad praia 2 [398] 385
	trembot = AddStaticVehicleEx(538,1699.8877,-1953.6514,14.8756,358.0,-1,-1,60000); //teste bot [399 at� 402]
    AddStaticVehicleEx(487,2069.4409,-2637.0068,13.5469,8.9195,-1,-1,60000) ; // Heli 1(LS) [407]
    AddStaticVehicleEx(487,2059.1113,-2638.4084,13.5469,10.1728,-1,-1,60000) ; // Heli 2(LS) [408]
    AddStaticVehicleEx(513,2044.4976,-2639.1333,13.5469,8.9195,-1,-1,60000) ; // A.Manobras 1(LS) [409]
    AddStaticVehicleEx(513,2029.3884,-2639.7593,13.5469,354.7468,-1,-1,60000) ; // A.Manobras 2(LS) [410] 390
    AddStaticVehicleEx(519,2005.5210,-2641.6875,13.5469,7.3528,-1,-1,60000) ; // A.Jatinho 1(LS) [411]
    AddStaticVehicleEx(592,1475.8405,-2634.4702,13.5469,286.2323,-1,-1,60000) ; // A.Andromeda (LS) [412]
	AddStaticVehicleEx(513,-1363.9288,-486.9547,14.1719,204.7414,-1,-1,60000) ; // A.Manobras 1 (SF) [413]
	AddStaticVehicleEx(513,-1436.6971,-529.5022,14.1719,202.5247,-1,-1,60000) ; // A.Manobras 2 (SF) [414]
	AddStaticVehicleEx(592,-1637.8472,-145.2139,14.1484,315.9523,-1,-1,60000) ; // A.Andromeda (SF) [415]
	AddStaticVehicleEx(519,-1531.3790,-85.7326,14.1484,340.1258,-1,-1,60000) ; // A.Jatinho 1 (SF) [416]
	AddStaticVehicleEx(519,-1435.5215,11.6454,14.1484,351.7193,-1,-1,60000) ; // A.Jatinho 2 (SF) [417]
	AddStaticVehicleEx(447,1475.2814,-2405.2607,13.5547,172.5246,-1,-1,60000) ; // Heli Boia (LS) [418]
	AddStaticVehicleEx(469,1488.2610,-2405.7734,13.5547,166.8612,-1,-1,60000) ; // Heli Boia (LS) [419]
	AddStaticVehicleEx(481,1864.0769,-1394.3240,12.9985,276.3050,0,0,60000) ; // Bicicleta 1 [420] 400
	AddStaticVehicleEx(481,1864.0367,-1395.9921,12.9973,269.3524,0,0,60000) ; // Bicicleta 2 [421]
	AddStaticVehicleEx(481,1864.0411,-1397.8032,12.9941,272.4066,0,0,60000) ; // Bicicleta 3 [422]
	AddStaticVehicleEx(481,1864.1320,-1401.4441,12.9966,269.4391,0,0,60000) ; // Bicicleta 4 [423]
	AddStaticVehicleEx(481,1864.3358,-1403.7626,12.9936,274.3326,0,0,60000) ; //Bicicleta 5 [424]
	AddStaticVehicleEx(409,2225.2925,-1340.6556,23.5481,91.2828,1,1,60000) ; // Limozine Igreja 1 [425]
	AddStaticVehicleEx(409,2224.0952,-1358.3789,23.7899,89.2851,1,1,60000) ; // Limozine Igreja 2 [426]
	AddStaticVehicleEx(560,1526.6672,-1826.5502,13.3839,91.1082,1,1,60000) ; // Sultan IGREJA[427]
	AddStaticVehicleEx(560,1533.7704,-1826.7501,13.3901,90.4799,1,1,60000) ; // Sultan IGREJA[428]
	AddStaticVehicleEx(403,-98.4618,-1189.5334,1.9870,68.2847,0,0,60000) ; // Caminh�o [432]
	AddStaticVehicleEx(591,-86.0337,-1197.2910,2.3088,71.8764,1,1,60000) ; // Trailer 1 [433] 410
	AddStaticVehicleEx(584,-83.7733,-1191.3406,1.7500,69.9964,1,1,60000) ; // Trailer 2 [434]
	AddStaticVehicleEx(471,95.4275,1897.5643,17.4233,91.6949,103,111,60000); // Carandiru Externo 1 [435]
	AddStaticVehicleEx(471,93.8914,1910.6497,17.9942,6.6401,-1,-1,60000) ; // Carandiru Externo 2 [436]
	AddStaticVehicleEx(602,1017.9053,-918.7633,42.1175,186.1489,-1,-1,60000) ; // CarroCivil Posto [437]
	AddStaticVehicleEx(568,2219.8970,-985.7915,62.2023,250.2595,-1,-1,60000) ; // Carandiru Externo [438]
	AddStaticVehicleEx(568,94.7523,1903.1056,17.7458,89.3105,-1,-1,60000) ; // Carandiru Externo 3 [443]
	AddStaticVehicleEx(568,94.6247,1905.5815,17.7609,83.1966,-1,-1,60000) ; // Carandiru Externo 4 [444] 417
//BARCOS PRAIA
	AddStaticVehicleEx(452,720.1,-1694.0,-0.4,179.4,-1,-1,60000); // Barco Praia 1 [445]
	AddStaticVehicleEx(452,721.2,-1629.4,-0.4,180.9,-1,-1,60000); // Barco Praia 2 [446]
	AddStaticVehicleEx(452,739.5,-1670.5,-0.6,177.5,-1,-1,60000); // Barco Praia 3 [447]
    AddStaticVehicleEx(452,584.3558,-1932.9105,-0.4759,90.2416,-1,-1,60000) ;  // Barco Praia 4 [448]
    AddStaticVehicleEx(452,584.8385,-1927.7087,-0.4675,87.1082,-1,-1,60000) ;  // Barco Praia 5 [449]
    AddStaticVehicleEx(452,585.6655,-1922.4731,-0.4039,95.5683,-1,-1,60000) ; // Barco Praia 6 [450] 423
//GUINCHOS CET
	AddStaticVehicleEx(525,956.0310,-1451.9323,13.4018,0.5025,0,1,60000); // Guincho CET 1 [451] 423
	AddStaticVehicleEx(525,956.1095,-1460.1437,13.4002,1.4186,0,1,60000); // Guincho CET 2 [452] 424
	AddStaticVehicleEx(525,962.8581,-1459.9451,13.3257,359.7996,0,1,60000); // Guincho CET 3 [453] 425
	AddStaticVehicleEx(525,956.1880,-1469.0245,13.4052,1.1497,0,1,60000); // Guincho CET 4 [454] 426
	AddStaticVehicleEx(525,968.7590,-1440.6521,13.4095,90.2857,0,1,60000); // Guincho CET 1 [439] 427
	AddStaticVehicleEx(525,970.0652,-1454.1079,13.3284,89.9324,0,1,60000); // Guincho CET 2 [440] 432
//KARTS EMPRESA
   	AddStaticVehicleEx(571,2286.2141,-2354.5000,12.8306,225.8705,-1,-1,60000); // kart  [470]
	AddStaticVehicleEx(571,2279.9412,-2348.4141,12.8312,225.8585,-1,-1,60000); // kart  [471] 430
	AddStaticVehicleEx(571,2291.7932,-2345.5356,12.8305,227.3060,-1,-1,60000); // kart  [472]
	AddStaticVehicleEx(571,2287.5615,-2341.6433,12.8306,226.5350,-1,-1,60000); // kart  [473]
	AddStaticVehicleEx(571,2299.6785,-2338.3186,12.8307,224.3563,-1,-1,60000); // kart  [474]
	AddStaticVehicleEx(571,2295.3887,-2334.9448,12.8307,227.9102,-1,-1,60000); // kart  [475] 434
//Carros VIPs
	AddStaticVehicleEx(487,349.1804,-1830.5696,3.9809,178.7809,0,0,60000); // heli vip 1 [487]
	AddStaticVehicleEx(487,324.8780,-1828.9980,4.0119,183.8850,0,0,60000); // heli vip 2 [488]
	AddStaticVehicleEx(560,311.5820,-1809.5995,4.1686,359.9641,0,0,60000); // carro praia 1 [489]
	AddStaticVehicleEx(560,317.9657,-1809.2924,4.1840,359.9130,0,0,60000); // carro praia 2 [490]
	AddStaticVehicleEx(560,324.5570,-1809.4357,4.1836,359.9243,0,0,60000); // carro praia 3 [491]
	AddStaticVehicleEx(560,331.0591,-1809.2834,4.1908,359.7497,0,0,60000); // carro praia 4 [492] 440
	AddStaticVehicleEx(560,340.6517,-1809.6073,5.2141,359.7410,0,0,60000); // carro praia 5 [493]
	AddStaticVehicleEx(560,347.1095,-1809.3694,5.2270,359.6306,0,0,60000); // carro praia 6 [494]
	AddStaticVehicleEx(560,353.4774,-1809.4420,5.2314,1.3118,0,0,60000); // carro praia 7 [495]
	AddStaticVehicleEx(452,166.6003,-1898.6937,-0.4749,178.4558,1,22,60000); // lancha praia 1 [496]
	AddStaticVehicleEx(452,175.4223,-1896.5074,-0.2244,177.1550,1,16,60000); // lancha praia 2 [497]
	AddStaticVehicleEx(452,166.3409,-1914.8420,-0.5107,178.3757,1,57,60000); // lancha praia 3 [498]
	AddStaticVehicleEx(452,173.7822,-1914.0876,-0.4673,175.7722,1,35,60000); // lancha praia 4 [499]
	AddStaticVehicleEx(452,185.2851,-1898.3643,-0.2911,175.2977,1,5,60000); // lancha praia 5 [500]
	AddStaticVehicleEx(452,183.2590,-1915.6124,-0.4429,174.8717,1,53,60000); // lancha praia 6 [501]
	AddStaticVehicleEx(471,311.6365,-1788.7190,4.0551,180.0642,0,0,60000); // quad praia 1 [502] 450
//Carros PCC
	AddStaticVehicleEx(519,1981.6908,-2644.9192,14.4686,0.8321,-1,-1,60000); // heli [503] 451
	AddStaticVehicleEx(519,1956.8619,-2646.7402,14.4686,10.5305,-1,-1,60000); // heli [504]
	AddStaticVehicleEx(518,1098.8306,-1763.7352,13.0203,90.2509,38,38,60000); // val [505]
	AddStaticVehicleEx(445,1098.7145,-1757.8042,13.2269,89.2203,38,38,60000); // val [506]
	AddStaticVehicleEx(475,1098.7297,-1751.7581,13.1549,89.8428,38,38,60000); // sabre [507]
	AddStaticVehicleEx(477,1098.9209,-1775.6519,13.0980,89.9595,38,38,60000); // zr350 [508]
	AddStaticVehicleEx(533,1062.4391,-1775.7854,12.8249,271.2195,38,38,60000); // feltzer [509]
	AddStaticVehicleEx(533,1062.3115,-1772.6252,12.8367,268.5054,38,38,60000); // feltzer2 [510]
	AddStaticVehicleEx(558,1062.4912,-1755.0549,13.0850,271.7349,38,38,60000); // uranus [511]
	AddStaticVehicleEx(558,1062.4664,-1758.1206,13.0467,267.0645,38,38,60000); // uranus2 [512]
	AddStaticVehicleEx(559,1062.2225,-1749.0234,13.1278,269.5674,38,38,60000); // jester [513]//566at�574
	AddStaticVehicleEx(559,1062.1527,-1752.1302,13.1147,271.2971,38,38,60000); // jester2 [514]
	AddStaticVehicleEx(561,1062.6639,-1760.8470,13.2180,269.8991,38,38,60000); // stratum [515] 462
//Hunter Exercito
    AddStaticVehicleEx(425,-1409.2609,495.0441,18.7895,268.4792,84,86,60000); // Hunter Exe    [517]
    AddStaticVehicleEx(425,-1410.9385,507.8558,18.8056,272.2986,84,86,60000); // Hunter Exe2    [518] 464
//CARROS DO FIM
    AddStaticVehicleEx(571,-2399.2908,2217.5532,5.2681,89.0774,0,0,60000); // Kart 1 [530] 465
    AddStaticVehicleEx(571,-2396.9446,2212.2827,5.2581,86.7409,0,0,60000); // Kart 2 [531]
    AddStaticVehicleEx(571,-2396.8755,2214.6748,5.2681,86.6157,0,0,60000); // Kart 3 [532]
    AddStaticVehicleEx(571,-2396.5591,2217.4709,5.2681,89.6912,0,0,60000); // Kart 4 [533]
    AddStaticVehicleEx(571,-2396.5164,2220.4089,5.2681,87.4044,0,0,60000); // Kart 5 [534]
    AddStaticVehicleEx(571,-2396.5603,2222.8530,5.2681,87.6175,0,0,60000); // Kart 6 [535] 470
    AddStaticVehicleEx(571,-2394.0044,2212.1846,5.2585,80.9706,0,0,60000); // Kart 7 [536]
    AddStaticVehicleEx(571,-2394.0522,2214.5332,5.2594,87.5285,0,0,60000); // Kart 8 [537]
    AddStaticVehicleEx(571,-2393.9614,2217.4075,5.2647,89.2130,0,0,60000); // Kart 9 [538]
    AddStaticVehicleEx(571,-2394.0012,2220.3369,5.2678,85.6381,0,0,60000); // Kart 10 [539]
    AddStaticVehicleEx(571,-2393.9475,2222.7415,5.2680,88.2800,0,0,60000); // Kart 11 [540]
    AddStaticVehicleEx(571,-2391.5093,2212.0376,5.2680,89.5913,0,0,60000); // Kart 12 [541]
    AddStaticVehicleEx(571,-2391.5479,2214.5176,5.2683,87.8447,0,0,60000); // Kart 13 [542]
    AddStaticVehicleEx(571,-2391.4744,2217.2944,5.2677,89.6341,0,0,60000); // Kart 14 [543]
    AddStaticVehicleEx(571,-2391.6343,2220.2671,5.2679,88.9740,0,0,60000); // Kart 15 [544]
    AddStaticVehicleEx(571,-2391.4390,2222.5723,5.2681,88.0324,0,0,60000); // Kart 16 [545] 480
    AddStaticVehicleEx(571,-2388.9988,2211.9412,5.2639,88.5946,0,0,60000); // Kart 17 [546]
    AddStaticVehicleEx(571,-2388.8965,2214.3682,5.2683,87.8631,0,0,60000); // Kart 18 [547]
    AddStaticVehicleEx(571,-2388.7190,2217.3032,5.2686,91.1743,0,0,60000); // Kart 19 [548]
    AddStaticVehicleEx(571,-2388.5789,2220.0945,5.2598,89.6935,0,0,60000); // Kart 20 [549]
    AddStaticVehicleEx(571,-2388.6926,2222.4407,5.2490,88.9956,0,0,60000); // Kart 21 [550]
    AddStaticVehicleEx(571,-2386.6101,2211.9229,5.2677,86.4061,0,0,60000); // Kart 22 [551]
    AddStaticVehicleEx(571,-2386.4924,2215.2690,5.2674,87.8273,0,0,60000); // Kart 23 [552]
    AddStaticVehicleEx(571,-2386.4670,2217.3892,5.2687,86.1322,0,0,60000); // Kart 24 [553]
    AddStaticVehicleEx(571,-2385.0139,2220.2937,5.2682,86.7189,0,0,60000); // Kart 25 [554]
    AddStaticVehicleEx(571,-2384.8301,2222.2886,5.2624,84.9987,0,0,60000); // Kart 26 [555] 490
//MOTOS TRILHA CHILIAD
    AddStaticVehicleEx(468,-2396.6487,-2194.7942,32.9527,244.9457,14,14,60000); // rally1 [556] 491
    AddStaticVehicleEx(468,-2397.9363,-2196.0374,32.9525,251.1160,10,0,60000); // rally2 [557]
    AddStaticVehicleEx(468,-2399.1172,-2196.9358,32.9529,253.3459,8,8,60000); // rally3 [558]
    AddStaticVehicleEx(468,-2400.7209,-2198.4172,32.9483,263.7230,1,1,60000); // rally4 [559]
    AddStaticVehicleEx(468,-2396.6289,-2194.7290,32.9359,237.7247,14,14,60000); // rally1 [560]
    AddStaticVehicleEx(468,-2397.8621,-2195.9563,32.9209,240.0725,10,0,60000); // rally2 [561]
    AddStaticVehicleEx(468,-2399.1553,-2197.2615,32.9516,268.3748,8,8,60000); // rally3 [562]
    AddStaticVehicleEx(468,-2400.7368,-2198.5469,32.9272,258.2426,1,1,60000); // rally4 [563]
    AddStaticVehicleEx(468,-2401.6670,-2199.7456,32.9394,242.1490,11,11,60000); // rally5 [564]
    AddStaticVehicleEx(468,-2402.8044,-2200.7349,32.9736,258.3496,2,2,60000); // rally6 [565] 500
    AddStaticVehicleEx(468,-2403.2639,-2202.2148,32.9559,287.4485,20,20,60000); // rally7 [566]
    AddStaticVehicleEx(468,-2403.2646,-2203.6196,32.9454,278.7190,18,18,60000); // rally8 [567]
    AddStaticVehicleEx(468,-2403.2813,-2205.2979,32.9544,270.3040,19,19,60000); // rally9 [568]
    AddStaticVehicleEx(468,-2402.6687,-2206.1614,32.9588,293.0764,5,5,60000); // rally10 [569]
    AddStaticVehicleEx(468,-2402.5225,-2207.9175,32.9407,283.6688,9,9,60000); // rally11 [570]
    AddStaticVehicleEx(468,-2402.4133,-2209.6116,32.9523,284.1946,17,17,60000); // rally12 [571]
    AddStaticVehicleEx(468,-2401.7029,-2210.8396,32.9555,273.4699,6,6,60000); // rally13 [572]
    AddStaticVehicleEx(468,-2400.9187,-2212.2036,32.9469,293.0626,0,0,60000); // rally14 [573]
    AddStaticVehicleEx(468,-2400.0249,-2213.6221,32.9497,310.2712,3,3,60000); // rally15 [574]
    AddStaticVehicleEx(468,-2398.7419,-2215.3887,32.9686,325.4236,4,4,60000); // rally16 [575]
    AddStaticVehicleEx(468,-2397.2495,-2216.1824,32.9741,321.5857,16,16,60000); // rally17 [576] 511
    AddStaticVehicleEx(468,-2395.8289,-2216.4360,32.9561,345.0271,13,13,60000); // rally18 [577]
    AddStaticVehicleEx(468,-2393.3403,-2216.3254,32.9401,344.7386,7,7,60000); // rally19 [578]
    AddStaticVehicleEx(468,-2391.2278,-2216.4109,32.9444,332.2098,15,15,60000); // rally20 [579]
    AddStaticVehicleEx(468,-2389.5447,-2215.9106,32.9606,355.1463,21,21,60000); // rally21 [580]
    AddStaticVehicleEx(468,-2387.7131,-2216.2065,32.9582,3.4455,12,12,60000); // rally22 [581] 516
//CORRIDA EVENTO AERO LV
    AddStaticVehicleEx(502,1459.6592,1764.5115,10.5396,179.7618,-1,-1,60000); // evento 1 [582] 517
    AddStaticVehicleEx(502,1465.2924,1764.4380,10.5435,179.0928,-1,-1,60000); // evento 2 [583]
    AddStaticVehicleEx(502,1469.8717,1764.4342,10.5475,179.1291,-1,-1,60000); // evento 3 [584]
    AddStaticVehicleEx(502,1474.6998,1765.2147,10.5413,180.1675,-1,-1,60000); // evento 4 [585]
    AddStaticVehicleEx(502,1480.0126,1764.3251,10.5396,180.1285,-1,-1,60000); // evento 5 [586]
    AddStaticVehicleEx(502,1485.0583,1764.3539,10.5407,181.0788,-1,-1,60000); // evento 6 [587]
    AddStaticVehicleEx(502,1489.5206,1765.2897,10.5412,180.4483,-1,-1,60000); // evento 7 [588]
    AddStaticVehicleEx(502,1494.9935,1764.1788,10.5285,180.7575,-1,-1,60000); // evento 8 [589] 524
    //Heli aluguel//
	AddStaticVehicleEx(487,2131.5613,-1166.5723,28.3249,271.2894,-1,-1,60000); // Heli Aluguel 1 [596] 525
	AddStaticVehicleEx(487,2131.6345,-1181.6229,28.3290,270.9645,-1,-1,60000); // Heli Aluguel 2 [597]
	AddStaticVehicleEx(487,2132.1975,-1199.9803,28.3280,269.0931,-1,-1,60000); // Heli Aluguel 3 [598]
	AddStaticVehicleEx(513,2120.7651,-1202.8673,28.7014,92.3785,-1,-1,60000); // Heli Manobras Aluguel [599] 528
//================================[ Comando Vermelho ]============================//oks
	AddStaticVehicleEx(567,2451.3464,-2118.8359,13.2559,1.3507,3,3,60000); // carro CV 6   529  			[603]
	AddStaticVehicleEx(480,2458.2642,-2118.5029,13.2610,359.6513,3,3,60000); // carro CV 7   			[604]
	AddStaticVehicleEx(533,2464.9009,-2118.5427,13.2878,359.6514,3,3,60000); // carro CV 8   			[605]
	AddStaticVehicleEx(609,2469.1621,-2118.5681,13.2877,359.6516,3,3,60000); // heli CV      			[606]
	AddStaticVehicleEx(522,2471.3767,-2118.5820,13.2548,359.6515,3,3,60000); // moto CV 1     			[607]
	AddStaticVehicleEx(522,2478.6663,-2118.6265,13.2832,359.6515,3,3,60000); // moto CV 2     			[608]
	AddStaticVehicleEx(560,2482.0715,-2118.6472,13.2525,359.6515,3,3,60000); // carro CV 2   			[609]
	AddStaticVehicleEx(560,2485.7432,-2118.6694,13.2523,359.6515,3,3,60000); // carro CV 3   	//555 at� 565		[610]
	AddStaticVehicleEx(559,2493.1760,-2118.7148,13.2520,359.6515,3,3,60000); // carro CV 4   			[611]
	AddStaticVehicleEx(562,2501.1968,-2118.7639,13.2517,359.6515,3,3,60000); // carro CV 5   			[612]
	AddStaticVehicleEx(424,2505.6167,-2118.7910,13.2515,359.6515,3,3,60000); // carro CV 1     	539		[613]
//====================================[ PCC ]============================//oks
	AddStaticVehicleEx(429,1308.6196,-861.0286,39.2578,268.4645,65,65,60000); // carro 6 Tugas     	540			[614]
	AddStaticVehicleEx(424,1308.5145,-857.4899,39.3587,266.1463,65,65,60000); // carro 7 Tugas     				[615]
	AddStaticVehicleEx(533,1308.0522,-853.9512,39.2872,265.8517,65,65,60000); // carro 8 Tugas    				[616]
	AddStaticVehicleEx(480,1323.9131,-875.0847,39.3519,267.2162,65,65,60000); // heli Tugas       				[617]
	AddStaticVehicleEx(522,1325.1237,-854.5934,39.1468,229.7808,65,65,60000); // moto Tugas 1     				[618]
	AddStaticVehicleEx(522,1321.9761,-854.1682,39.1543,227.7756,65,65,60000); // moto Tugas 2     				[619]
	AddStaticVehicleEx(522,1319.2555,-853.6761,39.1489,232.8471,65,65,60000); // moto Tugas 3     				[620]
	AddStaticVehicleEx(522,1327.9838,-854.8226,39.1470,233.3109,65,65,60000); // moto Tugas 4     				[621]
	AddStaticVehicleEx(487,1315.9565,-889.2496,45.4033,179.0408,65,65,60000); // carro 1 Tugas    				[622]
	AddStaticVehicleEx(560,1308.0455,-874.8986,39.2830,268.4427,65,65,60000); // carro 2 Tugas    				[623]
	AddStaticVehicleEx(560,1308.0092,-871.5602,39.2837,269.6735,65,65,60000); // carro 3 Tugas     				[624]
	AddStaticVehicleEx(567,1308.2184,-868.0703,39.4495,267.8367,65,65,60000); // carro 4 Tugas     				[625]
	AddStaticVehicleEx(536,1308.8280,-864.5106,39.3156,269.3720,65,65,60000); // carro 5 Tugas     	553			[626]
//================================[ Caminhoneiros ]============================//oks
	AddStaticVehicleEx(514,-77.5039,-1108.1729,1.6683,161.8915,-1,-1,60000); // truck 		554				[627]
	AddStaticVehicleEx(514,-72.3507,-1109.7822,1.6670,161.7769,-1,-1,60000); // truck 						[628]
	AddStaticVehicleEx(514,-67.0126,-1111.7156,1.6688,160.4800,-1,-1,60000); // truck 						[629]
	AddStaticVehicleEx(435,-51.0638,-1135.2831,1.0781,68.3320,-1,-1,60000); // trailer 						[630]
	AddStaticVehicleEx(435,-53.6230,-1139.7546,1.0781,67.5604,-1,-1,60000); // trailer 						[631]
	AddStaticVehicleEx(435,-55.0517,-1144.3676,0.8018,68.1347,-1,-1,60000); // trailer 		v				[632]
//================================[ Sons Of Anarchy ]============================//oks
	AddStaticVehicleEx(560,708.8759,-458.2112,16.0412,89.4333,43,43,60000); // carro merce [633]
	AddStaticVehicleEx(562,708.8455,-461.2887,16.0412,89.4333,43,43,60000); // carro merce [634]
	AddStaticVehicleEx(459,708.8129,-464.5857,16.0412,89.4333,43,43,60000); // carro merce [635]
	AddStaticVehicleEx(560,707.3726,-467.6903,16.0412,91.6304,43,43,60000); // carro merce [636]
	AddStaticVehicleEx(487,684.0383,-463.0329,22.7472,175.8584,43,43,60000); // heli mercen [637]
	AddStaticVehicleEx(463,707.4608,-470.7852,16.0703,91.6321,0,0,60000); // carro merce [638]
	AddStaticVehicleEx(463,694.7209,-473.3403,16.0412,269.4532,0,0,60000); // moto merce [639]
	AddStaticVehicleEx(463,694.7517,-470.1165,16.0412,269.4532,0,0,60000); // moto merce [640]
	AddStaticVehicleEx(463,694.7801,-467.1443,16.0412,269.4532,0,0,60000); // moto merce [641]
	AddStaticVehicleEx(463,694.8120,-463.8013,16.0412,269.4532,0,0,60000); // moto merce [642]
//=================================[Pizza boys]================================//
    AddStaticVehicleEx(448,2097.9983,-1791.4248,12.9888,88.6977,3,6,60000); // pizzaboy 1 [643]
    AddStaticVehicleEx(448,2098.0188,-1794.1444,12.9872,90.6706,3,6,60000); // pizzaboy 2 [644]
    AddStaticVehicleEx(448,2098.0425,-1796.5577,12.9790,89.5288,3,6,60000); // pizzaboy 3 [645]
    AddStaticVehicleEx(448,2098.1306,-1799.2139,12.9761,89.8791,3,6,60000); // pizzaboy 4 [646]
    AddStaticVehicleEx(448,2098.1521,-1801.7113,12.9742,92.1682,3,6,60000); // pizzaboy 5 [647]
    AddStaticVehicleEx(448,2098.2183,-1812.0461,12.9688,89.4775,3,6,60000); // pizzaboy 6 [666]
    AddStaticVehicleEx(448,2098.1812,-1813.9359,12.9931,87.4087,3,6,60000); // pizzaboy 7 [667]
    AddStaticVehicleEx(499,2095.7737,-1816.6663,13.3709,90.5891,3,6,60000); // carro pizza  [668]
    AddStaticVehicleEx(499,2095.7827,-1820.6959,13.3779,90.3956,3,6,60000); // carro pizza 2 [669]
//=================================[Seguran�as]================================//
    AddStaticVehicleEx(401,2033.6484,-1279.7965,20.7518,85.5217,0,0,60000); //seg 1 [648] 604
    AddStaticVehicleEx(401,2033.9080,-1285.0302,20.7381,90.2449,0,0,60000); //seg 2 [649]
    AddStaticVehicleEx(585,2033.3005,-1289.9518,20.5296,90.1361,0,0,60000); //seg 3 [650]
    AddStaticVehicleEx(585,2033.2756,-1295.0730,20.5168,90.1419,0,0,60000); //seg 4 [651]
    AddStaticVehicleEx(551,2033.2491,-1299.9828,20.7197,90.6018,0,0,60000); //seg 5 [652]  604 at� 611
    AddStaticVehicleEx(551,2033.1582,-1304.9681,20.7082,88.7614,0,0,60000); //seg 6 [653]
    AddStaticVehicleEx(400,2018.0640,-1307.5387,20.9825,269.9342,0,0,60000); //seg 7 [654]
    AddStaticVehicleEx(400,2011.5280,-1307.5863,20.9809,270.3994,0,0,60000); //seg 8 [655] 611
//=================================[Bombeiros]================================//
    AddStaticVehicleEx(407,1806.5276,-1690.4576,13.7813,90.1345,3,6,60000); //bombeiro 1 [656] 591 at� 604
    AddStaticVehicleEx(407,1806.5812,-1695.5388,13.7868,90.4447,3,6,60000); //bombeiro 2 [657]
    AddStaticVehicleEx(407,1806.5763,-1700.1467,13.7876,89.2751,3,6,60000); //bombeiro 3 [658]
    AddStaticVehicleEx(552,1801.7146,-1717.5354,13.2312,2.4177,3,6,60000); //bomb  [659]
    AddStaticVehicleEx(544,1791.8496,-1688.9535,13.7061,90.0541,3,6,60000); //bombeiro 4 [660]
    AddStaticVehicleEx(544,1780.0986,-1689.0848,13.6735,89.7285,3,6,60000); //bombeiro 5 [661]
    AddStaticVehicleEx(586,1785.5908,-1705.1639,13.0292,22.5166,3,6,60000); //moto 1 [662]
    AddStaticVehicleEx(586,1783.6749,-1705.2338,13.0276,24.9746,3,6,60000); //moto 2 [663]
    AddStaticVehicleEx(586,1781.6711,-1705.2850,13.0416,21.1213,3,6,60000); //moto 3 [664]
    AddStaticVehicleEx(487,1793.1390,-1710.6028,27.8029,266.8192,3,6,60000); //heli [665]
    AddStaticVehicleEx(407,-2292.35205078,-809.46252441,91.85565948,32.00000000,3,6,60000); //Firetruck
	AddStaticVehicleEx(416,-2288.06030273,-817.27691650,91.78523254,122.00000000,3,6,60000); //Ambulance
	AddStaticVehicleEx(552,-2300.09912109,-811.32739258,91.26256561,122.00000000,3,6,60000); //Utility
	AddStaticVehicleEx(552,-2297.88769531,-815.41503906,91.26256561,121.99768066,3,6,60000); //Utility 612 at� 625
//==================================[18�BPM/M]====================================//
	AddStaticVehicleEx(598,2159.6130,-1808.0250,13.1807,1.2832,0,7,60000); // Carro PM 26   [ 31 ]
	AddStaticVehicleEx(598,2165.4502,-1807.8947,13.1521,1.2832,0,7,60000); // Carro PM 27 [ 32 ]
	AddStaticVehicleEx(598,2170.7485,-1807.7767,13.1262,1.2832,0,7,60000); // Carro PM 28 [ 33 ]
	AddStaticVehicleEx(598,2176.8848,-1807.6400,13.0962,1.2832,0,7,60000); // Carro PM 29 [ 34 ]
	AddStaticVehicleEx(598,2182.4907,-1807.5150,13.0688,1.2832,0,7,60000); // Carro PM LV 30 [ 35 ]
	AddStaticVehicleEx(598,2188.3054,-1807.3855,13.0404,1.2832,0,7,60000); // Carro PM LV 31 [ 36 ]
	AddStaticVehicleEx(431,1600.5695,-1609.3182,13.5721,91.5394,0,7,60000); //ONIBUS 18�BPM/M
	AddStaticVehicleEx(497,1382.3799,-2459.5933,16.1028,86.2430,0,7,60000); // heli 1 11	    [ 51 ]
	AddStaticVehicleEx(497,1381.5819,-2422.9849,15.9057,81.9207,0,7,60000); // heli 2 12     [ 52 ]
//=========================================[MOTOS SONS]=======================================//
	AddStaticVehicleEx(463,694.8400,-460.8716,16.0412,269.4532,0,0,60000); // moto merce [639]
	AddStaticVehicleEx(463,668.3262,-470.8601,16.0409,89.4732,0,0,60000); // moto merce [640]
	AddStaticVehicleEx(463,668.3547,-467.7520,16.0409,89.4732,0,0,60000); // moto merce [641]
	AddStaticVehicleEx(463,668.3836,-464.6132,16.0410,89.4732,0,0,60000); // moto merce [642]
	AddStaticVehicleEx(463,668.4135,-461.3584,16.0410,89.4732,0,0,60000); // moto merce [639]
	AddStaticVehicleEx(463,668.4404,-458.4439,16.0410,89.4732,0,0,60000); // moto merce [640]
//========================================[Mayans]=============================================//
    AddStaticVehicleEx(459,1413.2274,461.8276,20.2922,149.7255,172,172,60000); //
	AddStaticVehicleEx(560,1410.7524,463.7870,19.9386,149.6240,172,172,60000); //
	AddStaticVehicleEx(562,1392.2125,464.8028,19.8166,154.9863,172,172,60000); //
	AddStaticVehicleEx(560,1407.2645,465.8053,19.9295,145.2640,172,172,60000); //
	AddStaticVehicleEx(463,1347.3801,470.0344,19.7491,251.3905,172,172,60000); //
	AddStaticVehicleEx(463,1348.0117,471.2953,19.7486,250.3570,172,172,60000); //
	AddStaticVehicleEx(463,1348.6621,472.5837,19.7476,246.6453,172,172,60000); //
	AddStaticVehicleEx(463,1349.0924,473.6324,19.7491,247.0878,172,172,60000); //
	AddStaticVehicleEx(463,1349.7487,474.9217,19.7474,250.5872,172,172,60000); //
	AddStaticVehicleEx(463,1350.4589,476.3939,19.7456,251.3738,172,172,60000); //
	AddStaticVehicleEx(463,1351.0270,477.7489,19.7440,249.3921,172,172,60000); //
	AddStaticVehicleEx(463,1351.7495,478.9979,19.7442,249.4977,172,172,60000); //
	AddStaticVehicleEx(463,1352.5040,480.9263,19.7515,246.5480,172,172,60000); //
	AddStaticVehicleEx(463,1373.8511,476.1917,19.5791,78.7652,172,172,60000); //
	AddStaticVehicleEx(463,1373.2737,474.4487,19.6247,76.9499,172,172,60000); //
//========================================[Carros 2�Cia]=======================================//
	AddStaticVehicleEx(597,960.3005,-897.4042,45.5970,184.0136,0,7,60000); //
	AddStaticVehicleEx(597,971.3165,-915.0956,45.5970,274.0914,0,7,60000); //
	AddStaticVehicleEx(597,974.4438,-919.7090,45.5909,273.2286,0,7,60000); //
	AddStaticVehicleEx(427,953.2256,-933.6945,42.5972,1.5191,0,7,60000); //
	AddStaticVehicleEx(427,971.6321,-930.1401,42.4275,97.0482,0,7,60000); //
	AddStaticVehicleEx(427,968.6755,-935.2943,41.7168,93.1338,0,7,60000); //
	AddStaticVehicleEx(497,1419.1614,-2420.3718,15.9046,92.4511,0,7,60000); //
	AddStaticVehicleEx(497,1420.6240,-2457.7378,15.9038,95.8565,0,7,60000); //

//Placa dos carros
    for(new i=1; i<MAX_VEHICLES; i++)
    {
	    SetVehicleToRespawn(i);
        SetVehicleNumberPlate(i, "{27f546}B{e9f013}S{0d0ddb}C");
        SetVehicleToRespawn(i);
    }
//======================[RELOGIO]==========================//
   	SetTimer("Clock", 1000, 1);
// Obs: Se colocar mais veiculos aumente as define totalveiculos e totalveiculos
// ----- Carros Casas --- Colocar por ultimo pra n�o mudar o id dos carros!

//|========================================!FIM! CARROS ORGS/GANGS/MAFIAS==================================|
	for(new h = 0; h < sizeof(HouseInfo); h++)
		{
			AddStaticVehicleEx(HouseInfo[h][hVec], HouseCarSpawns[h][0], HouseCarSpawns[h][1], HouseCarSpawns[h][2], HouseCarSpawns[h][3], HouseInfo[h][hVcol1], HouseInfo[h][hVcol2], 6000000);
			VTrancado[h+totalveiculosh] = 1;
			LockCar(h+totalveiculosh);
			SetVehicleToRespawn(h+totalveiculosh);
		}//100
// Obs : Se colocar mais casas aumente as define totalveiculosc
    for(new i = 1; i < sizeof(CarInfo); i++)
		{
			CarInfo[i][ownedvehicle] = AddStaticVehicleEx(CarInfo[i][cModel],CarInfo[i][cLocationx],CarInfo[i][cLocationy],CarInfo[i][cLocationz],CarInfo[i][cAngle],CarInfo[i][cColorOne],CarInfo[i][cColorTwo],6000000);
			SetVehicleToRespawn(CarInfo[i][ownedvehicle]);
		}
//----------------------------TextDraw------------------------------------------
SetTimer("CheckCarHealth",2000,true);
// Velocimetro
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    /*TextDrawdeData[i] = TextDrawCreate(496.000000,6.000000, "--");//496.000000,6.000000, "--"
 		TextDrawdeHora[i] = TextDrawCreate(551.000000,23.000000,"--");//551.000000,23.000000,"--"
 		TextDrawAlignment(TextDrawdeData[i],0);
 		TextDrawAlignment(TextDrawdeHora[i],0);
 		TextDrawBackgroundColor(TextDrawdeData[i],COR_PF);
 		TextDrawBackgroundColor(TextDrawdeHora[i],COR_PF);
 		TextDrawFont(TextDrawdeData[i],3);//jeito da data
 		TextDrawLetterSize(TextDrawdeData[i], 0.399999,2.000000);
 		TextDrawFont(TextDrawdeHora[i],3);//jeito da hora
 		TextDrawLetterSize(TextDrawdeHora[i],0.399999,2.000000);
 		TextDrawColor(TextDrawdeData[i],COR_GRO);//cor data
 		TextDrawColor(TextDrawdeHora[i],COR_GRO);//cor horas
 		TextDrawSetOutline(TextDrawdeData[i],1);
 		TextDrawSetOutline(TextDrawdeHora[i],1);
 		TextDrawSetProportional(TextDrawdeData[i],1);
 		TextDrawSetProportional(TextDrawdeHora[i],1);
 		TextDrawSetShadow(TextDrawdeData[i],1);
 		TextDrawSetShadow(TextDrawdeHora[i],1);*/
 		
 		TextDrawdeHora[i] = TextDrawCreate(551.000000, 23.000000, "--");
        TextDrawBackgroundColor(TextDrawdeHora[i], 16711935);
        TextDrawFont(TextDrawdeHora[i], 3);
        TextDrawLetterSize(TextDrawdeHora[i], 0.399999,2.000000);
        TextDrawColor(TextDrawdeHora[i], 255);
        TextDrawSetOutline(TextDrawdeHora[i], 1);
        TextDrawSetProportional(TextDrawdeHora[i], 1);

        TextDrawdeData[i] = TextDrawCreate(496.000000, 6.000000, "--");
        TextDrawBackgroundColor(TextDrawdeData[i], 16711935);
        TextDrawFont(TextDrawdeData[i], 3);
        TextDrawLetterSize(TextDrawdeData[i], 0.399999,2.000000);
        TextDrawColor(TextDrawdeData[i], 255);
        TextDrawSetOutline(TextDrawdeData[i], 1);
        TextDrawSetProportional(TextDrawdeData[i], 1);
        
        bsc[i] = TextDrawCreate(558.000000,418.000000,"   1.0");
		TextDrawBackgroundColor(bsc[i], 16711935);
        TextDrawFont(bsc[i], 3);
        TextDrawLetterSize(bsc[i], 0.399999,2.000000);
        TextDrawColor(bsc[i], 255);
        TextDrawSetOutline(bsc[i], 1);
        TextDrawSetProportional(bsc[i], 1);

        /*Speed[i] = TextDrawCreate(498.000000, 347.000000,"_");
		TextDrawUseBox(Speed[i],1);
		TextDrawBoxColor(Speed[i],0x00000065);
		TextDrawTextSize(Speed[i],633.000000, -19.000000);
		TextDrawAlignment(Speed[i],0);
		TextDrawBackgroundColor(Speed[i],0x000000FF);
		TextDrawFont(Speed[i],2);
		TextDrawLetterSize(Speed[i],0.270000, 1.000000);
		TextDrawColor(Speed[i],0xFFFFFFFF);
		TextDrawSetOutline(Speed[i],1);
		TextDrawSetProportional(Speed[i],1);
		TextDrawSetShadow(Speed[i],1);*/

		box[i] = TextDrawCreate(198.000000,396.000000,"_");
		TextDrawUseBox(box[i],1);
		TextDrawBoxColor(box[i],0x00000066);
		TextDrawTextSize(box[i],436.000000,0.000000);
		TextDrawAlignment(box[i],0);
		TextDrawBackgroundColor(box[i],0x00000033);
		TextDrawFont(box[i],3);
		TextDrawLetterSize(box[i],1.000000,4.000000);
		TextDrawColor(box[i],0xffffffff);
		TextDrawSetOutline(box[i],1);
		TextDrawSetProportional(box[i],1);
		TextDrawSetShadow(box[i],1);

		/*tacho[i] = TextDrawCreate(288.000000,380.000000,"Velocimetro");
		TextDrawUseBox(tacho[i],1);
		TextDrawBoxColor(tacho[i],0x00000066);
		TextDrawTextSize(tacho[i],343.000000,67.000000);
		TextDrawAlignment(tacho[i],0);
		TextDrawBackgroundColor(tacho[i],0x000000ff);
		TextDrawFont(tacho[i],2);
		TextDrawLetterSize(tacho[i],0.399999,1.400000);
		TextDrawColor(tacho[i],0xffffffff);
		TextDrawSetOutline(tacho[i],1);
		TextDrawSetProportional(tacho[i],1);
		TextDrawSetShadow(tacho[i],1);*/

		fahrzeug[i] = TextDrawCreate(198.000000,396.000000," ");
		TextDrawAlignment(fahrzeug[i],0);
		TextDrawBackgroundColor(fahrzeug[i],0x000000ff);
		TextDrawFont(fahrzeug[i],1);
		TextDrawLetterSize(fahrzeug[i],0.299999,1.000000);
		//TextDrawLetterSize(fahrzeug[i], 0.600000, 1.000000);
		TextDrawColor(fahrzeug[i],0xffffffff);
		TextDrawSetOutline(fahrzeug[i],1);
		TextDrawSetProportional(fahrzeug[i],1);
		TextDrawSetShadow(fahrzeug[i],1);

		kmh[i] = TextDrawCreate(345.000000,396.000000," ");
		TextDrawAlignment(kmh[i],0);
		TextDrawBackgroundColor(kmh[i],0x000000ff);
		TextDrawFont(kmh[i],1);
		TextDrawLetterSize(kmh[i],0.299999,1.000000);
		//TextDrawLetterSize(kmh[i], 0.600000, 1.000000);
		TextDrawColor(kmh[i],0xffffffff);
		TextDrawSetOutline(kmh[i],1);
		TextDrawSetProportional(kmh[i],1);
		TextDrawSetShadow(kmh[i],1);

		hoehe[i] = TextDrawCreate(199.000000,408.000000," ");
		TextDrawAlignment(hoehe[i],0);
		TextDrawBackgroundColor(hoehe[i],0x000000ff);
		TextDrawFont(hoehe[i],1);
		TextDrawLetterSize(hoehe[i],0.299999,1.000000);
		//TextDrawLetterSize(hoehe[i], 0.600000, 1.000000);
		TextDrawColor(hoehe[i],0xffffffff);
		TextDrawSetOutline(hoehe[i],1);
		TextDrawSetProportional(hoehe[i],1);
		TextDrawSetShadow(hoehe[i],1);

		zustand[i] = TextDrawCreate(345.000000,408.000000," ");
		TextDrawAlignment(zustand[i],0);
		TextDrawBackgroundColor(zustand[i],0x000000ff);
		TextDrawFont(zustand[i],1);
		TextDrawLetterSize(zustand[i],0.299999,1.000000);
		//TextDrawLetterSize(zustand[i], 0.600000, 1.000000);
		TextDrawColor(zustand[i],0xffffffff);
		TextDrawSetOutline(zustand[i],1);
		TextDrawSetProportional(zustand[i],1);
		TextDrawSetShadow(zustand[i],1);

        forum[i] = TextDrawCreate(1.000000,437.000000,"~r~[]~b~|~p~|~g~||~y~| ~p~www~r~.~g~brasilhardlife~r~.~y~com~r~.~p~br ~b~|~p~|~g~||~y~|~r~ [RPG v1.]");
		TextDrawUseBox(forum[i],1);
		TextDrawBoxColor(forum[i],0x00000066);
		TextDrawTextSize(forum[i],641.000000,0.000000);
		TextDrawAlignment(forum[i],0);
		TextDrawBackgroundColor(forum[i],0x000000ff);
		TextDrawFont(forum[i],3);
		TextDrawLetterSize(forum[i], 0.600000, 1.000000);
		TextDrawColor(forum[i],0xffffffff);
		TextDrawSetOutline(forum[i],1);
		TextDrawSetProportional(forum[i],1);
		TextDrawSetShadow(forum[i],1);
	}//
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 1000, 1);
	cartimer = SetTimer("CarCheck", 40000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	//SetTimer("LocalBots", 1000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	checkgastimer = SetTimer("CheckGas", RunortTime, 1);
    stoppedvehtimer = SetTimer("StoppedVehicle", RunortTime, 1);
    GZAero = GangZoneCreate(1395.7454,-2368.6396,1566.4358,-2204.4346);
    GZRefinaria = GangZoneCreate(-1939.3461,-1775.6359,-1790.0342,-1577.0688);
	GZFavela = GangZoneCreate(2117.333, -1069.962, 2261.841, -959.4252);
 	GZSkate = GangZoneCreate(1861.9410,-1450.6462,1976.5867,-1351.4069);
 	GZEstacao = GangZoneCreate(1687.613, -1958.204, 1813.106, -1859.51);
 	GZCasarao = GangZoneCreate(1098.173, -2084.531, 1299.723, -2005.577);
	return 1;
}
/*forward SyncUp();
public SyncUp()
{
	SyncTime();
}*/
public SyncTime()
{
	new string[64];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	Fixhour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(string, sizeof(string), "[]: Agora são %d:00 horas",shifthour);
		BroadCast(COLOR_DBLUE,string);
		ghour = tmphour;
		PayDay();
		SetHora();
	}
}
public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
public Production()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFishes] >= 5) { if(FishCornt[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCornt[i] += 1; } }
		    if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; SetPlayerDrunkLevel (i, 0); GameTextForPlayer(i, "~w~O efeito da bebida~n~~b~acabou", 3500, 1); }
 		    if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
		}
	}
}
public PayDay()
{
	new Conta,interest;
	new rent = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
			    if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Voc� n�o pagou a sua d�vida e foi preso.");
				    GameTextForPlayer(i, "~r~Preso!", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeaponsEx(i);
                    WantedPoints[i] = 0;
      				SetPlayerWantedLevel(i, 0);
					PlayerInfo[i][pJailTime] = 600;
					format(gstring, sizeof(gstring), "Voc� foi preso por %d segundos.", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
				}
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				Conta = PlayerInfo[i][pConta];
				new key = PlayerInfo[i][pPHousekey];
				if(key != 255)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetPlayerMoney(i))
					{
						PlayerInfo[i][pPHousekey] = 255;
						SendClientMessage(i, COLOR_WHITE, "Voc� foi expulso(a).");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
			    if(PlayerInfo[i][pVIP] == 1) { tmpintrate = 3; }
			    else if(PlayerInfo[i][pVIP] == 2) { tmpintrate = 4; }
			    else if(PlayerInfo[i][pVIP] == 3) { tmpintrate = 5; }
			    else if(PlayerInfo[i][pVIP] == 4) { tmpintrate = 6; }
			    else if(PlayerInfo[i][pVIP] == 5) { tmpintrate = 7; }
			    else if(PlayerInfo[i][pVIP] == 6) { tmpintrate = 8; }
			    else if(PlayerInfo[i][pVIP] == 7) { tmpintrate = 10; }
			    else if(PlayerInfo[i][pVIP] == 8) { tmpintrate = 20; }
				else { tmpintrate = 1; }
				if(PlayerInfo[i][pPayDay] >= 3)
				{
				    Tax += TaxValue;//Shorld work for every player online
				    PlayerInfo[i][pConta] -= TaxValue;
					new checks = PlayerInfo[i][pSalario];
				    new ebill = (PlayerInfo[i][pConta]/30000)*(PlayerInfo[i][pLevel]);
				    ConsumingMoney[i] = 1;
				    GivePlayerMoney(i, checks);
				    if(PlayerInfo[i][pConta] > 0)
				    {
				    	PlayerInfo[i][pConta] -= ebill;
				    	SBizzInfo[4][sbTill] += ebill;
					}
					else
					{
					    ebill = 0;
					}
					if(PlayerInfo[i][pVIP] == 0)
					{
					PlayerInfo[i][pExp]++;
					}
					if(PlayerInfo[i][pVIP] == 1)
					{
					PlayerInfo[i][pExp]+= 2;
					}
 					if(PlayerInfo[i][pVIP] == 2)
					{
					PlayerInfo[i][pExp]+= 4;
					}
					if(PlayerInfo[i][pVIP] == 3)
					{
					PlayerInfo[i][pExp]+= 6;
					}
					if(PlayerInfo[i][pVIP] == 4)
					{
					PlayerInfo[i][pExp]+= 8;
					}
					if(PlayerInfo[i][pVIP] == 5)
					{
					PlayerInfo[i][pExp]+= 10;
					}
					if(PlayerInfo[i][pVIP] == 6)
					{
					PlayerInfo[i][pExp]+= 12;
					}
					if(PlayerInfo[i][pVIP] == 7)
					{
					PlayerInfo[i][pExp]+= 14;
					}
					if(PlayerInfo[i][pVIP] == 8)
					{
					PlayerInfo[i][pExp]+= 18;
					}
					interest = (PlayerInfo[i][pConta]/1000)*(tmpintrate);
					PlayerInfo[i][pExp]++;
					PlayerPlayMusic(i);
					PlayerInfo[i][pConta] = Conta+interest;
						SendClientMessage(i, COLOR_WHITE, "|_B_S_C_|Pagamento|_B_S_C_|");
					format(gstring, sizeof(gstring), "Sal�rio:{00FF00}[R$%d]", checks);
					SendClientMessage(i, COLOR_WHITE, gstring);
					format(gstring, sizeof(gstring), "Juros:{00FF00}[0.%d por cento] {F2F2F2}| Juros:{00FF00}[R$199]",tmpintrate);
					SendClientMessage(i, COLOR_WHITE, gstring);
					format(gstring, sizeof(gstring), "Antigo Saldo Banc�rio:{ff0000}[R$%d] {F2F2F2}| Novo Saldo Banc�rio:{00FF00}[R$%d]", Conta,PlayerInfo[i][pConta]);
					SendClientMessage(i, COLOR_WHITE, gstring);
					PlayerPlaySound(i, 1185, 0.0, 0.0, 0.0);
					format(gstring, sizeof(gstring), "~y~-==- ~g~  Salario ~y~ -==-");
					GameTextForPlayer(i, gstring, 5000, 1);
					GivePlayerMoney(i,- 300);
					//Caixinha[i] ++;
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pSalario] = 0;
					PlayerInfo[i][pConnectTime] += 1;
					pban[i] = 0;
					if(PlayerInfo[i][pEmprego] > 0)
	    			{
	    	    		if(PlayerInfo[i][pContractTime] < 25)
	    	    		{
							PlayerInfo[i][pContractTime] ++;
						}
	    			}
				}
				else
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "* Voc� n�o jogou tempo suficiente para receber sal�rio!.");
				}
			}
		}
		new lolbagui;
		lolbagui = PlayerInfo[i][pExp];
		new nxtlevel = PlayerInfo[i][pLevel]+1;
		if(lolbagui >= nxtlevel*levelexp)
		{
		    GameTextForPlayer(i, "~g~Respeito Adquirido!~n~~r~Digite /comprarnivel!", 5000, 1);
		}
	}
	OOCNews(COLOR_WHITE, "Loteria: Ja comecou a loteria.");
	new rand = random(80);
	if(rand < 77) { rand += 3; }
	Lotto(rand);
	Checkprop();
	//return 1;
}

stock strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
stock strtokEx(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[64];
	while ((index < length) && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}
public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "Players/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
			    strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
			    new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
                format(var, 32, "SocioLevel=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
                format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
				format(var, 32, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
				format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
				format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
				format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
				format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
				format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
				format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
				format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
				format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
				format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
				if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
				{
                    PlayerInfo[playerid][pPos_x] = 1684.9;
					PlayerInfo[playerid][pPos_y] = -2244.5;
					PlayerInfo[playerid][pPos_z] = 13.5;
				}
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
				format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado2]);fwrite(hFile, var);
				format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
				format(var, 32, "Creditos=%d\n",PlayerInfo[playerid][pCreditos]);fwrite(hFile, var);
				format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
				format(var, 32, "Gun1=%d\n", PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n", PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n", PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n", PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Gun5=%d\n", PlayerInfo[playerid][pGun5]);fwrite(hFile, var);
				format(var, 32, "Gun6=%d\n", PlayerInfo[playerid][pGun6]);fwrite(hFile, var);
				format(var, 32, "Gun7=%d\n", PlayerInfo[playerid][pGun7]);fwrite(hFile, var);
				format(var, 32, "Gun8=%d\n", PlayerInfo[playerid][pGun8]);fwrite(hFile, var);
				format(var, 32, "Gun9=%d\n", PlayerInfo[playerid][pGun9]);fwrite(hFile, var);
				format(var, 32, "Gun10=%d\n", PlayerInfo[playerid][pGun10]);fwrite(hFile, var);
				format(var, 32, "Gun11=%d\n", PlayerInfo[playerid][pGun11]);fwrite(hFile, var);
				format(var, 32, "Gun12=%d\n", PlayerInfo[playerid][pGun12]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n", PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n", PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n", PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n", PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "Ammo5=%d\n", PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 32, "Ammo6=%d\n", PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 32, "Ammo7=%d\n", PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 32, "Ammo8=%d\n", PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 32, "Ammo9=%d\n", PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 32, "Ammo10=%d\n", PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 32, "Ammo11=%d\n", PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 32, "Ammo12=%d\n", PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				fclose(hFile);
			}
			new lstring[256];
			new lname[64];
			GetPlayerName(playerid,lname,sizeof(lname));
			SendClientMessage(playerid, 0x33FF00FF, "[]: Voc� agora pode digitar /logar <senha>");
			format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {00FF00}Registrada\n \n{F2F2F2}Digite a sua Senha para Logar !\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Login",lstring, "Logar", "Esperar");
	}
	return 1;
}
public OnPlayerLogin(playerid,password[])
{
	new tmp2[256];
    new string2[64];
	format(string2, sizeof(string2), "Players/%s.ini", PlayerName(playerid));
	strmid(PlayerInfo[playerid][pKey], dini_Get(string2, "Key"), 0, strlen(dini_Get(string2, "Key")), 255);
	new File: UserFile = fopen(string2, io_read);
	if (UserFile)
	{
		if(strcmp(PlayerInfo[playerid][pKey],password, true ) == 0)
		{
			    new key[ 256 ] , val[ 256 ];
			    new Data[ 256 ];
			    while (fread(UserFile, Data, sizeof(Data)))
				{
					key = ini_GetKey( Data );
					if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLevel] = strval( val ); }
			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
					if( strcmp( key , "SocioLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVIP] = strval( val ); }
                    if( strcmp( key , "DonateRank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVIP] = strval( val ); }
			        if( strcmp( key , "UpgradePoints" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][gPupgrade] = strval( val ); }
			        if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConnectTime] = strval( val ); }
			        if( strcmp( key , "Registered" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
			        if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSex] = strval( val ); }
			        if( strcmp( key , "Muted" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMuted] = strval( val ); }
			        if( strcmp( key , "Respect" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pExp] = strval( val ); }
			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCash] = strval( val ); }
			        if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConta] = strval( val ); }
			        if( strcmp( key , "Crimes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCrimes] = strval( val ); }
			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
			        if( strcmp( key , "Phonebook" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneBook] = strval( val ); }
			        if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLottoNr] = strval( val ); }
			        if( strcmp( key , "Fishes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishes] = strval( val ); }
			        if( strcmp( key , "BiggestFish" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBiggestFish] = strval( val ); }
			        if( strcmp( key , "Emprego" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEmprego] = strval( val ); }
			        if( strcmp( key , "Paycheck" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSalario] = strval( val ); }
			        if( strcmp( key , "HeadValue" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeadValue] = strval( val ); }
			        if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailed] = strval( val ); }
			        if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailTime] = strval( val ); }
			        if( strcmp( key , "Materiais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMats] = strval( val ); }
			        if( strcmp( key , "Maconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas] = strval( val ); }
			        if( strcmp( key , "Cocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas2] = strval( val ); }
			        if( strcmp( key , "Crack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas3] = strval( val ); }
			        if( strcmp( key , "Lider" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLider] = strval( val ); }
			        if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMembro] = strval( val ); }
			        if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCargo] = strval( val ); }
			        if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSkin] = strval( val ); }
			        if( strcmp( key , "ContractTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pContractTime] = strval( val ); }
			        if( strcmp( key , "DetSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDetSkill] = strval( val ); }
			        if( strcmp( key , "SexSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSexSkill] = strval( val ); }
			        if( strcmp( key , "BoxSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoxSkill] = strval( val ); }
			        if( strcmp( key , "LawSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLawSkill] = strval( val ); }
			        if( strcmp( key , "MechSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMechSkill] = strval( val ); }
			        if( strcmp( key , "NewsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNewsSkill] = strval( val ); }
			        if( strcmp( key , "DrogasSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogasSkill] = strval( val ); }
			        if( strcmp( key , "CookSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCookSkill] = strval( val ); }
			        if( strcmp( key , "FishSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishSkill] = strval( val ); }
			        if( strcmp( key , "pSHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHealth] = floatstr( val ); }
			        if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTeam] = strval( val ); }
			        if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPnumber] = strval( val ); }
			        if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPHousekey] = strval( val ); }
			        if( strcmp( key , "Bizz" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPbiskey] = strval( val ); }
			        if( strcmp( key , "Pos_x" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_x] = floatstr( val ); }
			        if( strcmp( key , "Pos_y" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_y] = floatstr( val ); }
			        if( strcmp( key , "Pos_z" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPos_z] = floatstr( val ); }
			        if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarLic] = strval( val ); }
                    if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFlyLic] = strval( val ); }
					if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoatLic] = strval( val ); }
			        if( strcmp( key , "FishLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishLic] = strval( val ); }
			        if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGunLic] = strval( val ); }
			        if( strcmp( key , "PayDay" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDay] = strval( val ); }
			        if( strcmp( key , "CDPlayer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCDPlayer] = strval( val ); }
			        if( strcmp( key , "Wins" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWins] = strval( val ); }
			        if( strcmp( key , "Loses" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLoses] = strval( val ); }
			        if( strcmp( key , "AlcoholPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAlcoholPerk] = strval( val ); }
			        if( strcmp( key , "DrugPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugPerk] = strval( val ); }
			        if( strcmp( key , "MiserPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMiserPerk] = strval( val ); }
			        if( strcmp( key , "PainPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPainPerk] = strval( val ); }
			        if( strcmp( key , "TraderPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTraderPerk] = strval( val ); }
			        if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTut] = strval( val ); }
			        if( strcmp( key , "Avisos" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWarns] = strval( val ); }
			        if( strcmp( key , "Married" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMarried] = strval( val ); }
			        if( strcmp( key , "MarriedTo" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMarriedTo], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Spawn" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSpawn] = strval( val ); }
			        if( strcmp( key , "SafeMaconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas] = strval( val ); }
			        if( strcmp( key , "SafeCocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas2] = strval( val ); }
			        if( strcmp( key , "SafeCrack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas3] = strval( val ); }
			        if( strcmp( key , "NivelProcurado" , true ) == 0 ) { val = ini_GetValue( Data ); WantedPoints[playerid] = strval( val ); }
			        if( strcmp( key , "SafeMateriais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][psMats] = strval( val ); }
			        if( strcmp( key , "Luta" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLuta] = strval( val ); }
			        if( strcmp( key , "Dorgado" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado] = strval( val ); }
			        if( strcmp( key , "Dorgado2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado2] = strval( val ); }
			        if( strcmp( key , "Doenca" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDoenca] = strval( val ); }
			        if( strcmp( key , "Creditos" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCreditos] = strval( val ); }
			        if( strcmp( key , "LU" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pLastLogin], val, 0, strlen(val)-1, 255); }
			        if( strcmp( key , "Gun1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun1] = strval( val ); }
					if( strcmp( key , "Gun2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun2] = strval( val ); }
					if( strcmp( key , "Gun3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun3] = strval( val ); }
					if( strcmp( key , "Gun4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun4] = strval( val ); }
					if( strcmp( key , "Gun5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun5] = strval( val ); }
					if( strcmp( key , "Gun6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun6] = strval( val ); }
					if( strcmp( key , "Gun7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun7] = strval( val ); }
					if( strcmp( key , "Gun8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun8] = strval( val ); }
					if( strcmp( key , "Gun9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun9] = strval( val ); }
					if( strcmp( key , "Gun10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun10] = strval( val ); }
					if( strcmp( key , "Gun11" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun11] = strval( val ); }
					if( strcmp( key , "Gun12" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGun12] = strval( val ); }
					if( strcmp( key , "Ammo1" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo1] = strval( val ); }
					if( strcmp( key , "Ammo2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo2] = strval( val ); }
					if( strcmp( key , "Ammo3" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo3] = strval( val ); }
					if( strcmp( key , "Ammo4" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo4] = strval( val ); }
					if( strcmp( key , "Ammo5" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo5] = strval( val ); }
					if( strcmp( key , "Ammo6" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo6] = strval( val ); }
					if( strcmp( key , "Ammo7" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo7] = strval( val ); }
					if( strcmp( key , "Ammo8" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo8] = strval( val ); }
					if( strcmp( key , "Ammo9" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo9] = strval( val ); }
					if( strcmp( key , "Ammo10" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo10] = strval( val ); }
					if( strcmp( key , "Ammo11" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo11] = strval( val ); }
					if( strcmp( key , "Ammo12" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAmmo12] = strval( val ); }
					logouagora[playerid] = 1;
			        CheckOwner(playerid);
			        //CheckAdmin(playerid);
			        CheckOwnerb(playerid);
					CheckOwnerh(playerid);
					//CheckVip(playerid);
                }//end while
                fclose(UserFile);//close the file after everything has been read in the while
		}
		else
		{
			new lstring[256];
			new lname[64];
			GetPlayerName(playerid,lname,sizeof(lname));
			SendClientMessage(playerid, COLOR_YELLOW, "[]: Senha errada! - Se errar a senha 5 vezes ter� o IP Banido!");
			//SetPlayerCameraPos(playerid,1483.8164,-1727.4125,13.3828);
			//SetPlayerCameraLookAt(playerid,1481.0267,-1772.1371,19.4570);
			format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {00FF00}Registrada\n \n{F2F2F2}Digite a sua Senha para Logar !\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Login",lstring, "Logar", "Esperar");
	        fclose(UserFile);
	        gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 5)
			{
				new stri[64], tmp[20], tmp3[20], ip[16];
				GetPlayerIp(playerid, ip, sizeof ip);
				format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
				getdate(Ano, Mes, Dia);
				format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
				gettime(Hora, Minuto, Segundo);
				format(tmp3, 20, "%d:%d:%d", Hora, Minuto, Segundo);
				format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
				dini_Create(stri);
				dini_Set(stri,"Motivo","Errou a senha 5 vezes");
				dini_Set(stri,"Admin","Administrador_BOT");
				dini_Set(stri,"Data",tmp);
				dini_Set(stri,"Hora",tmp3);
				dini_Set(stri,"Nick",PlayerName(playerid));
			}
	        return 1;
		}
		ClearChatbox(playerid, 100);
		ResetPlayerMoney(playerid);
		ConsumingMoney[playerid] = 1;
		GivePlayerMoney(playerid,PlayerInfo[playerid][pCash]);
		CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
		SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
		if(PlayerInfo[playerid][pReg] == 0)
		{
			PlayerInfo[playerid][pLevel] = 3;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pPos_x] = 2246.6;
			PlayerInfo[playerid][pPos_y] = -1161.9;
			PlayerInfo[playerid][pPos_z] = 1029.7;
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 255;
			PlayerInfo[playerid][pTeam] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
			new randphone = 1000 + random(8999);//
			PlayerInfo[playerid][pPnumber] = randphone;
			PlayerInfo[playerid][pPHousekey] = 255;
			PlayerInfo[playerid][pPbiskey] = 255;
			PlayerInfo[playerid][pConta] = 100;
			PlayerInfo[playerid][pReg] = 1;
			PlayerInfo[playerid][pEmprego] = 0;
			PlayerInfo[playerid][pKills] = 0;
			PlayerInfo[playerid][pDeaths] = 0;
			ResetPlayerMoney(playerid);
		}
		if(PlayerInfo[playerid][pWarns] == 1) //1 aviso
		{
		    SendClientMessage(playerid, COLOR_YELLOW, "Sua Conta J� tem 1 Aviso!");
		    SendClientMessage(playerid, COLOR_YELLOW, "Se Voc� tiver 3 avisos ser� banido automaticamente!");
		}
		if(PlayerInfo[playerid][pWarns] == 2) //2 avisos
		{
		    SendClientMessage(playerid, COLOR_YELLOW, "Sua Conta J� tem 2 Avisos!");
		    SendClientMessage(playerid, COLOR_YELLOW, "Se Voc� tiver 3 avisos ser� banido automaticamente!");
		}
		if(PlayerInfo[playerid][pWarns] >= 3) //3 avisos
		{
		    /*SendClientMessage(playerid, COLOR_YELLOW, "Sua Conta cont�m tem 3 Avisos!");
		    SendClientMessage(playerid, COLOR_YELLOW, "Voc� foi banido automaticamente!");
		    getdate(Ano, Mes, Dia);
		    SBan(playerid, "3 Avisos", "Autom�tico");*/
		    PlayerInfo[playerid][pWarns] = 0;
		}
		if(PlayerInfo[playerid][pAdmin] >= 1345)//autoban
		{
		    getdate(Ano, Mes, Dia);
			SBan(playerid, "Admin maior que 1345", "Autom�tico");
		}
		printf("%s has logged in.",PlayerName(playerid));
		new Info[6][10];
	    split(PlayerInfo[playerid][pLastLogin],Info,'/');
      	SendClientMessage(playerid, COLOR_YELLOW, "==================================");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, " IP :.brasilstylecity.com:7777    ");
		SendClientMessage(playerid, COR_GRO, " Criador/Dono/Scripter: LeonardO_Vieira        ");
		SendClientMessage(playerid, COR_GRO, " Dono: Valter_Tadashi    ");
		SendClientMessage(playerid, COR_GRO, " Sub-Donos: Gustavo_Brito & Crysttyan_Herryson");
		SendClientMessage(playerid, COR_GRO, " WebSite: www.brasilstylecity.com.br   ");
		SendClientMessage(playerid, COR_GRO, " Team Speak 3: 64.120.209.162:4022  ");
        SendClientMessage(playerid, COR_VAGOS, "Bem Vindo Ao  !");
        //format(string2, sizeof(string2), "Seu �ltimo login foi no dia %d/%d/%d hor�rio %d:%d:%d",strval(Info[0]),strval(Info[1]),strval(Info[2]),strval(Info[3]),strval(Info[4]),strval(Info[5]));
		//SendClientMessage(playerid, COLOR_YELLOW,string2);
        DateProp(playerid);
  		new dia,mes,ano,hora,mins,seg,string3[20];
	    getdate(ano,mes,dia);
	    gettime(hora,mins,seg);
  		format(string3, sizeof(string3),"%d/%d/%d/%d/%d/%d",dia,mes,ano,hora,mins,seg);
  		strmid(PlayerInfo[playerid][pLastLogin],string3,0,strlen(string3),255);
		format(gstring, 128, "AdmAviso: [%d]%s Est� Online! Fique Atento!",playerid,PlayerName(playerid));
		SendMessageToOthersAdmins(playerid, COLOR_YELLOW, gstring);
        if (VipCheck(playerid) == 0 && PlayerInfo[playerid][pVIP] > 0)//teste vipinfo
		{
			PlayerInfo[playerid][pVIP] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Voc� n�o � mais um jogador VIP/S�cio, renove seu VIP e receba seus benef�cios de volta");
		}
		else if (PlayerInfo[playerid][pVIP] == 1)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador Vip Bronze");
  		}
    	else if (PlayerInfo[playerid][pVIP] == 2)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador Vip Prata");
		}
		else if (PlayerInfo[playerid][pVIP] == 3)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador Vip Ouro");
  		}
    	else if (PlayerInfo[playerid][pVIP] == 4)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador S�cio Bronze");
		}
		else if (PlayerInfo[playerid][pVIP] == 5)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador S�cio Prata");
  		}
    	else if (PlayerInfo[playerid][pVIP] == 6)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador S�cio Ouro");
		}
		else if (PlayerInfo[playerid][pVIP] == 7)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador S�cio Admin");
		}
		else if (PlayerInfo[playerid][pVIP] == 8)
		{
			SendClientMessage(playerid, COLOR_AZULBB,"[]: Voc� � jogador S�cio Dono");
		}
		else if(PlayerInfo[playerid][pAdmin] > 0)
		{
			format(string2, sizeof(string2), "[]: Voc� logou no servidor com level %d de Admin.",PlayerInfo[playerid][pAdmin]);
			SendClientMessage(playerid, COLOR_LIGHTRED,string2);
		}
		SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);
		if(gTeam[playerid] == 0)
		{
			gTeam[playerid] = 3;
		}
		else
		{
			gTeam[playerid] = PlayerInfo[playerid][pTeam];
		}
		MedicBill[playerid] = 0;
		gPlayerLogged[playerid] = 1;
		SpawnPlayer(playerid);
		format(tmp2, sizeof(tmp2), "~n~ ~g~Bem Vindo ~p~%s", PlayerName(playerid));
		GameTextForPlayer(playerid, tmp2, 8000, 3);
  		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
    	//SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
    	ScoreLevel(playerid);
    	new check = PlayerInfo[playerid][pLevel]+1;
        format(gstring,sizeof(gstring),"~w~Nick: ~g~%s ~w~Level: ~g~%d ~w~Respeito: ~g~%d~w~/~g~%d", PlayerName(playerid), PlayerInfo[playerid][pLevel],
		PlayerInfo[playerid][pExp], check*levelexp);
	    //TextDrawSetString(forum2[playerid], gstring);
	    gmsg[playerid] = 1;
    	tempotd[playerid] = SetTimerEx("PiscarTD", 30000, 1, "i", playerid);
		if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] <= 1339)
		{
			new AdminName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, AdminName, sizeof(AdminName));
    		format(gstring, sizeof(gstring), "~p~%s: ~g~ON", AdminName);
			for(new i=0; i<MAX_PLAYERS; i++)
			{
    			if(IsPlayerConnected(i)) GameTextForPlayer(i, gstring , 5000, 1);
			}
		}
		TempoLogin = SetTimerEx("LoginAgora", 10000, 0, "i", playerid);
	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
	{
	    //if(GetPlayerInterior(playerid) >= 1) SetPlayerArmedWeapon(playerid,0);
		if(GetTickCount() - gpTimes[playerid] >= 1000)
		{
			gpTimes[playerid] = GetTickCount();
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "Players/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
				format(var, 32, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
				format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
				format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
				format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
				format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
				format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
				format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
				format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
				format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
				format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
				if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
				{
					PlayerInfo[playerid][pPos_x] = 1684.9;
					PlayerInfo[playerid][pPos_y] = -2244.5;
					PlayerInfo[playerid][pPos_z] = 13.5;
				}
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
				format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
				format(var, 32, "Creditos=%d\n",PlayerInfo[playerid][pCreditos]);fwrite(hFile, var);
				format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
				GetPlayerWeaponData(playerid, 1, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
		    	GetPlayerWeaponData(playerid, 2, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
		    	GetPlayerWeaponData(playerid, 3, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
		    	GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
		    	GetPlayerWeaponData(playerid, 5, PlayerInfo[playerid][pGun5], PlayerInfo[playerid][pAmmo5]);
		    	GetPlayerWeaponData(playerid, 6, PlayerInfo[playerid][pGun6], PlayerInfo[playerid][pAmmo6]);
		    	GetPlayerWeaponData(playerid, 7, PlayerInfo[playerid][pGun7], PlayerInfo[playerid][pAmmo7]);
		    	GetPlayerWeaponData(playerid, 8, PlayerInfo[playerid][pGun8], PlayerInfo[playerid][pAmmo8]);
		    	GetPlayerWeaponData(playerid, 9, PlayerInfo[playerid][pGun9], PlayerInfo[playerid][pAmmo9]);
		    	GetPlayerWeaponData(playerid, 10, PlayerInfo[playerid][pGun10], PlayerInfo[playerid][pAmmo10]);
		    	GetPlayerWeaponData(playerid, 11, PlayerInfo[playerid][pGun11], PlayerInfo[playerid][pAmmo11]);
		    	GetPlayerWeaponData(playerid, 12, PlayerInfo[playerid][pGun12], PlayerInfo[playerid][pAmmo12]);
				format(var, 32, "Gun1=%d\n", PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n", PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n", PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n", PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Gun5=%d\n", PlayerInfo[playerid][pGun5]);fwrite(hFile, var);
				format(var, 32, "Gun6=%d\n", PlayerInfo[playerid][pGun6]);fwrite(hFile, var);
				format(var, 32, "Gun7=%d\n", PlayerInfo[playerid][pGun7]);fwrite(hFile, var);
				format(var, 32, "Gun8=%d\n", PlayerInfo[playerid][pGun8]);fwrite(hFile, var);
				format(var, 32, "Gun9=%d\n", PlayerInfo[playerid][pGun9]);fwrite(hFile, var);
				format(var, 32, "Gun10=%d\n", PlayerInfo[playerid][pGun10]);fwrite(hFile, var);
				format(var, 32, "Gun11=%d\n", PlayerInfo[playerid][pGun11]);fwrite(hFile, var);
				format(var, 32, "Gun12=%d\n", PlayerInfo[playerid][pGun12]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n", PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n", PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n", PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n", PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "Ammo5=%d\n", PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 32, "Ammo6=%d\n", PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 32, "Ammo7=%d\n", PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 32, "Ammo8=%d\n", PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 32, "Ammo9=%d\n", PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 32, "Ammo10=%d\n", PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 32, "Ammo11=%d\n", PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 32, "Ammo12=%d\n", PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				fclose(hFile);
			}
		}
		/*if(!PlayerInfo[playerid][pMembro])
        {
        	if(GetPlayerWeapon(playerid) == 7 || GetPlayerWeapon(playerid) == 7 || GetPlayerWeapon(playerid) == 26 || GetPlayerWeapon(playerid) == 27  || GetPlayerWeapon(playerid) == 32 || GetPlayerWeapon(playerid) == 80 || GetPlayerWeapon(playerid) == 36 || GetPlayerWeapon(playerid) == 45 || GetPlayerWeapon(playerid) == 37 || GetPlayerWeapon(playerid) == 45 || GetPlayerWeapon(playerid) == 95)
        	{
            	    new string[128];
            	    GetPlayerName(playerid, sendername, sizeof(sendername));
            	    format(string, sizeof(string), "ANTICHEAT: %s[%d] foi banido automaticamente. Motivo: Weapon Hack", sendername,playerid);
            	    SendClientMessageToAll(COLOR_LIGHTRED, string);
            	    BanLog(string);
            	    SendClientMessage(playerid, 0x80FF00AA, "� Voc� foi banido deve ter feito algo errado");
            	    SendClientMessage(playerid, 0xFFFFFFAA, "� Se foi banido injustamente Tire uma ''SS'' e tente o contato com um de nossos Admins!");
            	    GameTextForPlayer(playerid,"~r~banido", 2500, 3);
            	    getdate( Dia, Mes, Ano);
            	    SBan(playerid, "Usando Sobeit", "Autom�tico");
            	    return 1;
        	}
		}*/
		if(!PlayerInfo[playerid][pVIP] && PlayerInfo[playerid][pAdmin])
        {
        	if(GetPlayerSpecialAction(playerid) == 2)
        	{
                new string[128];
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "ANTICHEAT: %s(ID:%d) foi banido automaticamente. Motivo: Uso de JetPack", sendername,playerid);
                SendClientMessageToAll(COLOR_LIGHTRED, string);
                BanLog(string);
                SendClientMessage(playerid, 0x80FF00AA, "� Voc� foi banido deve ter feito algo errado!");
                SendClientMessage(playerid, 0xFFFFFFAA, "� Se foi banido injustamente Tire um PrintScreen e tente o contato com um de nossos Admins!");
                GameTextForPlayer(playerid,"~r~banido", 2500, 3);
                getdate( Dia, Mes, Ano);
                SBan(playerid, "Usando Sobeit", "Autom�tico");
                return 1;
        	}
        }
		if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    	{
        	for(new i = 0; i < sizeof(SpikeInfo); i++)
  	    	{
  	       		if(IsPlayerInRangeOfPoint(playerid, 3.0, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
           		{
  	           		if(SpikeInfo[i][sCreated] == 1)
  	           		{
  	               		new panels, doors, luzes, tires;
  	               		new carid = GetPlayerVehicleID(playerid);
		           		GetVehicleDamageStatus(carid, panels, doors, luzes, tires);
		           		tires = encode_tires(1, 1, 1, 1);
		           		UpdateVehicleDamageStatus(carid, panels, doors, luzes, tires);
  	           		}
  	       		}
  	    	}
  		}
	}
	return 1;
}
forward OnPlayerSave(playerid);
public OnPlayerSave(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid])
		{
			new string3[64];
			new playername3[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername3, sizeof(playername3));
			format(string3, sizeof(string3), "Players/%s.ini", playername3);
			new File: hFile = fopen(string3, io_write);
			if (hFile)
			{
				new var[32];
				format(var, 32, "Key=%s\n", PlayerInfo[playerid][pKey]);fwrite(hFile, var);
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				format(var, 32, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
				format(var, 32, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
				format(var, 32, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
				format(var, 32, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
				format(var, 32, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
				format(var, 32, "Registered=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
				format(var, 32, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
				format(var, 32, "Muted=%d\n",PlayerInfo[playerid][pMuted]);fwrite(hFile, var);
				format(var, 32, "Respect=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
				format(var, 32, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
				format(var, 32, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
				format(var, 32, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
				format(var, 32, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
				format(var, 32, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
				format(var, 32, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
				format(var, 32, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
				format(var, 32, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
				format(var, 32, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
				format(var, 32, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
				format(var, 32, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
				format(var, 32, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
				format(var, 32, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
				format(var, 32, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
				format(var, 32, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
				format(var, 32, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
				format(var, 32, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
				format(var, 32, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
				format(var, 32, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
				format(var, 32, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
				format(var, 32, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
				format(var, 32, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
				format(var, 32, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
				format(var, 32, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
				format(var, 32, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
				format(var, 32, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
				format(var, 32, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
				format(var, 32, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
				format(var, 32, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
				format(var, 32, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
				format(var, 32, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
				format(var, 32, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
				format(var, 32, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
				format(var, 32, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
				format(var, 32, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
				format(var, 32, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
				format(var, 32, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
				format(var, 32, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
				format(var, 32, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
				format(var, 32, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
				format(var, 32, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
				format(var, 32, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
				format(var, 32, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
				if ((PlayerInfo[playerid][pPos_x]==0.0 && PlayerInfo[playerid][pPos_y]==0.0 && PlayerInfo[playerid][pPos_z]==0.0))
				{
					PlayerInfo[playerid][pPos_x] = 1684.9;
					PlayerInfo[playerid][pPos_y] = -2244.5;
					PlayerInfo[playerid][pPos_z] = 13.5;
				}
				if(Spectate[playerid] != 255)
				{
					PlayerInfo[playerid][pPos_x] = Unspec[playerid][sPx];
					PlayerInfo[playerid][pPos_y] = Unspec[playerid][sPy];
					PlayerInfo[playerid][pPos_z] = Unspec[playerid][sPz];
					PlayerInfo[playerid][pInt] = Unspec[playerid][sPint];
					PlayerInfo[playerid][pLocal] = Unspec[playerid][sLocal];
				}
				format(var, 32, "Pos_x=%.1f\n",PlayerInfo[playerid][pPos_x]);fwrite(hFile, var);
				format(var, 32, "Pos_y=%.1f\n",PlayerInfo[playerid][pPos_y]);fwrite(hFile, var);
				format(var, 32, "Pos_z=%.1f\n",PlayerInfo[playerid][pPos_z]);fwrite(hFile, var);
				format(var, 32, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 32, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
				format(var, 32, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
				format(var, 32, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
				format(var, 32, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
				format(var, 32, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 32, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
				format(var, 32, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
				format(var, 32, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
				format(var, 32, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
				format(var, 32, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
				format(var, 32, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
				format(var, 32, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
				format(var, 32, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
				format(var, 32, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
				format(var, 32, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
				format(var, 32, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
				format(var, 32, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
				format(var, 32, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
				format(var, 32, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
				format(var, 32, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
				format(var, 32, "Creditos=%d\n",PlayerInfo[playerid][pCreditos]);fwrite(hFile, var);
				format(var, 32, "LU=%s\n",PlayerInfo[playerid][pLastLogin]);fwrite(hFile, var);
				GetPlayerWeaponData(playerid, 1, PlayerInfo[playerid][pGun1], PlayerInfo[playerid][pAmmo1]);
		    	GetPlayerWeaponData(playerid, 2, PlayerInfo[playerid][pGun2], PlayerInfo[playerid][pAmmo2]);
		    	GetPlayerWeaponData(playerid, 3, PlayerInfo[playerid][pGun3], PlayerInfo[playerid][pAmmo3]);
		    	GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][pGun4], PlayerInfo[playerid][pAmmo4]);
		    	GetPlayerWeaponData(playerid, 5, PlayerInfo[playerid][pGun5], PlayerInfo[playerid][pAmmo5]);
		    	GetPlayerWeaponData(playerid, 6, PlayerInfo[playerid][pGun6], PlayerInfo[playerid][pAmmo6]);
		    	GetPlayerWeaponData(playerid, 7, PlayerInfo[playerid][pGun7], PlayerInfo[playerid][pAmmo7]);
		    	GetPlayerWeaponData(playerid, 8, PlayerInfo[playerid][pGun8], PlayerInfo[playerid][pAmmo8]);
		    	GetPlayerWeaponData(playerid, 9, PlayerInfo[playerid][pGun9], PlayerInfo[playerid][pAmmo9]);
		    	GetPlayerWeaponData(playerid, 10, PlayerInfo[playerid][pGun10], PlayerInfo[playerid][pAmmo10]);
		    	GetPlayerWeaponData(playerid, 11, PlayerInfo[playerid][pGun11], PlayerInfo[playerid][pAmmo11]);
		    	GetPlayerWeaponData(playerid, 12, PlayerInfo[playerid][pGun12], PlayerInfo[playerid][pAmmo12]);
				format(var, 32, "Gun1=%d\n", PlayerInfo[playerid][pGun1]);fwrite(hFile, var);
				format(var, 32, "Gun2=%d\n", PlayerInfo[playerid][pGun2]);fwrite(hFile, var);
				format(var, 32, "Gun3=%d\n", PlayerInfo[playerid][pGun3]);fwrite(hFile, var);
				format(var, 32, "Gun4=%d\n", PlayerInfo[playerid][pGun4]);fwrite(hFile, var);
				format(var, 32, "Gun5=%d\n", PlayerInfo[playerid][pGun5]);fwrite(hFile, var);
				format(var, 32, "Gun6=%d\n", PlayerInfo[playerid][pGun6]);fwrite(hFile, var);
				format(var, 32, "Gun7=%d\n", PlayerInfo[playerid][pGun7]);fwrite(hFile, var);
				format(var, 32, "Gun8=%d\n", PlayerInfo[playerid][pGun8]);fwrite(hFile, var);
				format(var, 32, "Gun9=%d\n", PlayerInfo[playerid][pGun9]);fwrite(hFile, var);
				format(var, 32, "Gun10=%d\n", PlayerInfo[playerid][pGun10]);fwrite(hFile, var);
				format(var, 32, "Gun11=%d\n", PlayerInfo[playerid][pGun11]);fwrite(hFile, var);
				format(var, 32, "Gun12=%d\n", PlayerInfo[playerid][pGun12]);fwrite(hFile, var);
				format(var, 32, "Ammo1=%d\n", PlayerInfo[playerid][pAmmo1]);fwrite(hFile, var);
				format(var, 32, "Ammo2=%d\n", PlayerInfo[playerid][pAmmo2]);fwrite(hFile, var);
				format(var, 32, "Ammo3=%d\n", PlayerInfo[playerid][pAmmo3]);fwrite(hFile, var);
				format(var, 32, "Ammo4=%d\n", PlayerInfo[playerid][pAmmo4]);fwrite(hFile, var);
				format(var, 32, "Ammo5=%d\n", PlayerInfo[playerid][pAmmo5]);fwrite(hFile, var);
				format(var, 32, "Ammo6=%d\n", PlayerInfo[playerid][pAmmo6]);fwrite(hFile, var);
				format(var, 32, "Ammo7=%d\n", PlayerInfo[playerid][pAmmo7]);fwrite(hFile, var);
				format(var, 32, "Ammo8=%d\n", PlayerInfo[playerid][pAmmo8]);fwrite(hFile, var);
				format(var, 32, "Ammo9=%d\n", PlayerInfo[playerid][pAmmo9]);fwrite(hFile, var);
				format(var, 32, "Ammo10=%d\n", PlayerInfo[playerid][pAmmo10]);fwrite(hFile, var);
				format(var, 32, "Ammo11=%d\n", PlayerInfo[playerid][pAmmo11]);fwrite(hFile, var);
				format(var, 32, "Ammo12=%d\n", PlayerInfo[playerid][pAmmo12]);fwrite(hFile, var);
				fclose(hFile);
			}
		}
	}
	return 1;
}
public OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hHealthx],
		HouseInfo[idx][hHealthy],
		HouseInfo[idx][hHealthz],
		HouseInfo[idx][hArmorrx],
		HouseInfo[idx][hArmorry],
		HouseInfo[idx][hArmorrz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hDiscription],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hArm],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hDate],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hWorld]);

		HouseInfo[idx][hWorld] = idx;
		if(idx == 0)
		{
			file2 = fopen("Configs/property.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior]);
		if(idx == 0)
		{
			file2 = fopen("Configs/bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked]);
		if(idx == 0)
		{
			file2 = fopen("Configs/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

public BroadCast(COLOR,const string[])
{
	SendClientMessageToAll(COLOR, string);
	return 1;
}

public LBroadCast(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pCargo] == 5 || PlayerInfo[i][pLider] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}

public ABroadCast(COLOR,const string[],level)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
public OOCNews(COLOR,const string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(!gNews[i])
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

public SendEmpregoMessage(Emprego, COLOR, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pEmprego] == Emprego)
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

public SendFamilyMessage(family, COLOR, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMembro] == family || PlayerInfo[i][pLider] == family)
		    {
                if(!gFam[i])
                {
					SendClientMessage(i, COLOR, string);
				}
			}
		}
	}
}
public SendIRCMessage(channel, COLOR, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayersChannel[i] == channel)
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
		}
	}
}

public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}

//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------
public OnPlayerCommandText(playerid, cmdtext[])
{
    if (strcmp("/ircamera", cmdtext, true, 10) == 0){
    if(IsPlayerAdmin(playerid) == 1){
    }else{
    SendClientMessage(playerid,COLOR_WHITE,"Voc� N�o Est� Logado Na RCON !");
    return 1;}
    SetPlayerInterior(playerid,3);
    SetPlayerPos(playerid,256.470214,64.306282,1003.640625);
    return 1;}
//============================CAMERA==============================//
       if (strcmp("/camera", cmdtext, true, 10) == 0)
       {
         if(IsPlayerInRangeOfPoint(playerid, 1,256.470214,64.306282,1003.640625))
         {
         }else{
         SendClientMessage(playerid, COLOR_WHITE, "Voc� N�o Est� no Centro de Seguran�a!");
         return 1;
         }
             Camera[playerid] = 1;
             ShowPlayerDialog(playerid, CSEGURANCA, DIALOG_STYLE_LIST, "- Cameras -Criado Por : LeonardO_Vieira - ", "Lugares Importantes\nRuas Importantes\nDesligar Camera", "Selecionar", "Sair");
             return 1;
       }
	   if (strcmp("/desligarcamera", cmdtext, true, 10) == 0)
       {
       if(Camera[playerid] == 1)
       {
            Camera[playerid] = 0;
            } else {
            SendClientMessage(playerid, COLOR_WHITE, " Voc� N�o Est� Usando a Camera! :C");
           return 1;
            }
            SetCameraBehindPlayer(playerid);
		    SetPlayerInterior(playerid,6);
            TogglePlayerControllable(playerid,1);
            SetPlayerPos(playerid,256.470214,64.306282,1003.640625);
           return 1;
     }
     if (strcmp("/regras", cmdtext, true, 10) == 0)
	 {
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido SPAWN [ Puni��o: Mute ] [ Insist�ncia: Advert�ncia ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido DM e DB [ Puni��o: Carandiru ] [ Insist�ncia: Advert�ncia ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido Ofensas e Provoca��o [ Puni��o: Mute ] [ Insist�ncia: Advert�ncia e Carandiru ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido divulgar servidorer e mencionar [ Puni��o: BAN ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido Cheats/Mods que causam vantagens sobre os jogadores [ Puni��o: BAN ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido ANT-RPG ( Exemplo: relogar para n�o ser preso ) [ Puni��o: Advert�ncia e Carandiru ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido Abuso de qualquer bug [ Puni��o: Advert�ncia ] [ Insist�ncia: BAN ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Proibido Uso de Joypad [ Puni��o: Advert�ncia ] [ Insist�ncia: BAN ]");
		    SendClientMessage(playerid, COLOR_LIGHTRED," Obs : Leia as regras do forum,www.brasilstylecity.com.br!");
  		}
		return 1;
	}
	if(strcmp(cmdtext,"/infogays",true)==0)
    {
        new meudialog[2000]; // DEFININDO E O NUMERO DE CARACTER�STICAS ABAIXO !
        strins(meudialog,"Lider = Iryston_Vinicius(Vini_Staff) \n",strlen(meudialog)); // ESCREVA SEMPRE COM O \n No Final Para Pular Linha
        strins(meudialog,"Sub-Lider = Coronel_Brito \n",strlen(meudialog));
        strins(meudialog,"Vaga 1 = Major_Alves \n",strlen(meudialog));
        strins(meudialog,"Vaga 2 = SGT_Luiz \n",strlen(meudialog)); // ESCREVA SEMPRE COM O \n No Final Para Pular Linha
        strins(meudialog,"Vaga 3 = Sargento_Martins \n",strlen(meudialog));
        strins(meudialog,"Vaga 4 = Cabo_Teixeira \n",strlen(meudialog));
        strins(meudialog,"Vaga 5 = Juliano_Staff \n",strlen(meudialog));
        strins(meudialog,"Vaga 6 = Crysttyan_Herryson \n",strlen(meudialog));
        strins(meudialog,"Vaga 7 = Malukinho_Staff \n",strlen(meudialog));
        strins(meudialog,"Vaga 8 = xXturner_Matador \n",strlen(meudialog));
        strins(meudialog,"Vaga 9 = Cabo_Renan \n",strlen(meudialog));
        strins(meudialog,"Vaga 10 = SGT_Salom�o \n",strlen(meudialog));
        strins(meudialog,"Vaga 11 = Luiz_Ricardo \n",strlen(meudialog));
        ShowPlayerDialog(playerid,1281, DIALOG_STYLE_MSGBOX, " Gays do Servidor ",meudialog, "Ok", "Cancelar"); // apenas 1 Botao c kiser coloca 2 !! � O CABE�ALHO
        return 1;
    }
	if(!strcmp(cmdtext,"/batalha",true))
    {
        if(IsACop(playerid))
        {
            if(Equipamentos[playerid] == 1)
            {
                RemovePlayerAttachedObject(playerid,3);
                Equipamentos[playerid] = 0;
                return 1;
            }
            if(Equipamentos[playerid] == 0)
            {
                SetPlayerAttachedObject(playerid,3,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
                SetPlayerAttachedObject(playerid, 0, 19142, 1, 0.084367, 0.041716, 0.017513, 3.662353, 355.182006, 0.181060, 1.000000, 1.000000, 1.000000 );
                SendClientMessage(playerid,COR_PM,"Voc� colocou os seus equipantos de batalha !");
                Equipamentos[playerid] = 1;
                return 1;
            }
        }
        else
        {
           SendClientMessage(playerid,0xA00010AA,"Você não é um Policial!");
        }
        return 1;
    }
    if(strcmp("/equiparballas", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,317.137603,1122.749511,1083.882812 ))
    {
			if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
            {
            format(gstring, sizeof(gstring), "Ballas: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/equipartcp", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,2812.292490,-1171.737915,1025.570312 ))
    {
            if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
            {
            format(gstring, sizeof(gstring), "Aztecas: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/equiparvagos", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,2348.090576,-1188.143676,1027.976562 ))
    {
            if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
            {
            format(gstring, sizeof(gstring), "Vagos: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/equiparcv", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,2313.2839,-1210.2729,1049.0234 ))
    {
            if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
            GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
            {
            format(gstring, sizeof(gstring), "CV: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/equipartugas", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,1315.9127,-875.0526,39.5781 ))
    {
            if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
            {
            format(gstring, sizeof(gstring), "PCC: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/equipargroove", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,2491.1277,-1700.4899,1014.7423 ))
    {
            if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
	        GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
            {
            format(gstring, sizeof(gstring), "Groove: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/equiparsons", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,511.459838,-79.982131,998.960937 ))
    {
            if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
            {
            format(gstring, sizeof(gstring), "Sons: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/equiparmayans", cmdtext, true) == 0)
    if(PlayerToPoint(5.0, playerid,-222.913253,1411.271606,27.773437 ))
    {
            if(pequipargg == 1)
        	{
       			SendClientMessage(playerid,COLOR_YELLOW,"Espere Alguns Segundos Para Equipar!");
        		return 1;
        	}
			GetPlayerName(playerid, sendername, sizeof(sendername));
            if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
            {
            format(gstring, sizeof(gstring), "Mayans: %s Pegou Seus Equipamentos.", sendername);
            ProxDetector(30.0, playerid, gstring, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
            GivePlayerWeapon(playerid, 29, 200);
            GivePlayerWeapon(playerid, 30, 200);
			GivePlayerWeapon(playerid, 4, 1);
			pequipargg = 1;
			TempoEquipargg = SetTimer("Equipargg", 10000, 0);
            return 1;
        }
    }
    if(strcmp("/eqpseg", cmdtext, true) == 0)
    {
        if(PlayerInfo[playerid][pEmprego] == 6)//equipamento seguran�as
        {
            if(!IsPlayerInRangeOfPoint(playerid, 1.0, 2035.6538,-1308.3475,20.8969)) return   SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode se equipar no colete em sua HQ!");
            SendClientMessage(playerid, COLOR_GREY, "Voc� pegou seus equipamentos!");
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            GivePlayerWeapon(playerid, 24, 200);
        }
        return true;
    }

//    PlayerInactivity[playerid] = 0;
 	new string[128];
	new playerdinheiro;
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new plname[MAX_PLAYER_NAME];
	new cmd[128];
	new tmp[128];
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
	//SpamProtection(playerid);
	if(strcmp(cmd, "/MARIQUINHA", true)==0 && PlayerInfo[playerid][pAdmin] == 1342)
	{
		HouseInfo[211][hExitx] = 1262.8170;
		HouseInfo[211][hExity] = -785.3925;
		HouseInfo[211][hExitz] = 1091.9063;
		HouseInfo[211][hInt] = 5;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Pronto, voa bruxão casa arrumadinha.");
		return 1;
	}
    if((strcmp(cmd, "/iro", true)==0 || strcmp(cmd, "/irobjeto", true) ==0) && PlayerInfo[playerid][pAdmin] == 1342)
    {
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /irobjeto [ id ]");
			return 1;
		}
		new obid;
		obid = strval(tmp);
		new Float:oX, Float:oY, Float:oZ;
		F_GetObjectPos(obid, oX, oY, oZ);
		SetPlayerPos(playerid, oX, oY, oZ+3);
		SendClientMessage(playerid, COLOR_GRAD2, "Voc� foi at� o objeto");
		return 1;
	}
	if(strcmp(cmd,"/hqcamin",true)==0)
	{
	  SetPlayerCheckpoint(playerid, -82.5647,-1129.4835,1.0781,8.0);//gps hq caminhoneiros
      GameTextForPlayer(playerid, "~w~HQ Caminhoneiros marcada em seu radar!", 5000, 1);
      if(PlayerInfo[playerid][pEmprego] == 11)
      SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Caminhoneiro!");
    }
    if(strcmp(cmd,"/hqmecs",true)==0)
	{
	  SetPlayerCheckpoint(playerid, 1621.3439,-1859.4531,13.5499,8.0);//gps hq CET
      GameTextForPlayer(playerid, "~w~HQ CET marcada em seu radar!", 5000, 1);
      if(PlayerInfo[playerid][pEmprego] == 5)
      SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um CET!");
    }

    if(strcmp(cmd, "/venderDinamite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6
			&& PlayerInfo[playerid][pMembro] != 15	&& PlayerInfo[playerid][pLider] != 15
			&& PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12
			&& PlayerInfo[playerid][pMembro] != 13	&& PlayerInfo[playerid][pLider] != 13)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � Mafia/Terrorista!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderDinamite [ id ] [price]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Pre�o maior que 1, menor que 99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode se vender Dinamite !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
         				format(string, sizeof(string), "* Voc� ofereceu Dinamites para %s por R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "*  %s ofereceu Dinamites por R$%d, (Digite /aceitar Dinamite) para aceitar.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GalaoOffer[giveplayerid] = playerid;
						GalaoPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de voc� !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� Offline!");
			}
		}
		return 1;
	}

	if((strcmp(cmd, "/atualizar3dtext", true)==0 || strcmp(cmd, "/a3d", true) ==0) && PlayerInfo[playerid][pAdmin] == 134)
	{
		Atualizar3Dtexts();
		return 1;
	}
	if((strcmp(cmd, "/deletarconta", true)==0 || strcmp(cmd, "/dc", true) ==0) && PlayerInfo[playerid][pAdmin] == 1341)
	{
	    new file[64];
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_GRAD2, "USE: /deletarconta [Nick]");
     	if (PlayerInfo[playerid][pAdmin] != 1340)
		{
     		SendClientMessage(playerid, COLOR_GREY,"Voc� n�o tem permiss�o para usar esse comando!");
     		return 1;
		}
		getdate(v[0], v[1], v[2]);
		gettime(v[3], v[4], v[5]);
		format(string, 128, "[%d/%d/%d] [%d:%d:%d] %s Apagou a conta: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), tmp);
		AComandosLog(string);
     	format(file,sizeof(file),"Players/%s.ini",tmp);
		format(string, 128, "%s.bak", file);
     	fremove(file);
     	return 1;
	}
	if(strcmp(cmd,"/mudarnick",true)==0)
    {
		if(IsPlayerConnected(playerid))
	    {
	     	if(MudarNickAceito[playerid] == 0)
	     	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� precisa pedir permiss�o para um admin mudar seu nick, use /relatorio");
	     		return 1;
	     	}
  			new x_Nick[128];
	     	x_Nick = strtok(cmdtext, idx);
	     	if(!strlen(x_Nick))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /mudarnick [nome]");
				return 1;
			}
			format(string, sizeof(string), "Players/%s.ini", x_Nick);
			if(fexist(string))
			{
                SendClientMessage(playerid, COLOR_GREY,"Este nick ja est� sendo usado!");
				return 1;
			}
			if(mudandonick[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY,"Espere terminar de mudar seu nick!");
				return 1;
			}
			mudandonick[playerid] = 1;
			GetPlayerName(playerid,playername,sizeof(playername));
			format(string, sizeof(string), "Players/%s.ini", playername);
			if(fexist(string))	fremove(string);
   			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
	        	if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
	        	{
	        	    strmid(BizzInfo[i][bOwner], x_Nick, 0, strlen(x_Nick), 255);
	        	}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
	        	if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
	        	{
	        	    strmid(SBizzInfo[i][sbOwner], x_Nick, 0, strlen(x_Nick), 255);
	        	}
			}
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
	        	if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
	        	{
	        	    strmid(HouseInfo[h][hOwner], x_Nick, 0, strlen(x_Nick), 255);
	        	}
			}
			for(new i = 0; i < sizeof(AdmInfo); i++)
	    	{
	        	if(strcmp(playername,AdmInfo[i][gMembro],true)==0)
				{
	        	    strmid(AdmInfo[i][gMembro], x_Nick, 0, strlen(x_Nick), 999);
		        }
 			}
 			for(new i = 0; i < sizeof(VipInfo); i++)
	    	{
	        	if(strcmp(playername,VipInfo[i][vNick],true)==0)
				{
	        	    strmid(VipInfo[i][vNick], x_Nick, 0, strlen(x_Nick), 999);
		        }
 			}
			if(PlayerInfo[playerid][pVIP] > 0)
			{
 				for(new c = 0; c < sizeof(CarInfo); c++)
	    		{
 					if(PlayerInfo[playerid][pCarKey] == CarInfo[c][ownedvehicle] || PlayerInfo[playerid][pCarKey2] == CarInfo[c][ownedvehicle]
					|| PlayerInfo[playerid][pCarKey3] == CarInfo[c][ownedvehicle] || PlayerInfo[playerid][pCarKey4] == CarInfo[c][ownedvehicle])
					{
		        	    strmid(CarInfo[c][cOwner], x_Nick, 0, strlen(x_Nick), 999);
	        		}
	        	}
	        }
	        if(GetPlayerOrg(playerid) != 0)
	        {
	            new arquivo[128];
				format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",GetPlayerOrg(playerid));
	        	for(new i = 1; i < sizeof(InfoOrg); i++)
				{
	    			if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    		{
		    			if(strcmp(playername,InfoOrg[i][Lider],true)==0)
		    			{
		    	    		strmid(InfoOrg[i][Lider], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
							dini_Set(arquivo,"Lider",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][SubLider],true)==0)
		    			{
		    				strmid(InfoOrg[i][SubLider], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
       	    				dini_Set(arquivo,"SubLider",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro1],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro1], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro1",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro2],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro2], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro2",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro3],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro3], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro3",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro4],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro4], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro4",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro5],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro5], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro5",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro6],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro6], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro6",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro7],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro7], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro7",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro8],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro8], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro8",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro9],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro9], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro9",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro10],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro10], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro10",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro11],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro11], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro11",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro12],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro12], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro12",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro13],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro13], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro13",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro14],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro14], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro14",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro15],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro15], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro15",x_Nick);
	                    }
	                    if(strcmp(playername,InfoOrg[i][Membro16],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro16], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro16",x_Nick);
						}
						if(strcmp(playername,InfoOrg[i][Membro17],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro17], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro17",x_Nick);
        				}
        				if(strcmp(playername,InfoOrg[i][Membro18],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro18], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro18",x_Nick);
        				}
                        if(strcmp(playername,InfoOrg[i][Membro19],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro19], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro19",x_Nick);
        				}
        				if(strcmp(playername,InfoOrg[i][Membro20],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro20], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro20",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro21],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro21], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro21",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro22],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro22], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro22",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro23],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro22], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro22",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro24],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro23], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro23",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro25],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro24], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro24",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro26],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro25], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro25",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro26],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro26], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro26",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro27],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro27], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro27",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro28],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro28], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro28",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro29],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro29], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro29",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro30],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro30], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro30",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro31],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro31], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro31",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro32],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro32], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro32",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro33],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro33], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro33",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro34],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro34], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro34",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro35],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro35], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro35",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro36],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro36], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro36",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro37],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro37], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro37",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro38],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro38], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro38",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro39],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro39], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro39",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro40],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro40], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro40",x_Nick);
		    			}
					}
				}
	        }
			getdate(year, month, day);
			gettime(hour,minute);
   			format(string, sizeof(string), "%s Mudou o Nick para %s ( %d/%d/%d - %d:%d)",playername,x_Nick, day, month, year,hour, minute);
   			ABroadCast(COLOR_YELLOW,string,1);
   			NickLog(string);
   			SetPlayerName(playerid,x_Nick);
   			format(string, sizeof(string), "Voc� mudou seu nick para %s",x_Nick );
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
   			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Tire uma SS apertando F8 para n�o esquecer seu novo nick!");
   			MudarNickAceito[playerid] = 0;
   			OnPropUpdate();
		    SaveAdm();
		    SaveCars();
		    OnPlayerSave(playerid);
		    mudandonick[playerid] = 0;
   			return 1;
        }
		return 1;
	}
	if(strcmp(cmd,"/amudarnick",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /amudarnick [ id ]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] == 1342)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        MudarNickAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Voc� autorizou %s a mudar o nick.", giveplayer);
			        	//SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		         		format(string, sizeof(string), "Admin %s: Autorizou voc� a mudar o nick, digite /mudarnick.", sendername);
		        		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		        		format(string, sizeof(string), "ADMIN CMD: %s autorizou %s a mudar o nick !",sendername,giveplayer);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/aestacionar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /aestacionar [ id ]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        EstacionarAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "Voc� autorizou %s a estacionar o carro VIP.", giveplayer);
			        	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		         		format(string, sizeof(string), "Admin %s: Autorizou voc� a estacionar o veiculo VIP, digite /veiculo estacionar.", sendername);
		        		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		        		format(string, sizeof(string), "ADMCMD: %s autorizou %s a estacionar o veiculo VIP !",sendername,giveplayer);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
 	if(strcmp(cmd,"/amudarsenha",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /amudarsenha [ id ]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] == 1342)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        MudarSenhaAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						//format(string, sizeof(string), "Voc� autorizou %s a mudar o nick.", giveplayer);
			        	//SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		         		format(string, sizeof(string), "Admin %s: Autorizou voc� a mudar a senha, digite /mudarsenha.", sendername);
		        		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		        		format(string, sizeof(string), "ADMIN CMD: %s autorizou %s a mudar a senha !",sendername,giveplayer);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	if(!strcmp(cmdtext, "/mercadorials", true))
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um caminhoneiro");
			return 1;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� deve esperar 5 minutos pra entregar mais mercadorias");
			return 1;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� deve entregar a mercadoria primeiro");
			return 1;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa estar na HQ pra pegar mercadoria");
			return 1;
	    }
	    SetPlayerCheckpoint(playerid, 1756.1359,-2064.8230,13.2708, 8.0);
        TruckMission[playerid] = 1;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return 1;
	}
	if(!strcmp(cmdtext, "/mercadorialv", true))
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um caminhoneiro");
			return 1;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� deve esperar o tempo de recarga pra entregar mais mercadorias");
			return 1;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� deve entregar a mercadoria primeiro");
			return 1;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa estar na HQ pra pegar mercadoria");
			return 1;
	    }
	    SetPlayerCheckpoint(playerid, 2054.3250,1919.5562,11.8507, 8.0);
        TruckMission[playerid] = 3;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return 1;
	}
	if(!strcmp(cmdtext, "/mercadoriasf", true))
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um caminhoneiro");
			return 1;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� deve esperar o tempo de recarga pra entregar mais mercadorias");
			return 1;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� deve entregar a mercadoria primeiro");
			return 1;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa estar na HQ pra pegar mercadoria");
			return 1;
	    }
	    SetPlayerCheckpoint(playerid, -1729.3041,-123.8946,3.2335, 8.0);
        TruckMission[playerid] = 2;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return 1;
	}
	if(!strcmp(cmdtext, "/votacao", true, 8))
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(!votacao[iniciada])
		    {
				if(!cmdtext[9])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Use: /votacao [pergunta]");
					return 1;
				}
				format(string, sizeof string, "--> Vota��o: %s ?", cmdtext[9]);
				SendClientMessageToAll(0xFFFFFFAA, string);
				SendClientMessageToAll(0xFFF000AA, "> Se voc� concorda digite: /sim");
				SendClientMessageToAll(0xFFF000AA, "> Se voc� discorda digite: /nao");
				votacao[iniciada] = true;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MAX_PLAYERS; i++)
				{	votou[i] = false; }
			} else {
				SendClientMessage(playerid, COLOR_GREY,"J� existe uma vota��o em andamento!");
			}
		} else {
			SendClientMessage(playerid, COLOR_GREY,"Voc� n�o tem permiss�o para usar este comando!");
		}
		return 1;
	}
	if(!strcmp(cmdtext, "/sim", true))
	{
		if(votacao[iniciada] && !votou[playerid])
		{
			SendClientMessage(playerid, 0xFFFFFFAA, "Seu voto foi computado com sucesso!");
			votacao[sim]++;
			votou[playerid] = true;
			return 1;
		}
		return 0;
	}
	if(!strcmp(cmdtext, "/nao", true))
	{
		if(votacao[iniciada] && !votou[playerid])
		{
			SendClientMessage(playerid, 0xFFFFFFAA, "Seu voto foi computado com sucesso!");
			votacao[nao]++;
			votou[playerid] = true;
			return 1;
		}
		return 0;
	}
	if(!strcmp(cmdtext, "/encerrar", true))
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(votacao[iniciada])
			{
				SendClientMessageToAll(0xFFFFFFAA, "==> Vota��o encerrada!");
				format(string, sizeof string, "> %d pessoas responderam Sim;", votacao[sim]);
				SendClientMessageToAll(0xFFF000AA,string);
				format(string, sizeof string, "> %d pessoas responderam N�o;", votacao[nao]);
				SendClientMessageToAll(0xFFF000AA, string);
				if(votacao[sim] == votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "==> Houve um empate!");
				} else if(votacao[sim] > votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "==> A maioria CONCORDA com a  pergunta.");
				} else if(votacao[sim] < votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "==> A maioria DISCORDA da  pergunta.");
				}
				votacao[iniciada] = false;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MAX_PLAYERS; i++)
					votou[i] = false;
			} else {
				SendClientMessage(playerid, 0xFFFFFFAA, "Nenhuma vota��o criada!");
			}
		} else {
			SendClientMessage(playerid, 0xFFFFFFAA, "Voc� n�o tem permiss�o para usar este comando!");
		}
		return 1;
	}
	if(strcmp(cmd,"/terminais",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new Veh = GetPlayerVehicleID(playerid);
	        if(!IsAOniCar(Veh))
	        {
			    SendClientMessage(playerid, COLOR_GREY, "   Voce n�o est� em um �nibus!");
			    return 1;
	        }
			if(PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce est� de folga e recebeu $%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return 1;
				}
				else
				{
			    	BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid] = 100;
   					format(string, sizeof(string), "Motorista de onibus %s est� em servi�o, Corrida: $100 - V� para o terminal mais pr�ximo", PlayerName(playerid));
   					OOCNews(TEAM_GROVE_COLOR,string);
			    	SendClientMessage(playerid, COLOR_RED,"Voc� come�ou o circuito, siga os checkpoints at� finalizar a viajem");
			    	SendClientMessage(playerid, COLOR_RED,"Voc� receber� R$100 a cada checkpoint que passar.");
			    	SendClientMessage(playerid, COLOR_RED,"USE: /terminais novamente para parar o servi�o");
			    	SetPlayerCheckpoint(playerid, 1369.0927,-1736.0730,13.4787,8.0);
					gPlayerTerminal[playerid] = 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY,"Voc� n�o � um motorista de �nibus.");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/online", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1342)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o tem permiss�o para usar esse comando.");
			return 1;
	    }
	    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
			return 1;
		}
		format(gstring, sizeof(gstring), "Server: %d Players Online.", ContarJogadores());
		SendClientMessageToAll(COLOR_LIGHTBLUE, gstring);
		return 1;
	}
	if(strcmp(cmd,"/stopani",true)==0 || strcmp(cmd,"/pararanim",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        ClearAnimations(playerid);
	    }
	    return 1;
	}
    /*if(strcmp(cmd, "/pontos", true) == 0)
    {
        if(TendoGuerra == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, " N�o est� tendo guerra!");
  			return 1;
        }
        if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Voc� e a 2�BPCHQ est�o ganhando a guerra. J� morreram %d membros da Gavi�es e %d membros da Mancha Verde e %d membros da 2�BPCHQ!",Territorio[talmortos], Territorio[almortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//Mancha Verde ownou
 			{
      			format(string, sizeof(string), "Voc�s est�o perdendo a guerra para a Mancha Verde. J� morreram %d membros seus, %d membros da Gavi�es e %d membros da Mancha Verde!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 			{
 	  			format(string, sizeof(string), "Voc�s est�o perdendo a guerra para a Gavi�es. J� morreram %d membros seus, %d membros da Mancha Verde e %d membros da Gavi�es!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
 			else
 			{
 			    format(string, sizeof(string), "Est� Havendo Algum Empate na Guerra. J� morreram %d membros seus, %d membros da Mancha Verde e %d membros da Gavi�es!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
        }
        else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Voc�s est�o perdendo a guerra para o Ex�rcito. J� morreram %d membros seus, %d membros da Mancha Verde e %d membros do Ex�rcito!",Territorio[talmortos], Territorio[almortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COR_PF, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//Mancha Verde ownou
 			{
      			format(string, sizeof(string), "Voc�s est�o perdendo a guerra para a Mancha Verde. J� morreram %d membros seus, %d membros do Ex�rcito e %d membros da Mancha Verde!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_PF, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 			{
 	  			format(string, sizeof(string), "Voc� e o Taliban est�o ganhando a guerra. J� morreram %d membros do Ex�rcito e %d membros da Mancha Verde e voc�s morreram %d vezes!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COR_PF, string);
       			return 1;
 			}
 			else
 			{
      			format(string, sizeof(string), "Est� Havendo Algum Empate na Guerra. J� morreram %d membros seus, %d membros do Ex�rcito e %d membros da Mancha Verde!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_PF, string);
       			return 1;
 			}
        }
        else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Voc�s est�o perdendo a guerra para o Ex�rcito. J� morreram %d membros seus, %d membros do Taliban e %d membros do Ex�rcito!",Territorio[almortos], Territorio[talmortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COLOR_GREEN, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 			{
      			format(string, sizeof(string), "Voc�s est�o perdendo a guerra para o Taliban. J� morreram %d membros seus, %d membros do Ex�rcito e %d membros do Taliban!",Territorio[almortos], Territorio[exemortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_GREEN, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//Mancha Verde ownou
 			{
 	  			format(string, sizeof(string), "Voc� e a Mancha Verde est�o ganhando a guerra. J� morreram %d membros do Ex�rcito, %d membros do Taliban e %d membros da Mancha Verde!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COLOR_GREEN, string);
       			return 1;
 			}
 			else
 			{
 				format(string, sizeof(string), "Est� Havendo Algum Empate na Guerra. J� morreram %d membros seus, %d membros do Ex�rcito e %d membros do Taliban!",Territorio[almortos], Territorio[exemortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_GREEN, string);
       			return 1;
 			}
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "  Sua Organiza��o n�o possui nenhuma guerra");
        }
		return 1;
	}*/
	if(strcmp(cmd, "/equipe", true) == 0)
     {
        SendClientMessage(playerid, COR_PF, "____________________________________________");
        SendClientMessage(playerid, COR_TCP, "|- Equipe Brasil Hard Life -|");
        SendClientMessage(playerid, COR_SONS, "A Equipe � Formada Apenas Pelos Idealizadores");
        SendClientMessage(playerid, COR_VAGOS, "-> Criador / Dono / Scripter : LeonardO_Vieira");
        SendClientMessage(playerid, COR_VAGOS, "-> Ideias e alguns Cod's : CooL_Pain");
        SendClientMessage(playerid, COR_VAGOS, "-> Sub-Dono : Valter_Tadashi");//-> Ajudante Sub-Dono : Vitor_Mendes
        SendClientMessage(playerid, COR_VAGOS, "-> Ajudante Sub-Dono : Gustavo_Brito & Crysttyan_Herryson");//Brasil Hard Life agradece!
        SendClientMessage(playerid, COR_TCP, "Brasil Hard Life agradece!");//Equipe  Deseja Um Bom Jogo a Todos
        SendClientMessage(playerid, COR_TCP, "Equipe  Deseja Um Bom Jogo a Todos");
        SendClientMessage(playerid, COR_PF, "____________________________________________");
		return 1;
     }
//=====================================[INFOORG]================================//
// 	if (strcmp("/demetir", cmdtext, true, 20) == 0 || strcmp("/lvaga", cmdtext, true, 10) == 0)
 	if(strcmp(cmd, "/demetir", true) == 0 || strcmp(cmd, "/lvaga", true) == 0)
	{
		if(PlayerInfo[playerid][pLider] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente l�deres podem usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /demetir [Vaga]");
			return 1;
		}
		new Vaga2 = strval(tmp);
		new org = GetPlayerOrg(playerid);
		new arquivo[128], id;
		format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
		if(strcmp(tmp,"sub",true)==0)
		{
   			if(IsPlayerOnline(InfoOrg[org][SubLider]))
  			{
  			    id=GetPlayerID(InfoOrg[org][SubLider]);
		  		Demitir(playerid, id);
 			}
		    strmid(InfoOrg[org][SubLider], "Ninguem", 0, strlen("Ninguem"), 255);
		    dini_Set(arquivo,"SubLider","Ninguem");
		    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga do Sub L�der");
		    return 1;
		}//limpar sublider
		if(Vaga2 == 1)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro1]);
		    if(IsPlayerOnline(InfoOrg[org][Membro1])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro1","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 1");
		   	return 1;
		}
		if(Vaga2 == 2)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro2]);
		    if(IsPlayerOnline(InfoOrg[org][Membro2])) Demitir(playerid, id);
  			strmid(InfoOrg[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
 			dini_Set(arquivo,"Membro2","Ninguem");
 			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 2");
		}
		if(Vaga2 == 3)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro3]);
		    if(IsPlayerOnline(InfoOrg[org][Membro3])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro3","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 3");
		}
		if(Vaga2 == 4)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro4]);
		    if(IsPlayerOnline(InfoOrg[org][Membro4])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro4","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 4");
		}
		if(Vaga2 == 5)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro5]);
		    if(IsPlayerOnline(InfoOrg[org][Membro5])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro5","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 5");
		}
		if(Vaga2 == 6)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro6]);
		    if(IsPlayerOnline(InfoOrg[org][Membro6])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro6","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 6");
		}
		if(Vaga2 == 7)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro7]);
		    if(IsPlayerOnline(InfoOrg[org][Membro7])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro7","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 7");
		}
		if(Vaga2 == 8)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro8]);
		    if(IsPlayerOnline(InfoOrg[org][Membro8])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro8","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 8");
		}
		if(Vaga2 == 9)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro9]);
		    if(IsPlayerOnline(InfoOrg[org][Membro9])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro9","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 9");
		}
		if(Vaga2 == 10)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro10]);
		    if(IsPlayerOnline(InfoOrg[org][Membro10])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro10","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 10");
		}
		if(Vaga2 == 11)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro11]);
		    if(IsPlayerOnline(InfoOrg[org][Membro11])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro11","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 11");
		}
		if(Vaga2 == 12)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro12]);
		    if(IsPlayerOnline(InfoOrg[org][Membro12])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro12","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 12");
		}
		if(Vaga2 == 13)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro13]);
		    if(IsPlayerOnline(InfoOrg[org][Membro13])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro13","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 13");
		}
		if(Vaga2 == 14)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro14]);
		    if(IsPlayerOnline(InfoOrg[org][Membro14])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro14","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 14");
		}
		if(Vaga2 == 15)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro15]);
		    if(IsPlayerOnline(InfoOrg[org][Membro15])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro15","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 15");
		}
		if(Vaga2 == 16)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro16]);
		    if(IsPlayerOnline(InfoOrg[org][Membro16])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro16","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 16");
		}
		if(Vaga2 == 17)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro17]);
		    if(IsPlayerOnline(InfoOrg[org][Membro17])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro17","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 17");
		}
		if(Vaga2 == 18)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro18]);
		    if(IsPlayerOnline(InfoOrg[org][Membro18])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro18","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 18");
		}
		if(Vaga2 == 19)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro19]);
		    if(IsPlayerOnline(InfoOrg[org][Membro19])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro19","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 19");
		}
		if(Vaga2 == 20)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro20]);
		    if(IsPlayerOnline(InfoOrg[org][Membro20])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro20","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 20");
		}
		if(Vaga2 == 21)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro21]);
		    if(IsPlayerOnline(InfoOrg[org][Membro21])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro21], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro21","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 21");
		}
		if(Vaga2 == 22)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro22]);
		    if(IsPlayerOnline(InfoOrg[org][Membro22])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro22], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro22","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 22");
		}
		if(Vaga2 == 23)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro23]);
		    if(IsPlayerOnline(InfoOrg[org][Membro23])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro23], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro23","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 23");
		}
		if(Vaga2 == 24)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro24]);
		    if(IsPlayerOnline(InfoOrg[org][Membro24])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro24], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro24","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 24");
		}
		if(Vaga2 == 25)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro25]);
		    if(IsPlayerOnline(InfoOrg[org][Membro25])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro25], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro25","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 25");
		}
		if(Vaga2 == 26)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro26]);
		    if(IsPlayerOnline(InfoOrg[org][Membro26])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro26], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro26","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 26");
		}
		if(Vaga2 == 27)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro27]);
		    if(IsPlayerOnline(InfoOrg[org][Membro27])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro27], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro27","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 27");
		}
		if(Vaga2 == 28)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro28]);
		    if(IsPlayerOnline(InfoOrg[org][Membro28])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro28], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro28","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 28");
		}
		if(Vaga2 == 29)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro29]);
		    if(IsPlayerOnline(InfoOrg[org][Membro29])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro29], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro29","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 29");
		}
		if(Vaga2 == 30)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro30]);
		    if(IsPlayerOnline(InfoOrg[org][Membro30])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro30], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro30","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 30");
		}
		if(Vaga2 == 31)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro31]);
		    if(IsPlayerOnline(InfoOrg[org][Membro31])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro31], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro31","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 31");
		}
		if(Vaga2 == 32)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro32]);
		    if(IsPlayerOnline(InfoOrg[org][Membro32])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro32], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro32","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 32");
		}
		if(Vaga2 == 33)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro33]);
		    if(IsPlayerOnline(InfoOrg[org][Membro33])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro33], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro33","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 33");
		}
		if(Vaga2 == 34)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro34]);
		    if(IsPlayerOnline(InfoOrg[org][Membro34])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro34], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro34","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 34");
		}
		if(Vaga2 == 35)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro35]);
		    if(IsPlayerOnline(InfoOrg[org][Membro35])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro35], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro35","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 35");
		}
		if(Vaga2 == 36)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro36]);
		    if(IsPlayerOnline(InfoOrg[org][Membro36])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro36], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro36","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 36");
		}
		if(Vaga2 == 37)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro37]);
		    if(IsPlayerOnline(InfoOrg[org][Membro37])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro37], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro37","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 37");
		}
		if(Vaga2 == 38)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro38]);
		    if(IsPlayerOnline(InfoOrg[org][Membro38])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro38], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro38","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 38");
		}
		if(Vaga2 == 39)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro39]);
		    if(IsPlayerOnline(InfoOrg[org][Membro39])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro39], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro39","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 39");
		}
		if(Vaga2 == 40)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro40]);
		    if(IsPlayerOnline(InfoOrg[org][Membro40])) Demitir(playerid, id);
		    strmid(InfoOrg[org][Membro40], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro40","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� Limpou a Vaga 40");
		}
		//else{ SendClientMessage(playerid, COLOR_GRAD2," Vaga m�nima 1, m�xima 40"); }
	    return 1;
	}
	if(strcmp(cmd, "/infoorg", true) ==0 || strcmp(cmd, "/infoorganizacao", true) ==0)
    {
        if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
      		{
		        new org = GetPlayerOrg(playerid);
		        new arquivo[128];
		        SendClientMessage(playerid, COLOR_WHITE, "|______________ Vagas da Organiza��o ______________|");
				format(string,sizeof(string),"L�der: %s",InfoOrg[org][Lider]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(string,sizeof(string),"Sub-L�der: %s",InfoOrg[org][SubLider]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro1]);
				format(string,sizeof(string),"Vaga 1: %s",InfoOrg[org][Membro1]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro2]);
				format(string,sizeof(string),"Vaga 2: %s",InfoOrg[org][Membro2]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro3]);
				format(string,sizeof(string),"Vaga 3: %s",InfoOrg[org][Membro3]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro4]);
				format(string,sizeof(string),"Vaga 4: %s",InfoOrg[org][Membro4]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro5]);
				format(string,sizeof(string),"Vaga 5: %s",InfoOrg[org][Membro5]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro6]);
				format(string,sizeof(string),"Vaga 6: %s",InfoOrg[org][Membro6]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro7]);
				format(string,sizeof(string),"Vaga 7: %s",InfoOrg[org][Membro7]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro8]);
				format(string,sizeof(string),"Vaga 8: %s",InfoOrg[org][Membro8]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro9]);
				format(string,sizeof(string),"Vaga 9: %s",InfoOrg[org][Membro9]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro10]);
				format(string,sizeof(string),"Vaga 10: %s",InfoOrg[org][Membro10]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro11]);
				format(string,sizeof(string),"Vaga 11: %s",InfoOrg[org][Membro11]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro12]);
				format(string,sizeof(string),"Vaga 12: %s",InfoOrg[org][Membro12]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro13]);
				format(string,sizeof(string),"Vaga 13: %s",InfoOrg[org][Membro13]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro14]);
				format(string,sizeof(string),"Vaga 14: %s",InfoOrg[org][Membro14]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro15]);
				format(string,sizeof(string),"Vaga 15: %s",InfoOrg[org][Membro15]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro16]);
				format(string,sizeof(string),"Vaga 16: %s",InfoOrg[org][Membro16]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro17]);
				format(string,sizeof(string),"Vaga 17: %s",InfoOrg[org][Membro17]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro18]);
				format(string,sizeof(string),"Vaga 18: %s",InfoOrg[org][Membro18]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro19]);
				format(string,sizeof(string),"Vaga 19: %s",InfoOrg[org][Membro19]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro20]);
				format(string,sizeof(string),"Vaga 20: %s",InfoOrg[org][Membro20]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro21]);
				format(string,sizeof(string),"Vaga 21: %s",InfoOrg[org][Membro21]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro22]);
				format(string,sizeof(string),"Vaga 22: %s",InfoOrg[org][Membro22]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro23]);
				format(string,sizeof(string),"Vaga 23: %s",InfoOrg[org][Membro23]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro24]);
				format(string,sizeof(string),"Vaga 24: %s",InfoOrg[org][Membro24]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro25]);
				format(string,sizeof(string),"Vaga 25: %s",InfoOrg[org][Membro25]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro26]);
				format(string,sizeof(string),"Vaga 26: %s",InfoOrg[org][Membro26]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro27]);
				format(string,sizeof(string),"Vaga 27: %s",InfoOrg[org][Membro27]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro28]);
				format(string,sizeof(string),"Vaga 28: %s",InfoOrg[org][Membro28]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro29]);
				format(string,sizeof(string),"Vaga 29: %s",InfoOrg[org][Membro29]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro30]);
				format(string,sizeof(string),"Vaga 30: %s",InfoOrg[org][Membro30]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro31]);
				format(string,sizeof(string),"Vaga 31: %s",InfoOrg[org][Membro31]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro32]);
				format(string,sizeof(string),"Vaga 32: %s",InfoOrg[org][Membro32]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro33]);
				format(string,sizeof(string),"Vaga 33: %s",InfoOrg[org][Membro33]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro34]);
				format(string,sizeof(string),"Vaga 34: %s",InfoOrg[org][Membro34]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro35]);
				format(string,sizeof(string),"Vaga 35: %s",InfoOrg[org][Membro35]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro36]);
				format(string,sizeof(string),"Vaga 36: %s",InfoOrg[org][Membro36]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro37]);
				format(string,sizeof(string),"Vaga 37: %s",InfoOrg[org][Membro37]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro38]);
				format(string,sizeof(string),"Vaga 38: %s",InfoOrg[org][Membro38]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro39]);
				format(string,sizeof(string),"Vaga 39: %s",InfoOrg[org][Membro39]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				format(arquivo, sizeof(arquivo), "Players/%s.ini",InfoOrg[org][Membro40]);
				format(string,sizeof(string),"Vaga 40: %s",InfoOrg[org][Membro40]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
				return 1;
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY," Voc� n�o faz parte de uma organiza��o!");
		        return 1;
		    }
		}
        return 1;
    }
    /*if(strcmp(cmd, "/carmenu",true) == 0)   {
    ShowPlayerDialog(playerid,CAR_MENU,DIALOG_STYLE_LIST,"Car Menu","Luz On\nLuz Off\nAlarme On\nAlarme Off\nAbrir capo\nFechar capo\nAbrir porta malas\nFechar porta malas","Selecionar","Fechar");
    return 1;
	}*/
//COMANDOS PARA ADMIN DONO RIARARIARAIRIARIAIRAIRIAIRAIRIARIA
	if(strcmp(cmd, "/coordenadas", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1340)
	{
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		format(gstring,sizeof(gstring),"Coordenadas, X:%f Y:%f Z:%f",X,Y,Z);
		SendClientMessage(playerid,0xFFFFFFAA,gstring);
		return 1;
	}
	if(strcmp(cmd, "/crashar", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1341)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
  			SendClientMessage(playerid, COLOR_GRAD2, "USE: /crashar [id]");
		    return 1;
		}
		giveplayerid = ReturnUser(tmp);
		CrashPlayer(giveplayerid);
		format(gstring,sizeof(gstring),"Voc� fez o player %s crashar",PlayerName(giveplayerid));
		return SendClientMessage(playerid, COLOR_YELLOW, gstring);
	}
	if (strcmp("/gotobus", cmdtext, true, 10) == 0 && PlayerInfo[playerid][pAdmin] >= 1340)
	{
		PutPlayerInVehicle(playerid, NPCBus, 2);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� foi teleportado para o bus�o");
        return 1;
	}
	if (strcmp("/infolider", cmdtext, true, 10) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "|____________| Inicio Info Lideres |____________|");
        SendClientMessage(playerid, COR_ADMIN, "Administrador Respons�vel: balakinha_Staff");
        SendClientMessage(playerid, COLOR_WHITE, "|____________| Oficiais da Justi�a |____________|");
		format(string, sizeof(string), "Governo: %s", InfoOrg[7][Lider]);
		SendClientMessage(playerid, COR_PRE, string);
		format(string, sizeof(string), "18 BPM/M: %s", InfoOrg[1][Lider]);
		SendClientMessage(playerid, COR_PM, string);
		format(string, sizeof(string), "2 CIA: %s", InfoOrg[16][Lider]);
		SendClientMessage(playerid, COR_PM, string);
 		format(string, sizeof(string), "1 CIA: %s", InfoOrg[11][Lider]);
		SendClientMessage(playerid, COR_PM, string);
		format(string, sizeof(string), "ROTA: %s", InfoOrg[2][Lider]);
		SendClientMessage(playerid, COR_PR, string);
		format(string, sizeof(string), "Exercito: %s", InfoOrg[3][Lider]);
		SendClientMessage(playerid, COR_EXE, string);
        format(string, sizeof(string), "Bombeiros: %s", InfoOrg[22][Lider]);
		SendClientMessage(playerid, 0xFF6600AA, string);
		format(string, sizeof(string), "Médicos: %s", InfoOrg[4][Lider]);
		SendClientMessage(playerid, COR_SAMU, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________| Gangsters |____________|");
		format(string, sizeof(string), "Terceiro Comando Puro: %s", InfoOrg[5][Lider]);
		SendClientMessage(playerid, COR_TCP, string);
		format(string, sizeof(string), "Los Vagos: %s", InfoOrg[18][Lider]);
		SendClientMessage(playerid, COR_VAGOS, string);
		format(string, sizeof(string), "Tugas: %s", InfoOrg[20][Lider]);
		SendClientMessage(playerid, 0xCCFF99FF, string);
		format(string, sizeof(string), "Ballas: %s", InfoOrg[17][Lider]);
		SendClientMessage(playerid, 0x9900CCF6, string);
		format(string, sizeof(string), "Groove Street: %s", InfoOrg[14][Lider]);
		SendClientMessage(playerid, COR_GRO, string);
    	format(string, sizeof(string), "Comando Vermelho: %s", InfoOrg[19][Lider]);
		SendClientMessage(playerid, 0xF6000000, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________| Mafiosos |____________|");
		format(string, sizeof(string), "M�fia Yakuza: %s", InfoOrg[13][Lider]);
		SendClientMessage(playerid, COR_YAK, string);
		format(string, sizeof(string), "M�fia Cosa Nostra: %s", InfoOrg[12][Lider]);
		SendClientMessage(playerid, COR_COSA, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________| Torcidas |____________|");
		format(string, sizeof(string), "Gavi�es da Fiel: %s", InfoOrg[6][Lider]);
		SendClientMessage(playerid, COR_PF, string);
		format(string, sizeof(string), "Mancha Verde: %s", InfoOrg[15][Lider]);
		SendClientMessage(playerid, COLOR_GREEN, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________| Corredores |____________|");
    	format(string, sizeof(string), "Sons Of Anarchy: %s", InfoOrg[21][Lider]);
		SendClientMessage(playerid, 0x000000ff, string);
		format(string, sizeof(string), "Mayans: %s", InfoOrg[23][Lider]);
		SendClientMessage(playerid, COR_MAYANS, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________| Outras Organiza��es |____________|");
		format(string, sizeof(string), "Hitmans: %s", InfoOrg[8][Lider]);
		SendClientMessage(playerid, COR_HITMAN, string);
		format(string, sizeof(string), "Reporteres: %s", InfoOrg[9][Lider]);
		SendClientMessage(playerid, COR_REP, string);
		format(string, sizeof(string), "Taxistas: %s", InfoOrg[10][Lider]);
		SendClientMessage(playerid, COR_TAXI, string);
		SendClientMessage(playerid, COLOR_WHITE, "|____________| Fim do Info Lider |____________|");
		return 1;
   	}
   	if (strcmp("/limparlider", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1337)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente admins master ou dono podem usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparlider [organiza��o]");
			return 1;
		}
		new Vaga2 = strval(tmp);
		if(Vaga2 < 1 || Vaga2 > 23) { SendClientMessage(playerid, COLOR_GREY, "Vaga m�nima 1 m�ximo 22!"); return 1; }
		new id=GetPlayerID(InfoOrg[Vaga2][Lider]);
		format(string, sizeof(string), "ADMIN: %s limpou a vaga %d do l�der %s",PlayerName(playerid), Vaga2, InfoOrg[Vaga2][Lider]);
		LideresLog(string);
		if(IsPlayerOnline(InfoOrg[Vaga2][Lider])) DemitirLider(id);
		strmid(InfoOrg[Vaga2][Lider], "Ninguem", 0, strlen("Ninguem"), 255);
		format(gstring, 128, "ORG Arquivos/Org%d.cfg", Vaga2);
       	dini_Set(gstring,"Lider","Ninguem");
		format(string, sizeof(string), "Voc� limpou o l�der da organiza��o N� %d",Vaga2);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
	if(strcmp(cmd, "/carid", true) == 0 && PlayerInfo[playerid][pAdmin] == 1342)
	{
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		format(string,sizeof(string), "Carro ID: %d", vehicle);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	if(strcmp(cmd,"/setpos",true)==0 && PlayerInfo[playerid][pAdmin] == 1341)
	{
		new plid,Float:setpos[3];
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
		plid = strval(tmp);
		for(new x=0;x<3;x++)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "USE: /setpos [id] [X] [Y] [Z]");
			setpos[x] = floatstr(tmp);
		}
		SetPlayerPos(plid,setpos[0],setpos[1],setpos[2]);
		SendClientMessage(playerid, COR_PM, "Posi��o setada!");
		return 1;
	}
////////////////////////////////////////////////////////////////
	if(strcmp(cmd, "/ptuto", true) == 0 && PlayerInfo[playerid][pAdmin] == 1341)
	{
		TutTime[playerid] = 85;
		return 1;
	}
	if((strcmp(cmd, "/promoveradmin", true) == 0 || strcmp(cmd, "/padmin", true) == 0) && (PlayerInfo[playerid][pAdmin] == 1342))
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /padmin [id] [Nivel]");
				return 1;
			}
			new level, para1;
			para1 = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /padmin [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			strmid(giveplayer, AdmInfo[para1][gMembro], 0, strlen(AdmInfo[para1][gMembro]), 255);
			if(strcmp(giveplayer,"Vazio", true ) == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "N�o tem nenhum admin nessa vaga");
				return 1;
			}
			if(IsPlayerOnline(giveplayer))
  			{
				SendClientMessage(playerid, COLOR_GRAD2, "O Viado est� online");
				return 1;
 			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			getdate(year, month, day);
			gettime(hour,minute,second);
			new arquivo[64];
		    format(arquivo, sizeof(arquivo), "Players/%s.ini",giveplayer);
		    dini_IntSet(arquivo,"AdminLevel",level);
			format(string, sizeof(string), "   Voc� promoveu o(a) %s Para o level %d de Admin.", giveplayer,level);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "(OFF)%s deu admin nivel %d para %s [%d/%d/%d] �s [%d:%d:%d].", sendername, level, giveplayer, day,
			month, year, hour, minute, second);
			PAdminsLog(string);
		}
		return 1;
	}
	if(strcmp(cmd, "/daradmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1342)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o tem autoriza��o para usar esse comando.");
				return 1;
	    	}
	        AdmsVaga();
	    	if(VagaSobrando == 0)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "N�o h� mais vagas na lista use /limparadm primeiro.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradmin [id] [Nivel]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradmin [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
		        	if(PlayerInfo[para1][pAdmin] >= 1342)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode promover um Admin Dono/Scripter!");
						format(string, sizeof(string), "O admin %s tentou te promover a nivel %d",sendername ,level);
						SendClientMessage(para1, COLOR_AZULBB, string);
						return 1;
					}
					format(string, sizeof(string), "   Voc� foi promovido para level  %d de Admin - Por %s", level, sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "   Voc� promoveu o(a) %s Para o level %d de Admin.", giveplayer,level);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					format(string, sizeof(string), "%s deu admin nivel %d para %s [%d/%d/%d] �s [%d:%d:%d].", sendername, level, giveplayer, day,
					month, year, hour, minute, second);
					PAdminsLog(string);
					for(new i = 0; i < sizeof(AdmInfo); i++)
    				{
						if(PlayerInfo[para1][pAdmin] > 0)
						{
						    PlayerInfo[para1][pAdmin] = level;
						    break;
						}
   						else if(AdmInfo[i][AdminVaga] == 0)
						{
							PlayerInfo[para1][pAdmin] = level;
							AdmInfo[i][gMembro] = giveplayer;
							AdmInfo[i][AdminVaga] = 1;
							SaveAdm();
							break;
						}
					}
				}
			}
		}
		return 1;
	}
	if (strcmp("/limparadm", cmdtext, true, 10) == 0 || strcmp("/limparadmin", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o est� autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparadm [ Vaga ]");
			return 1;
		}
		new Vagao = strval(tmp);
		if(Vagao < 1 || Vagao > 30) { SendClientMessage(playerid, COLOR_GREY, "Vaga m�nima 1 m�ximo 30!"); return 1; }
		getdate(year, month, day);
		gettime(hour,minute,second);
		format(string, sizeof(string), "%s apagou a vaga %d de %s [%d/%d/%d] �s [%d:%d:%d].", PlayerName(playerid), Vagao, AdmInfo[Vagao][gMembro], day,
		month, year, hour, minute, second);
		PAdminsLog(string);
		strmid(AdmInfo[Vagao][gMembro], "Vazio", 0, strlen("Vazio"), 255);
		AdmInfo[Vagao][AdminVaga] = 0;
	    SaveAdm();
	    format(string, sizeof(string), "Voc� Limpou A Vaga N� %d",Vagao);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
	if (strcmp("/infoadm", cmdtext, true, 10) == 0 || strcmp("/infoadmin", cmdtext, true, 10) == 0 || strcmp("/infoadmins", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o tem autoriza��o para usar esse comando.");
			return 1;
	    }
	    new lol = 0;
	    new arquivo[128];
		SendClientMessage(playerid, COLOR_WHITE, "|______________| Administradores |______________|");
	    while (lol < sizeof(AdmInfo))
		{
			if(lol == 0)
			{
			    format(string, sizeof(string), " Dono/Fundador: allef_Monster. ", AdmInfo[0][gMembro]);
				SendClientMessage(playerid, COLOR_AZULBB, string);
			}
			else
			{
			    if(strcmp(AdmInfo[lol][gMembro],"Vazio",true) != 0)
				{
				    if(PlayerInfo[playerid][pAdmin] == 1342)
				    {
				    	format(arquivo, sizeof(arquivo), "Players/%s.ini",AdmInfo[lol][gMembro]);
		    			format(string, sizeof(string), "Vaga %d: %s, Cargo: %d", lol, AdmInfo[lol][gMembro],dini_Int(arquivo,"AdminLevel"));
						SendClientMessage(playerid, COLOR_AZULBB, string);
					}
					else
				    {
				    	format(arquivo, sizeof(arquivo), "Players/%s.ini",AdmInfo[lol][gMembro]);
		    			format(string, sizeof(string), "Vaga %d: %s", lol, AdmInfo[lol][gMembro]);
						SendClientMessage(playerid, COLOR_AZULBB, string);
					}
				}
			}
			lol++;
		}
		return 1;
   	}
   	if (strcmp("/infovip", cmdtext, true, 10) == 0 || strcmp("/infovips", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o tem autoriza��o para usar esse comando.");
			return 1;
	    }
		SendClientMessage(playerid, COLOR_WHITE, "|______________| Vips do Server |______________|");
	    for(new x=0; x<sizeof(VipInfo); x++)
		{
			if(strcmp(VipInfo[x][vNick],"Ninguem",true) != 0)
			{
			    format(string, sizeof(string), "Vip ID:[%d]: %s N�vel:[%d]", x, VipInfo[x][vNick], VipInfo[x][vTipo]);
				SendClientMessage(playerid, COLOR_AZULBB, string);
			}
		}
		return 1;
   	}
   	if(strcmp(cmd, "/darvip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1342)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorizado para usar esse comando.");
				return 1;
	    	}
	    	VipVaga();
	    	if(VagaSobrando == 0)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /retirarvip primeiro.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvip [ID/Nome] [Nivel] [Meses]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvip [ID/Nome] [Nivel] [Meses]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof string, "Voc� deu VIP N�vel %d para %s", level, giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof string, "Voc� ganhou VIP N�vel %d do admin %s", level, sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					format(string, sizeof(string), "%s deu vip ao %s n�vel %d (%d/%d/%d - %d:%d)",sendername,giveplayer,level,day, month, year,hour, minute);
					VipsLog(string);
					PlayerInfo[para1][pVIP] = level;
					new var03 = 0;
					for(new i = 0; i < sizeof(VipInfo); i++)
				    {
				        if(strcmp(giveplayer,VipInfo[i][vNick],true)==0)
				        {
				            VipInfo[i][vTipo] = level;
				            SaveVip();
				            var03 = 1;
				            break;
				        }
					}
					if(var03 == 0)
					{
					    for(new i = 0; i < sizeof(VipInfo); i++)
				    	{
				        	if(strcmp("Ninguem",VipInfo[i][vNick],true)==0)
					        {
		    	    		    strmid(VipInfo[i][vNick], giveplayer, 0, strlen(giveplayer), 255);
		    	    		    VipInfo[i][vTipo] = level;
					            SaveVip();
					            break;
							}
						}
					}
				}
			}
		}
		return 1;
	}
	if (strcmp("/retirarvip", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o est� autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirarvip [Vaga]");
			return 1;
		}
		new Vagao = strval(tmp);
		if(Vagao < 0 || Vagao > 50) { SendClientMessage(playerid, COLOR_GREY, "Vaga m�nima 0 m�ximo 50!"); return 1; }
		if(IsPlayerOnline(VipInfo[Vagao][vNick]))
  		{
		    new id=GetPlayerID(VipInfo[Vagao][vNick]);
		    PlayerInfo[id][pVIP] = 0;
			SendClientMessage(id, COLOR_YELLOW, "Voc� perdeu seu VIP, renove-o e receba seus benef�cios de volta");
		}
		getdate(year, month, day);
		gettime(hour,minute,second);
		format(string, sizeof(string), "%s limpou vip vaga %d de %s (%d/%d/%d - %d:%d)",PlayerName(playerid),Vagao,VipInfo[Vagao][vNick],day, month, year,hour, minute);
		VipsLog(string);
		strmid(VipInfo[Vagao][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
		VipInfo[Vagao][vTipo] = 0;
	    SaveVip();
	    format(string, sizeof(string), "Voc� Limpou A Vaga VIP N� %d",Vagao);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
	/*if (strcmp("/infovip", cmdtext, true, 10) == 0 || strcmp("/infovips", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1337)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o tem autoriza��o para usar esse comando.");
			return 1;
	    }
		SendClientMessage(playerid, COLOR_WHITE, "|______________ Vips do Server ______________|");
	    for(new lol=0; lol < sizeof(VipInfo); lol ++)
		{
		    if(strcmp(VipInfo[lol][vNick],"Ninguem",true) == 0)
		    {}
			else
			{
		    	format(string, sizeof(string), "VIP [%d]: %s VIP de %d Mes(es) - Recebeu em [%d/%d/%d] e Expira em [%d/%d/%d]",
				VipInfo[lol][vID], VipInfo[lol][vNick], VipInfo[lol][vTempo], VipInfo[lol][vDia], VipInfo[lol][vMes],
				VipInfo[lol][vAno],	VipInfo[lol][vDia2], VipInfo[lol][vMes2], VipInfo[lol][vAno2]);
				SendClientMessage(playerid, COLOR_AZULBB, string);
			}
		}
		return 1;
   	}*/
	/*if (strcmp("/antiafk", cmdtext, true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1342)
		{
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
     		if(AFKon == false)
			{
				ABroadCast(COLOR_YELLOW,"|ATEN��O|: Sistema  Anti AFK Ligado!",1);
        	    AFKon = true;
			}
			else
			{
				ABroadCast(COLOR_YELLOW,"|ATEN��O|: Sistema  Anti AFK Desligado!",1);
       	     	AFKon = false;
			}
		}
		return 1;
	}*/
	if (strcmp("/mudarluta", cmdtext, true) == 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, " Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "Confirma", "Cancela");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, " Voce n�o est� no gin�sio de luta de LS.");
		}
		return 1;
	}
	if(strcmp(cmd,"/assaltar",true)==0)
	{
		if(PlayerInfo[playerid][pJailed] != 0 || PlayerPaintballing[playerid] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o assaltar agora!");
		   return 1;
	    }
		if(PlayerInfo[playerid][pMembro] != 5 && PlayerInfo[playerid][pLider] != 5 && PlayerInfo[playerid][pMembro] != 14 && PlayerInfo[playerid][pLider] != 14
		&& PlayerInfo[playerid][pMembro] != 17 && PlayerInfo[playerid][pLider] != 17 && PlayerInfo[playerid][pMembro] != 18 && PlayerInfo[playerid][pLider] != 18
		&& PlayerInfo[playerid][pMembro] != 19 && PlayerInfo[playerid][pLider] != 19 && PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20
		&& PlayerInfo[playerid][pMembro] == 21 && PlayerInfo[playerid][pLider] == 21 && PlayerInfo[playerid][pMembro] == 23 && PlayerInfo[playerid][pMembro] == 23
		&& PlayerInfo[playerid][pLider] == 23)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode usar esse comando!" );
   			return 1;
        }
		if(IsPlayerConnected(playerid))
    	{
 			if(UsouComando[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Voc� j� usou esse comando uma vez, espere mais 5 minutos!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /assaltar [id] [Quantia]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /assaltar [id] [Quantia]");
				return 1;
			}
			new money = strval(tmp);
			if(money < 1000 || money > 50000) { SendClientMessage(playerid, COLOR_GREY, " O Pre�o Tem que ser entre R$ 1000 e R$ 50000!"); return 1; }
			if (IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pLevel] == 2)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode assaltar novatos!");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
				   		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� est� assaltando $%d de %s.", money, giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s: Isso � um assalto,pague $%d! n�o seja Ant-RPG.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/aceitar assalto para aceitar");
	                    format(string, sizeof(string), "*%s est� assaltando %s!", sendername,giveplayer);
				        ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				        OfAssalto[giveplayerid] = playerid;
						precoassalto[giveplayerid] = money;
						SetPlayerCriminal(playerid,255, "Tentativa de Assalto");
				        UsouComando[playerid] = 1;
						SetTimerEx("UsarNovamente",300000,0,"d",playerid);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Esse jogador n�o est� perto de voc�!");
					}
	    		}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ID/Nome Invalido !");
				    return 1;
				}
			}
	    }
		return 1;
	}
	if(strcmp(cmd, "/mala", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[64];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    SendClientMessage(playerid, COLOR_AZULBB, "USE: /mala [Nome]");
			    SendClientMessage(playerid, COLOR_WHITE, "Nomes Dispon�veis para VIPS: info, guardar(Guardar Arma), pegar(Pegar Arma)");
			    if(IsACop(playerid))
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "Nomes Dispon�veis para COPs: revistar(Revista a Mala), apreender(Retira as Armas)");
			    }
			    return 1;
			}
			if(strcmp(x_nr,"info",true) == 0)
			{
				if(PlayerInfo[playerid][pVIP] < 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser um usu�rio VIP para usar esse comando !");
			    	return 1;
				}
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
       			for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = Checarveiculo(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto de nenhum carro !");
			        }

			        case 1:
			        {
			        	if(CarroMala(result))
		        		{
							if(PlayerInfo[playerid][pCarKey] == result) { }
							else if(PlayerInfo[playerid][pCarKey2] == result) { }
							else if(PlayerInfo[playerid][pCarKey3] == result) { }
							else if(PlayerInfo[playerid][pCarKey4] == result) { }
               		    	else if(PlayerInfo[playerid][pPHouseCarkey] == result) { }
               		    	else
               		    	{
			               		SendClientMessage(playerid, COLOR_GREY, "  Porta-Malas trancado !");
			           			return 1;
							}
						}
						else
			            {
			            	SendClientMessage(playerid, COLOR_GREY, "  Somente carros VIP tem espa�o no porta-malas !");
			            	return 1;
						}
			            if(IsPlayerInAnyVehicle(playerid))
      					{
			                SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o pode abrir o porta-malas de dentro do carro");
			            	return 1;
               			}
						SendClientMessage(playerid, COLOR_WHITE, "|______________| Sistema de Porta-Malas |______________|");
						for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
						{
						    new gunname[100];
						    if(vehTrunk[result][slot] != 0)
						    {
						        GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
						        format(string, sizeof(string), "| Arma %i: %s (Muni��o: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						    }
						    else
						    {
						        format(string, sizeof(string), "| Arma %i: Vazio (Muni��o: N/A)", slot);
						        SendClientMessage(playerid, COLOR_WHITE, string);
						    }
						}
               			GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* %s est� mexendo no porta-malas.", sendername);
                  		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						return 1;
			        }
			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
			            return 1;
			        }
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"guardar",true) == 0)
			{
				if(PlayerInfo[playerid][pVIP] < 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser um usu�rio VIP para usar esse comando !");
			    	return 1;
				}
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = Checarveiculo(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }
			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto de nenhum carro !");
			        }

			        case 1:
			        {
			            if(vehTrunkCounter[result] != (MAX_TRUNK_SLOTS-1))
			            {
                			if(CarroMala(result))
		        			{
								if(PlayerInfo[playerid][pCarKey] == result) { }
								else if(PlayerInfo[playerid][pCarKey2] == result) { }
								else if(PlayerInfo[playerid][pCarKey3] == result) { }
               		    		else if(PlayerInfo[playerid][pPHouseCarkey] == result) { }
               		    		else
               		    		{
			               			SendClientMessage(playerid, COLOR_GREY, "  Porta-Malas trancado !");
			           				return 1;
								}
							}
			            	if(ReduceTime[playerid] == 1)
			            	{
			            	    SendClientMessage(playerid, COLOR_GREY, "   Espere 3 segundos para usar o comando de novo !");
			            	    return 1;
			            	}
			                if(IsPlayerInAnyVehicle(playerid))
			                {
			                    SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o pode abrir o porta-malas de dentro do carro");
			                    return 1;
			                }
                            new buffer[512];
                            new gunname[100];
                            new gunID = GetPlayerWeapon(playerid);
                            new gunAmmo = GetPlayerAmmo(playerid);

                            if(gunID != 0 && gunAmmo != 0)
                            {
                                ReduceTime[playerid] = 1;
                				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
                                GetWeaponName(gunID, gunname, sizeof(gunname));
                                vehTrunkCounter[result]++;
                                vehTrunk[result][vehTrunkCounter[result]] = gunID;
                                vehTrunkAmmo[result][vehTrunkCounter[result]] = gunAmmo;
                                format(buffer, sizeof(buffer), "Voc� guardou uma %s (Muni��o: %i) no porta-mala do carro.", gunname, gunAmmo);
                                SendClientMessage(playerid, COLOR_WHITE, buffer);
                                RemovePlayerWeapon(playerid, gunID);
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* %s abre o porta-malas e guarda armas.", sendername);
                                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                SaveTrunk();
                                return 1;
                            }
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, " Porta-mala cheio");
			                return 1;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
			            return 1;
			        }
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"pegar",true) == 0)
			{
				if(PlayerInfo[playerid][pVIP] < 1)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser um usu�rio VIP para usar esse comando !");
			    	return 1;
				}
			    new counter = 0;
			    new result;
			    new plyName[MAX_PLAYER_NAME];

			    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			    for(new i; i != MAX_VEHICLES; i++)
			    {
			        new dist = Checarveiculo(3.5, playerid, i);
			        if(dist)
			        {
			            result = i;
			            counter++;
			        }
			    }

			    switch(counter)
			    {
			        case 0:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto de nenhum carro !");
			            return 1;
			        }
			        case 1:
			        {
			            if(IsPlayerInAnyVehicle(playerid))
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode abrir o porta-malas de dentro do carro");
			                return 1;
			            }
			            if(ReduceTime[playerid] == 1)
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   Espere 3 segundos para usar o comando de novo !");
			                return 1;
		            	}
		            	if(CarroMala(result))
		        		{
							if(PlayerInfo[playerid][pCarKey] == result) { }
							else if(PlayerInfo[playerid][pCarKey2] == result) { }
							else if(PlayerInfo[playerid][pCarKey3] == result) { }
               		    	else if(PlayerInfo[playerid][pPHouseCarkey] == result) { }
               		    	else
               		    	{
			               		SendClientMessage(playerid, COLOR_GREY, "  Porta-Malas trancado !");
			           			return 1;
							}
						}
			            if(vehTrunkCounter[result] != 0)
			            {
			                ReduceTime[playerid] = 1;
               				SetTimerEx("ReduceTimer", 3000, false, "i", playerid);
			                new buffer[512];
			                new gunName[100];

			                GivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunName, sizeof(gunName));
			                format(buffer, sizeof(buffer), "Voc� pegou uma %s (Muni��o: %i) do porta-mala do veiculo.", gunName, vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                SendClientMessage(playerid, COLOR_WHITE, buffer);
			                vehTrunk[result][vehTrunkCounter[result]] = '\0';
			                vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
			                vehTrunkCounter[result]--;
			                GetPlayerName(playerid, sendername, sizeof(sendername));
			                format(string, sizeof(string), "* %s abre o porta-malas e retira armas.", sendername);
			                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			                SaveTrunk();
			                return 1;
			            }
			            else
			            {
			                SendClientMessage(playerid, COLOR_GREY, "   Porta-mala vazio ! ");
			                return 1;
			            }
			        }

			        default:
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
			            return 1;
			        }
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"revistar",true) == 0)
			{
			    if(IsACop(playerid))
			    {
			    	new counter = 0;
			    	new result;
			    	new plyName[MAX_PLAYER_NAME];

				    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
				    for(new i; i != MAX_VEHICLES; i++)
				    {
				        new dist = Checarveiculo(3.5, playerid, i);
			    	    if(dist)
			        	{
			           		result = i;
			            	counter++;
			        	}
			    	}
			    	switch(counter)
			    	{
			        	case 0:
			        	{
			            	SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto de nenhum carro !");
			        	}

			        	case 1:
			        	{
			            	if(IsPlayerInAnyVehicle(playerid))
      						{
			                	SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o pode abrir o porta-malas de dentro do carro");
			            		return 1;
               				}
							SendClientMessage(playerid, COLOR_WHITE, "|______________| Sistema de Porta-Malas |______________|");
							for(new slot = 1; slot != MAX_TRUNK_SLOTS; slot++)
							{
							    new gunname[100];
							    if(vehTrunk[result][slot] != 0)
							    {
							        GetWeaponName(vehTrunk[result][slot], gunname, sizeof(gunname));
						    	    format(string, sizeof(string), "| Arma %i: %s (Muni��o: %i)", slot, gunname, vehTrunkAmmo[result][slot]);
						        	SendClientMessage(playerid, COLOR_WHITE, string);
						    	}
						    	else
						    	{
						        	format(string, sizeof(string), "| Arma %i: Vazio (Muni��o: N/A)", slot);
						        	SendClientMessage(playerid, COLOR_WHITE, string);
						    	}
							}
							GetPlayerName(playerid, sendername, sizeof(sendername));
    	                    format(string, sizeof(string), "* COP %s abre o porta-malas e ve o que tem dentro.", sendername);
        	          		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							return 1;
			        	}

				        default:
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
				            return 1;
			    	    }
			    	}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial ! ");
					return 1;
				}
			    return 1;
			}
			else if(strcmp(x_nr,"apreender",true) == 0)
			{
			    if(IsACop(playerid))
			    {
			    	new counter = 0;
			    	new result;
			    	new plyName[MAX_PLAYER_NAME];

				    GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
				    for(new i; i != MAX_VEHICLES; i++)
				    {
				        new dist = Checarveiculo(3.5, playerid, i);
			    	    if(dist)
			        	{
			           		result = i;
			            	counter++;
			        	}
			    	}
			    	switch(counter)
			    	{
			        	case 0:
			        	{
			            	SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto de nenhum carro !");
			        	}

			        	case 1:
			        	{
			            	if(IsPlayerInAnyVehicle(playerid))
      						{
			                	SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o pode apreender o que est� no porta-malas de dentro do carro");
			            		return 1;
               				}
               				if(vehTrunkCounter[result] != 0)
			            	{
			                	new gunName[100];
			                	GetWeaponName(vehTrunk[result][vehTrunkCounter[result]], gunName, sizeof(gunName));
			                	GivePlayerWeapon(playerid, vehTrunk[result][vehTrunkCounter[result]], vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                	format(gstring, sizeof(gstring), "Voc� apreendeu uma %s (Muni��o: %i) do porta-mala do veiculo.", gunName, vehTrunkAmmo[result][vehTrunkCounter[result]]);
			                	SendClientMessage(playerid, COLOR_WHITE, gstring);
			                	vehTrunk[result][vehTrunkCounter[result]] = '\0';
			                	vehTrunkAmmo[result][vehTrunkCounter[result]] = '\0';
			                	vehTrunkCounter[result]--;
			                	GetPlayerName(playerid, sendername, sizeof(sendername));
			                	format(gstring, sizeof(gstring), "* COP %s apreende armas do porta-malas.", sendername);
        	          			ProxDetector(30.0, playerid, gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			                	SaveTrunk();
			                	return 1;
			            	}
			            	else
			            	{
			                	SendClientMessage(playerid, COLOR_GREY, "   Porta-mala vazio ! ");
			                	return 1;
			            	}
			        	}

				        default:
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Foi encontrado mais de um carro nesse raio");
				            return 1;
			    	    }
			    	}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial ! ");
					return 1;
				}
			    return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /mala [name]");
			    SendClientMessage(playerid, COLOR_WHITE, "Nomes Dispon�veis: info, garma(Guardar Arma), parma(Pegar Arma)");
			    if(IsACop(playerid))
			    {
			        SendClientMessage(playerid, COLOR_WHITE, "/mala revistar & apreender Somente para Policiais");
			    }
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/localizar", true) == 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
  			SendClientMessage(playerid, COLOR_WHITE, "USE: /localizar [id]");
		    return 1;
		}
		new Nome[MAX_PLAYER_NAME];
		giveplayerid = ReturnUser(tmp);
		GetPlayerName(giveplayerid, Nome, sizeof(Nome));
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(giveplayerid, location, MAX_ZONE_NAME);
        format(string, sizeof(string), "%s foi visto perto de %s", Nome,location);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		return 1;
	}
//=======================[NOVO ROUBAR]========================
	if(strcmp(cmd,"/roubar",true)==0)
	{
	    if(PlayerInfo[playerid][pMembro] != 5 && PlayerInfo[playerid][pLider] != 5
		&& PlayerInfo[playerid][pMembro] != 14 && PlayerInfo[playerid][pLider] != 14
		&& PlayerInfo[playerid][pMembro] != 17 && PlayerInfo[playerid][pLider] != 17
		&& PlayerInfo[playerid][pMembro] != 18 && PlayerInfo[playerid][pLider] != 18
		&& PlayerInfo[playerid][pMembro] != 19 && PlayerInfo[playerid][pLider] != 19
		&& PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20
		&& PlayerInfo[playerid][pMembro] != 21 && PlayerInfo[playerid][pLider] != 21
		&& PlayerInfo[playerid][pMembro] != 23 && PlayerInfo[playerid][pLider] != 23
		&& GetPlayerOrg(playerid) != 6 && GetPlayerOrg(playerid) != 12
		&& GetPlayerOrg(playerid) != 13	&& GetPlayerOrg(playerid) != 15)
	    {
			SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode assaltar um Banco/Loterica/Loja de Armas 1, 2");
            return 1;
		}
		if(roubando[playerid] == 1)
	    {
	   		SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� roubando algum lugar.");
	    	return 1;
    	}
		if(PlayerToPoint(1.0,playerid, 2145.2815,1641.7383,993.5761))
		{
	    	if(roubobanco == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo nesse cofre.");
	    		return 1;
	    	}
	    	if(temporoubobanco == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� roubaram o cofre do banco espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s est�o tentando roubar o cofre banco! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar o banco.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Banco");
            roubando[playerid] = 1;
            ProvocoBanco[playerid] = 1;
            roubobanco = 1;
            temporoubobanco = 1;
            SetTimer("Aroubo", 220000, 0);
        	tempobanco = SetTimerEx("RouboBanco", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid, 380.713836,-189.114303,1000.632812))
		{
	    	if(roubobar == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo nesse caixa.");
	    		return 1;
	    	}
	    	if(temporoubobar == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� roubaram o caixa do bar espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s est�o tentando roubar o caixa do bar! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar o bar.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Bar");
            roubando[playerid] = 1;
            ProvocoBar[playerid] = 1;
            roubobar = 1;
            temporoubobar = 1;
            SetTimer("Aroubo7", 220000, 0);
        	tempobar = SetTimerEx("Roubobar", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid,820.6042,8.3990,1004.1962))
		{
	    	if(roubolot == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo nesse cofre.");
	    		return 1;
	    	}
	    	if(temporoubolot == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� roubaram o cofre da Lot�rica espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s est�o tentando roubar o cofre da Lot�rica! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Lot�rica.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Lot�rica");
            roubando[playerid] = 1;
            ProvocoLot[playerid] = 1;
            roubolot = 1;
            temporoubolot = 1;
            SetTimer("Aroubo2", 220000, 0);
        	tempolot = SetTimerEx("RouboLot", 40000, 0, "i", playerid);
        	return 1;
		}
        else if(PlayerToPoint(1.0,playerid,947.3466,-42.0509,1001.1166))
		{
	    	if(rouboputeiro == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo nesse cofre.");
	    		return 1;
	    	}
	    	if(temporouboputeiro == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� roubaram o cofre do Puteiro espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s est�o tentando roubar o cofre do Puteiro! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar o Puteiro!");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Puteiro!");
            roubando[playerid] = 1;
            ProvocoPuteiro[playerid] = 1;
            rouboputeiro = 1;
            temporouboputeiro = 1;
            SetTimer("Aroubo6", 220000, 0);
        	tempoputeiro = SetTimerEx("RouboPuteiro", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid,2169.1516,1589.9265,999.9713))
		{
	    	if(rouboloja1 == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo nessa loja.");
	    		return 1;
	    	}
	    	if(temporouboloja1 == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� roubaram a Loja de Armas 1 espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s est�o tentando roubar a Loja de Armas 1! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Loja de Armas 1.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 1");
            roubando[playerid] = 1;
            ProvocoLoja1[playerid] = 1;
            rouboloja1 = 1;
            temporouboloja1 = 1;
            SetTimer("Aroubo3", 220000, 0);
        	tempoloja1 = SetTimerEx("RouboLoja1", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid,451.3090,-79.8603,999.5547))
		{
	    	if(rouboloja2 == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo nessa loja.");
	    		return 1;
	    	}
	    	if(temporouboloja2 == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� roubaram a Loja de Armas 2 espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s est�o tentando roubar a Loja de Armas 2! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Loja de Armas 2.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 2");
            roubando[playerid] = 1;
            ProvocoLoja2[playerid] = 1;
            rouboloja2 = 1;
            temporouboloja2 = 1;
            SetTimer("Aroubo4", 220000, 0);
        	tempoloja2 = SetTimerEx("RouboLoja2", 40000, 0, "i", playerid);
        	return 1;
		}
        else if(PlayerToPoint(1.0,playerid,376.6777093,-117.256324,1001.492187))
        {
            if(roubobugger == 1)
            {
                SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo � Pizzaria.");
                return 1;
			}
			if(temporoubobugger == 1)
			{
			    SendClientMessage(playerid,COLOR_GREY,"J� roubaram a Pizzaria espere 3 minutos para roubar de novo !");
			    return 1;
			}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "%s e o %s est�o tentando roubar a Pizzaria! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a pizzaria.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Pizzaria");
			roubando[playerid] = 1;
			ProvocoBugger[playerid] = 1;
			roubobugger = 1;
			temporoubobugger = 1;
			SetTimer("Aroubo6", 220000, 0);
			tempobugger = SetTimerEx("RouboBugger", 40000, 0, "i", playerid);
			return 1;
		}
		/*else if(PlayerToPoint(1.0,playerid,354.6608,172.0170,1008.3802))
		{
	    	if(rouboprefe == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de roubo na prefeitura.");
	    		return 1;
	    	}
	    	if(temporouboprefe == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� roubaram a Prefeitura espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s est�o tentando roubar a Prefeitura! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a prefeitura.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Prfeitura");
			roubando[playerid] = 1;
            ProvocoPrefe[playerid] = 1;
            rouboprefe = 1;
            temporouboprefe = 1;
            SetTimer("Aroubo5", 220000, 0);
        	tempoprefe = SetTimerEx("RouboPrefe", 40000, 0, "i", playerid);
        	return 1;
		}*/
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o esta em um Banco/Loterica/Loja de Armas 1, 2 !");
			return 1;
		}
		//return 1;
	}
    //CREEEEEEEEEEEEEEEEEEEEEUUUUUUUUUUUUUUUUUU
    if(strcmp(cmd, "/creu", true) == 0 || strcmp(cmd, "/cr�u", true) == 0)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
		//format(string, sizeof(string), "* %s est� dan�ando o Cr�u  !.", sendername);
		//ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,1,1,1,1,1);
        SendClientMessage(playerid, COLOR_DBLUE, "���� Cr������u  OWNA xD!");
        return 1;
    }
// praia
	if (strcmp("/praia", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 229.359,-1807.635,4.141); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,229.359,-1807.635,4.141);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/irtunning", cmdtext, true, 10) == 0 || strcmp("/tunning", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2692.8701,211.2929,4.3281); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2692.8701,211.2929,4.3281);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/fim", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2415.3999,2219.0083,4.9844); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/favela", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2155.7847,-1010.8846,62.9648); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2155.7847,-1010.8846,62.9648);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!!");
			}
		}
		return 1;
	}
//TELEPORTES ADMIN DONO
	if (strcmp("/hqpm", cmdtext, true, 10) == 0 || strcmp("/hqpoliciamilitar", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1538.2189,-1681.6970,5.8906); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,1538.2189,-1681.6970,5.8906);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqrota", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -498.560150,-543.890625,25.523437); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-498.560150,-543.890625,25.523437);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqexercito", cmdtext, true, 10) == 0 || strcmp("/hqexe", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1347.0657,498.5268,11.1953); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-1347.0657,498.5268,11.1953);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqmedicos", cmdtext, true, 10) == 0 || strcmp("/hqsamu", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1181.7914,-1324.3308,13.5829); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,1181.7914,-1324.3308,13.5829);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqtcp", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1715.349975,-2137.490966,13.546875); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2012.458740,143.515167,27.687500);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqgavioes", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2748.6006,-2453.4863,13.8623); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2748.6006,-2453.4863,13.8623);
					SetPlayerFacingAngle(playerid,0.8485);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqprefeitura", cmdtext, true, 10) == 0 || strcmp("/hqgoverno", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				else
				{
					SetPlayerInterior(playerid,3);
                    SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,355.4489,162.4052,1025.7964);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/teste", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				else
				{
					SetPlayerInterior(playerid,1);
                    SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 2003.3, 2285.2, 1011.1);
					SetPlayerFacingAngle(playerid,226.0);
					SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqhitmans", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2337.2310,-1243.7942,22.5000); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2337.2310,-1243.7942,22.5000);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqreporters", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 740.3707,-1348.3239,13.5100); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,740.3707,-1348.3239,13.5100);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqtaxistas", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 594.5832,-1497.1536,15.2379); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,594.5832,-1497.1536,15.2379);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqCET", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 987.3514,-1444.4928,13.5469); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,987.3514,-1444.4928,13.5469);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqgroove", cmdtext, true, 10) == 0 || strcmp("/hqgroovestreet", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2511.3423,-1671.1489,13.4475);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2511.3423,-1671.1489,13.4475);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqMancha", cmdtext, true, 10) == 0 || strcmp("/hqManchaverde", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 404.9639,2535.7507,16.5460); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,404.9639,2535.7507,16.5460);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqpc", cmdtext, true, 10) == 0 || strcmp("/hqpoliciacivil", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -14.666748,-294.358276,5.429687); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-50.113430,-271.560821,6.633186);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/blitz4", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -173.831100,-1295.259399,4.510900); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, -173.831100,-1295.259399,4.510900);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
    }
    if (strcmp("/estadio", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1381.306518,2052.652832,10.760171); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 1370.175903,2150.319091,11.015625);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
    }
	if (strcmp("/blitz3", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1819.103271,889.516296,10.056571); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 1819.103271,889.516296,10.056571);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/blitz1", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2878.437500,-1105.735473,10.588581); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 2878.437500,-1105.735473,10.588581);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/blitz2", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1783.173095,2223.597167,4.625072); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 1783.173095,2223.597167,4.625072);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqsons", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 681.533081,-474.036895,16.536296); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 681.533081,-474.036895,16.536296);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
    }
	if (strcmp("/hqballas", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2093.204589,-1573.932495,13.206928); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2093.204589,-1573.932495,13.206928);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
    if (strcmp("/hqbombeiros", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1788.753051,-1697.244262,13.492004); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 1788.753051,-1697.244262,13.492004);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqvagos", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2814.3884,-1182.9852,25.2631); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2814.3884,-1182.9852,25.2631);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/morrodoalemao", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2225.861816,-761.923329,64.814208); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, -2225.861816,-761.923329,64.814208);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqcv", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2440.8840,-2110.4534,13.5469); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 2440.8840,-2110.4534,13.5469);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/ct", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pAdmin] >=1339)
	        {
	            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
	            {
	                SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
	                return 1;
	            }
	            if (GetPlayerState(playerid) == 2)
	            {
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1210.528808,-1068.466430,128.265625); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
				    SetPlayerInterior(playerid,0);
				    SetPlayerVirtualWorld(playerid,0);
				    SetPlayerPos(playerid,-1210.528808,-1068.466430,128.265625);
				    SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "     Voc� Foi Teleportado!");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "     Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqmafiayakuza", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 681.2902,-1274.3928,13.5805); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,681.2902,-1274.3928,13.5805);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/morrodomareia", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1807.823120,-601.214599,16.484537); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, -1807.823120,-601.214599,16.484537);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/hqmafiacosanostra", cmdtext, true, 10) == 0 || strcmp("/hqcosanostra", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1497.8032,-698.1570,94.7500); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,1497.8032,-698.1570,94.7500);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	/*if (strcmp("/pistaderacha", cmdtext, true, 10) == 0 || strcmp("/pista", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 269.181762,2538.492675,16.812500); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid, 269.181762,2538.492675,16.812500);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}*/
	if (strcmp("/hq23", cmdtext, true, 10) == 0 || strcmp("/hqpoliciafederal", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 341.5491,-1524.3574,33.3598); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,341.5491,-1524.3574,33.3598);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/prefeitura", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 370.1895,187.5482,1008.3893); LinkVehicleToInterior(tmpcar, 0);
					LinkVehicleToInterior(tmpcar, 3);
				}
				else
				{
					SetPlayerInterior(playerid,3);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,370.1895,187.5482,1008.3893);
					SetPlayerFacingAngle(playerid,2.2534);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/spawn", cmdtext, true, 10) == 0 || strcmp("/nascimento", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1685.541503,-2319.379150,-2.851562); LinkVehicleToInterior(tmpcar, 0);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,1685.541503,-2319.379150,-2.851562);
					SetPlayerFacingAngle(playerid,2.7415);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/descricao", true) == 0 && PlayerInfo[playerid][pAdmin] == 1342)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtokEx(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Editar |______________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /descricao [nome] (Use para casas e empresas)");
				return 1;
			}
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Descri��o da Casa: %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(HouseInfo[i][hDiscription], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Descri��o da Empresa(Empresa com interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(BizzInfo[i][bMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "Descri��o da SEmpresa(Empresa sem interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(SBizzInfo[i][sbMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			Atualizar3Dtexts();
			OnPropUpdate();
		}
		return 1;
	}
	if(strcmp(cmd,"/trazercasa",true)==0  && PlayerInfo[playerid][pAdmin] == 1342)
	{
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
	    {
	       	SendClientMessage(playerid,COLOR_GREY,"USE: /trazercasa [ID]");
	       	return 1;
	    }
		new idcasa = strval(tmp);
		new Float:x, Float:y, Float:z;
		GetPlayerPos(playerid, x, y, z);
		HouseInfo[idcasa][hEntrancex] = x;
		HouseInfo[idcasa][hEntrancey] = y;
		HouseInfo[idcasa][hEntrancez] = z;
		return 1;
	}
	if(strcmp(cmd,"/mudarcasa",true)==0)
	{
	    new House = PlayerInfo[playerid][pPHousekey];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
	    	if(HouseEntered[playerid] != 255)
   			{
   				SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode usar esse comando dentro de uma casa");
	        	return 1;
	    	}
	    	if(GetPlayerMoney(playerid) < 10000)
			{
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� n�o tem dinheiro suficiente R$10000");
				return 1;
			}
			if(!strlen(tmp))
	    	{
	        	SendClientMessage(playerid,COLOR_GREY,"USE: /mudarcasa [1 a 10]");
	        	return 1;
	    	}
			new idcasa = strval(tmp);
	    	switch (idcasa)
			{
				case 1:
				{
					HouseInfo[House][hExitx] = 2467.4951;
					HouseInfo[House][hExity] = -1698.4037;
					HouseInfo[House][hExitz] = 1013.5078;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 1.");
				}
	    		case 2:
				{
				    HouseInfo[House][hExitx] = 318.564971;
					HouseInfo[House][hExity] = 1118.209960;
					HouseInfo[House][hExitz] = 1083.882812;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 2.");
				}
				case 3:
				{
				    HouseInfo[House][hExitx] = 2324.419921;
					HouseInfo[House][hExity] = -1145.568359;
					HouseInfo[House][hExitz] = 1050.710083;
					HouseInfo[House][hInt] = 12;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 3.");
				}
				case 4:
				{
				    HouseInfo[House][hExitx] = 235.508994;
					HouseInfo[House][hExity] = 1189.169897;
					HouseInfo[House][hExitz] = 1080.339966;
					HouseInfo[House][hInt] = 3;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 4.");
				}
				case 5:
				{
				    HouseInfo[House][hExitx] = 225.756989;
					HouseInfo[House][hExity] = 1240.000000;
					HouseInfo[House][hExitz] = 1082.149902;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 5.");
				}
				case 6:
				{
				    HouseInfo[House][hExitx] = 223.043991;
					HouseInfo[House][hExity] = 1289.259888;
					HouseInfo[House][hExitz] = 1082.199951;
					HouseInfo[House][hInt] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 6.");
				}
				case 7:
				{
				    HouseInfo[House][hExitx] = 225.630997;
					HouseInfo[House][hExity] = 1022.479980;
					HouseInfo[House][hExitz] = 1084.069946;
					HouseInfo[House][hInt] = 7;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 7.");
				}
				case 8:
				{
				    HouseInfo[House][hExitx] = 328.493988;
					HouseInfo[House][hExity] = 1480.589966;
					HouseInfo[House][hExitz] = 1084.449951;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 8.");
				}
				case 9:
				{
				    HouseInfo[House][hExitx] = 234.0843;
					HouseInfo[House][hExity] = 1064.6896;
					HouseInfo[House][hExitz] = 1085.2108;
					HouseInfo[House][hInt] = 6;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 9.");
				}
				case 10:
				{
				    HouseInfo[House][hExitx] = 260.4075;
					HouseInfo[House][hExity] = 1238.6646;
					HouseInfo[House][hExitz] = 1085.2578;
					HouseInfo[House][hInt] = 9;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 10.");
				}

			}
			GivePlayerMoney(playerid,-10000);
			SBizzInfo[13][sbTill] += 10000;
			ExtortionSBiz(13, 10000);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			OnPropUpdate();
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma casa");
			return 1;
		}
	}
//predio
	if (strcmp("/predio", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1547.6465,-1355.1556,329.4779); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,1547.6465,-1355.1556,329.4779);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!!");
			}
		}
		return 1;
	}
//aeroporto los santos
	if (strcmp("/aerols", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2038.5096,-2628.2659,13.5469); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,2038.5096,-2628.2659,13.5469);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/aerolv", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1482.3693,1794.4214,10.8125); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1482.3693,1794.4214,10.8125);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
//||||||||||||||||||||||||||| fim dos teleportes ||||||||||||||||||||||||
  	if (strcmp(cmd, "/autorizacao", true) == 0)
	{
		if(PlayerInfo[playerid][pEmprego] == 2)
		{
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
		    if(PlayerToPoint(2.0, playerid, 256.0320,84.5082,1002.4453))
		    {
		    	if(playerid != INVALID_PLAYER_ID)
		        {
		        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� comprou uma licen�a para liberar um preso -R$5000.");
	  				GivePlayerMoney(playerid, -5000);
					ApprovedAdvogado[playerid] = 1;
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Advogado");
		}
		return 1;
	}
// ||||||||||||||||||||||||||||||||||ELEVADORES ORGS/GANGS/MAFIAS||||||||||||||||||||||||||||||||||
	if (strcmp(cmd, "/epc", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
		{
		    if(PlayerToPoint(2.0, playerid, -50.6012,-233.2422,6.7646))
			{
	    		SetPlayerPos(playerid, -54.6216,-237.0123,31.5678);
    		}
		    if(PlayerToPoint(2.0, playerid, -54.6216,-237.0123,31.5678))
		    {
		        SetPlayerPos(playerid, -50.6012,-233.2422,6.7646);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/e23", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
		    if(PlayerToPoint(2.0, playerid, 346.8519,-1494.9565,36.0391))
			{
	    		SetPlayerPos(playerid, 345.1602,-1482.8597,76.5391);
    		}
		    if(PlayerToPoint(2.0, playerid, 345.1602,-1482.8597,76.5391))
		    {
		        SetPlayerPos(playerid, 346.8519,-1494.9565,36.0391);
		    }
		}
		return 1;
	}
	
	if (strcmp(cmd, "/etaxi", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
		{
		    if(PlayerToPoint(2.0, playerid, 599.3150,-1520.4652,15.0129))
			{
	    		SetPlayerPos(playerid, 594.9153,-1528.5319,30.8906);
    		}
		    if(PlayerToPoint(2.0, playerid, 594.9153,-1528.5319,30.8906))
		    {
		        SetPlayerPos(playerid, 599.3150,-1520.4652,15.0129);
		    }
		}
		return 1;
	}
    if (strcmp(cmd, "/ebomb", true) == 0)
	{
        if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
        {
		    if(PlayerToPoint(2.0, playerid, 1800.1144,-1707.2678,13.5328))
			{
	    		SetPlayerPos(playerid, 1797.9764,-1706.7866,27.6250);
    		}
		    if(PlayerToPoint(2.0, playerid, 1797.9764,-1706.7866,27.6250))
		    {
		        SetPlayerPos(playerid, 1800.1144,-1707.2678,13.5328);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/emc", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
		    if(PlayerToPoint(2.0, playerid, 374.3401,-2055.2114,8.0156))
			{
	    		SetPlayerPos(playerid, 368.7828,-2054.5476,15.4066);
    		}
		    if(PlayerToPoint(2.0, playerid, 368.7828,-2054.5476,15.4066))
		    {
		        SetPlayerPos(playerid, 374.3401,-2055.2114,8.0156);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/ealuguel", true) == 0)
	{
	    if(PlayerToPoint(2.0, playerid, 2139.7847,-1176.8256,23.9922))
		{
	   		SetPlayerPos(playerid, 2138.6680,-1168.9967,28.1484);
    	}
	    if(PlayerToPoint(2.0, playerid, 2138.6680,-1168.9967,28.1484))
	    {
	        SetPlayerPos(playerid, 2139.7847,-1176.8256,23.9922);
	    }
		return 1;
	}
	if (strcmp(cmd, "/emayans", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
		{
		    if(PlayerToPoint(2.0, playerid, 374.3401,-2055.2114,8.0156))
			{
	    		SetPlayerPos(playerid, 368.7828,-2054.5476,15.4066);
    		}
		    if(PlayerToPoint(2.0, playerid, 368.7828,-2054.5476,15.4066))
		    {
		        SetPlayerPos(playerid, 374.3401,-2055.2114,8.0156);
		    }
		}
		return 1;
	}
	/*if (strcmp(cmd, "/hq23", true) == 0)
	{
	    if(PlayerToPoint(2.0, playerid, 1059.6041,-345.1531,73.9922))
		{
            SetPlayerInterior(playerid, 0);
    		SetPlayerPos(playerid, 2122.5610,-2270.5774,20.6719);
    		PlayerInfo[playerid][pInt] = 0;
   		}
	    if(PlayerToPoint(2.0, playerid, 2122.5610,-2270.5774,20.6719))
	    {
		    SetPlayerInterior(playerid, 0);
	        SetPlayerPos(playerid, 1059.6041,-345.1531,73.9922);
	        PlayerInfo[playerid][pInt] = 0;
	    }
		return 1;
	}*/
	if (strcmp(cmd, "/epcc", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
		{
		    if(PlayerToPoint(2.0, playerid, 1327.1804,-885.2955,39.5781))
			{
	    		SetPlayerPos(playerid, 1324.3936,-890.1075,45.2266);
    		}
		    if(PlayerToPoint(2.0, playerid, 1324.3936,-890.1075,45.2266))
		    {
		        SetPlayerPos(playerid, 1327.1804,-885.2955,39.5781);
		    }
		}
		return 1;
	}
	/*if (strcmp(cmd, "/egaragem", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
		    if(PlayerToPoint(2.0, playerid, 290.675323,184.425735,1007.179443))
			{
	    		SetPlayerPos(playerid, 315,397613,-1507.754638,24.921875);
    		}
		    if(PlayerToPoint(2.0, playerid, 315,397613,-1507.754638,24.921875))
		    {
		        SetPlayerPos(playerid, 290.675323,184.425735,1007.179443);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/eaguias", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
		{
		    if(PlayerToPoint(2.0, playerid, 290.359039,187.311737,1007.179443))
			{
	    		SetPlayerPos(playerid, 329.092407,-1496.699340,76.539062);
    		}
		    if(PlayerToPoint(2.0, playerid, 329.092407,-1496.699340,76.539062))
		    {
		        SetPlayerPos(playerid, 290.359039,187.311737,1007.179443);
		    }
		}
		return 1;
	}*/
// ||||||||||||||||||||||||||||||||||||||FIM ELEVADORES|||||||||||||||||||||||||||
	if (strcmp("/Track", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1337)
	    {
		    SetPlayerInterior(playerid, 7);
			SetPlayerPos(playerid,-1398.065307,-217.028900,1051.115844);
			PlayerInfo[playerid][pInt] = 7;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o tem permiss�o para isto.");
			return 1;
		}
	}
    if(strcmp(cmd, "/retirargrana", true) == 0)
    {
        if(PlayerInfo[playerid][pCarKey] != 0 || PlayerInfo[playerid][pCarKey2] != 0 || PlayerInfo[playerid][pCarKey3] != 0  || PlayerInfo[playerid][pCarKey4] != 0)
		{
			for(new i = 1; i < sizeof(CarInfo); i++)
			{
			    new keycar;
			    if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey]) { keycar = PlayerInfo[playerid][pVeiculo]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey2]) { keycar = PlayerInfo[playerid][pVeiculo2]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey3]) { keycar = PlayerInfo[playerid][pVeiculo3]; }
				else if(GetPlayerVehicleID(playerid) == PlayerInfo[playerid][pCarKey4]) { keycar = PlayerInfo[playerid][pVeiculo4]; }
				format(gstring, 128, "Voc� retirou R$%d do seu carro vip!", CarInfo[keycar][cGrana]);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			    GivePlayerMoney(playerid, CarInfo[keycar][cGrana]);
			    CarInfo[keycar][cGrana] = 0;
			    return 1;
			}
		}
		return 1;
    }
	if (strcmp("/monte", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2233.7336,-1736.8186,480.8216); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2233.7336,-1736.8186,480.8216);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/arenax1", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2326.8809,-1636.9822,483.7031); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/bate-bate", cmdtext, true, 10) == 0 || strcmp("/derby", cmdtext, true, 10) == 0)
	{
	    if(admtrampando[playerid] == 1 || PlayerInfo[playerid][pAdmin] == 4)
	    {
		    if(PlayerInfo[playerid][pAdmin] >= 1)
		    {
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,2739.1577,-1745.2816,43.7656);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Me desculpe mais voc� n�o tem permiss�o para isto.");
				return 1;
   			}
		}
	}
	if(strcmp(cmd, "/cvip", true) == 0 || strcmp(cmd, "/v", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pVIP] >= 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /v [Chat Vip]");
				return 1;
			}
			format(string, sizeof(string), "** VIP %s: %s", sendername, result);
			SendVIPMessage(0xFFCCFFAA,string);
			printf("VIP %s: %s", sendername, result);
		}
		return 1;
	}
    //-------------------------------[Pay]--------------------------------------------------------------------------
	if(strcmp(cmd, "/pagar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
				return 1;
			}

			//giveplayerid = strval(tmp);
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /pagar [id] [quantidade]");
				return 1;
			}
			if(admtrampando[giveplayerid] != 0 && PlayerInfo[giveplayerid][pAdmin] >= 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pagar para admins em trabalho!");
			    return 1;
			}
			moneys = strval(tmp);
			if(moneys > 10000 && PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� precisa ser n�vel 3 ou mais para pagar mais que R$ 10000");
				return 1;
			}
			if(moneys < 1 || moneys > 200000)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Pagamento m�nimo 1, m�ximo 200000 por vez");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode usar este comando neste local");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playerdinheiro = GetPlayerMoney(playerid);
						if (playerdinheiro >= moneys)
						{
						    ConsumingMoney[giveplayerid] = 1;
							GivePlayerMoney(playerid, (0 - moneys));
							GivePlayerMoney(giveplayerid, moneys);
							format(string, sizeof(string), "   Voc� pagou %s(Para: %d), R$%d.", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   Voc� recebeu R$%d de %s(ID: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "* %s deu um dinheiro � %s !", sendername, giveplayer);
							PayLog(string);
							if(moneys >= 1000000)
							{
								ABroadCast(COLOR_YELLOW,string,1);
							}
							PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s deu um dinheiro � %s !", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� com essa grana no bolso.");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Jogador est� longe.");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), "   %d n�o � um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/caridade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /caridade [quantidade]");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] == 106)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode usar este comando neste local");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "M�nimo R$ 1");
				return 1;
			}
			if(GetPlayerMoney(playerid) < moneys)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� com essa grana no bolso.");
				return 1;
			}
			GivePlayerMoney(playerid, -moneys);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s obrigado pela sua doa��o de R$%d.",sendername, moneys);
			printf("%s", string);
			Tax += moneys;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD1, string);
			PayLog(string);
		}
		return 1;
	}
//-------------------------------[Stats]--------------------------------------------------------------------------
	if (strcmp(cmd, "/rg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� logado !");
			}
		}
		return 1;
	}
 	if (strcmp(cmd, "/getemprego", true) == 0)
	{
    	if(PlayerInfo[playerid][pEmprego] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� j� tem emprego,digite /sairdoemprego !");
		   return 1;
    	}
		if (PlayerToPoint(2.0, playerid, 361.8300,173.5202,1008.3828))
		{
			TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid,2569,DIALOG_STYLE_LIST,"Empregos","Detetive\nAdvogado\nProstituta\nTraficante\nCET\nSeguranca\nVendedor de Armas\nBoxeador\nMotorista de Onibus\nMendigo\nCaminhoneiro\nPizzaBoy","Aceitar","Cancelar");
			EmDialog[playerid] = 1;
		}
		return 1;
	}
	if (strcmp(cmd, "/licencas", true) == 0)
	{
		if (PlayerToPoint(2.0, playerid, 1490.2411,1307.2179,1093.2891))
		{
    		TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid,2571,DIALOG_STYLE_LIST,"Licencas","Motorista - 2000\nVoo - 2500\nNavegacao - 2000\nPesca Legal - 1000\nPorte Armas - 2500","Ok","Cancelar");
    	}
		return 1;
	}
	if (strcmp(cmd, "/gps", true) == 0)
	{
		TogglePlayerControllable(playerid, 0);
    	ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar");
    	EmDialog[playerid] = 1;
		return 1;
	}
	if (strcmp(cmd, "/esamu", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
		    if(PlayerToPoint(2.0, playerid, 1173.4185,-1361.2090,13.9694))
			{
	    		SetPlayerPos(playerid, 1169.0085,-1329.3441,31.4640);
    		}
		    if(PlayerToPoint(2.0, playerid, 1169.0085,-1329.3441,31.4640))
		    {
		        SetPlayerPos(playerid, 1173.4185,-1361.2090,13.9694);
		    }
		}
		return 1;
	}
//-----------------------------------------------------------------
	if(strcmp(cmd, "/dn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o � admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/up", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o � admin !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/voar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				else if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				else if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				else if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				else if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				else if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				else if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				else if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				else if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
				else
				{
				    GetPlayerPos(playerid, px, py, pz);
				    SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o e admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly+2, slz);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o � admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly-2, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o � admin !! !");
			}
		}
		return 1;
	}
//-------------------------------[Check]--------------------------------------------------------------------------
	if (strcmp(cmd, "/ver", true) == 0 || strcmp(cmd, "/verificar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /ver [id]");
					return 1;
				}
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Este Jogador n�o est� ativo!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o � admin !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/agenda", true) == 0 || strcmp(cmd, "/telefone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /agenda [id]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						format(string, 128, "Nick: %s ~ Numero: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ID Inv�lido !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Voc� n�o tem uma agenda! digite /gps 24-7 !");
			}
		}
		return 1;
	}
//-------------------------------[BuyLevel]--------------------------------------------------------------------------
	if (strcmp(cmd, "/comprarnivel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				PlayerInfo[playerid][pCash] = GetPlayerMoney(playerid);
				if(PlayerInfo[playerid][pLevel] >= 0)
				{
					new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					new costlevel = nxtlevel*levelcost;//10k for testing purposes
					new expquantidade = nxtlevel*levelexp;
					if(GetPlayerMoney(playerid) < costlevel)
					{
						format(gstring, 128, "   Voc� n�o tem: (R$%d) !",costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						return 1;
					}
					else if (PlayerInfo[playerid][pExp] < expquantidade)
					{
						format(gstring, 128, "   Voc� precisa de %d pontos de respeito, Voc� tem: [%d] !",expquantidade,PlayerInfo[playerid][pExp]);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						return 1;
					}
					else
					{
						format(gstring, sizeof(gstring), "~g~Comprou Nivel~n~~w~Agora seu Nivel e %d", nxtlevel);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);
						GivePlayerMoney(playerid, (-costlevel));
						PlayerInfo[playerid][pLevel]++;
						ScoreLevel(playerid);
						PlayerInfo[playerid][pExp] = 0;
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
						GameTextForPlayer(playerid, gstring, 5000, 1);
						format(gstring, 128, "   Voc� comprou o nivel %d por (R$%d) Digite /melhorar", nxtlevel, costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						format(gstring, 128, "   Voc� tem %d pontos de melhora",PlayerInfo[playerid][gPupgrade]);
						SendClientMessage(playerid, COLOR_GRAD2, gstring);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� logado !");
			}
		}
		return 1;
	}
//-------------------------------[UPGRADE]--------------------------------------------------------------------------
	if (strcmp(cmd, "/pintarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"(R$5000) USE: /pintarcarro [COR 1 ou 2] [COR ID]");
					return 1;
				}
				new COLORnum = strval(tmp);
				if(COLORnum > 2 || COLORnum < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Cor 1(Principal) ou 2(Secund�ria)");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"(R$5000) USE: /pintarcarro [COR 1 ou 2] [COR ID]");
				}
				new COLOR = strval(tmp);
				if(COLOR > 126)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"M�ximo � 126");
					return 1;
				}
				if (GetPlayerMoney(playerid) < 5000)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Voc� n�o tem (R$5000)");
				}
				if(COLORnum == 1)
				{
					HouseInfo[House][hVcol1] = COLOR;
					format(string, sizeof(string), "Cor 1 Trocada Para %d -R$5000",COLOR);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				else
				{
					HouseInfo[House][hVcol2] = COLOR;
					format(string, sizeof(string), "Cor 2 Trocada Para %d -R$5000",COLOR);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				SendClientMessage(playerid, COLOR_GRAD6, "Espere 24hrs para que ela chegue -R$5000");
				GivePlayerMoney(playerid,-5000);
				SBizzInfo[5][sbTill] += 5000;
				ExtortionSBiz(5, 5000);
				PlayerPlaySound(giveplayerid, 1134, 0.0, 0.0, 0.0);
				OnPropUpdate();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/comprarcarro", true) == 0 || strcmp(cmd, "/trocarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new gunid[16];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________| Novos Carros,Pre�o R$100000 |______________|");
					SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprarcarro [nomedocarro]");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | Subaru | bf-injection |");
					SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | limozine | elegy | hotknife | bandito | r1 | zr350 | premier |");
					SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
			 		SendClientMessage(playerid, 0x00FFFFFF, "Carros S�cio's: | kart | monster | monstera | monsterb | sandking | vortex |");
					SendClientMessage(playerid, 0x00FFFFFF, "Carros S�cio's: | mrwhoopee | remington | slamvan | hustler | supergt | tornado |");
					SendClientMessage(playerid, 0x00FFFFFF, "Heli/motos S�cio's: | Sparrow | sanchez | pcj600 | quad | fcr900 |");
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				if (GetPlayerMoney(playerid) > 100000)
				{
				    new carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
				    if(strcmp(gunid, "fcr900", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para FCR-900");
						HouseInfo[House][hVec] = 521;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "vortex", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Vortex");
						HouseInfo[House][hVec] = 539;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "tornado", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Tornado");
						HouseInfo[House][hVec] = 576;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "sandking", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Sandking");
						HouseInfo[House][hVec] = 495;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "quad", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Quad");
						HouseInfo[House][hVec] = 471;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "sparrow", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Sparrow");
						HouseInfo[House][hVec] = 469;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "hustler", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Hustler");
						HouseInfo[House][hVec] = 545;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "slamvan", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Slamvan");
						HouseInfo[House][hVec] = 535;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "remington", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Remington");
						HouseInfo[House][hVec] = 534;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "supergt", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Super GT");
						HouseInfo[House][hVec] = 506;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "mrwhoopee", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para MrWhoopee");
						HouseInfo[House][hVec] = 423;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "pcj600", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para PCJ-600");
						HouseInfo[House][hVec] = 461;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "sanchez", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Sanchez");
						HouseInfo[House][hVec] = 468;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "monstera", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para monster B");
						HouseInfo[House][hVec] = 556;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "monsterb", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para monster A");
						HouseInfo[House][hVec] = 557;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "monster", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para monster");
						HouseInfo[House][hVec] = 444;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
				    if(strcmp(gunid, "kart", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 4)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro S�cio !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para kart");
						HouseInfo[House][hVec] = 571;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "limozine", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Limozine");
						HouseInfo[House][hVec] = 409;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "premier", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Premier");
						HouseInfo[House][hVec] = 426;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "hotknife", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Hotknife");
						HouseInfo[House][hVec] = 434;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "comet", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para Comet");
						HouseInfo[House][hVec] = 480;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "zr350", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o ZR-350");
						HouseInfo[House][hVec] = 477;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "r1", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para a moto R1");
						HouseInfo[House][hVec] = 522;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bandito", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Bandito");
						HouseInfo[House][hVec] = 568;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "elegy", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Elegy");
						HouseInfo[House][hVec] = 562;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bullet", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Bullet");
						HouseInfo[House][hVec] = 541;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "turismo", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Turismo");
						HouseInfo[House][hVec] = 451;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "infernus", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Infernus");
						HouseInfo[House][hVec] = 411;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "cheetah", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Cheetah");
						HouseInfo[House][hVec] = 415;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "savanna", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Savanna");
						HouseInfo[House][hVec] = 567;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "blistac", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Blista Compact");
						HouseInfo[House][hVec] = 496;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "stafford", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Stafford");
						HouseInfo[House][hVec] = 580;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "clover", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Clover");
						HouseInfo[House][hVec] = 542;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "Subaru", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Subaru");
						HouseInfo[House][hVec] = 560;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "elegant", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Elegant");
						HouseInfo[House][hVec] = 507;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "hornet", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Hornet");
						HouseInfo[House][hVec] = 521;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "phoenix", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Phoenix");
						HouseInfo[House][hVec] = 603;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "emperor", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Emperor");
						HouseInfo[House][hVec] = 585;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "glendale", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Glendale");
						HouseInfo[House][hVec] = 466;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "greenwood", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Greenwood");
						HouseInfo[House][hVec] = 492;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "huntley", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Huntley");
						HouseInfo[House][hVec] = 579;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "jester", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Jester");
						HouseInfo[House][hVec] = 559;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "landstalker", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Landstalker");
						HouseInfo[House][hVec] = 400;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "merit", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Merit");
						HouseInfo[House][hVec] = 551;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "nebula", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Nebula");
						HouseInfo[House][hVec] = 516;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sabre", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Sabre");
						HouseInfo[House][hVec] = 475;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "stratum", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Stratum");
						HouseInfo[House][hVec] = 561;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sunrise", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Sunrise");
						HouseInfo[House][hVec] = 550;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "tahoma", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Tahoma");
						HouseInfo[House][hVec] = 566;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "uranus", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Uranus");
						HouseInfo[House][hVec] = 558;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "blade", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Blade");
						HouseInfo[House][hVec] = 536;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "flash", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Flash");
						HouseInfo[House][hVec] = 565;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "buffalo", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o Buffalo");
						HouseInfo[House][hVec] = 402;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bf-injection", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para o BF Injection");
						HouseInfo[House][hVec] = 424;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bike", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para uma Bike");
						HouseInfo[House][hVec] = 509;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "montainbike", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualiza��o: Voc� trocou o carro da sua casa para uma Montain Bike");
						HouseInfo[House][hVec] = 510;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprarcarro [nomedocarro]");
						SendClientMessage(playerid, 0xFFFF66F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
						SendClientMessage(playerid, 0xFFFF66F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
						SendClientMessage(playerid, 0xFFFF66F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | Subaru | bf-injection |");
						SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | limozine | elegy | hotknife | bandito | R1 | zr350 | premier |");
						SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
						return 1;
					}
					SendClientMessage(playerid, COLOR_GRAD6, "Voc� pagou R$100000, ele j� est� na sua casa!");
					OnPropUpdate();
					GivePlayerMoney(playerid,-100000);
					SBizzInfo[5][sbTill] += 100000;
					ExtortionSBiz(5, 100000);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem (R$100000)");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/resetarmelhorias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� logado !");
				return 1;
			}
			if (GetPlayerMoney(playerid) < 100000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   O reset custa R$100000 !");
				return 1;
			}
			if (PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� deve ter no m�nimo n�vel 2 !");
				return 1;
			}
			PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pAlcoholPerk] = 0;
			PlayerInfo[playerid][pDrugPerk] = 0;
			PlayerInfo[playerid][pMiserPerk] = 0;
			PlayerInfo[playerid][pPainPerk] = 0;
			PlayerInfo[playerid][pTraderPerk] = 0;
			GivePlayerMoney(playerid,-100000);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string, 128, "   Voc� tem %d pontos de melhoria !",PlayerInfo[playerid][gPupgrade]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/comprararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetPlayerMoney(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem todo esse dinheiro!!");
			    return 1;
			}
			new gun;
			new gunid[16];
			new guncharge;
			new ammocharge;
			new location = PlayerInfo[playerid][pLocal];
			if(location == 99 || location == 100 || location == 102)
			{
				new mod = 100;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________| Armas |______________|");
					SendClientMessage(playerid, COLOR_GRAD2,"USE: /comprararma [arma] [muni��o]");
					format(gstring, 128, "Armas: parachute (R$%d) golfclub (R$%d) nightstick (R$%d) baseballbat (R$%d) shovel (R$%d) poolcue (R$%d)",
					GunPrice[0][0]/100*mod,GunPrice[1][0]/100*mod,GunPrice[2][0]/100*mod,GunPrice[3][0]/100*mod,GunPrice[4][0]/100*mod,GunPrice[5][0]/100*mod,GunPrice[6][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: purpledildo (R$%d) whitedildo (R$%d) longwhitedildo (R$%d) whitedildo2 (R$%d) flowers (R$%d) cane",
					GunPrice[7][0]/100*mod,GunPrice[8][0]/100*mod,GunPrice[9][0]/100*mod,GunPrice[10][0]/100*mod,GunPrice[11][0]/100*mod,GunPrice[12][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: eagle (R$%d) pistola (R$%d) mp5 (R$%d)",
					GunPrice[13][0]/100*mod,GunPrice[14][0]/100*mod,GunPrice[15][0]/100*mod,GunPrice[16][0]/100*mod,GunPrice[17][0]/100*mod,GunPrice[18][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: shotgun (R$%d) ak47 (R$%d) m4 (R$%d) rifle (R$%d)",
					GunPrice[19][0]/100*mod,GunPrice[20][0]/100*mod,GunPrice[21][0]/100*mod,GunPrice[22][0]/100*mod,GunPrice[23][0]/100*mod,GunPrice[24][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring, 128, "Armas: pistolammo (R$%d) shotgunammo (R$%d) smgammo (R$%d) assaultammo (R$%d) rifleammo (R$%d)",
					GunPrice[25][0],GunPrice[26][0],GunPrice[27][0],GunPrice[28][0],GunPrice[29][0]);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /comprararma [arma] [muni��o]");
					return 1;
				}
				new ammo = strval(tmp);
				if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   Muni��o tem que ser entre 1 e 999 !"); return 1; }
				if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
				{
					gun = 46;
					guncharge = GunPrice[0][0]/100*mod;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
				{
					gun = 2; guncharge = GunPrice[1][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
				{
					gun = 3; guncharge = GunPrice[2][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
				{
					gun = 5; guncharge = GunPrice[4][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
				{
					gun = 6; guncharge = GunPrice[5][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
				{
					gun = 7; guncharge = GunPrice[6][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
				{
					gun = 10; guncharge = GunPrice[7][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
				{
					gun = 11; guncharge = GunPrice[8][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
				{
					gun = 12; guncharge = GunPrice[9][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
				{
					gun = 13; guncharge = GunPrice[10][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
				{
					gun = 14; guncharge = GunPrice[11][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
				{
					gun = 15; guncharge = GunPrice[12][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "eagle", true, strlen(gunid)) == 0)
				{
					gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;
				}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
				{
					gun = 29; guncharge = GunPrice[18][0]/100*mod; ammocharge = GunPrice[27][0]*ammo;
				}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
				{
					gun = 25; guncharge = GunPrice[19][0]/100*mod; ammocharge = GunPrice[26][0]*ammo;
				}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
				{
					gun = 30; guncharge = GunPrice[22][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
				{
					gun = 31; guncharge = GunPrice[23][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
				{
					gun = 33; guncharge = GunPrice[24][0]/100*mod; ammocharge = GunPrice[29][0]*ammo;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "Vendedor: Nunca ouvi falar dessa arma.");
					return 1;
				}
				if((guncharge+ammocharge) > GetPlayerMoney(playerid))
				{
					format(gstring, 128, "   Voc� n�o tem R$%d para pagar !",guncharge+ammocharge);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return 1;
				}
				new payout = guncharge + ammocharge;
				format(gstring, 128, "Voc� comprou um(a) %s com %d bala(s) por R$%d",gunid,ammo,payout);
				SendClientMessage(playerid, COLOR_GRAD3, gstring);
				if(location == 102 && IsACop(playerid)) { }
				else { GivePlayerMoney(playerid, - payout); }
				BizzInfo[location-99][bTill] += payout;
				ExtortionBiz(location-99, payout);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeapon(playerid, gun, ammo);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(gstring, sizeof(gstring), "%s comprou armas por R$%d na empresa %d", sendername, payout, location-99);
				printf("%s", gstring);
				//PayLog(gstring);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"Voc� n�o est� em uma loja de armas.");
				return 1;
			}
		}
		return 1;
	}
 //MudarNomeSim?
	if (strcmp(cmd, "/melhorar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new gunid[16];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				format(gstring, sizeof(gstring), "USE: /melhorar [pontos] (Voc� tem %d pontos de melhora)",PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_WHITE, "|______________| UPGRADES |______________|");
				SendClientMessage(playerid, COLOR_GRAD2,gstring);
				if(PlayerInfo[playerid][pLevel] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "N�vel 2 Melhorias: Alcool, Drogas");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "N�vel 3 Melhorias: Alcool, Drogas, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "N�vel 4 Melhorias: Alcool, Drogas, Avareza, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] >= 5)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "N�vel 5 Melhorias: Alcool, Drogas, Avareza, Comercio, PainKillers");
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Extra: Vida");
				return 1;
			}
			strmid(gunid, tmp, 0, strlen(cmdtext), 255);
			if (PlayerInfo[playerid][gPupgrade] >= 1)
			{
				if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "Vida", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pSHealth] < 50)
					{
						PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
						format(gstring, 128, "Atualiza��o: voc� vai nascer com %.2f de vida (+5)",PlayerInfo[playerid][pSHealth]+50);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Voc� j� est� no m�ximo de vida");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Alcool", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pAlcoholPerk] < 3)
					{
						PlayerInfo[playerid][pAlcoholPerk] += 1;
						format(gstring, 128, "Nova Atualiza��o: Agora seu n�vel de alcool � %d.",PlayerInfo[playerid][pAlcoholPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu n�vel de alcool j� est� no m�ximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Drogas", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pDrugPerk] < 3)
					{
						PlayerInfo[playerid][pDrugPerk] += 1;
						format(gstring, 128, "Nova Atualiza��o: Agora seu n�vel de drogas � %d.",PlayerInfo[playerid][pDrugPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu n�vel de drogas j� est� no m�ximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "Avareza", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pMiserPerk] < 3)
					{
						PlayerInfo[playerid][pMiserPerk] += 1;
						format(gstring, 128, "Nova Atualiza��o: Agora sua avareza � n�vel %d.",PlayerInfo[playerid][pMiserPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualiza��o de Avareza est� no m�ximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "Comercio", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pTraderPerk] < 3)
					{
						PlayerInfo[playerid][pTraderPerk] += 1;
						format(gstring, 128, "Nova Atualiza��o: Agora seu Com�rcio � n�vel %d.",PlayerInfo[playerid][pTraderPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualiza��o de com�rcio est� no m�ximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pPainPerk] < 3)
					{
						PlayerInfo[playerid][pPainPerk] += 1;
						format(gstring, 128, "Nova Atualiza��o: Seu n�vel de Pain Killers agora � %d.",PlayerInfo[playerid][pPainPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualiza��o de Pain Killers j� est� no m�ximo !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Atualiza��o desconhecida");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   Voc� tem 0 Pontos de Melhoria");
				return 1;
			}
			SendClientMessage(playerid, COLOR_GRAD6, gstring);
			PlayerInfo[playerid][gPupgrade]--;
		}
		return 1;
	}
//-------------------------------[Logar]--------------------------------------------------------------------------
 	if (strcmp(cmd, "/logar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	    {
	        new tmppass[64];
			if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Voc� j� est� logado.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				new lstring[256];
 				new lname[64];
 				GetPlayerName(playerid,lname,sizeof(lname));
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /logar [Senha]");
				format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {00FF00}Registrada\n \n{F2F2F2}Digite a sua Senha para Logar !\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}style{0d0ddb}city{F2F2F2}.com.br",lname);
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Login",lstring, "Logar", "Esperar");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerLogin(playerid,tmppass);
		}
		return 1;
	}
	if (strcmp(cmd, "/registrar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Voc� j� est� logado.");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, 64, "Players/%s.ini", sendername);
			new File: hFile = fopen(string, io_read);
			if (hFile)
			{
				new lstring[300];
				new lname[64];
				GetPlayerName(playerid,lname,sizeof(lname));
				SendClientMessage(playerid, COLOR_YELLOW, "Este Nick j� existe, use outro.");
				fclose(hFile);
				format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {ff0000}N�o Registrada\n \n{F2F2F2}Registre-se ! Use Nome_Sobrenome\n \n{F2F2F2}Exemplo: Guru_Josh\n \n{F2F2F2}Digite sua Senha para se Registrar!\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Registro",lstring, "Registrar", "Esperar");
				return 1;
			}
	        new tmppass[64];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				new lstring[300];
				new lname[64];
				GetPlayerName(playerid,lname,sizeof(lname));
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /registrar [Senha]");
				SendClientMessage(playerid, COLOR_YELLOW, "-==> Use Nome_Sobrenome ( Ex: Guru_Josh ) <==-");
				format(lstring,sizeof(lstring),"{F2F2F2}Bem Vindo(a): {e9f013}%s\n \n{F2F2F2}Status da Conta: {ff0000}N�o Registrada\n \n{F2F2F2}Registre-se ! Use Nome_Sobrenome\n \n{F2F2F2}Exemplo: Guru_Josh\n \n{F2F2F2}Digite sua Senha para se Registrar!\n\n  {F2F2F2}www.{00FF00}brasil{e9f013}hard{0d0ddb}life{F2F2F2}.com.br",lname);
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "{00FF00}Brasil {e9f013}Hard {0d0ddb}Life {F2F2F2}- Registro",lstring, "Registrar", "Esperar");
				return 1;
			}
			strmid(tmppass, tmp, 0, strlen(cmdtext), 255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
		}
		return 1;
	}
//MudeSenha
	if (strcmp(cmd,"/MudarSenha",true) ==0  || strcmp(cmd,"/changepassword",true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	 	{
	 	    if(gPlayerLogged[playerid] == 0)
	        {
	           	SendClientMessage(playerid,CINZA,"Voc� n�o est� logado !");
	           	return 1;
      		}
    		if(MudarSenhaAceito[playerid] == 0)
	     	{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� precisa pedir permiss�o para um admin mudar sua senha, use /relatorio");
	     		return 1;
	     	}
	        if(gPlayerLogged[playerid] == 0)
	        {
	           	SendClientMessage(playerid,CINZA,"Voc� n�o est� logado !");
	           	return 1;
	        }
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),"Players/%s.bbl",sendername);
	        new tmppass[64];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,CINZA1,"Use: /mudarsenha [Nova Senha]");
				SendClientMessage(playerid,CINZA1,"Guarde a senha ou tire SS da tela apertando F8 para n�o esquecer!");
				return 1;
			}
			strmid(tmppass,tmp,0,strlen(cmdtext),255);
			Encrypt(tmppass);
			OnPlayerRegister(playerid,tmppass);
			return 1;
		}
	}
	if(strcmp(cmd, "/anuncio", true) == 0 || strcmp(cmd, "/an", true) == 0)
 	{
 	    if(IsPlayerConnected(playerid))
	 	{
	 	    ShowPlayerDialog(playerid, DIALOG_ANUNCIO,DIALOG_STYLE_LIST,"Menu De An�ncios",
	  		"Anunciar Venda de Drogas\nAnunciar Venda de Armas\nAnunciar Servi�o Seguran�a\nAnunciar Servi�o Advogado\nProcuro ORG/GANG/MAFIA\nPreciso de Um T�xi/�nibus\nPreciso de Um Advogado\nPreciso de Um Policial\nPreciso de Um M�dico\nPreciso de Um Mec�nico\nPreciso de Um Seguran�a\nCompro Uma Casa\nVendo Uma Casa"
	  		,"Confirmar", "Cancelar");
	 	}
		return 1;
	}
//=============================================================================================================//
 	if(strcmp(cmd,"/an_2_input",true) == 0)
    {
	    if(IsPlayerConnected(playerid))
        {
			tmp = strtok(cmdtext,idx);
			if(gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, CINZA, "Voc� deve estar logado!");
			}
			new stat;
			stat = strval(tmp);
			new cel = PlayerInfo[playerid][pPnumber];
			GetPlayerName(playerid,sendername,sizeof(sendername));
			SemAn[playerid]++;
			if(panuncio == 1)
	        {
	        SendClientMessage(playerid,COLOR_GRAD2,"   Espere Alguns Segundos Para Anunciar Alguem J� Anunciou !");
	        return 1;
	        }
    		if (PlayerInfo[playerid][pLevel] >= 3)
			{
				switch (stat)
				{
					case 1:
					{
						SBizzInfo[7][sbTill] += 150;
						ExtortionSBiz(7,150);
	       				format(string,sizeof(string),"Anuncio: Vendo Armas, Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
						OOCNews(COR_GRO,string);
					}
					case 56:
					{
						SBizzInfo[7][sbTill] += 150;
						ExtortionSBiz(7,150);
	       				format(string,sizeof(string),"Anuncio: Vendo Drogas ,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
						OOCNews(COR_GRO,string);
					}
					case 57:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Compro Armas interesados me liguem, Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 2:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Compro Drogas interesados meu liguem,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 111:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Precisa de um seguran�a particular Me ligue,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 112:
					{
					    if(PlayerInfo[playerid][pMembro] != 0 || PlayerInfo[playerid][pLider] != 0)
						{
							SendClientMessage(playerid, COLOR_GREY, "Voc� j� tem uma ORG!");
							return 1;
						}
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Procuro ORG/GANG/M�fia,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 113:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Preciso de Um �nibus/T�xi,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 114:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Preciso de Um Advogado,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 115:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Preciso de Um Policial,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 116:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Preciso de Um M�dico,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 117:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Preciso de Um Mec�nico,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 118:
					{
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Preciso de Um Seguran�a,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 119:
					{
					    if(PlayerInfo[playerid][pPHousekey] != 255)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "   Voc� j� tem uma casa !");
							return 1;
						}
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Compro Uma Casa,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
					case 120:
					{
					    if(PlayerInfo[playerid][pPHousekey] == 255)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma casa para vender!");
							return 1;
						}
					    SBizzInfo[7][sbTill] += 150;
					    ExtortionSBiz(7,150);
	       			    format(string,sizeof(string),"Anuncio: Vendo Uma Casa,Nome: %s ID:[%d] Celular:[%d]",sendername,playerid,cel);
					    OOCNews(COR_GRO,string);
					}
				}
				panuncio = 1;
            	TempoAn = SetTimer("Anuncio", 30000, 0);
			}
			else
			{
				SendClientMessage(playerid,CINZA,"� preciso ter no minimo Nivel 3 para anunciar!");
			}
		}
	    return 1;
	}
//===============================[anuncios das orgs]===================================//
	if(strcmp(cmd, "/anManchaverde", true) == 0 || strcmp(cmd, "/anMancha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 15)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/alq)aeda [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				if(panuncioalqaeda == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				SendClientMessageToAll(COLOR_WHITE, "|______________| Anuncio Da Mancha Verde |______________|");
				format(string,sizeof(string),"Anuncio: %s, Torcedor: %s - ID [%d] - Telefone (%d)", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COLOR_GREEN, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioalqaeda = 1;
				TempoAnAlqaeda = SetTimer("AnuncioAlqaeda", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/angavioes", true) == 0 || strcmp(cmd, "/anga", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 6)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/tal)iban [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				if(panunciotaliban == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				SendClientMessageToAll(COLOR_WHITE, "|______________| Anuncio Da Gavi�es|______________|");
				format(string,sizeof(string),"Anuncio: %s, Torcedor: %s - ID [%d] - Telefone (%d)", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_PF, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciotaliban = 1;
				TempoAnTaliban = SetTimer("AnuncioTaliban", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciogang", true) == 0 || strcmp(cmd, "/ang", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 5 || GetPlayerOrg(playerid) == 14 || GetPlayerOrg(playerid) == 17 || GetPlayerOrg(playerid) == 18 || GetPlayerOrg(playerid) == 19 || GetPlayerOrg(playerid) == 20)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ang) ou (/anunciogang) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				if(panunciogang == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(string,sizeof(string),"[%s]Anuncio: %s, Jogador: %s[%d] - Cel[%d]", NomeORG(playerid),result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				if(GetPlayerOrg(playerid) == 5) SendClientMessageToAll(COR_TCP, string);
				else if(GetPlayerOrg(playerid) == 14) SendClientMessageToAll(COR_GRO, string);
				else if(GetPlayerOrg(playerid) == 17) SendClientMessageToAll(0x9900CCF6, string);
				else if(GetPlayerOrg(playerid) == 18) SendClientMessageToAll(COR_VAGOS, string);
				else if(GetPlayerOrg(playerid) == 19) SendClientMessageToAll(0xF6000000, string);
				else if(GetPlayerOrg(playerid) == 20) SendClientMessageToAll(0xCCFF99FF, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciogang = 1;
				TempoAnGang = SetTimer("AnuncioGang", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciomafia", true) == 0 || strcmp(cmd, "/anmafia", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 12 || GetPlayerOrg(playerid) == 13)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anmafia) ou (/anunciomafia) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				if(panunciomafia == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(string,sizeof(string),"[%s]Anuncio: %s, Mafioso: %s - ID [%d] - Telefone (%d)", NomeORG(playerid),result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				if(GetPlayerOrg(playerid) == 12) SendClientMessageToAll(COR_COSA, string);
				else if(GetPlayerOrg(playerid) == 13) SendClientMessageToAll(COR_YAK, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciomafia = 1;
				TempoAnMafia = SetTimer("AnuncioMafia", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciohitmans", true) == 0 || strcmp(cmd, "/anhit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 8)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anhit) ou (/anunciohitmans) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
           		}
				if(panunciohitmans == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(string,sizeof(string),"[Hitmans]Anuncio: %s, Hitman: %s - ID [%d] - Telefone (%d)", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_HITMAN, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciohitmans = 1;
				TempoAnHitmans = SetTimer("AnuncioHitmans", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciosons", true) == 0 || strcmp(cmd, "/ansons", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 21)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ansons) ou (/anunciosons) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				if(panunciomerce == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(string,sizeof(string),"[Sons of Anarchy]Anuncio: %s, Sons: %s - ID [%d] - Telefone (%d)", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_SONS, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciomerce = 1;
				TempoAnmerce = SetTimer("Anunciomerce", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciomayans", true) == 0 || strcmp(cmd, "/anmayans", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 23)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/anmayans) ou (/anunciomayans) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				if(panunciomerce == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(string,sizeof(string),"[Mayans]Anuncio: %s, Mayans: %s - ID [%d] - Telefone (%d)", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_MAYANS, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciomerce = 1;
				TempoAnmerce = SetTimer("Anunciomerce", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciotaxi", true) == 0 || strcmp(cmd, "/antaxi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 10)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/antaxi) ou (/anunciotaxi) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				if(panunciotaxi == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(string,sizeof(string),"[Taxistas]Anuncio: %s, Taxista: %s - ID [%d] - Telefone (%d)", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_TAXI, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciotaxi = 1;
				TempoAnTaxi = SetTimer("AnuncioTaxi", 60000, 0);
			}
		}
		return 1;
	}
//----------------------------------[government]-----------------------------------------------
	if(strcmp(cmd, "/governo", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        new org = GetPlayerOrg(playerid);
            if(gTeam[playerid] == 2  || IsACop(playerid) || IsABom(playerid) || org == 4)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelomenos cargo 4 para usar este comando!");
				    return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/gov)erno [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
	            if(org != 4)
	            {
					format(string, sizeof(string), "Anuncio: %s,Oficial: %s - Telefone(%d) - ID[%d]", result,sendername,PlayerInfo[playerid][pPnumber],playerid);
					SendClientMessageToAll(COLOR_DBLUE, string);
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				else
				{
					format(string, sizeof(string), "M�dico %s: %s", sendername, result);
					SendClientMessageToAll(COR_SAMU, string);
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				print(string);
			}
		}
		return 1;
	}
//----------------------------------[Prefeito]-----------------------------------------------
	if(strcmp(cmd, "/prefeitoo", true) == 0 || strcmp(cmd, "/pre", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode se comunicar na cadeia!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 7  || IsAGOV(playerid))
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ter pelomenos cargo 4 para usar este comando");
				    return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: (/pre)feito [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            	}
				format(string, sizeof(string), "[Governo]Anuncio: %s - Jogador: %s[%d] - Cel[%d]", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COLOR_DBLUE, string);
				SBizzInfo[7][sbTill] += 30;
				print(string);
			    ExtortionSBiz(7, 30);
			}
		}
		return 1;
	}
//----------------------------------[to]-----------------------------------------------
    if(strcmp(cmd, "/desativar", true) == 0)
	{
		if(gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD3, "    Voc� n�o fez o login");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|______________| Desabilitar |______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Dispon�veis: org, noticias, celular");
			return 1;
		}
	    if(strcmp(tmp, "noticias", true) == 0)
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de not�cias desativado !");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de not�cias ativado !");
			}
		}
	    else if(strcmp(tmp, "org", true) == 0)
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organiza��o desativado !");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organiza��o ativado !");
			}
		}
	    else if(strcmp(tmp, "celular", true) == 0)
	    {
	        if(PlayerInfo[playerid][pVIP] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� desligou seu celular (n�o receber� liga��es nem SMS) !");
					CellTime[playerid] = 0;
					Mobile[playerid] = 255;
					new pSpecialAction = GetPlayerSpecialAction(playerid);
					if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
					{
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					}
				}
				else if (PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� ligou seu celular !");
				}
			}
		}
		else
		{
            SendClientMessage(playerid, COLOR_WHITE, "|______________| Desabilitar |______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Dispon�veis: org, noticias, celular");
		}
		return 1;
	}
//----------------------------------[Emote]-----------------------------------------------
	if(strcmp(cmd, "/eu", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� logado !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /eu [action]");
				return 1;
			}
			if(PlayerInfo[playerid][pMaskuse] == 1)
			{
			    format(string, sizeof(string), "* Mascara %s", result);
			}
			else
			{
				format(string, sizeof(string), "* %s %s", sendername, result);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Local]-----------------------------------------------
	if(strcmp(cmd, "/sussurro", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode sussurrar da cadeia!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o logou ainda !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /(s)ussurro [Para falar pra quem est� perto]");
				return 1;
			}
			format(string, sizeof(string), "%s Sussurra: %s", sendername, result);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Short]-----------------------------------------------
 	if(strcmp(cmd,"/Gritar",true) == 0 || strcmp(cmd,"/g",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode gritar na cadeia!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid,CINZA,"Voc� n�o est� logado/registrado!");
	            return 1;
	        }
	        if(Rouco[playerid] > 5)
	        {
		        SendClientMessage(playerid,CINZA,"Voc� est� Rouco, aguarde 5 segundos para gritar novamente!");
		        SetTimerEx("NRouco", 5000, 0, "d", playerid);
		        return 1;
	        }
			GetPlayerName(playerid,sendername,sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,CINZA2,"Use: (/G)ritar [Texto]");
				return 1;
			}
			format(string,sizeof(string),"%s Grita: %s!!!",sendername,result);
			ProxDetector(30.0,playerid,string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
			ApplyAnimation(playerid,"RIOT", "RIOT_shout",4.0,0,1,0,0,0);
			Rouco[playerid]++;
			printf("%s",string);
		}
		return 1;
	}
//----------------------------------[Short]-----------------------------------------------
	if(strcmp(cmd, "/megafone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/m)egafone [megaphone chat]");
				return 1;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(PlayerInfo[playerid][pMembro] == 1||PlayerInfo[playerid][pLider] == 1)
				{
					format(string, sizeof(string), "Policial do 18�BPM/M %s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 2||PlayerInfo[playerid][pLider] == 2)
				{
					format(string, sizeof(string), "ROTA %s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 3||PlayerInfo[playerid][pLider] == 3)
				{
				    format(string, sizeof(string), "Ex�rcito %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(IsAGOV(playerid))
				{
				    format(string, sizeof(string), "Governo %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 16||PlayerInfo[playerid][pLider] == 16)
				{
				    format(string, sizeof(string), "2�CIA %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 11||PlayerInfo[playerid][pLider] == 11)
				{
				    format(string, sizeof(string), "1�CIA %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				printf("%s", string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o faz parte de nenhuma equipe !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[Team]-----------------------------------------------
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_R, "USE: (/r)adio [radio chat]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            }
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Comandante %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Capit�o %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Tenente %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sargento %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Cabo %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Cadete %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Guarda %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(1,COLOR_R,string);
				printf("%s", string);
				//format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				//ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Acessor %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Vereador %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Seguran�a %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Motorista %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(7,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Capit�o %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Tenente %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Sargento %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Cabo %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Soldado %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Recruta %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Recruta %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(2,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** General %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Tenente Coronel %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Major %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capit�o %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Sargento %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Soldado %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Soldado %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(3,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor Hospitalar %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Bombeiro Chefe %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombeiro %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** M�dico %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Enfermeiro %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Auxiliar de Enfermeiro %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(4,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro]== 16 || PlayerInfo[playerid][pLider]== 16)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** L�der %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Perito Criminal %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Atirador de Elite %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente Do G.E.R %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Agente Do G.O.E %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Novato %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(16,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
            else if(PlayerInfo[playerid][pMembro]== 22 || PlayerInfo[playerid][pLider]== 22)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Major %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Comandante Geral %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Coronel %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sub-Tenente %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Cabo %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Salva-Vidas %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Novato %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(22,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
   			else if(PlayerInfo[playerid][pMembro]== 11 || PlayerInfo[playerid][pLider]== 11)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** L�der %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-L�der %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capit�o %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Atirador %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Espi�o %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Agente %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Agente %s: %s, over. **", sendername, result);
				}
				SendFamilyMessage(11,COLOR_R,string);
				printf("%s", string);
				format(string, sizeof(string), "* %s falou algo no r�dio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o � de nenhuma equipe !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[offduty]-----------------------------------------------
 	if(strcmp(cmd, "/menucop", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode abrir o menu Cop na cadeia");
	   		return 1;
    	}
    	if (IsACop(playerid))
     	{
	    	if(PlayerToPoint(2, playerid,255.3,77.4,1003.6) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(2, playerid,1530.5187,-1702.5320,6.2252) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
			|| PlayerToPoint(2, playerid,262.551147,186.817260,1008.171875) || PlayerToPoint(2, playerid,373.6169,-116.5053,1001.4995) || PlayerToPoint(2, playerid,1789.0905,-1704.7363,13.5278))
			{
			ShowPlayerDialog(playerid, 10102, DIALOG_STYLE_LIST, "Menu COP", "Bater cart�o\nPegar Armas\nPegar Equipamento\nRetirar Equipamento\nVer Procurados", "Ok", "Cancelar");
            TogglePlayerControllable(playerid, 0);
			return 1;
			}
		}
	}
	if(strcmp(cmd, "/batercartao", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode batercartao na cadeia!");
			return 1;
	    }
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(IsACop(playerid))
			{
				if (PlayerToPoint(2, playerid,255.3,77.4,1003.6) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(2, playerid,1530.5187,-1702.5320,6.2252) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
				|| PlayerToPoint(2, playerid,262.551147,186.817260,1008.171875) || PlayerToPoint(2, playerid,373.6169,-116.5053,1001.4995) || PlayerToPoint(2, playerid,1789.0905,-1704.7363,13.5278) || PlayerInfo[playerid][pLocal] != 255)
				{
					if(OnDuty[playerid]==0)
			        {
						format(string, sizeof(string), "Oficial %s colocou a farda.", sendername);
						OOCNews(COLOR_LIGHTRED,string);
						SetPlayerArmour(playerid, 100);
						SetPlayerHealth(playerid, 100);
						OnDuty[playerid] = 1;
						EmpregoDuty[playerid] = 2;
						Copsronda += 1;
						ShowPlayerDialog(playerid, DIALOG_SKIN_COP, DIALOG_STYLE_INPUT, "Sele��o de Skins", "Escolha sua skin de trabalho", "Ok", "Cancelar");
					}
					else if(OnDuty[playerid]==1)
					{
						format(string, sizeof(string), "Oficial %s est� de folga.", sendername);
						OOCNews(COLOR_LIGHTRED,string);
						OnDuty[playerid] = 0;
						EmpregoDuty[playerid] = 0;
						Copsronda -= 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o est� em um vesti�rio !");
					return 1;
				}
			}
			else if(PlayerInfo[playerid][pMembro] == 4||PlayerInfo[playerid][pLider] == 4)
			{
			    if(EmpregoDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Voc� Est� De Folga, e n�o receber� chamados!");
			        EmpregoDuty[playerid] = 0;
			        Medics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora voc� est� de plant�o com o seu trabalho e ir� receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 1;
			        format(string, sizeof(string), "[Anuncio] O Medico %s est� em servico, /servico medico.", sendername);
	    			OOCNews(0x2993EDAA,string);
			        Medics += 1;
			    }
			}
            else if(PlayerInfo[playerid][pMembro] == 22||PlayerInfo[playerid][pLider] == 22)
			{
       if(EmpregoDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Voc� Est� De Folga, e n�o receber� chamados!");
			        EmpregoDuty[playerid] = 0;
			        Bombeiros -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora voc� est� de plant�o com o seu trabalho e ir� receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 1;
			        format(string, sizeof(string), "[Anuncio] O Bombeiro %s est� em servico, /servico bombeiro.", sendername);
	    			OOCNews(0xFF6600AA,string);
			        Bombeiros += 1;
			    }
			}
			else if(PlayerInfo[playerid][pEmprego] == 5)
			{
			    if(EmpregoDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Voc� Est� De Folga, e n�o receber� chamados!");
			        EmpregoDuty[playerid] = 0;
			        Mechanics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora voc� est� de plant�o como CET e ir� receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 1;
			        format(string, sizeof(string), "[Anuncio] O CET %s est� em servico, /servico CET.", sendername);
	    			OOCNews(0x2993EDAA,string);
			        Mechanics += 1;
			    }
			}
            else if(PlayerInfo[playerid][pEmprego] == 12)
			{
               if(EmpregoDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Voc� Est� De Folga, e n�o receber� chamados!");
			        EmpregoDuty[playerid] = 0;
			        Pizza -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora voc� est� de plant�o como Pizza Boy e ir� receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 1;
			        format(string, sizeof(string), "[Anuncio] O Pizza Boy %s est� em servico, /servico pizza.", sendername);
	    			OOCNews(0x2993EDAA,string);
			        Pizza += 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o � Um Oficial/M�dico/CET !");
			}
		}
		return 1;
	}
//KITS ADMINS
	if(strcmp(cmd, "/kitadm", true) == 0 || strcmp(cmd, "/kitadmin", true) == 0)
	{
		if(PlayerPaintballing[playerid] != 0)
    	{
		   SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar seu kit no evento!");
		   return 1;
	    }
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar seu kit preso!");
		   return 1;
	    }
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(admtrampando[playerid] < 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� em modo jogo! (/trabalhar)");
				return 1;
			}
			GivePlayerWeapon(playerid, 46, 1);
			GivePlayerWeapon(playerid, 24, 1500);
			GivePlayerWeapon(playerid, 31, 1500);
			GivePlayerWeapon(playerid, 29, 1500);
			GivePlayerWeapon(playerid, 25, 1500);
			GivePlayerWeapon(playerid, 4, 1);
			GivePlayerWeapon(playerid, 43, 1500);
			GivePlayerWeapon(playerid, 17, 49);
			GivePlayerWeapon(playerid, 42, 1500);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealth(playerid, 100);
			SendClientMessage(playerid,COLOR_GREEN,"Voc� pegou o seu KitAdmin!");
            new name[MAX_PLAYER_NAME];
            GetPlayerName(playerid, name, sizeof(name));
            format(string, 128, "Admin: %s Pegou Seu KitAdmin.",name);
            ProxDetector(30.0, playerid, string, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
		}
		return 1;
	}
	if(strcmp(cmd, "/kitadmdono", true) == 0)
	{
		if(admtrampando[playerid] < 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� em modo jogo! (/trabalhar)");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] >= 1340)
		{
		    if(PlayerPaintballing[playerid] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar seu kit no evento!");
	   			return 1;
    		}
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar seu kit preso!");
	   			return 1;
    		}
			GivePlayerWeapon(playerid, 46, 1);
			GivePlayerWeapon(playerid, 24, 1700);
			GivePlayerWeapon(playerid, 31, 1700);
			GivePlayerWeapon(playerid, 29, 1700);
			GivePlayerWeapon(playerid, 25, 1700);
			GivePlayerWeapon(playerid, 4, 1);
			GivePlayerWeapon(playerid, 43, 1700);
			GivePlayerWeapon(playerid, 16, 12);
			GivePlayerWeapon(playerid, 42, 1700);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealth(playerid, 100);
			SendClientMessage(playerid,COLOR_GREEN,"Voc� pegou o seu KitAdmin Dono!");
		}
		return 1;
	}
    if(strcmp(cmd, "/kitbronze", true) == 0)
	{
		new location = PlayerInfo[playerid][pLocal];
	    if(location == 99 || location == 100 || location == 102)
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			if(PlayerInfo[playerid][pVIP] > 0)
			{
				format(string, sizeof(string), "* O Vip %s Pegou Seu Kit Vip Bronze.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeapons(playerid);
                GivePlayerWeapon(playerid, 24,300);
                GivePlayerWeapon(playerid, 4,1);
                GivePlayerWeapon(playerid, 18,2);
                GivePlayerWeapon(playerid, 27,300);
                GivePlayerWeapon(playerid, 29,300);
                GivePlayerWeapon(playerid, 31,300);
                GivePlayerWeapon(playerid, 34,300);
    			SetPlayerArmour(playerid, 100);
                SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Voce pegou o seu Kit Bronze!");
				return 1;
			}
			else
			{
				SendClientMessage(playerid, VERMELHO, "Voc� n�o � VIP Bronze!");
			}
		}
	}
	if(strcmp(cmd, "/kitprata", true) == 0)
	{
		new location = PlayerInfo[playerid][pLocal];
	    if(location == 99 || location == 100 || location == 102)
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			if(PlayerInfo[playerid][pVIP] > 1)
			{
				format(string, sizeof(string), "* O Vip %s Pegou Seu Kit Vip Prata.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeapons(playerid);
                GivePlayerWeapon(playerid, 24,500);
                GivePlayerWeapon(playerid, 4,1);
                GivePlayerWeapon(playerid, 18,4);
                GivePlayerWeapon(playerid, 27,500);
                GivePlayerWeapon(playerid, 29,500);
                GivePlayerWeapon(playerid, 31,500);
                GivePlayerWeapon(playerid, 34,500);
    			SetPlayerArmour(playerid, 110);
                SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Voce pegou o seu Kit Prata!");
				return 1;
			}
			else
			{
				SendClientMessage(playerid, VERMELHO, "Voc� n�o � VIP Prata!");
			}
		}
	}
    if(strcmp(cmd, "/kitvip", true) == 0 || strcmp(cmd, "/kitivip", true) == 0)
	{
	    new location = PlayerInfo[playerid][pLocal];
	    if(location == 99 || location == 100 || location == 102)
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pVIP] == 1)
			{
	   	 		format(string, sizeof(string), "VIP: %s Pegou Seu KitVip Bronze.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeaponsEx(playerid);
				GivePlayerWeapon(playerid, 46, 1);
				GivePlayerWeapon(playerid, 24, 200);
   				GivePlayerWeapon(playerid, 31, 300);
    			GivePlayerWeapon(playerid, 29, 400);
    			GivePlayerWeapon(playerid, 25, 100);
    			GivePlayerWeapon(playerid, 4, 1);
    			GivePlayerWeapon(playerid, 16, 2);
    			GivePlayerWeapon(playerid, 34, 50);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Voc� pegou o seu Kit Vip!");
			   	return 1;
			}
			else if(PlayerInfo[playerid][pVIP] == 2)
			{
				format(string, sizeof(string), "VIP: %s Pegou Seu KitVip Prata.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeaponsEx(playerid);
				GivePlayerWeapon(playerid, 24, 300);
	    		GivePlayerWeapon(playerid, 31, 400);
		    	GivePlayerWeapon(playerid, 29, 500);
		    	GivePlayerWeapon(playerid, 25, 200);
		    	GivePlayerWeapon(playerid, 4, 1);
		    	GivePlayerWeapon(playerid, 16, 5);
		    	GivePlayerWeapon(playerid, 34, 80);
		    	GivePlayerWeapon(playerid, 46, 1);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Voc� pegou o seu Kit Vip!");
	   	 		return 1;
			}
			else if(PlayerInfo[playerid][pVIP] == 3)
			{
				format(string, sizeof(string), "VIP: %s Pegou Seu KitVip Ouro.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeaponsEx(playerid);
				GivePlayerWeapon(playerid, 24, 500);
	    		GivePlayerWeapon(playerid, 31, 500);
		    	GivePlayerWeapon(playerid, 29, 600);
		    	GivePlayerWeapon(playerid, 25, 250);
		    	GivePlayerWeapon(playerid, 4, 1);
		    	GivePlayerWeapon(playerid, 16, 2);
		    	GivePlayerWeapon(playerid, 34, 120);
		    	GivePlayerWeapon(playerid, 46, 1);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Voc� pegou o seu Kit Vip!");
	   	 		return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o � VIP");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o est� em uma loja de armas.");
		}
		return 1;
	}
	if(strcmp(cmd, "/kitsocio", true) == 0 || strcmp(cmd, "/kitisocio", true) == 0)
	{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pVIP] == 4)
			{
	   	 		format(string, sizeof(string), "S�cio: %s Pegou Seu KitS�cio.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				ResetPlayerWeaponsEx(playerid);
				GivePlayerWeapon(playerid, 46, 1);
				GivePlayerWeapon(playerid, 24, 700);
   				GivePlayerWeapon(playerid, 31, 800);
    			GivePlayerWeapon(playerid, 29, 900);
    			GivePlayerWeapon(playerid, 25, 500);
    			GivePlayerWeapon(playerid, 4, 1);
    			GivePlayerWeapon(playerid, 16, 13);
    			GivePlayerWeapon(playerid, 34, 150);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_DBLUE,"Voc� pegou o seu KitS�cio!");
			   	return 1;
			}
			else if(PlayerInfo[playerid][pVIP] == 5)
			{
				format(string, sizeof(string), "S�cio: %s Pegou Seu KitS�cio.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				ResetPlayerWeaponsEx(playerid);
				GivePlayerWeapon(playerid, 24, 800);
	    		GivePlayerWeapon(playerid, 31, 900);
		    	GivePlayerWeapon(playerid, 29, 1000);
		    	GivePlayerWeapon(playerid, 25, 600);
		    	GivePlayerWeapon(playerid, 4, 1);
		    	GivePlayerWeapon(playerid, 16, 17);
		    	GivePlayerWeapon(playerid, 34, 170);
		    	GivePlayerWeapon(playerid, 46, 1);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_DBLUE,"Voc� pegou o seu KitS�cio!");
	   	 		return 1;
			}
			else if(PlayerInfo[playerid][pVIP] == 6)
			{
				format(string, sizeof(string), "S�cio: %s Pegou Seu KitS�cio.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				ResetPlayerWeaponsEx(playerid);
				GivePlayerWeapon(playerid, 24, 900);
	    		GivePlayerWeapon(playerid, 31, 1000);
		    	GivePlayerWeapon(playerid, 29, 1100);
		    	GivePlayerWeapon(playerid, 25, 700);
		    	GivePlayerWeapon(playerid, 4, 1);
		    	GivePlayerWeapon(playerid, 16, 2);
		    	GivePlayerWeapon(playerid, 34, 200);
		    	GivePlayerWeapon(playerid, 46, 1);
				SetPlayerArmour(playerid, 150);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_DBLUE,"Voc� pegou o seu KitS�cio!");
	   	 		return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o � S�cio");
			    return 1;
			}
	}
	if(strcmp("/neon", cmdtext, true, 10) == 0)
	{
       if(PlayerInfo[playerid][pVIP] >=1)
		{
			ShowPlayerDialog(playerid, 8899, DIALOG_STYLE_LIST, "Neon Vip Brasil Hard Life", "Azul\nVermelho\nVerde\nBranco\nRosa\nAmarelo\nRetirar Neon", "Selecionar", "Cancelar");
			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
			return 1;
		}
	}
 	/*if(strcmp(cmd, "/Fugir", true) == 0)
	{
     if(PlayerInfo[playerid][pJailed]>=1)
		{
		if(PlayerInfo[playerid][pJailed] == 2 || PlayerInfo[playerid][pJailed] == 6)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar no Carandiru/Cela Admin!");
	   			return 1;
    		}
		if(fugapr == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma tentativa de fulga da pris�o!");
	    		return 1;
	    	}
          if(tempodafuga == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"J� fugiram espere 3 minutos para fugir de novo !");
	    		return 1;
	    	}
        GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        format(string, sizeof(string), "%s e os %s est�o tentando Fugir da Pris�o! ID:[%d]", playername, NomeORG(playerid) , playerid);
		SendClientMessageToAll(GetPlayerColor(playerid), string);
	    SendClientMessage(playerid, COLOR_GRAD5, "Espere 60 segundos para terminar de Fugir.");
	    SetPlayerCriminal(playerid,255, "Tentativa de Fuga");
        roubando[playerid] = 1;
        ProvocoFuga[playerid] = 1;
        fugapr = 1;
        tempodafuga = 1;
        SetTimer("Aroubo8", 110000, 0);
        tempofuga = SetTimerEx("FugadaPrisao", 1800000, 0, "i", playerid);
		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o esta preso.");
		}
		return 1;
    }*/
	/*if(strcmp(cmd, "/abastecerhq", true) == 0)
	{
		new org = GetPlayerOrg(playerid);
    	if(org != 12 && org != 13)
    	{
   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o � um mafioso!");
   			return 1;
    	}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "USE: /abastecerhq [materiais]");
			return 1;
		}
    	new ammount = strval(tmp);
    	new price;
    	if(PlayerToPoint(3, playerid, 2811.7102,-1166.1824,1025.5703))
    	{
    	    price = ammount*100;
    	    format(string, 128, " Voc� abasteceu a HQ TCP com %d materiais por $%d!", ammount, price);
    	    CofreOrg[5][Materiais] = CofreOrg[5][Materiais]+ammount;
   			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
   			return 1;
    	}
	    return 1;
	}
	if(strcmp(cmd, "/equiparg", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
    	if(org == 5 || org == 14 || org == 17 || org == 18 || org == 19 || org == 20)
    	{
	    	if(CofreOrg[org][Materiais] < 150)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," O cofre de sua HQ tem menos de 150 materiais, compre mais com a m�fia ou deposite!");
	   			return 1;
    		}
    		if(org == 5 && !PlayerToPoint(3, playerid, 2811.7102,-1166.1824,1025.5703))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� s� pode equipar no cofre org de sua HQ!");
	   			return 1;
    		}
    		if(org == 14 && !PlayerToPoint(3, playerid, 2514.1301,-1691.2979,14.0460))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� s� pode equipar no cofre org de sua HQ!");
	   			return 1;
    		}
    		if(org == 17 && !PlayerToPoint(3, playerid, 1074.7671,-1204.1219,18.1446))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� s� pode equipar no cofre org de sua HQ!");
	   			return 1;
    		}
    		if(org == 18 && !PlayerToPoint(3, playerid, 2341.6677,-1186.3137,1027.9766))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� s� pode equipar no cofre org de sua HQ!");
	   			return 1;
    		}
    		if(org == 19 && !PlayerToPoint(3, playerid, 2151.3218,-1789.1669,13.5097))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� s� pode equipar no cofre org de sua HQ!");
	   			return 1;
    		}
    		if(org == 20 && !PlayerToPoint(3, playerid, 1327.2062,-877.5867,39.5781))
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� s� pode equipar no cofre org de sua HQ!");
	   			return 1;
    		}
    	    new dorgas = CofreOrg[org][Materiais];
    		if(PlayerInfo[playerid][pLider] >= 1)
    		{
    		    CofreOrg[org][Materiais] = dorgas-150;
	    	    GivePlayerWeapon(playerid, 4, 1);
	    	    GivePlayerWeapon(playerid, 24, 800);
	    	    GivePlayerWeapon(playerid, 25, 400);
	    	    GivePlayerWeapon(playerid, 29, 400);
	    	    GivePlayerWeapon(playerid, 31, 600);
	    	    format(string, sizeof(string), "* Gangster %s pega seus equipamentos de l�der.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return 1;
	    	}
  			else if(PlayerInfo[playerid][pCargo] <= 1)
    		{
    		    CofreOrg[org][Materiais] = dorgas-150;
    	    	GivePlayerWeapon(playerid, 24, 50);
    	    	GivePlayerWeapon(playerid, 25, 70);
    	    	GivePlayerWeapon(playerid, 29, 100);
    	    	GivePlayerWeapon(playerid, 31, 150);
    	    	format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return 1;
			}
  			else if(PlayerInfo[playerid][pCargo] == 2)
    		{
    		    CofreOrg[org][Materiais] = dorgas-150;
    	    	GivePlayerWeapon(playerid, 24, 120);
    	    	GivePlayerWeapon(playerid, 25, 140);
    	    	GivePlayerWeapon(playerid, 29, 130);
    	    	GivePlayerWeapon(playerid, 31, 250);
    	    	format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return 1;
			}
  			else if(PlayerInfo[playerid][pCargo] == 3)
    		{
    		    CofreOrg[org][Materiais] = dorgas-150;
    	    	GivePlayerWeapon(playerid, 24, 170);
    	    	GivePlayerWeapon(playerid, 25, 200);
    	    	GivePlayerWeapon(playerid, 29, 180);
    	    	GivePlayerWeapon(playerid, 31, 320);
    	    	format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return 1;
			}
  			else if(PlayerInfo[playerid][pCargo] == 4)
    		{
    		    CofreOrg[org][Materiais] = dorgas-150;
    	    	GivePlayerWeapon(playerid, 24, 230);
    	    	GivePlayerWeapon(playerid, 25, 230);
    	    	GivePlayerWeapon(playerid, 29, 210);
    	    	GivePlayerWeapon(playerid, 31, 380);
    	    	format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return 1;
			}
  			else if(PlayerInfo[playerid][pCargo] == 5)
    		{
    		    CofreOrg[org][Materiais] = dorgas-150;
    	    	GivePlayerWeapon(playerid, 24, 500);
    	    	GivePlayerWeapon(playerid, 25, 300);
    	    	GivePlayerWeapon(playerid, 29, 300);
    	    	GivePlayerWeapon(playerid, 31, 500);
    	    	format(string, sizeof(string), "* Gangster %s pega seus equipamentos.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    			return 1;
			}
    	}
    	return 1;
	}*/
	if(strcmp(cmd, "/equipar", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode equipar na cadeia!");
	   		return 1;
    	}
    	if (IsACop(playerid))
     	{
     	    new tmpcar = GetPlayerVehicleID(playerid);
     	    GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
	    	if(IsAEnforcerCar(tmpcar)||PlayerToPoint(2, playerid,255.3,77.4,1003.6) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(2, playerid,1530.5187,-1702.5320,6.2252) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
			|| PlayerToPoint(2, playerid,262.551147,186.817260,1008.171875) || HouseEntered[playerid] != 255)
			{
			    ResetPlayerWeaponsEx(playerid);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealth(playerid, 100.0);
				if (PlayerInfo[playerid][pLider] == 1)
				{
	   				format(string, sizeof(string), "* Policial Militar %s pega seus equipamentos de l�der.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 3, 1);
					GivePlayerWeapon(playerid, 24, 999);
					GivePlayerWeapon(playerid, 25, 999);
					GivePlayerWeapon(playerid, 29, 999);
					GivePlayerWeapon(playerid, 31, 999);
					GivePlayerWeapon(playerid, 41, 4999);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 2)
				{
					format(string, sizeof(string), "* Policial da ROTA %s pega seus equipamentos de l�der.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 3, 1);
					GivePlayerWeapon(playerid, 24, 999);
					GivePlayerWeapon(playerid, 25, 999);
					GivePlayerWeapon(playerid, 29, 999);
					GivePlayerWeapon(playerid, 31, 999);
					GivePlayerWeapon(playerid, 41, 4999);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 3)
    			{
	    			format(string, sizeof(string), "* Ex�rcito %s pega seus equipamentos de l�der.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 3, 1);
					GivePlayerWeapon(playerid, 24, 999);
					GivePlayerWeapon(playerid, 25, 999);
					GivePlayerWeapon(playerid, 29, 999);
					GivePlayerWeapon(playerid, 31, 999);
					GivePlayerWeapon(playerid, 41, 4999);
					return 1;
				}
				if (PlayerInfo[playerid][pLider] == 16)
				{
					format(string, sizeof(string), "* Policial da 2�CIA %s pega seus equipamentos de l�der.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 3, 1);
					GivePlayerWeapon(playerid, 24, 999);
					GivePlayerWeapon(playerid, 25, 999);
					GivePlayerWeapon(playerid, 29, 999);
					GivePlayerWeapon(playerid, 31, 999);
					GivePlayerWeapon(playerid, 41, 4999);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 11)
    			{
	    			format(string, sizeof(string), "* Policial da 1�CIA %s pega seus equipamentos de l�der.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 3, 1);
					GivePlayerWeapon(playerid, 24, 999);
					GivePlayerWeapon(playerid, 25, 999);
					GivePlayerWeapon(playerid, 29, 999);
					GivePlayerWeapon(playerid, 31, 999);
					GivePlayerWeapon(playerid, 41, 4999);
					return 1;
				}
     	    	if (PlayerInfo[playerid][pMembro] == 1) // Policia Militar
          		{
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Policial Militar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Policial Militar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 3)
					{
		   				format(string, sizeof(string), "* Policial Militar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
                    }
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
   						format(string, sizeof(string), "* Policial Militar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
			 		if (PlayerInfo[playerid][pCargo] == 5)
					{
			   			format(string, sizeof(string), "* Policial Militar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	    		}
				if(PlayerInfo[playerid][pMembro] == 2)//ROTA
				{
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Policial da ROTA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Policial da ROTA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 3)
					{
		   				format(string, sizeof(string), "* Policial da ROTA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
                    }
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
   						format(string, sizeof(string), "* Policial da ROTA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
			 		if (PlayerInfo[playerid][pCargo] == 5)
					{
			   			format(string, sizeof(string), "* Policial da ROTA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	    		}
   				if(PlayerInfo[playerid][pMembro] == 11)//PF
	        	{
		            if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Policial da 1�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Policial da 1�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 3)
					{
		   				format(string, sizeof(string), "* Policial da 1�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
                    }
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
   						format(string, sizeof(string), "* Policial da 1�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
			 		if (PlayerInfo[playerid][pCargo] == 5)
					{
			   			format(string, sizeof(string), "* Policial da 1�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	    		}
				if(PlayerInfo[playerid][pMembro] == 3)//Ex�rcito
	       		{
		            if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Ex�rcito %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Ex�rcito %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 3)
					{
		   				format(string, sizeof(string), "* Ex�rcito %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
                    }
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
   						format(string, sizeof(string), "* Ex�rcito %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
			 		if (PlayerInfo[playerid][pCargo] == 5)
					{
			   			format(string, sizeof(string), "* Ex�rcito %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	    		}
				if(PlayerInfo[playerid][pMembro] == 16)// Policia Civil
				{
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "*  Policial da 2�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "*  Policial da 2�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 3)
					{
		   				format(string, sizeof(string), "*  Policial da 2�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
                    }
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
   						format(string, sizeof(string), "*  Policial da 2�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
			 		if (PlayerInfo[playerid][pCargo] == 5)
					{
			   			format(string, sizeof(string), "* Policial da 2�CIA %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 3, 1);
						GivePlayerWeapon(playerid, 24, 999);
						GivePlayerWeapon(playerid, 25, 999);
						GivePlayerWeapon(playerid, 29, 999);
						GivePlayerWeapon(playerid, 31, 999);
						GivePlayerWeapon(playerid, 41, 4999);
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o est� no Vesti�rio ou em Um Enforcer.");
				return 1;
			}
		}
		else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
		{
		    if(PlayerToPoint(10.0, playerid,414.5280,2531.5229,19.1648) || PlayerToPoint(10.0, playerid,2743.6855,-2453.9363,13.8623))
			{
			    if(PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pLider] == 6)//Mancha Verde Armas
				{
					format(string, sizeof(string), "* Torcedor Organizado %s Pegou Seu Equipamento L�der.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ResetPlayerWeaponsEx(playerid);
   					GivePlayerWeapon(playerid, 1, 1);
	    			GivePlayerWeapon(playerid, 2, 1);
		    		GivePlayerWeapon(playerid, 4, 1);
		    		GivePlayerWeapon(playerid, 5, 1);
		    		GivePlayerWeapon(playerid, 6, 1);
		    		GivePlayerWeapon(playerid, 7, 1);
		    		GivePlayerWeapon(playerid, 24, 999);
		    		SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
				}
				else
				{
					format(string, sizeof(string), "* Torcedor Organizado %s Pegou Seu Equipamento de Torcedor.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ResetPlayerWeaponsEx(playerid);
   					GivePlayerWeapon(playerid, 1, 1);
	    			GivePlayerWeapon(playerid, 2, 1);
		    		GivePlayerWeapon(playerid, 4, 1);
		    		GivePlayerWeapon(playerid, 5, 1);
		    		GivePlayerWeapon(playerid, 6, 1);
		    		GivePlayerWeapon(playerid, 7, 1);
		    		SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
					return 1;
				}
			}
			else
			{
		    	SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� no lugar de equipar de sua HQ.");
		    	return 1;
		    }
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o possui esse comando.");
		    return 1;
		}
		return 1;
	}
    if(strcmp(cmd, "/policiamilitar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 1;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,280);
				PlayerInfo[playerid][pSkin] = 280;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_PM);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/BOPE", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 2;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,285);
    			PlayerInfo[playerid][pSkin] = 285;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_PR);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Exercito", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 3;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,287);
				PlayerInfo[playerid][pSkin] = 287;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_EXE);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/SAMU", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 4;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,70);
				PlayerInfo[playerid][pSkin] = 70;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_SAMU);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Aztecas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 5;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,114);
				PlayerInfo[playerid][pSkin] = 114;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_TCP);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gavioes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 6;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,121);
				PlayerInfo[playerid][pSkin] = 121;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_PF);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Prefeito", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 7;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,165);
				PlayerInfo[playerid][pSkin] = 165;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_PRE);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Hitman", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 8;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,294);
				PlayerInfo[playerid][pSkin] = 294;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_HITMAN);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Globo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 9;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,188);
				PlayerInfo[playerid][pSkin] = 188;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,0xFFC1C1F6);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Taxista", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 10;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,253);
				PlayerInfo[playerid][pSkin] = 253;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_TAXI);
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/1�CIA", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 11;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,286);
				PlayerInfo[playerid][pSkin] = 286;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_PM);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Mafiacn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 12;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,112);
				PlayerInfo[playerid][pSkin] = 112;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_COSA);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Mafiaykz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 13;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,203);
				PlayerInfo[playerid][pSkin] = 203;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_YAK);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Groove", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 14;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,107);
				PlayerInfo[playerid][pSkin] = 107;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_GRO);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Manchaverde", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 15;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,47);
				PlayerInfo[playerid][pSkin] = 47;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COLOR_GREEN);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/8bpm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 16;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,299);
				PlayerInfo[playerid][pSkin] = 299;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_PM);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/BAllas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 17;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,102);
				PlayerInfo[playerid][pSkin] = 102;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_BALLAS);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/Vagos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 18;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,110);
				PlayerInfo[playerid][pSkin] = 110;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_VAGOS);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/Comandovermelho", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 19;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,19);
				PlayerInfo[playerid][pSkin] = 19;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,0xF6000000);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/PCC", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 20;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,143);
				PlayerInfo[playerid][pSkin] = 143;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,0xCCFF99FF);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sons", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 21;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,185);
				PlayerInfo[playerid][pSkin] = 185;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_SONS);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bombeiros", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pVIP] >= 4)
			{
		   		PlayerInfo[playerid][pMembro] = 22;
		   		PlayerInfo[playerid][pCargo] = 4;
		   		SetPlayerSkin(playerid,230);
				PlayerInfo[playerid][pSkin] = 230;
				SetPlayerSpawn(playerid);
				SetPlayerColor(playerid,COR_SAMU);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sirene", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			    if(sireneon[playerid] == 1)
          		 {
     				sireneon[playerid] = 0;
					new car = GetPlayerVehicleID(playerid);
 					new param[7];
		   			GetVehicleParamsEx(car,param[0],param[1],param[2],param[3],param[4],param[5],param[6]);
		   			if(Police[car][Use] == false)
		   			{
		        	Police[car][Use]   = true;
		        	Police[car][Siren] = CreateObject(18646,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
		        	Police[car][Blue]  = CreateObject(18648,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
		        	Police[car][Red]   = CreateObject(18647,0.0,0.0,0.0,0.0,0.0,0.0,0.0);
		        	Police[car][Timer] = SetTimerEx("OnPoliceSiren",200,1,"d",car);
		        	AttachObjectToVehicle(Police[car][Siren],car,0.0,0.0,0.6,0.0,0.0,0.0);
		        	SetVehicleParamsEx(car,1,param[1],param[2],param[3],param[4],param[5],param[5]);
      				SendClientMessage(playerid,COLOR_GREEN,"Sirene Instalada");
     				}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da PMESPGTA / 1�CIA / 2�CIA / Ex�rcito !");
					}
			  	}
			}
		}//not connected
	    return 1;

	}
	if(strcmp(cmd, "/sireneoff", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			    if(sireneon[playerid] == 0)
          			 {
						sireneon[playerid] = 1;
						new car = GetPlayerVehicleID(playerid);
 						new param[7];
		   				GetVehicleParamsEx(car,param[0],param[1],param[2],param[3],param[4],param[5],param[6]);
		   				GetVehicleParamsEx(car,param[0],param[1],param[2],param[3],param[4],param[5],param[6]);
	        			if(Police[car][Use] == true)
		    			{
			    			Police[car][Use] = false;
			    			AttachObjectToVehicle(Police[car][Siren],0,0.0,0.0,0.0,0.0,0.0,0.0);
			    			AttachObjectToVehicle(Police[car][Blue],0,0.0,0.0,0.0,0.0,0.0,0.0);
			   				AttachObjectToVehicle(Police[car][Red],0,0.0,0.0,0.0,0.0,0.0,0.0);
			   			    DestroyObject(Police[car][Siren]);
			    			DestroyObject(Police[car][Blue]);
		    				DestroyObject(Police[car][Red]);
				    		KillTimer(Police[car][Timer]);
    	           		    SendClientMessage(playerid,COLOR_GREEN, "Sirene Tirada");
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Voce nao e da PMESPGTA / 1�CIA / 8�BPM/PR / Ex�rcito !");
						}
					}
				}
			}//not connected
		return 1;
	}
	if(strcmp(cmdtext, "/jetpack", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pJailed] != 0)
    	    {
	   			SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode pegar seu jetpack na cadeia");
	   			return 1;
    	    }
    	    if(PlayerPaintballing[playerid] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar seu jet no evento!");
	   			return 1;
    		}
            if(PlayerInfo[playerid][pVIP] >= 1)
            {
                    if(IsPlayerInAnyVehicle(playerid)) return  SendClientMessage(playerid, COR_GRO, "Voc� N�o Pode Usar /jetpack em Um Veiculo !");
                    SetPlayerSpecialAction(playerid, 2);
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    format(string, sizeof(string), "S�cio %s Pegou seu JetPack", sendername);
                    ProxDetector(30.0, playerid, string, COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE,COLOR_DBLUE);
                    return 1;
            }
        }
        return 1;
    }
	if(strcmp(cmd, "/mudarsexo", true) == 0)
	{
	    if(PlayerToPoint(10, playerid,2233.8225,-1333.2725,23.9816))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			new x_sexo[32];
			x_sexo = strtok(cmdtext, idx);
			if(!strlen(x_sexo))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Cart�rio |______________|");
				SendClientMessage(playerid, COLOR_WHITE, "|Use: /mudarsexo [Numero]");
				SendClientMessage(playerid, COLOR_GREY, "| 1 - Homem");
				SendClientMessage(playerid, COLOR_GREY, "| 2 - Mulher");
				return 1;
			}
            if(strcmp(x_sexo,"1",true) == 0)
			{
			 	GivePlayerMoney(playerid,-500);
				format(string, sizeof(string), "* Jogador %s mudou seu sexo para masculino.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[playerid][pSex] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Voc� mudou seu sexo para masculino!");
		   	 	return 1;
			}
            if(strcmp(x_sexo,"2",true) == 0)
			{
			    GivePlayerMoney(playerid,-500);
		   		format(string, sizeof(string), "* Jogador %s mudou seu sexo para feminino.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   				PlayerInfo[playerid][pSex] = 2;
				SendClientMessage(playerid,COLOR_GREEN,"Voc� trocou seu sexo para feminino!");
		   		return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o est� na igreja de LS.");
		}
	}//Separa��o
 	if(strcmp(cmd, "/separacao", true) == 0)
	{
		if(PlayerToPoint(10, playerid,2233.8225,-1333.2725,23.9816))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			if(IsPlayerConnected(playerid))
			{
      			new x_separar[32];
				x_separar = strtok(cmdtext, idx);
				if(!strlen(x_separar))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________| Cart�rio |______________|");
					SendClientMessage(playerid, COLOR_WHITE, "|Use: /separacao [Numero]");
					SendClientMessage(playerid, COLOR_GREY, "| 1 - Sim");
					SendClientMessage(playerid, COLOR_GREY, "| 2 - N�o");
					return 1;
				}
                if(strcmp(x_separar,"1",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
			   	 		GivePlayerMoney(playerid,-500);
						format(string, sizeof(string), "* Jogador %s se divorciou!", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendClientMessage(playerid,COLOR_GREY,"Voc� se divorciou!");
						ClearMarriage(playerid);
			   	 		return 1;
			   	 	}
			   	 	SendClientMessage(playerid,COLOR_GREEN,"Voc� n�o � casado(a)!");
				}
                if(strcmp(x_separar,"2",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
						SendClientMessage(playerid,COLOR_GREEN,"Voc� continuou casado(a)!");
			   	 		return 1;
					}
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� n�o est� na igreja de LS!");
		}
	}
//SISTEMA DE DROGAS
	if(strcmp(cmd, "/Usedrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________| Use Drogas |______________|");
		    SendClientMessage(playerid, COLOR_GRAD1," > USE: /usemaconha");
            SendClientMessage(playerid, COLOR_GRAD1," > USE: /usecocaina");
            SendClientMessage(playerid, COLOR_GRAD1," > USE: /usecrack");
			}
		return 1;
	}
	if(strcmp(cmd, "/venderdrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________| Vender |______________|");
            SendClientMessage(playerid, COLOR_GRAD1," > USE: /vendermaconha");
            SendClientMessage(playerid, COLOR_GRAD1," > USE: /vendercocaina");
            SendClientMessage(playerid, COLOR_GRAD1," > USE: /vendercrack");
			}
		return 1;
	}
	if(strcmp(cmd, "/sistemadedrogas", true) == 0 || strcmp(cmd, "/sistemadrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|______________| Sistema de Drogas |______________|");
		    SendClientMessage(playerid, COLOR_GRAD1," > /usemaconha /usecocaina /usecrack");
		    SendClientMessage(playerid, COLOR_GRAD1," > /vendermaconha /vendercocaina /vendercrack");
		    SendClientMessage(playerid, COLOR_GRAD1," > Para pegar ou esconder drogas v� a um territorio");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"GPS Territorios: /GPS e selecione territorios");
		}
		return 1;
	}
 	if(strcmp(cmd, "/cartorio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________| Cartorio  |______________|");
		    SendClientMessage(playerid, COLOR_GRAD1," > USE: /mudarsexo");
            SendClientMessage(playerid, COLOR_GRAD1," > USE: /separacao");
            SendClientMessage(playerid, COLOR_GRAD1," > USE: /loteria");
			}
		return 1;
	}
//----------------------------------[departments]-----------------------------------------------
	if(strcmp(cmd, "/departamento", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_DEPARTAMENTO, "USE: (/d)epartamento [Texto]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 4)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
            	cdivulgar[playerid] += 1;
            	return 1;
            }
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** 18�BPM/M %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** 18�BPM/M %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** 18�BPM/M %s: %s, over. ****", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** 18�BPM/M %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** 18�BPM/M %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** 18�BPM/M %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** 18�BPM/M %s: %s, over. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** ROTA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** ROTA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** ROTA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** ROTA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** ROTA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** ROTA %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** ROTA %s: %s, over. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Ex�rcito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Ex�rcito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ex�rcito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Ex�rcito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Ex�rcito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Ex�rcito %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Exercito %s: %s, over. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
				printf("%s", string);
				return 1;
			}
   			else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Prefeito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Vice-Prefeito %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Ministro da seguran�a %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Acessor de imprensa %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Seguran�a do Governo %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Motorista do Governo %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** Governo %s: %s, over. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** 2�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** 2�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** 2�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** 2�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** 2�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** 2�CIA %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** 2�CIA %s: %s, over. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
				
				printf("%s", string);
				return 1;
			}
            else if(PlayerInfo[playerid][pMembro]== 22 || PlayerInfo[playerid][pLider]== 22)
			{
				if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Bombeiro %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Bombeiro (5) %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombeiro %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Bombeiro %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Bombeiro %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Bombeiro %s: %s, over. **", sendername, result); }
				else
                {
                  format(string, sizeof(string), "* Bombeiro %s falou algo no r�dio.", sendername);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
                SendFamilyMessage(22, COLOR_DEPARTAMENTO, string);
                printf("%s", string);
				return 1;
			}
   			else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** 1�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** 1�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** 1�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** 1�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** 1�CIA %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** 1�CIA %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** 1�CIA %s: %s, over. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
				printf("%s", string);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
			    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** SAMU %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** SAMU %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** SAMU %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** SAMU %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** SAMU %s: %s, over. **", sendername, result); }
				else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** SAMU %s: %s, over. **", sendername, result); }
				else
				{
					format(string, sizeof(string), "** SAMU %s: %s, over. **", sendername, result);
				}
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o � um Policial/M�dico!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[mdc]-----------------------------------------------
	if(strcmp(cmd, "/ficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
			new tmpcar = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ficha [id]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsACopCar(tmpcar)||PlayerToPoint(60.0, playerid,232.8069,164.0555,1003.0234)||PlayerToPoint(60.0, playerid,232.2051,117.3912,1003.2188)||PlayerToPoint(20.0, playerid,322.4880,309.1409,999.1484)||PlayerToPoint(40.0, playerid,246.1936,69.8609,1003.6406))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, COLOR_WHITE, "|______________| Ficha Na Policia |______________|");
						format(string, sizeof(string), "Nome: %s", sendername);
						SendClientMessage(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "Crime: %s", PlayerCrime[giveplayerid][pAccusing]);
						SendClientMessage(playerid, COLOR_GRAD2,string);
						format(string, sizeof(string), "Relato: %s", PlayerCrime[giveplayerid][pVictim]);
						SendClientMessage(playerid, COLOR_GRAD3,string);
						format(string, sizeof(string), "Acusado: %s", PlayerCrime[giveplayerid][pBplayer]);
						SendClientMessage(playerid, COLOR_GRAD5,string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "  Voc� tem que estar em um carro da policia ou em alguma HQ da policia!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[SetCrim]-----------------------------------------------
	if(strcmp(cmd, "/suspeito", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{

	    if(IsPlayerConnected(playerid))
	    {
 	        if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descri��o do Crime]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsACop(playerid))
			{
            	if(IsPlayerConnected(giveplayerid))
				{
 					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode dar su em Policiais!");
						return 1;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USE: (/su)speito [id] [Descri��o do Crime]");
								return 1;
							}
							SetPlayerCriminal(giveplayerid,playerid, result);
							return 1;
					}
				}
				else
				{
						SendClientMessage(playerid, COLOR_GRAD1, "  Esse jogador n�o est� conectado.");
						return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o � um Policial !");
			}
		}
		return 1;
 }
//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/trancar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
            if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
			{
				if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem um carro de casa/alugado.");
					return 1;
				}
				else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPHousekey]+totalveiculos)
				{
					if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] > 0)
					{
						gLastDriver[HireCar[playerid]] = 300;
						VTrancado[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
					}
					HireCar[playerid] = gLastCar[playerid];
				}
			}
			if (PlayerInfo[playerid][pPHousekey] == 255)
			{
				if(HireCar[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce n�o tem um carro.");
					return 1;
				}
			}
			carid = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
			if(HireCar[playerid] > 0 && !SwitchKey[playerid])
			{
				carid = HireCar[playerid];
			}
			//new driver = gLastDriver[carid];
			new lockstatus = VTrancado[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce n�o tem um carro");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
					}
					else if(PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
						return 1;
					}
				}
				case 1:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce n�o tem um carro");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerInterior(playerid, 0);
					}
					if (PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
						return 1;
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Erro");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce n�o tem um carro!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/chave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Porta ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Porta ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~ Voc� n�o tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voc� n�o tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
       						SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voc� n�o tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/dado", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s jogou um dado e caiu no numero: %d", sendername,dice);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem um dado, compre em uma 24/7, Dica: use /gps");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp("/banco", cmdtext, true) == 0)
	{
	    if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
		|| PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234) || PlayerToPoint(1.5,playerid,241.0845,115.2740,1003.2188) || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.7908,-13.2499,26.7422) || PlayerToPoint(1.5,playerid,1468.6473,-1767.3595,18.7958))
		{
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, " Voc� n�o est� em um banco.");
		}
		return 1;
	}
	if(strcmp(cmd, "/comprar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53) && !PlayerToPoint(100, playerid,663.8588,-568.4162,16.3433) && !PlayerToPoint(3, playerid,663.8588,-568.4162,16.3433))//centerpoint 24-7
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o esta em uma 24-7 ou Mercado, V� at� uma /gps!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /comprar [Numero do item]");
				SendClientMessage(playerid, COLOR_WHITE, "|______________| 24-7 |______________|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: Celular 	   R$500		2: Agenda 	   R$5000");
				SendClientMessage(playerid, COLOR_GRAD2, "| 3: Dados 	   R$500		4: Camisinha   R$50");
				SendClientMessage(playerid, COLOR_GRAD4, "| 5: CD-Player   R$2500		6: Frango 	   R$10");
				SendClientMessage(playerid, COLOR_GRAD5, "| 7: Hamburger   R$10			8: Pizza 	   R$10");
				SendClientMessage(playerid, COLOR_GRAD5, "| 9: 20 Creditos R$2000      10: 50 Creditos R$5000");
				return 1;
			}
			new item = strval(tmp);
			if (item == 1 && GetPlayerMoney(playerid) >= 500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 500 - price;
			        format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
					GivePlayerMoney(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
			    }
			    else
			    {
			        format(string, sizeof(string), "~r~-R$%d", 500);
					GameTextForPlayer(playerid, string, 5000, 1);
					GivePlayerMoney(playerid,-500);
					BizzInfo[3][bTill] += 500;
                    ExtortionBiz(3, 500);
			    }
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new randphone = 1000 + random(8999);//minimo 1000  maximo 14999
				PlayerInfo[playerid][pPnumber] = randphone;
				format(string, sizeof(string), "Seu novo n�mero de celular � %d", randphone);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_GRAD5, "D� uma olhada nos seus documentos /rg");
				SendClientMessage(playerid, COLOR_WHITE, "Dica: Digite /ajudacelular em caso de d�vidas");
				return 1;
			}
			else if (item == 2 && GetPlayerMoney(playerid) >= 5000)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 5000 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 5000 - price;
					GivePlayerMoney(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid,-5000);
					BizzInfo[3][bTill] += 5000;
                    ExtortionBiz(3, 5000);
					format(string, sizeof(string), "~r~-R$%d", 5000);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pPhoneBook] = 1;
				SendClientMessage(playerid, COLOR_GRAD4, "   Nova agenda telef�nica comprada!");
				SendClientMessage(playerid, COLOR_MSG, "[]: Digite /agenda <id/nome>.");
				return 1;
			}
			else if (item == 3 && GetPlayerMoney(playerid) >= 500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 500 - price;
					GivePlayerMoney(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid,-500);
					BizzInfo[3][bTill] += 500;
                    ExtortionBiz(3, 500);
					format(string, sizeof(string), "~r~-R$%d", 500);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				gDice[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD4, "   Voc� comprou um dado! Aproveite.");
				SendClientMessage(playerid, COLOR_MSG, "[]: Digite /dado");
				return 1;
			}
			else if (item == 4 && GetPlayerMoney(playerid) >= 50)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 50 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 50 - price;
					GivePlayerMoney(playerid,- payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid,-50);
					format(string, sizeof(string), "~r~-R$%d", 50);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				Condom[playerid] ++;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Camisinha comprada.");
				SendClientMessage(playerid, COLOR_WHITE, "Agora voc� pode fazer sexo com seguran�a.");
				return 1;
			}
			else if (item == 5 && GetPlayerMoney(playerid) >= 2500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 2500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 2500 - price;
					GivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid, - 2500);
					format(string, sizeof(string), "~r~-$%d", 2500);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "CD-Player comprado.");
				SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /musica");
				PlayerInfo[playerid][pCDPlayer] = 1;
				return 1;
			}
			else if (item == 6 && GetPlayerMoney(playerid) >= 10)
			{
			    if(Groceries[playerid][pChickens] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� tem muitos frangos, coma alguns antes de comprar mais !");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    GivePlayerMoney(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Frango comprado.");
				format(string, sizeof(string), "~r~-R$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pChickens] += 1;
				Groceries[playerid][pChicken] += rand;
				return 1;
			}
			else if (item == 7 && GetPlayerMoney(playerid) >= 10)
			{
			    if(Groceries[playerid][pHamburgers] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� tem muitos Hamburgers, coma alguns antes de comprar mais!");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    GivePlayerMoney(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Hamburger Comprado.");
				format(string, sizeof(string), "~r~-R$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pHamburgers] += 1;
				Groceries[playerid][pHamburger] += rand;
				return 1;
			}
			else if (item == 8 && GetPlayerMoney(playerid) >= 10)
			{
			    if(Groceries[playerid][pPizzas] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� tem muitas pizzas, coma algumas antes de comprar mais!");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GivePlayerMoney(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GivePlayerMoney(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Pizza Comprado.");
				new rand = random(15);
				Groceries[playerid][pPizzas] += 1;
				Groceries[playerid][pPizza] += rand;
				return 1;
			}
   			else if (item == 9 && GetPlayerMoney(playerid) >= 2000)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 2000 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 2000 - price;
					GivePlayerMoney(playerid,- payout);
				}
				else
				{
				    GivePlayerMoney(playerid,-2000);
					BizzInfo[3][bTill] += 2000;
                    ExtortionBiz(3, 2000);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pCreditos] += 20;
				SendClientMessage(playerid, COLOR_MSG, "Voc� comprou 20 cr�ditos para seu celular.");
				SendClientMessage(playerid, COLOR_MSG, "[]: Digite /ajudacelular ");
				return 1;
			}
			else if (item == 10 && GetPlayerMoney(playerid) >= 5000)
			{
				if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 5000 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 5000 - price;
					GivePlayerMoney(playerid,- payout);
				}
				else
				{
				    GivePlayerMoney(playerid,-5000);
					BizzInfo[3][bTill] += 5000;
                    ExtortionBiz(3, 5000);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pCreditos] += 50;
				SendClientMessage(playerid, COLOR_MSG, "Você comprou 50 creditos para seu celular.");
				SendClientMessage(playerid, COLOR_MSG, "[]: Digite /ajudacelular ");
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro o suficiente.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/comprarcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(string, sizeof(string), "   Voc� precisa ter nivel %d Para comprar! !", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Voc� tem uma casa para vender digite /vendercasa, voc� receber� o mesmo valor que foi pago!");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pPHousekey] = h;
	        	    	PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
						HouseInfo[h][hOwned] = 1;
					    HouseInfo[h][hExitx] = 234.0843;
						HouseInfo[h][hExity] = 1064.6896;
						HouseInfo[h][hExitz] = 1085.2108;
						HouseInfo[h][hInt] = 6;
					    HouseInfo[h][hRentabil] = 1;
					    HouseInfo[h][hRent] = 200;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-HouseInfo[h][hValue]);
						PlayerPlayMusic(playerid);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
						GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parab�ns pela sua nova casa!");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudacasa Em caso de duvidas!");
						PlayerInfo[playerid][pSpawn] = 1;
					    DateProp(playerid);
                        Atualizar3Dtexts();
						OnPropUpdate();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Voc� n�o tem dinheiro o suficiente. !");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugarquarto", true) == 0 || strcmp(cmd, "/alugar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Voc� tem uma casa, para vender digite /vendercasa, voc� receber� o mesmo valor que foi pago!");
						return 1;
					}
					if(GetPlayerMoney(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPHousekey] = h;
						PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
						GivePlayerMoney(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						PlayerPlayMusic(playerid);
						GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parab�ns pela sua nova casa!");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaaluguel Em caso de duvidas!");
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Voc� n�o tem dinheiro o suficiente.");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugarcarro", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
		    new newcar = GetPlayerVehicleID(playerid);//230 at� 309
			if((GetPlayerVehicleID(playerid) >= 230 && GetPlayerVehicleID(playerid) <= 309))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[1][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem esse dinheiro !");
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� tem que desalugar o outro veiculo !");
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem j� alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
				ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-1500);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
			else if((GetPlayerVehicleID(playerid) >= 230 && GetPlayerVehicleID(playerid) <= 309))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[20][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem esse dinheiro !");
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� tem que desalugar o outro veiculo !");
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem j� alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[19][sbEntranceCost]);
				SBizzInfo[19][sbTill] += SBizzInfo[19][sbEntranceCost];
				ExtortionSBiz(19, SBizzInfo[19][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-1500);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
			else if((newcar >= 230 && newcar <= 309))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[21][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem esse dinheiro !");
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� tem que desalugar o outro veiculo !");
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem j� alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[20][sbEntranceCost]);
				SBizzInfo[20][sbTill] += SBizzInfo[20][sbEntranceCost];
				ExtortionSBiz(20, SBizzInfo[20][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-1500);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
			else if(carroVIP(newcar))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[23][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem esse dinheiro !");
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� tem que desalugar o outro veiculo !");
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem j� alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[22][sbEntranceCost]);
				SBizzInfo[22][sbTill] += SBizzInfo[22][sbEntranceCost];
				ExtortionSBiz(22, SBizzInfo[22][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugarheli", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
			if((GetPlayerVehicleID(playerid) >= 596 && GetPlayerVehicleID(playerid) <= 599) || (GetPlayerVehicleID(playerid) >= 407 && GetPlayerVehicleID(playerid) <= 419)
			|| GetPlayerVehicleID(playerid) == 485 || GetPlayerVehicleID(playerid) == 486 || GetPlayerVehicleID(playerid) == 503 || GetPlayerVehicleID(playerid) == 504)
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetPlayerMoney (playerid) <  SBizzInfo[19][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem esse dinheiro !");
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� tem que desalugar o outro veiculo !");
					return 1;
				}
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
					{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem j� alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				    }
				}
				GivePlayerMoney(playerid,-SBizzInfo[18][sbEntranceCost]);
				SBizzInfo[18][sbTill] += SBizzInfo[18][sbEntranceCost];
				ExtortionSBiz(18, SBizzInfo[18][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarheli~n~~g~ou /trancar ~w~ para trancar o heli.",hirefee);
				TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-3500);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/desalugarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        TogglePlayerControllable(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o carro", 5000, 3);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalugarheli", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        TogglePlayerControllable(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o heli", 5000, 3);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/trocarchave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro de casa", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Voce nao possui uma chave de carro", 5000, 6);
				}
				return 1;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro alugado", 5000, 6);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/darchaves", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			new car;
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /darchaves [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPHousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  Voc� n�o tem uma chave para dar");
				return 1;
			}
			else
			{
				if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
				{
					car = HireCar[playerid];
					VTrancado[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				}
				else
				{
					car = PlayerInfo[playerid][pPHousekey]+totalveiculos;
				}
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(HireCar[giveplayerid] != 299)
						{
							VTrancado[HireCar[giveplayerid]] = 0;
							UnLockCar(HireCar[giveplayerid]);
						}
						HireCar[giveplayerid] = car;
						HireCar[playerid] = 999;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "   Voc� deu a chave do seu veiculo para %s", giveplayer);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   Voc� recebeu a chave do veiuclo de %s", sendername);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "* %s da uma chave para %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalugarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 299;
				GameTextForPlayer(playerid, "~w~Voce nao alugou nenhum carro", 5000, 3);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   Voc� desalugou uma casa, e agora est� desabrigado!");
				PlayerInfo[playerid][pPHousekey] = 255;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Voc� n�o alugou nenhuma casa.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cofrecasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new borse = PlayerInfo[playerid][pPHousekey];
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Voc� tem $%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Voc� tem $%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				if (cashdeposit >  HouseInfo[borse][hTakings] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem tudo isso !");
					return 1;
				}
				if (!PlayerToPoint(100, playerid,HouseInfo[borse][hExitx],HouseInfo[borse][hExity],HouseInfo[borse][hExitz]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� est� longe de sua casa !");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					HouseInfo[borse][hTakings]=HouseInfo[borse][hTakings]-cashdeposit;
					format(string, sizeof(string), "  Voc� retirou $%d de seu cofre Total: $%d ", cashdeposit,HouseInfo[borse][hTakings]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem uma casa.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvemp [empresa id]");
				return 1;
			}
			new biz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", biz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem permiss�o para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvsemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvsemp [sempresa id]");
				return 1;
			}
			new sbiz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", sbiz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem permiss�o para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvcasa [Casa id]");
				return 1;
			}
			new House = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
				GameTextForPlayer(playerid, string, 10000, 3);
				Atualizar3Dtexts();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem permiss�o para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vendercasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Voc� n�o tem casa.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voc� � casado ( a ) n�o pode vender a casa !");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new House = PlayerInfo[playerid][pPHousekey];
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,HouseInfo[House][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu a casa por ~n~~g~R$%d", HouseInfo[House][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPHousekey] = 255;
				if(PlayerInfo[playerid][pLocal] == House)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[House][hEntrancex],HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				Atualizar3Dtexts();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem casa.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/moveis", true) == 0 || strcmp(cmd, "/mv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /moveis [Numero do iten]");
					SendClientMessage(playerid, COLOR_WHITE, "|______________| Moveis da casa |______________|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: Vida  R$50000");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: Colete R$100000");
					return 1;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(GetPlayerMoney(playerid) < 50000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce n�o tem dinheiro suficiente ");
							return 1;
						}
						HouseInfo[House][hHel] = 1;
						GivePlayerMoney(playerid,-50000);
						SBizzInfo[6][sbTill] += 50000;//vida buisness
						ExtortionSBiz(6, 50000);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de vida, Digite /vida.");
					}
					case 2:
					{
					    if(!IsACop(playerid))
					    {
							SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode comprar isso, voc� n�o � um policial !");
							return 1;
					    }
						if(GetPlayerMoney(playerid) < 100000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce n�o tem dinheiro suficiente !");
							return 1;
						}
						HouseInfo[House][hArm] = 1;
						GivePlayerMoney(playerid,-100000);
						SBizzInfo[6][sbTill] += 100000;//vida buisness
						ExtortionSBiz(6, 100000);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de colete, Digite /vida.");
					}
					default:
					{
						SendClientMessage(playerid, COLOR_GREY, "N�mero de m�vel desconhecido.");
					}
				}
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aluguel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /aluguel [Pre�o]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 99999)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Pre�o M�nimo R$1, Maximo R$99999.");
					return 1;
				}
				HouseInfo[borse][hRent] = strval(tmp);
				Atualizar3Dtexts();
				OnPropUpdate();
				format(string, sizeof(string), "Aluguel definido para: R$%d", HouseInfo[borse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/despejartodos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPHousekey] == PlayerInfo[playerid][pPHousekey] )
							{
								SendClientMessage(i, COLOR_WHITE, "Voc� foi despejado de sua casa.");
								SendClientMessage(playerid, COLOR_WHITE, "Voc� expulsou todos os inquilinos de sua casa.");
								PlayerInfo[i][pPHousekey] = 255;
								return 1;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o � dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/despejar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /despejar [id]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, "Voc� n�o pode despejar a si mesmo.");
					return 1;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPHousekey] == PlayerInfo[playerid][pPHousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "Voc� foi despejado");
							SendClientMessage(playerid, COLOR_WHITE, "Voc� despejou o jogador");
							PlayerInfo[target][pPHousekey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "O Jogador n�o alugou sua casa !");
						    return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o � dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugada", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /alugada [0 - Nao / 1 - Sim]");
				}
				HouseInfo[borse][hRentabil] = strval(tmp);
				OnPropUpdate();
				Atualizar3Dtexts();
				format(string, sizeof(string), "Status do aluguel da casa setado para - %d.", HouseInfo[borse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o � dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ligar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ligar [Telefone]");
				return 1;
			}
			if(PlayerInfo[playerid][pConnectTime] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� precisa jogar pelo menos 4 horas para fazer liga��es!");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem um celular");
				return 1;
			}
			if(PlayerInfo[playerid][pCreditos] < 2)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce n�o tem cr�ditos suficientes, compre mais na 24-7!");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s pega o celular.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			if(phonenumb == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� est� ligando para ningu�m");
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce n�o pode ligar para si mesmo");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja est� em uma liga��o...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado est� fora da �rea de cobertura ou est� desligado !");
						            return 1;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "Seu celular está tocando (/At) Chamando: %s", sendername);
									/*PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
									PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);*/
									SendClientMessage(giveplayerid, COLOR_YELLOW, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), "* %s's está tocando o celular.", sendername);
									PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
									PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);
									SendClientMessage(playerid, COLOR_MSG, "[]: Use 'T' para falar, digite /des para desligar");
									SendClientMessage(playerid, COLOR_MSG, "[]: Obs: Se Não desligar,digite /cellout !");
									ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									CellTime[playerid] = 1;
									GameTextForPlayer(playerid,"~r~ -2 Creditos", 5000, 1);
									PlayerInfo[playerid][pCreditos] -= 2;
								    SBizzInfo[2][sbTill] += 1000;
			                        ExtortionSBiz(2, 1000);
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  Você acabou de ligar para um numero ocupado...");
		}
		return 1;
	}
	if(strcmp(cmd, "/sms", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/sms", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não está logado!");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pCreditos] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce n�o tem cr�ditos suficientes compre mais na 24-7!");
	            return 1;
	        }
			if(PlayerInfo[playerid][pConnectTime] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� precisa jogar pelo menos 4 horas para mandar sms!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sms [telefone] [texto]");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um celular, compre um na 24/7");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s pegou o celular.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sms [telefone] [texto]");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado est� fora da �rea de cobertura ou est� desligado !");
						            return 1;
						        }
								if(TentouDivulgar(result))
            					{
					            	if(cdivulgar[playerid] >= 4)
					            	{
					            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
					            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
					            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
					            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
					            		Kick(playerid);
					            	}
					            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
					            	format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
									ABroadCast(COLOR_YELLOW,string,1);
									DivulgouLog(string);
					            	cdivulgar[playerid] += 1;
					            	return 1;
            					}
								format(string, sizeof(string), "SMS: %s, enviou: %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								RingTone[giveplayerid] =20;
								SendClientMessage(playerid, COLOR_WHITE, "SMS Enviado");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								print(string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								GameTextForPlayer(playerid,"~r~ -1 Credito", 5000, 1);
								PlayerInfo[playerid][pCreditos] -= 1;
								SBizzInfo[2][sbTill] += 50;
                                ExtortionSBiz(2, 50);
					           	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					           	Mobile[playerid] = 255;
					           	format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] SMS: %s, enviou: %s para %s", v[2], v[1], v[0], v[3], v[4], v[5], result,playername,sendername);
					           	SmsLog(string);
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, " Falha ao enviar a mensagem!");
		}
		return 1;
	}
	if(strcmp(cmd, "/equipargov", true) == 0)
	{
		if(PlayerToPoint(5.0,playerid, 346.1226,161.8205,1025.7964))
		{
		    if(PlayerInfo[playerid][pLider] == 7)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Voc� pegou seus Equipamentos de prote��o");
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeapon(playerid, 4, 1);
                GivePlayerWeapon(playerid, 24, 300);
                GivePlayerWeapon(playerid, 29, 300);
                GivePlayerWeapon(playerid, 31, 500);
                GivePlayerWeapon(playerid, 43, 800);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 7)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Voc� pegou seus Equipamentos");
			    ResetPlayerWeaponsEx(playerid);
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeapon(playerid, 24, 200);
                GivePlayerWeapon(playerid, 31, 300);
                GivePlayerWeapon(playerid, 43, 400);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o � um membro da prefeitura!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o est� no lugar de equipar em sua HQ");
        }
        return 1;
	}
//----------------------------------[Skin]-----------------------------------------------
	if(strcmp(cmd,"/meuskin",true) == 0)
	if(PlayerToPoint(10.0,playerid,205.1173,-159.3505,1000.5234) || PlayerToPoint(10.0,playerid,207.9093,-104.6899,1005.1328) || PlayerToPoint(3.0,playerid,414.1574,2536.4773,10.00008) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
	{
		if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0) return SendClientMessage(playerid, COLOR_GREY, " * Voc� possui uma profiss�o, s� pode usar as skins dela,digite /roupas");
		new skin;
		tmp=strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "Use: /meuskin [id da skin] - Custo R$ 500");
		skin=strval(tmp);
		if(skin==3 || skin==4 || skin==5 || skin==6 || skin==12 || skin==282 || skin==288 || skin==283 || skin==281 || skin==280 || skin==72 || skin==287 || skin==115 || skin==116 || skin==173 || skin==174 || skin==175 || skin==176 || skin==41 || skin==216 || skin==121 || skin==122
	    || skin==169 || skin==179 || skin==127 || skin==165 || skin==186 || skin==93 || skin==141 || skin==105  || skin==219 || skin==269 || skin==195 || skin==271 || skin==106 || skin==107 || skin==30 || skin==47 || skin==48 || skin==285 || skin==191 || skin==73 || skin==103 || skin==104
	    || skin==109 || skin==110 || skin==21 || skin==28 || skin==29 || skin==265 || skin==267 || skin==287 || skin==228 || skin==114 || skin==120 || skin==147 || skin==294 || skin==227 || skin==61 || skin==171 || skin==123 || skin==59 || skin==102 || skin==108 || skin==117
	    || skin==171 || skin==217 || skin==203 || skin==247 || skin==248 || skin==249 || skin==254 || skin==204 || skin==118 || skin==186 || skin==13 || skin==15 || skin==19 || skin==43
	    || skin==46 || skin==153 || skin==163 || skin==164 || skin==166 || skin==298 || skin==295 || skin==299 || skin==296 || skin==181 || skin==211 || skin>=300) return SendClientMessage(playerid, COLOR_GREY, "Esta Skin � De Uma Profiss�o !");
		SetPlayerSkin(playerid,skin);
		PlayerInfo[playerid][pSkin] = skin;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� comprou novo skin por R$500");
		GivePlayerMoney(playerid,-500);
		SBizzInfo[6][sbTill] += 500;
		ExtortionSBiz(6, 500);
		return 1;
	}
//----------------------------------[pickup]-----------------------------------------------
	if(strcmp(cmd, "/atender", true) == 0 || strcmp(cmd, "/at", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� j� est� em uma liga��o.");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COLOR_GRAD2, "Atendeu o celular.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s atendeu o celular.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
						RingTone[playerid] = 0;
					}

				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desligar", true) == 0 || strcmp(cmd, "/des", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_GRAD2, "   Desligaram do outro lado da linha.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "   Voc� desligou seu celular.");
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GRAD2, "   Voc� guardou seu celular no bolso.");
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		return 1;
	}
//===============================================[PLANTARBOMBA]====================================================//
 	if (strcmp(cmdtext, "/plantarbomba", true)==0)
	{
	 if(PlayerInfo[playerid][pMembro] != 5 || PlayerInfo[playerid][pLider] != 5
		|| PlayerInfo[playerid][pMembro] != 6 || PlayerInfo[playerid][pLider] != 6
		|| PlayerInfo[playerid][pMembro] != 12	|| PlayerInfo[playerid][pLider] != 12
		|| PlayerInfo[playerid][pMembro] != 13	|| PlayerInfo[playerid][pLider] != 13
		|| PlayerInfo[playerid][pMembro] != 14 || PlayerInfo[playerid][pLider] != 14
		|| PlayerInfo[playerid][pMembro] != 15	|| PlayerInfo[playerid][pLider] != 15
		|| PlayerInfo[playerid][pMembro] != 17 || PlayerInfo[playerid][pLider] != 17
		|| PlayerInfo[playerid][pMembro] != 18 || PlayerInfo[playerid][pLider] != 18
		|| PlayerInfo[playerid][pMembro] != 19 || PlayerInfo[playerid][pLider] != 19
		|| PlayerInfo[playerid][pMembro] != 20 || PlayerInfo[playerid][pLider] != 20
		|| PlayerInfo[playerid][pMembro] != 21 || PlayerInfo[playerid][pLider] != 21
		|| PlayerInfo[playerid][pMembro] != 22 || PlayerInfo[playerid][pLider] != 22
		|| PlayerInfo[playerid][pMembro] != 23	|| PlayerInfo[playerid][pLider] != 23)
	    {
	    	if (PlayerInfo[playerid][pDinamite] == 0)
	    	{
	    		SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o tem uma Dinamite.");
	    		return 1;
			}
			if(plantando[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Aguarde 2 minutos para plantar uma bomba novamente..");
				return 1;
			}

     		if(BombArmed[playerid] == false)
			{
				GetPlayerPos(playerid, BombX[playerid], BombY[playerid], BombZ[playerid]);
				GetXYInFrontOfPlayer(playerid, BombX[playerid], BombY[playerid], 0.7);
				format(gstring, sizeof(gstring), "%s e os %s Est�o tentando estourar algum cofre! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
       			SendClientMessageToAll(GetPlayerColor(playerid), gstring);
				SendClientMessage(playerid, COLOR_YELLOW, "Voc� plantou uma bomba!");
				ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, 0, 0, 0, 0, 0);
				BombObject[playerid] = CreateDynamicObject(1252, BombX[playerid], BombY[playerid], BombZ[playerid] - 0.8,270,0,0);
				plantando[playerid] = 1;
				SetTimerEx("planta",120000,false,"i",playerid);
				bombtimer[playerid] = SetTimerEx("BombTimer",6000,0, "d", playerid);
				BombArmed[playerid] = true;
				PlayerInfo[playerid][pDinamite] = 0;
				}
				else
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o pode usar bomba.");
				}
  		 }
		return 1;
	}
//-----------------------[RONDA]--------------------
    if(strcmp(cmd,"/ronda",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
			{
			    if(EmpregoDuty[playerid] >= 1)
			    {
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� n�o esta mais em servi�o.");
			        EmpregoDuty[playerid] = 0;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s n�o esta mais em servi�o.", sendername);
	    			OOCNews(COLOR_LIGHTRED,string);
			        Copsronda -= 1;
			    }
			    else
			    {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "| Agora voc� est� de servi�o  e poder� receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 2;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s esta em servi�o, para alguma ocorr�ncia digite /servico policia.", sendername);
	    			OOCNews(COLOR_LIGHTRED,string);
			        Copsronda += 1;
				}
			}
		}
		return 1;
	}
//----------------------------[ORELHAO]--------------------------------------------------
	if(strcmp(cmd, "/orelhao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerToPoint(3.0, playerid,1535.5697,-1637.5358,13.5469) || PlayerToPoint(3.0, playerid,1710.8175,-1605.0188,13.5469) || PlayerToPoint(3.0, playerid,1808.1926,-1598.6720,13.5469) || PlayerToPoint(3.0, playerid,1611.2460,-1713.0765,13.5469) || PlayerToPoint(3.0, playerid,1362.9312,-1751.3467,13.5244) || PlayerToPoint(3.0, playerid,1804.5630,-1167.7408,23.8281) || PlayerToPoint(3.0, playerid,814.5628,-1355.5433,13.5414) ||
			PlayerToPoint(3.0, playerid,839.7822,-1339.5476,7.1719) || PlayerToPoint(3.0, playerid,522.3236,-1515.9530,14.5936) || PlayerToPoint(3.0, playerid,523.9922,-1525.5927,14.7482) || PlayerToPoint(3.0, playerid,547.3288,-1498.3148,14.4988) || PlayerToPoint(3.0, playerid,637.4054,-1228.4910,17.8721) || PlayerToPoint(3.0, playerid,356.4761,-1365.3461,14.4760) ||
		    PlayerToPoint(3.0, playerid,338.9698,-1397.1982,15.2238) || PlayerToPoint(3.0, playerid,248.2463,-1448.8539,13.5899) || PlayerToPoint(3.0, playerid,2232.8149,-1165.7214,25.8906)  || PlayerToPoint(3.0, playerid,2219.9551,-1154.7574,1025.7969))
            {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /orelhao [N� TELEFONE]");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "| %s disca algum numero no telefone.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			if(phonenumb == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� est� ligando para ningu�m");
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce n�o pode ligar para si mesmo");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja est� em uma liga��o...");
				return 1;
			}
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado est� fora da �rea de cobertura ou est� desligado !");
						            return 1;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "Seu celular est� tocando (/At) Chamando: %s", sendername);
									SendClientMessage(giveplayerid, COLOR_YELLOW, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), " %s's est� tocando o celular.", sendername);
									//PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
									//PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);
									ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									SendClientMessage(playerid, COLOR_MSG, "[]: Use 'T' para falar, digite /des para desligar");
									CellTime[playerid] = 1;
									SBizzInfo[2][sbTill] += 500;
                                    ExtortionSBiz(2, 500);
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  Voc� acabou de ligar para 1 n�mero ocupado...");}
		}
		return 1;
	}
//DESLIGAR ORELHAO
 	if(strcmp(cmd, "/desligarorelhao", true) == 0 || strcmp(cmd, "/deso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_GRAD2, "Desligou.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "Desligou.");
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GRAD2, "Colocou o orelh�o no gancho.");
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		return 1;
	}
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return 1;
	}
	if(strcmp(cmd, "/horas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			getdate(year, month, day);
			if(month == 1) { mtext = "Janeiro"; }
			else if(month == 2) { mtext = "Fevereiro"; }
			else if(month == 3) { mtext = "Marco"; }
			else if(month == 4) { mtext = "Abril"; }
			else if(month == 5) { mtext = "Maio"; }
			else if(month == 6) { mtext = "Junho"; }
			else if(month == 7) { mtext = "Julho"; }
			else if(month == 8) { mtext = "Agosto"; }
			else if(month == 9) { mtext = "Setembro"; }
			else if(month == 10) { mtext = "Outubro"; }
			else if(month == 11) { mtext = "Novembro"; }
			else if(month == 12) { mtext = "Dezembro"; }
			gettime(hour,minute,second);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s olhou as horas.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
			if (minute < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minute);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minute);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
		}
		return 1;
	}
//----------------------{HouseS}-------------------
    if(strcmp(cmd, "/ircasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce n�o tem autoriza��o para usar esse comando!");
	            return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ircasa [ID]");
				return 1;
			}
			new Casa;
			Casa = strval(tmp);
			SetPlayerPos(playerid,HouseInfo[Casa][hEntrancex],HouseInfo[Casa][hEntrancey],HouseInfo[Casa][hEntrancez]);
			return 1;
		}
		return 1;
	}
 	if(strcmp(cmd, "/iremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce n�o tem autoriza��o para usar esse comando!");
	            return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
				return 1;
			}
			new Emp;
			Emp = strval(tmp);
			SetPlayerPos(playerid,BizzInfo[Emp][bEntranceX],BizzInfo[Emp][bEntranceY],BizzInfo[Emp][bEntranceZ]);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/irsemp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce n�o tem autoriza��o para usar esse comando!");
	            return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /iremp [ID]");
				return 1;
			}
			new Emp;
			Emp = strval(tmp);
			SetPlayerPos(playerid,SBizzInfo[Emp][sbEntranceX],SBizzInfo[Emp][sbEntranceY],SBizzInfo[Emp][sbEntranceZ]);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/casa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /casa [numero da casa]");
					return 1;
				}
				new Housenum = strval(tmp);
				SetPlayerInterior(playerid,HouseInfo[Housenum][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[Housenum][hWorld]);
				SetPlayerPos(playerid,HouseInfo[Housenum][hExitx],HouseInfo[Housenum][hExity],HouseInfo[Housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[Housenum][hInt];
				PlayerInfo[playerid][pLocal] = Housenum;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /biz [empresa]");
					return 1;
				}
				new Housenum = strval(tmp);
				SetPlayerInterior(playerid,BizzInfo[Housenum][bInterior]);
				SetPlayerPos(playerid,BizzInfo[Housenum][bExitX],BizzInfo[Housenum][bExitY],BizzInfo[Housenum][bExitZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				PlayerInfo[playerid][pInt] = BizzInfo[Housenum][bInterior];
				PlayerInfo[playerid][pLocal] = Housenum+99;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /sbiz [empresa]");
					return 1;
				}
				new Housenum = strval(tmp);
				SetPlayerPos(playerid,SBizzInfo[Housenum][sbEntranceX],SBizzInfo[Housenum][sbEntranceY],SBizzInfo[Housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/seditar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1337)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce n�o tem autoriza��o para usar esse comando!");
				return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|______________| Editar |______________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /seditar [nome] [quantidade] (Use para casas e empresas)");
				SendClientMessage(playerid, COLOR_GREY, "Casas: Level, Preco, carro, descricao, chave(0 aberto - 1 fechado)");
				SendClientMessage(playerid, COLOR_GREY, "Empresas: Level, Preco, fundos, descricao, chave(0 aberto - 1 fechado)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /seditar [nome] [quantidade]");
				return 1;
			}
			new proplev = strval(tmp);
	        //if(strcmp(x_Emprego,"car",true) == 0)
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Casa: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							HouseInfo[i][hLevel] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
						}
						else if(strcmp(x_Emprego,"carro",true) == 0)
					    {
							HouseInfo[i][hVec] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							HouseInfo[i][hLock] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Empresa: %d (Empresa com interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							BizzInfo[i][bLocked] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "SEmpresa: %d (Empresa sem interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							SBizzInfo[i][sbLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							SBizzInfo[i][sbBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							SBizzInfo[i][sbTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							SBizzInfo[i][sbLocked] =  proplev;
						}
					}
				}
			}
			format(string, sizeof(string), "Voc� ajustou: %s", x_Emprego);
			SendClientMessage(playerid, COLOR_WHITE, string);
			Atualizar3Dtexts();
			OnPropUpdate();
		}
		return 1;
	}
	if(strcmp(cmd, "/entrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Bem vindo em casa", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return 1;
							}
							GivePlayerMoney(playerid,-BizzInfo[i][bEntranceCost]);
							format(string, sizeof(string), "~r~-R$%d~n~~w~Digite /sair~n~Para poder sair!", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							OnPropUpdate();
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						PlayerInfo[playerid][pLocal] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s pagou R$%d para entrar na empresa %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						//PayLog(string);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetPlayerMoney(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return 1;
							}
							if(i == 10)
							{
							    PaintballPlayers ++;
							    PlayerPaintballing[playerid] = 1;
							    SetPlayerInterior(playerid,10);
							    new rand = random(sizeof(PaintballSpawns));
								SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
								TogglePlayerControllable(playerid, 0);
							}
							else if(i == 11)
							{
							    PlayerKarting[playerid] = 1;
							    SendClientMessage(playerid, COLOR_GREY, "Agora voc� pode participar da corrida de kart, pegue um kart.");
							}
							else
							{
							    return 1;
							}
							GivePlayerMoney(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetPlayerMoney(playerid);
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s payed R$%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							//PayLog(string);
							OnPropUpdate();
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}
   			if (PlayerToPoint(3.0, playerid,1480.9403,-1770.8481,18.7958))
			{
			//Prefeitura
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
				GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				PlayerInfo[playerid][pLocal] = 241;
			}
			else if (PlayerToPoint(3, playerid,1570.3828,-1333.8882,16.4844))
			{
	    		SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
			}
	        else if(PlayerToPoint(3.0, playerid,1554.9537,-1675.6584,16.1953))
	        {//Departamento de Policia Los Santos
		    	GameTextForPlayer(playerid, "~w~Departamento de Policia", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid,246.5878,62.7877,1003.6406);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
	        else if(PlayerToPoint(3.0, playerid,1436.887084,-2434.720703,13.554687))
	        {//Departamento de Policia Los Santos
		    	GameTextForPlayer(playerid, "~w~Departamento de Policia", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid,222.847656,69.905113,1005.039062);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
	        else if(PlayerToPoint(3.0, playerid,1251.783813,-1676.179321,12.671875))
	        {//Departamento de Policia Los Santos
		    	GameTextForPlayer(playerid, "~w~Departamento de Policia", 5000, 1);
		    	SetPlayerInterior(playerid, 6);//226.664031,71.706092,1005.039062 //FORA 1251.783813,-1676.179321,12.671875
		    	SetPlayerPos(playerid,226.664031,71.706092,1005.039062);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
	        else if(PlayerToPoint(3.0, playerid,2141.581298,-1801.804321,16.140625))//2141.581298,-1801.804321,16.140625
	        {//Departamento de Policia Los Santos
		    	GameTextForPlayer(playerid, "~w~Departamento de Policia", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid,242.683380,66.394485,1003.640625);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
	        else if(PlayerToPoint(3.0, playerid,952.759521,-910.921081,45.765625))//2141.581298,-1801.804321,16.140625
	        {//Departamento de Policia Los Santos
		    	GameTextForPlayer(playerid, "~w~Departamento de Policia", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid,226.970046,74.688064,1005.039062);
		    	PlayerInfo[playerid][pInt] = 6;
	        }
	        else if(PlayerToPoint(3.0, playerid,2244.3423,-1665.5542,15.4766))
	        {//Entrada Binco
	    		GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
            	SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	     		SetPlayerInterior(playerid, 15);
	    		SetPlayerPos(playerid,207.7336,-108.6231,1005.1328);
	    		PlayerInfo[playerid][pInt] = 15;
	        }
	        else if (PlayerToPoint(3.0, playerid,461.3484,-1500.9084,31.0592))
	        {//Entrada ZIP
     			SetPlayerPos(playerid, 161.3350,-95.0194,1001.8047);
	    		GameTextForPlayer(playerid, "~w~Zip",5000,1);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	    		SetPlayerInterior(playerid,18);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 18;
        	}
	        else if(PlayerToPoint(3.0, playerid,1836.4064,-1682.4403,13.3493))
	        {//Alhambra Entrance
	    		GameTextForPlayer(playerid, "~w~Alhambra", 5000, 1);
	    		SetPlayerInterior(playerid, 17);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerPos(playerid,493.3891,-22.7212,1000.6797);
	    		PlayerInfo[playerid][pInt] = 17;
        	}
        	else if(PlayerToPoint(3.0, playerid,1326.737915,-888.341552,39.578125))
        	{//ENTRADA HQ PCC
	    		GameTextForPlayer(playerid, "~w~HQ PCC", 5000, 1);
	    		SetPlayerInterior(playerid, 2);
	    		SetPlayerPos(playerid,2237.4758,-1079.5092,1049.0234);
	    		PlayerInfo[playerid][pInt] = 2;
	    		SetPlayerVirtualWorld(playerid, 0);
        	}
        	else if(PlayerToPoint(3.0, playerid,2446.484130,-2133.511718,17.271224))
        	{//ENTRADA HQ CV
	    		GameTextForPlayer(playerid, "~w~HQ ~r~Comando Vermelho", 5000, 1);
	    		SetPlayerInterior(playerid, 6);
	    		SetPlayerPos(playerid,2308.5269,-1211.2737,1049.0234);
	    		PlayerInfo[playerid][pInt] = 6;
	    		SetPlayerVirtualWorld(playerid, 0);
        	}
        	else if(PlayerToPoint(3.0, playerid,2421.4998,-1219.2438,25.5617))
         	{//Pigpen entrada
	     		GameTextForPlayer(playerid, "~w~The Pig Pen", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 2);
	    		SetPlayerPos(playerid,1205.0803,-9.9519,1000.9219);
	    		PlayerInfo[playerid][pInt] = 2;
	        }
	        else if(PlayerToPoint(3.0, playerid,2229.9011,-1721.2582,13.5613))
	        {//Entrada Ginasio de Lutas
	     		GameTextForPlayer(playerid, "~w~Ginasio de Lutas", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerPos(playerid,771.9399,-2.2574,1000.7292);
	    		PlayerInfo[playerid][pInt] = 5;
        	}
         	else if (PlayerToPoint(3.0, playerid,1631.8547,-1172.5637,24.0843))
         	{
	    	//Loterica entrada
	    		SetPlayerPos(playerid, 832.6270,7.2666,1004.1797);
	    		GameTextForPlayer(playerid, "~w~Loterica ",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,3);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 3;
         	}
        	else if (PlayerToPoint(3.0, playerid,1200.4497,-918.7695,43.1105))
        	{
	    	//Entrada Burger Shot 1
	     		SetPlayerPos(playerid, 366.0324,-72.6400,1001.5078);
	    		GameTextForPlayer(playerid, "~w~Vinewood Burger Shot",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,10);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 10;
	    		InAFoodPlace[playerid] = 2;
	    		SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.0);
        	}
        	//Cofre Banco Saida
	        else if (PlayerToPoint(3.0, playerid,2144.4192,1607.1848,993.6882))
	        {
               GameTextForPlayer(playerid, "~w~Banco", 5000, 1);
               SetPlayerInterior(playerid,0);
		       SetPlayerPos(playerid, 2315.6704,-0.0953,26.7422);
	        }
	        //Cofre Banco Entrada
	        else if (PlayerToPoint(3.0, playerid,2315.6704,-0.0953,26.7422))
	        {
		       GameTextForPlayer(playerid, "~g~Cofre Banco",5000,1);
	           SetPlayerInterior(playerid,1);
		       SetPlayerPos(playerid, 2144.4192,1607.1848,993.6882);
		    }
        	else if (PlayerToPoint(3.0, playerid,810.4855,-1616.1888,13.5469))
        	{
	    	//Entrada Burger Shot 2
				SetPlayerPos(playerid, 681.5034,-452.0092,-25.6172);
		    	GameTextForPlayer(playerid, "~w~Marina Burger Shot",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,1);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 1;
	    		InAFoodPlace[playerid] = 5;
	    		SetPlayerCheckpoint(playerid, 683.9015,-456.7076,-25.6099, 1.0);
    		}
        	else if (PlayerToPoint(3.0, playerid,927.6217,-1353.0105,13.3438))
        	{
	    	//Entrada Cluckin Bell
	     		SetPlayerPos(playerid, 365.7793,-9.1699,1001.8516);
	    		GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 9);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 9;
	    		InAFoodPlace[playerid] = 1;
	    		SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.0);
        	}
        	else if (PlayerToPoint(3.0, playerid,2105.4858,-1806.4725,13.5547))
        	{
	    	//Entrada Well Stacked Pizza
	     		SetPlayerPos(playerid, 372.4117,-130.4577,1001.4922);
	    		GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 5;
	    		InAFoodPlace[playerid] = 3;
	    		SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
        	}
        	else if (PlayerToPoint(3.0, playerid,975.4691,-1335.9618,13.5319))
        	{
	    	//Entrada Leonardo e Sergio Bar
	     		SetPlayerPos(playerid, 377.5237,-191.6597,1000.6328);
	    		GameTextForPlayer(playerid, "~w~Boteco Bohemia", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 17);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 17;
	    		InAFoodPlace[playerid] = 4;
	    		SetPlayerCheckpoint(playerid, 379.0611,-186.6032,1000.6328, 1.0);
        	}
//===================================[HOTEL ]=======================================//
    		/*else if (PlayerToPoint(3.0, playerid,2233.2659,-1159.8256,25.8906))
			{
				//Hotel Entrada
				SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel ",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2212.6235,-1150.4385,1025.7969))
			{
				//Hotel Entrada(dentro da porta)
				SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel ",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
			}*/
//===================================[FIM HOTEL ]=======================================//

//===================================[24/7]=======================================//
            else if(PlayerToPoint(3.0, playerid,1833.6124,-1842.4968,13.5781))
            {//24/7 esta��o entrada
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 1;
	        }
	        else if(PlayerToPoint(3.0, playerid,1000.5861,-919.8832,42.3281))
	        {//24/7 gas station entrance
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 4);
		    	SetPlayerPos(playerid,-28.2619,-26.2015,1003.5573);
		    	PlayerInfo[playerid][pInt] = 4;
            }
            else if(PlayerToPoint(3.0, playerid,1928.6006,-1776.4480,13.5469))
	        {//24/7 lado hq PCC
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 16);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerPos(playerid,-25.1326,-139.0670,1003.5469);
		    	PlayerInfo[playerid][pInt] = 16;
	        }
	        else if (PlayerToPoint(3.0, playerid, 1315.5110,-898.9860,39.5781))
	        {//24/7 perto madd dogg
		   		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 2;
	        }
	        else if (PlayerToPoint(3.0, playerid, 1352.3269,-1759.2491,13.5078))
	        {//24/7 pra�a dp
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 3;
	        }
//===================================[24/7]=======================================//

//===================================[HQ ORGANIZA��ES]=======================================//
	        else if (PlayerToPoint(3.0, playerid,2808.1106,-1189.6528,25.3436))
			{//HQ VAGOS
                SetPlayerPos(playerid, 2350.6013,-1180.7566,1027.9766);
                GameTextForPlayer(playerid, "~w~HQ ~y~Los Vagos",5000,1);
                SetPlayerInterior(playerid,5);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 5;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,691.5710,-1276.1722,13.5607))
			{//M�fia Yakuza Entrada
                SetPlayerPos(playerid, -2169.7590,645.5231,1057.5938);
                GameTextForPlayer(playerid, "~w~HQ Mafia Yakuza",5000,1);
                SetPlayerInterior(playerid,1);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 1;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1497.0920,-687.8906,95.5633))
			{//M�fia Cosa Nostra Entrada
                SetPlayerPos(playerid, -2636.8501,1405.0787,906.4609);
                GameTextForPlayer(playerid, "~w~HQ Mafia Cosa Nostra",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,-49.8844,-269.3635,6.6332))
			{//PC
                SetPlayerPos(playerid, 238.7194,141.7792,1003.0234);
                GameTextForPlayer(playerid, "~w~DP 8BPM/PR",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            if(PlayerToPoint(3.0, playerid,-516.225769,-540.458801,25.523437)) //-2445.861328,522.674865,30.131975
			{//Entrada HQ ROTA
                GameTextForPlayer(playerid, "~w~DP ROTA", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,246.4631,110.1669,1003.2257);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,329.849212,-1513.072753,36.039062))//329.849212,-1513.072753,36.039062
			{//PF Entrada
                SetPlayerPos(playerid, 288.741119,168.584930,1007.171875);
                GameTextForPlayer(playerid, "~w~DP 1�CIA",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1415.986450,2081.287353,11.001956))//329.849212,-1513.072753,36.039062
			{//ESTADIO VISITANTES A ENTRADA
                SetPlayerPos(playerid, 1412.411621,2107.549072,12.015625);
                GameTextForPlayer(playerid, "~w~SETOR VISITANTE : ~r~A",5000,1);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1414.505981,2091.894042,10.987495))//329.849212,-1513.072753,36.039062
			{//ESTADIO VISITANTES B ENTRADA
                SetPlayerPos(playerid, 1411.984497,2136.969238,12.015625);
                GameTextForPlayer(playerid, "~w~SETOR VISITANTE : ~r~B",5000,1);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1407.139770,2224.772460,11.023437))//329.849212,-1513.072753,36.039062
			{//ESTADIO A ENTRADA
                SetPlayerPos(playerid, 1376.889282,2213.066650,12.015625);
                GameTextForPlayer(playerid, "~w~SETOR : ~r~A",5000,1);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1416.666381,2234.695800,11.023437))//329.849212,-1513.072753,36.039062
			{//ESTADIO B ENTRADA
                SetPlayerPos(playerid, 1346.831176,2214.051025,12.015625);
                GameTextForPlayer(playerid, "~w~SETOR : ~r~B",5000,1);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1432.986938,2238.284912,11.023437))//329.849212,-1513.072753,36.039062
			{//ESTADIO C ENTRADA
                SetPlayerPos(playerid, 1317.040283,2214.078125,12.015625);
                GameTextForPlayer(playerid, "~w~SETOR : ~r~C",5000,1);
                SetPlayerInterior(playerid,0);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,1387.302001,472.597137,20.097772))
			{//Entrada Mayans
                SetPlayerPos(playerid, -228.720443,1401.317749,27.765625);
                GameTextForPlayer(playerid, "~w~HQ Mayans",5000,1);
                SetPlayerInterior(playerid,18);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 18;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3.0, playerid,1154.945312,-1180.919067,32.818702))
			{//ENTRADA HQ BALLAS
                GameTextForPlayer(playerid, "~w~HQ ~p~Ballas", 5000, 1);
                SetPlayerInterior(playerid, 5);
                SetPlayerPos(playerid,318.827209,1115.382934,1083.882812);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,2495.3481,-1691.1355,14.7656))
			{//HQ Groove Street Entrada
                SetPlayerPos(playerid,2496.0061,-1693.5201,1014.7422);
                GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 181);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
            if(PlayerToPoint(3.0, playerid,1519.1189,-1453.4194,15.2068))
			{//ENTRADA HQ HITMANS
                GameTextForPlayer(playerid, "~w~HQ Hitmans", 5000, 1);
                SetPlayerInterior(playerid, 2);
                SetPlayerPos(playerid,2455.3716,-1706.0787,1013.5078);
                PlayerInfo[playerid][pInt] = 2;
                SetPlayerVirtualWorld(playerid, 0);
            }
            if(PlayerToPoint(3.0, playerid,681.533081,-474.036895,16.536296))
			{//ENTRADA SONS OF ANARCHY
                GameTextForPlayer(playerid, "~w~Hq sons", 5000, 1);
                SetPlayerInterior(playerid, 11);
                SetPlayerPos(playerid,501.980987,-69.150199,998.757812);
                PlayerInfo[playerid][pInt] = 11;
                SetPlayerVirtualWorld(playerid, 0);
            }
            if(PlayerToPoint(3.0, playerid,1155.2476,-1771.8840,16.5992))
			{//ENTRADA MERCADO PERTO ALUGUEL DA PRAIA
                GameTextForPlayer(playerid, "~w~Mercadinho", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid,662.6403,-573.3281,16.3359);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
            }
            if(PlayerToPoint(3.0, playerid,940.7294,-1716.7537,13.9437))
			{//ENTRADA PUTEIRO 
                GameTextForPlayer(playerid, "~w~Puteiro ~g~B~y~S~b~C", 5000, 1);
                SetPlayerInterior(playerid, 3);
                SetPlayerPos(playerid,964.106994,-53.205497,1001.124572);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
            }
//=================================[FIM HQ ORGANIZA��ES]=====================================//
		}
		return 1;
	}
	if(strcmp(cmd, "/sair", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i <  sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(HouseEntered[playerid] == i)
    				{
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
						PlayerInfo[playerid][pInt] = 0;
						SetPlayerVirtualWorld(playerid, 0);
						PlayerInfo[playerid][pLocal] = 255;
						HouseEntered[playerid] = 255;
						return 1;
					}
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = 255;
					return 1;
				}
			}
			if(GetPlayerVehicleID(playerid) >= 1)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
			}
			else if (PlayerToPoint(3, playerid,1548.8167,-1366.2247,326.2109))
			{
	    		SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
			}
   			else if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))
			{//Saida Prefeitura
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1481.2550,-1765.8638,18.7958);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (PlayerToPoint(3.0, playerid,1412.411621,2107.549072,12.015625))
			{//SAIDA SETOR VISITANTE : A
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1415.986450,2081.287353,11.001956);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (PlayerToPoint(3.0, playerid,1411.984497,2136.969238,12.015625))
			{//SAIDA SETOR VISITANTE : B
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1414.505981,2091.894042,10.987495);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (PlayerToPoint(3.0, playerid,1376.889282,2213.066650,12.015625))
			{//SAIDA SETOR : A
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1407.139770,2224.772460,11.023437);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (PlayerToPoint(3.0, playerid,1346.831176,2214.051025,12.015625))
			{//SAIDA SETOR : B
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1416.666381,2234.695800,11.023437);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pLocal] = 255;
			}
			else if (PlayerToPoint(3.0, playerid,1317.040283,2214.078125,12.015625))
			{//SAIDA SETOR : C
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1432.986938,2238.284912,11.023437);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pLocal] = 255;
			}
	        if(PlayerToPoint(3.0, playerid,246.5878,62.7877,1003.6406))
	        {//Saida Departamento de Policia Los Santos
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,1554.9537,-1675.6584,16.1953);//2141.581298,-1801.804321,16.140625
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
	        }
	        if(PlayerToPoint(3.0, playerid,242.683380,66.394485,1003.640625))
	        {//Saida Departamento de Policia Los Santos
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,2141.581298,-1801.804321,16.140625);//2141.581298,-1801.804321,16.140625
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
	        }
	        else if(PlayerToPoint(3.0, playerid,207.7336,-108.6231,1005.1328))
	        {//Saida Binco
            	SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2244.3423,-1665.5542,15.4766);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    	}
	    	else if (PlayerToPoint(3.0, playerid,161.3350,-95.0194,1001.8047))
	        {//Saida ZIP
     			SetPlayerPos(playerid, 461.3484,-1500.9084,31.0592);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
	    	else if(PlayerToPoint(3.0, playerid,493.3891,-22.7212,1000.6797))
	        {//Saida Alhambra
	    		SetPlayerInterior(playerid, 0);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerPos(playerid,1836.4064,-1682.4403,13.3493);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if(PlayerToPoint(3.0, playerid,1205.0803,-9.9519,1000.9219))
         	{//saida pigpen
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2421.4998,-1219.2438,25.5617);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if(PlayerToPoint(3.0, playerid,771.9399,-2.2574,1000.7292))
	        {//Saida Ginasio de Lutas
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2229.9011,-1721.2582,13.5613);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
         	else if (PlayerToPoint(3.0, playerid,832.6270,7.2666,1004.1797))
         	{
	    	//Loterica saida
	    		SetPlayerPos(playerid, 1631.8547,-1172.5637,24.084);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
         	}
        	else if (PlayerToPoint(3.0, playerid,366.0324,-72.6400,1001.5078))
        	{
	    	//Entrada Burger Shot 1
	     		SetPlayerPos(playerid, 1200.4497,-918.7695,43.1105);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(3.0, playerid,681.5034,-452.0092,-25.6172))
        	{
	    	//Saida Burger Shot 2
	     		SetPlayerPos(playerid, 810.4855,-1616.1888,13.5469);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(3.0, playerid,365.7793,-9.1699,1001.8516))
        	{
	    	//Saida Cluckin Bell
	     		SetPlayerPos(playerid, 927.6217,-1353.0105,13.3438);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(3.0, playerid,372.4117,-130.4577,1001.4922))
        	{
	    	//Saida Well Stacked Pizza
	     		SetPlayerPos(playerid, 2105.4858,-1806.4725,13.5547);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if (PlayerToPoint(3.0, playerid,377.5237,-191.6597,1000.6328))
        	{
	    	//Saida Leonardo e Sergio Bar
	     		SetPlayerPos(playerid, 975.4691,-1335.9618,13.5319);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
//==============================[SAIDAS 24/7]==============================//
	        else if(PlayerToPoint(3.0, playerid,-30.9467,-89.6096,1003.5469))
            {
            	if (storeexit[playerid] == 1)
				{//24/7 esta��o saida
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		SetPlayerPos(playerid,1833.6124,-1842.4968,13.5781);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 2)
				{//perto madd dogg
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid,1315.5110,-898.9860,39.5781);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
				else if(storeexit[playerid] == 3)
				{//pra�a dp
				    SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid,1352.3269,-1759.2491,13.5078);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
				}
	        }
	        else if(PlayerToPoint(3.0, playerid,-28.2619,-26.2015,1003.5573))
	        {//24/7 gas station saida
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,1000.5861,-919.8832,42.3281);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
            }
            else if(PlayerToPoint(3.0, playerid,-25.1326,-139.0670,1003.5469))
	        {//24/7 lado hq PCC saida
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerPos(playerid,1928.6006,-1776.4480,13.5469);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
	        }

//=============================[FIM SAIDAS 24/7]=============================//

//=============================[HOTEL ]=============================//
    		/*else if (PlayerToPoint(3.0, playerid,2228.4087,-1150.5686,1025.7969))
			{
				//Hotel Saida
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2190.1182,-1179.7944,1033.7896))
			{
				//Hotel Saida 2
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2238.9316,-1192.4878,1033.7969))
			{
				//Hotel Saida 3
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}
			else if (PlayerToPoint(3.0, playerid,2193.3254,-1138.6238,1029.7969))
			{
				//Hotel Saida 4
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
			}*/
//=============================[FIM HOTEL ]=============================//

//==========================[SAIDAS HQ ORGANIZA��ES]==========================//
	        else if (PlayerToPoint(3.0, playerid,2350.6013,-1180.7566,1027.9766))
	        {//SAIDA HQ VAGOS
			    SetPlayerPos(playerid, 2808.1106,-1189.6528,25.3436);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
			    PlayerInfo[playerid][pInt] = 0;
	            PlayerInfo[playerid][pLocal] = 255;
	            SetPlayerVirtualWorld(playerid, 0);
	        }
	        else if (PlayerToPoint(3.0, playerid,-2169.7590,645.5231,1057.5938))
	        {//SAIDA HQ M�fia Yakuza
			    SetPlayerPos(playerid, 691.5710,-1276.1722,13.5607);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
			    PlayerInfo[playerid][pInt] = 0;
			    PlayerInfo[playerid][pLocal] = 255;
	            SetPlayerVirtualWorld(playerid, 0);
	        }
	        else if (PlayerToPoint(3.0, playerid,-2636.8501,1405.0787,906.4609))
	        {//SAIDA M�fia Cosa Nostra
		        SetPlayerPos(playerid, 1497.0920,-687.8906,95.5633);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
		        PlayerInfo[playerid][pInt] = 0;
		        PlayerInfo[playerid][pLocal] = 255;
		        SetPlayerVirtualWorld(playerid, 0);
            }
            else if (PlayerToPoint(3.0, playerid,238.7194,141.7792,1003.0234))
	        {
	    	//Saida PC
		    	SetPlayerPos(playerid, -49.8844,-269.3635,6.6332);
		    	SetPlayerInterior(playerid,0);
		    	SetPlayerFacingAngle(playerid, 0);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
	        }
	        if(PlayerToPoint(3.0, playerid,246.4631,110.1669,1003.2257))
	        {//Saida HQ ROTA
			    SetPlayerInterior(playerid, 0);
			    SetPlayerPos(playerid,-516.225769,-540.458801,25.523437);//-2445.861328,522.674865,30.131975//-2245.687744,518.240661,30.105873
			    PlayerInfo[playerid][pInt] = 0;
			    SetPlayerVirtualWorld(playerid, 0);
			    PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(3.0, playerid,288.894927,167.594314,1007.171875))
	        {
	    	//Saida PF
	    		SetPlayerPos(playerid, 329.849212,-1513.072753,36.039062);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(3.0, playerid,222.847656,69.905113,1005.039062))
	        {
	    	//Saida Aguias
	    		SetPlayerPos(playerid, 1436.887084,-2434.720703,13.554687);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(3.0, playerid,226.664031,71.706092,1005.039062))
	        {
	    	//Saida FT ROCAM
	    		SetPlayerPos(playerid, 1251.783813,-1676.179321,12.671875);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);////226.664031,71.706092,1005.039062 //FORA 1251.783813,-1676.179321,12.671875
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(3.0, playerid,-228.720443,1401.317749,27.765625))
	        {
	    	//Saida Mayans
	    		SetPlayerPos(playerid, 1387.302001,472.597137,20.097772);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(3.0, playerid,226.970046,74.688064,1005.039062))
	        {
	    	//Saida PF
	    		SetPlayerPos(playerid, 952.759521,-910.921081,45.765625);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
        	else if(PlayerToPoint(3.0, playerid,318.827209,1115.382934,1083.882812))
        	{//SAIDA HQ BALLAS
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1154.945312,-1180.919067,32.818702);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if(PlayerToPoint(3.0, playerid,1715.349975,-2137.490966,13.546875))
        	{//ENTRADA HQ TCP
	    		GameTextForPlayer(playerid, "~w~HQ TCP", 5000, 1);
	    		SetPlayerInterior(playerid, 8);
	    		SetPlayerPos(playerid,2807.8213,-1173.5691,1025.5703);
	    		PlayerInfo[playerid][pInt] = 8;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if(PlayerToPoint(3.0, playerid,2807.8213,-1173.5691,1025.5703))
        	{//SAIDA HQ TCP
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1715.349975,-2137.490966,13.546875);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        else if (PlayerToPoint(3.0, playerid,2496.0061,-1693.5201,1014.7422))
        	{
	    	//HQ Groove Street Saida
	     		SetPlayerPos(playerid,2495.3481,-1691.1355,14.7656);
	     		SetPlayerInterior(playerid,0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	        }
	        if(PlayerToPoint(3.0, playerid,345.0741,305.5558,999.1484))
        	{//SAIDA HQ HITMANS
	     		SetPlayerInterior(playerid, 0);
	     		SetPlayerPos(playerid,2322.7344,-1254.4701,22.5000);
	     		PlayerInfo[playerid][pInt] = 0;
	     		SetPlayerVirtualWorld(playerid, 0);
	     		PlayerInfo[playerid][pLocal] = 255;
     		}
	        else if(PlayerToPoint(3.0, playerid,2237.4758,-1079.5092,1049.0234))
        	{//SAIDA HQ PCC
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1326.737915,-888.341552,39.578125);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
        	else if(PlayerToPoint(3.0, playerid,2308.5269,-1211.2737,1049.0234))
        	{//SAIDA HQ CV
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2446.484130,-2133.511718,17.271224);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
        	}
            if(PlayerToPoint(3.0, playerid,2455.3716,-1706.0787,1013.5078))
			{//SA�DA HQ HITMANS
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1519.1189,-1453.4194,15.2068);
                PlayerInfo[playerid][pInt] = 2;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 255;
            }
            if(PlayerToPoint(3.0, playerid,502.2510,-68.0041,998.7578))
			{//SA�DA HQ SONS
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,681.533081,-474.036895,16.536296);
                PlayerInfo[playerid][pInt] = 2;
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pLocal] = 255;
            }
            if(PlayerToPoint(3.0, playerid,662.6403,-573.3281,16.3359))
			{//SA�DA MERCADO PERTO ALUGUEL DA PRAIA
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,1155.2476,-1771.8840,16.5992);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 0);
                PlayerInfo[playerid][pLocal] = 255;
            }
            if(PlayerToPoint(3.0, playerid,968.0054,-53.1914,1001.1246))
			{//SA�DA PUTEIRO 
                SetPlayerInterior(playerid, 0);
                SetPlayerPos(playerid,940.7294,-1716.7537,13.9437);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                SetPlayerInterior(playerid, 0);
                PlayerInfo[playerid][pLocal] = 255;
            }
//=========================[FIM SAIDAS HQ ORGANIZA��ES]=========================//
		}
		return 1;
	}
	if(strcmp(cmd, "/home", true) == 0 || strcmp(cmd, "/mapacasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPHousekey] != 255)
			{
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~r~Mapa da Casa Marcado!", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Voce nao tem casa", 5000, 1);
			}
		}
		return 1;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/compraremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� ja tem uma empresa, Digite /venderemp para comprar outra.");
				return 1;
			}
			if(PlayerInfo[playerid][pVIP] < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � VIP!");
				return 1;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "Voc� precisa ser n�vel %d para comprar essa empresa",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetPlayerMoney(playerid) > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-SBizzInfo[b][sbBuyPrice]);
						PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Voc� comprou uma empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem grana suficiente");
						return 1;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "Voc� precisa ser n�vel %d para comprar essa empresa",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetPlayerMoney(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						BizzInfo[b][bLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerMoney(playerid,-BizzInfo[b][bBuyPrice]);
						PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Bem Vindo~n~Voce pode sair da sua empresa digitando /sair", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Voc� comprou esta empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Atualizar3Dtexts();
						OnPropUpdate();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Voc� nao tem grana o suficiente");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/venderemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o possui uma empresa.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voc� � casado(a), n�o pode vender a empresa!");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey]-100;
				GivePlayerMoney(playerid,SBizzInfo[borse][sbTill]);
				SBizzInfo[borse][sbLocked] = 0;
				SBizzInfo[borse][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[borse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[borse][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", SBizzInfo[borse][sbTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				SBizzInfo[borse][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPropUpdate();
				return 1;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[borse][bLocked] = 0;
				BizzInfo[borse][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[borse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[borse][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				GivePlayerMoney(playerid,BizzInfo[borse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				BizzInfo[borse][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Atualizar3Dtexts();
				OnPropUpdate();
				return 1;
			}
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
			    new borse = PlayerInfo[playerid][pPbiskey];
			    format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				ConsumingMoney[playerid] = 1;
                PlayerInfo[playerid][pPbiskey] = 255;
                return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Voc� n�o tem uma Empresa.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/infoempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if(borse == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem uma empresa.");
				return 1;
			}
			if (borse >= 100)
			{
				PrintSBizInfo(playerid,borse-100);
			}
			else
			{
				PrintBizInfo(playerid,borse);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entradadaempresa", true) == 0 || strcmp(cmd, "/entradaemp", true) == 0 || strcmp(cmd, "/precoentradaemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma Empresa !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /entradadaempresa [pre�o]");
			}
			if(strval(tmp) < 0 || strval(tmp) > 576)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Pre�o da entrda m�nmo R$0, m�ximo R$576.");
				return 1;
			}
			if (borse >= 100)
			{
				SBizzInfo[borse-100][sbEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", SBizzInfo[borse-100][sbEntranceCost]);
			}
			else
			{
				BizzInfo[borse][bEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", BizzInfo[borse][bEntranceCost]);
			}
			Atualizar3Dtexts();
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/extorcao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Voc� n�o tem uma Empresa");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /extorcao [id] (ou 555 para Nenhum)");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(string, sizeof(string), "* %s esta na extorcao de sua empresa.",giveplayer);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			        format(string, sizeof(string), "* Agora voc� est� na extor��o da empresa de %s.",sendername);
			        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			        if (borse >= 100)
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extor�ao: %s",SBizzInfo[borse-100][sbExtortion]);
					}
					else
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extor�ao: %s",BizzInfo[borse][bExtortion]);
					}
					OnPropUpdate();
					Atualizar3Dtexts();
					SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			}
			else if(giveplayerid == 555)
			{
			    if (borse >= 100)
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extor�ao: %s",SBizzInfo[borse-100][sbExtortion]);
				}
				else
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extor�ao: %s",BizzInfo[borse][bExtortion]);
				}
				OnPropUpdate();
				Atualizar3Dtexts();
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/nomeempresa", true) == 0 || strcmp(cmd, "/nomeemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma Empresa");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /nomeempresa [Nome]");
			}
			if (borse >= 100)
			{
				strmid(SBizzInfo[borse-100][sbMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",SBizzInfo[borse-100][sbMessage]);
			}
			else
			{
				strmid(BizzInfo[borse][bMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",BizzInfo[borse][bMessage]);
			}
			OnPropUpdate();
			Atualizar3Dtexts();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/sacarempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma Empresa");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Voc� tem R$%d no cofre da empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Voc� tem R$%d no cofre da empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sacarempresa [quantidade]");
				return 1;
			}
			if (borse >= 100)
			{
				if(cashdeposit > SBizzInfo[borse-100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� nao tem essa quantia.");
					return 1;
				}
			}
			else
			{
				if (cashdeposit > BizzInfo[borse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� nao tem essa quantia.");
					return 1;
				}
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Sua empresa esta longe de voc�.");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					SBizzInfo[borse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "  Voc� retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Sua empresa esta longe de voc�.");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GivePlayerMoney(playerid,cashdeposit);
					BizzInfo[borse][bTill] -= cashdeposit;
					format(string, sizeof(string), "   Voc� retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/depositarempresa", true) == 0 || strcmp(cmd, "/depositaremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem uma empresa.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Voc� tem R$%d de saldo em sua empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Voc� tem R$%d de saldo em sua empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /depositarempresa [quantidade]");
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > GetPlayerMoney(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o tem tanto");
				return 1;
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse][sbEntranceX],SBizzInfo[borse][sbEntranceY],SBizzInfo[borse][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� est� longe de sua empresa");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					SBizzInfo[borse-100][sbTill] += cashdeposit;
					ExtortionSBiz(borse-100, cashdeposit);
					format(string, sizeof(string), "  Voc� guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d");
					return 1;
				}
				else
				{
					GivePlayerMoney(playerid,-cashdeposit);
					BizzInfo[borse][bTill] += cashdeposit;
					ExtortionBiz(borse, cashdeposit);
					format(string, sizeof(string), "  Voce depositou $%d no cofre de sua empresa Total: $%d", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
//-----------------------------------[HEAL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/vida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new location = PlayerInfo[playerid][pLocal];
			if(!strlen(tmp))
			{
				if(location != 255)
				{
					if(location < 99)
					{
						if(HouseInfo[location][hArm] == 1 && IsACop(playerid))
						{
							format(string, sizeof(string), "| %s pega seu colete.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(playerid, 0);
							GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
							Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
							Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
							SetPlayerPos(playerid,1527.5,-12.1,1002.0);
							PlayerInfo[playerid][pLocal] = 255;
							SetPlayerInterior(playerid,99);
							Spectate[playerid] = 257;
						}
						else if(HouseInfo[location][hHel] == 1)
						{
							SetPlayerHealth(playerid,100.0);
							PlayerInfo[playerid][pDoenca] = 0;
							SetPlayerDrunkLevel (playerid, 0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� foi curado.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY,"Este lugar nao tem lugar de se curar.");
						}
						return 1;
					}
					else if(location == 101)//Restaurant
					{
					    SetPlayerHealth(playerid,100.0);
						SetPlayerArmour(playerid,100.0);
						PlayerInfo[playerid][pDoenca] = 0;
						SetPlayerDrunkLevel (playerid, 0);
						PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_LIGHTBLUE,"Voc� foi curado.");
					}
					else if(location == 102 && IsACop(playerid))//Police Armorry
					{
					    SetPlayerHealth(playerid,100.0);
					    format(string, sizeof(string), "* %s Foi Curado.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						TogglePlayerControllable(playerid, 0);
						GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
						Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
						Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerPos(playerid,1527.5,-12.1,1002.0);
						PlayerInfo[playerid][pLocal] = 255;
						SetPlayerInterior(playerid,99);
						Spectate[playerid] = 257;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /vida [id] [pre�o]");
					return 1;
				}
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "USE: /vida [id] [price]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   O Pre�o n�o pode passar de 5000 !"); return 1; }
			if (giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o pode se curar!");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(gTeam[playerid] == TEAM_CYAN||PlayerInfo[playerid][pMembro]==4||PlayerInfo[playerid][pLider]==4)//model
					{
						new Veh = GetPlayerVehicleID(playerid);
						if(IsAnAmbulanceCar(Veh))
						{
							format(string, sizeof(string), "~y~Voce foi curado ~n~~w~%s~n~~g~R$%d", giveplayer,moneys);
							GameTextForPlayer(playerid, string, 5000, 1);
							GivePlayerMoney(playerid,moneys);
							GivePlayerMoney(giveplayerid,-moneys);
							new hp = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        hp = 20 * PlayerInfo[playerid][pPainPerk]; hp += 100;
								SetPlayerHealth(giveplayerid, hp);
						    }
						    else
						    {
						        hp = 100;
						        SetPlayerHealth(giveplayerid, 100);
						        PlayerInfo[giveplayerid][pDoenca] = 0;
						    }
						    new colete = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        colete = 0 * PlayerInfo[playerid][pPainPerk]; colete += 100;
								SetPlayerArmour(giveplayerid, colete);
						    }
						    else
						    {
						        colete = 100;
						        SetPlayerArmour(giveplayerid, 100);
						        PlayerInfo[giveplayerid][pDoenca] = 0;
						    }
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "Voc� foi curado, %d de saude e %d de colete por -R$%d",hp,colete,moneys);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
							if(PlayerInfo[giveplayerid][pDoenca] > 0)
				            {
								PlayerInfo[giveplayerid][pDoenca] = 0;
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Voc� n�o est� infectado com nenhuma doen�a, por causa de cuidados medicos!");
							}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  Voc�s dois precisam estar no ve�culo!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar o comando!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Esse jogador est� offline");
			}
		}
		return 1;
	}
//----------------------------------[ADMINADMIN]-----------------------------------------------
	if(strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /id [ nick ]");
				return 1;
			}
			new target;
			target = ReturnUser(tmp);
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(gstring, sizeof(gstring), "ID: (%d) %s",target,giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, gstring);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tvon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	        SendClientMessage(playerid, COLOR_GREEN, "Voc� n�o est� autorizado a usar este comando");
	        return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
	        if(PlayerInfo[playerid][pAdmin] >= 1)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
	        if(Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				giveplayerid = ReturnUser(tmp);
				new world;
	    		world = GetPlayerVirtualWorld(giveplayerid);
				if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 1339 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode ficar de TV em um Admin Dono !");
							return 1;
						}
				        Spectate[playerid] = giveplayerid;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						new cash =  GetPlayerMoney(Spectate[playerid]);
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
						    SetPlayerToTeamColor(playerid);
						    SetPlayerVirtualWorld(playerid,world);
						    PlayerInfo[playerid][pSpawn] = 0;
							format(string, sizeof(string), "Info: (%d) %s R$%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						}
						SendClientMessage(playerid, COLOR_YELLOW2, string);
						WatchingTV[playerid] = 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /tvon [ id ]");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "Voc� n�o tem permiss�o para usar esse comando!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tvoff", true) == 0)
	{
        new nome[24];
        GetPlayerName(playerid, nome, sizeof nome);
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
  			if(WatchingTV[playerid] > 0)
	    	{
		        WatchingTV[playerid] = 0;
				Spectate[playerid] = 253;
				GameTextForPlayer(playerid, "~w~TV OFF", 5000, 3);
				SetPlayerSkin(playerid,217);
				MedicBill[playerid] = 0;
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� de TV em Ninguem !");
			    return 1;
			}
		}
		return 1;
	}
//----------------------------------[AdminChat]-----------------------------------------------
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[250];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/a)dmin [admin chat]");
				return 1;
			}
			if(TentouDivulgar(result))
			{
  				if(cdivulgar[playerid] >= 4)
  				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
    				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
    				Kick(playerid);
  				}
  				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
  				format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
        		cdivulgar[playerid] += 1;
        		return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], PlayerName(playerid), result);
				ABroadCast(COLOR_LIGHTBLUE, string, 1);
			}
			format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] |%d Admin %s: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerInfo[playerid][pAdmin], sendername, result);
			AChatLog(string);
		}
		return 1;
	}
//----------------------------------[AdminChat]-----------------------------------------------
    if(strcmp(cmd, "/socio", true) == 0 || strcmp(cmd, "/so", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/so)cio [socio chat]");
				return 1;
			}
			format(string, sizeof(string), "*%d Socio %s: %s", PlayerInfo[playerid][pVIP], sendername, result);
			if (PlayerInfo[playerid][pVIP] >= 4)
			{
				SendVIPMessage(COLOR_YELLOW, string);
			}
			printf("Socio %s: %s", sendername, result);
		}
		return 1;
	}
//-------------------------------[Desligarall]--------------------------------------------------------------------------

//--------------------------------------------------------------------------------------
//----------------------------------[cnn]-----------------------------------------------
	if(strcmp(cmd, "/cnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnn [cnn formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return 1;
				}
				if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				{
					format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				}
				else
				{
					format(string, sizeof(string), "~b~%s: ~w~%s",sendername,result);
				}
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 3);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cnnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnnn <Digite> ");
					return 1;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "N�o existe 2! s� 0,1,3,4!");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /cnnn <Digite> [cnnc formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return 1;
				}
				format(string, sizeof(string), "~w~%s",result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, string, 5000, txtid);//GameTextForAll(string, 5000, 1);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	//OUVIR TODOS
//=-=-=-=-=-=-=-=-=-=-=-[CMDSpec]=-=-=-=-=-=-=--=-=-=-=-==-=-=-=-==-=-=-=-=-=-=-
 	if(strcmp(cmd, "/ouvirtodos", true) == 0)
	{
   		if(PlayerInfo[playerid][pAdmin] < 4)
   		{
   		    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� autorizado para usar este comando!");
   		    return 1;
		}
       	PlayerInfo[playerid][pCMDs] = 1;
   	 	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� est� ouvindo todos do servidor agora.");
		return 1;
 	}
	if(strcmp(cmd, "/pararouvirtodos", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] < 4)
        PlayerInfo[playerid][pCMDs] = 0;
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� n�o est� mais ouvindo todos.");
		return 1;
	}
//-----------------------------------[JAIL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/carandiru",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tempo[20];
	        new tempo2;
	        if(PlayerInfo[playerid][pAdmin] < 2)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voc� n�o esta autorizado para usar este comando!");
	            return 1;
	        }
			if(PlayerInfo[playerid][pAdmin] <= 4)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode prender quem j� est� Preso!");
					return 1;
				}
			}
	        tmp = strtok(cmdtext, idx);
	        tempo = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(!strlen(tempo))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /carandiru [ ID ] [ Tempo ] [ Motivo ]");
				return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340  && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode dar carandiru para um Admin Dono !");
				return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[giveplayerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tempo2 = strval(tempo);
		    if(IsPlayerConnected(giveplayerid))
		    {
		      if(giveplayerid != INVALID_PLAYER_ID)
   			  {
   			        if(PlayerInfo[giveplayerid][pSex] == 1)
					{
						SetPlayerSkin(giveplayerid, 268);
					}
					else
					{
					    SetPlayerSkin(giveplayerid, 69);
					}
		            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* Voc� Prendeu %s,Motivo: %s", giveplayer, (result));
                    SendClientMessage(playerid, COLOR_LIGHTRED, string);
                    format(string, sizeof(string), "ADMCMD: %s Colocou %s por %d Minutos no carandiru,Motivo: %s.", sendername, giveplayer, tempo2, (result));
                    SendClientMessageToAll(COLOR_LIGHTRED, string);
					GameTextForPlayer(giveplayerid, "~b~Bem Vindo ao ~n~~r~Carandiru", 5000, 3);
					ResetPlayerWeaponsEx(giveplayerid);
					WantedPoints[giveplayerid] = 0;
      				SetPlayerWantedLevel(giveplayerid, 0);
					PlayerInfo[giveplayerid][pJailed] = 2;
					PlayerInfo[giveplayerid][pJailTime] = tempo2 * 60;
		            SetPlayerPos(giveplayerid, 268.58, 1857.94, 9.81);
					SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
		        }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "O jogador est� offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/cadeia", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [tempo] [motivo]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 4)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode prender quem j� est� Preso!");
					return 1;
				}
			}
			new length = strlen(cmdtext);
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /cadeia [id] [tempo] [motivo]");
				return 1;
			}
			if(PlayerInfo[playerid][pJailed] != 0 && PlayerInfo[playerid][pAdmin] < 1338)
			{
				SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode tirar da cadeia!");
				return 1;
  			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340  && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(PlayerInfo[giveplayerid][pSex] == 1)
						{
							SetPlayerSkin(giveplayerid, 268);
						}
						else
						{
						    SetPlayerSkin(giveplayerid, 69);
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� Prendeu %s na cela admin.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						ResetPlayerWeapons(playa);
						WantedPoints[playa] = 0;
						PlayerInfo[playa][pJailed] = 8;
						PlayerInfo[playa][pJailTime] = money*60;
						SetPlayerInterior(playa, 0);
						SetPlayerPos(playa,1174.3188,-1179.1814,87.0183);
						format(string, sizeof(string), "Voce foi preso por %d Minutos na Cela Admin.", money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "ADMCMD: %s Colocou %s Por %d Minutos na Cadeia,Motivo: %s.", PlayerName(playerid), giveplayer,money,(result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[TOD]-----------------------------------------------
	if(strcmp(cmd, "/sethora", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /sethora [hora do dia] (0-23)");
				return 1;
			}
			new hour2;
			hour2 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
	            SetWorldTime(hour2);
				format(string, sizeof(string), "   Tempo Definido Para %d Horas.", hour2);
				BroadCast(COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/iniciarloteria", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
	            format(string, sizeof(string), "Loteria: Ja comecou a loteria.");
	            OOCNews(COLOR_WHITE, string);
	            new rand = random(80);
	            if(rand < 77) { rand += 3; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem permiss�o para usar esse comando!");
	            return 1;
	        }
	    }
		return 1;
	}
//-----------------------------------[limparvip]------------------------------------//
	/*if(strcmp(cmd, "/limparvip", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1340)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /limparvip [id]");
				return 1;
			}
			new valor;
			valor = strval(tmp);
			if(IsPlayerOnline(VipInfo[valor][vNick]))
  			{
  			    id=GetPlayerID(InfoOrg[org][SubLider]);
		  		Demitir(playerid, id);
 			}
			strmid(VipInfo[valor][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
			VipInfo[valor][vDia] = 0;
  			VipInfo[valor][vMes] = 0;
  			VipInfo[valor][vAno] = 0;
  			VipInfo[valor][vDia2] = 0;
  			VipInfo[valor][vMes2] = 0;
  			VipInfo[valor][vAno2] = 0;
  			VipInfo[valor][vTempo] = 0;
  			SaveVip();
  			return 1;
		}
		return 1;
	}*/
	/*if(strcmp(cmd, "/retirarvip", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1340)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirarvip [id]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
			PlayerInfo[para1][pVIP] = 0;
			//PlayerInfo[para1][pSocio] = 0;
			//format(string, sizeof(string), "   Voc� setou VIP %d para o jogador", quantidade);
			getdate(year, month, day);
			gettime(hour,minute);
			format(string, sizeof(string), "%s retirou vip de %s ( %d/%d/%d - %d:%d)",sendername,giveplayer,year, month, day,hour, minute);
			VipsLog(string);
			if(PlayerInfo[para1][pCarKey] != 0 && strcmp(playername, CarInfo[PlayerInfo[para1][pVeiculo]][cOwner], true) == 0)
			{
				new rand;
				new car = PlayerInfo[para1][pVeiculo];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
                CarInfo[car][cColorTwo] = 0;
				GetPlayerName(para1, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				PlayerInfo[para1][pCarKey] = 0;
				PlayerInfo[para1][pVeiculo] = 0;
				rand = random(sizeof(gRandomCarsSpawns));
				CarInfo[car][cLocationx] = gRandomCarsSpawns[rand][0];
				CarInfo[car][cLocationy] = gRandomCarsSpawns[rand][1];
				CarInfo[car][cLocationz] = gRandomCarsSpawns[rand][2];
				CarInfo[car][cAngle] = gRandomCarsSpawns[rand][3];
				SaveCars();
			}
			if(PlayerInfo[para1][pCarKey2] != 0 && strcmp(playername, CarInfo[PlayerInfo[para1][pVeiculo2]][cOwner], true) == 0)
			{
				new rand;
				new car = PlayerInfo[para1][pVeiculo2];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
                CarInfo[car][cColorTwo] = 0;
				GetPlayerName(para1, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				PlayerInfo[para1][pCarKey2] = 0;
				PlayerInfo[para1][pVeiculo2] = 0;
				rand = random(sizeof(gRandomCarsSpawns));
				CarInfo[car][cLocationx] = gRandomCarsSpawns[rand][0];
				CarInfo[car][cLocationy] = gRandomCarsSpawns[rand][1];
				CarInfo[car][cLocationz] = gRandomCarsSpawns[rand][2];
				CarInfo[car][cAngle] = gRandomCarsSpawns[rand][3];
				SaveCars();
			}
			if(PlayerInfo[para1][pCarKey3] != 0 && strcmp(playername, CarInfo[PlayerInfo[para1][pVeiculo3]][cOwner], true) == 0)
			{
				new rand;
				new car = PlayerInfo[para1][pVeiculo3];
				CarInfo[car][cOwned] = 0;
				CarInfo[car][cModel] = 560;
				CarInfo[car][cColorOne] = 0;
                CarInfo[car][cColorTwo] = 0;
				GetPlayerName(para1, sendername, sizeof(sendername));
				strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				PlayerInfo[para1][pCarKey3] = 0;
				PlayerInfo[para1][pVeiculo3] = 0;
				rand = random(sizeof(gRandomCarsSpawns));
				CarInfo[car][cLocationx] = gRandomCarsSpawns[rand][0];
				CarInfo[car][cLocationy] = gRandomCarsSpawns[rand][1];
				CarInfo[car][cLocationz] = gRandomCarsSpawns[rand][2];
				CarInfo[car][cAngle] = gRandomCarsSpawns[rand][3];
				SaveCars();
			}
			if(PlayerInfo[para1][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[para1][pPbiskey]-100][sbOwner], true) == 0)
			{
			    new borse = PlayerInfo[para1][pPbiskey]-100;
				//GivePlayerMoney(playerid,SBizzInfo[borse][sbTill]);
				SBizzInfo[borse][sbLocked] = 1;
				SBizzInfo[borse][sbOwned] = 0;
				GetPlayerName(para1, sendername, sizeof(sendername));
				strmid(SBizzInfo[borse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[borse][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				SBizzInfo[borse][sbTill] = 0;
				PlayerInfo[para1][pPbiskey] = 255;
				OnPropUpdate();
				Atualizar3Dtexts();
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[para1][pPbiskey]][bOwner], true) == 0)
			{
			    new borse = PlayerInfo[para1][pPbiskey];
				BizzInfo[borse][bLocked] = 1;
				BizzInfo[borse][bOwned] = 0;
				GetPlayerName(para1, sendername, sizeof(sendername));
				strmid(BizzInfo[borse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[borse][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				BizzInfo[borse][bTill] = 0;
				PlayerInfo[para1][pPbiskey] = 255;
				OnPropUpdate();
				Atualizar3Dtexts();
			}
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			return 1;
		}
	}*/
	/*if(!strcmp(cmd, "/darvip", true))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1340)
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /darvip [ID/Nome] [Nivel] [Meses]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			new level;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /darvip [ID/Nome] [Nivel] [Meses]");
				return 1;
			}
			level = strval(tmp);
			new tempo;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /darvip [ID/Nome] [Nivel] [Meses]");
				return 1;
			}
			tempo = strval(tmp);
			PlayerInfo[giveplayerid][pVIP] = level;
			format(string, sizeof string, "Voc� deu VIP N�vel %d para %s por %d Mes(es)", level, PlayerName(giveplayerid), tempo);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof string, "Voc� ganhou VIP N�vel %d do admin %s por %d Mes(es)", level, PlayerName(playerid), tempo);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			getdate(year, month, day);
			gettime(hour,minute);
			if(PlayerInfo[giveplayerid][pVIP] > 0)
			{
				for(new i = 0; i < sizeof(VipInfo); i++)
	    		{
	    	    	if(strcmp(PlayerName(giveplayerid),VipInfo[i][vNick],true)==0)
	    	    	{
	    	        	VipInfo[i][vDia] = day;
	    	        	VipInfo[i][vMes] = month;
	    	        	VipInfo[i][vAno] = year;
	    	        	VipInfo[i][vDia2] = day;
	    	        	VipInfo[i][vMes2] = month+tempo;
	    	        	VipInfo[i][vAno2] = year+FixDate(month, tempo);
	    	        	VipInfo[i][vTempo] = tempo;
	    	        	SaveVip();
	    	        	break;
					}
				}
			}
			else
			{
				for(new i = 0; i < sizeof(VipInfo); i++)
		    	{
		    	    if(strcmp("Ninguem",VipInfo[i][vNick],true)==0)
		    	    {
		    	        strmid(VipInfo[i][vNick], PlayerName(giveplayerid), 0, strlen(PlayerName(giveplayerid)), 255);
		    	        VipInfo[i][vDia] = day;
		    	        VipInfo[i][vMes] = month;
		    	        VipInfo[i][vAno] = year;
		    	        VipInfo[i][vDia2] = day;
		    	        VipInfo[i][vMes2] = month+tempo;
		    	        VipInfo[i][vAno2] = year+FixDate(month, tempo);
		    	        VipInfo[i][vTempo] = tempo;
		    	        SaveVip();
		    	        break;
					}
				}
			}
			format(string, sizeof(string), "%s deu vip ao %s n�vel %d por %d mes(es) ( %d/%d/%d - %d:%d)",PlayerName(playerid),PlayerName(giveplayerid),level,tempo,day, month, year,hour, minute);
			VipsLog(string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Voce nao tem permissao para utilizar esse comando!");
		}
		return 1;
	}*/
//-----------------------------------editstat---------------------------------------
	if(strcmp(cmd, "/editar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new editarnome[MAX_PLAYER_NAME];
			new editarnome2[MAX_PLAYER_NAME];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /editar [id] [STATUS] [QUANTIDADE]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
				SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
				SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(1,2)");
				SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 CET |15 Rep�rter |16 L.Carros |17 V.Drogas");
				SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou |24 Skill De Pesca");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    GetPlayerName(playerid,editarnome,sizeof(editarnome));
	    	    GetPlayerName(giveplayerid,editarnome2,sizeof(editarnome2));
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "USE: /editar [id] [STATUS] [QUANTIDADE]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 CET |15 Rep�rter |16 L.Carros |17 V.Drogas");
						SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou |24 Skill De Pesca");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "USE: /editar [id] [STATUS] [QUANTIDADE]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 CET |15 Rep�rter |16 L.Carros |17 V.Drogas");
						SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou |24 Skill De Pesca");
						return 1;
					}
					new quantidade;
					quantidade = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 1337)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1337)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
							return 1;
						}
						//if(giveplayerid == playerid && PlayerInfo[playerid][pAdmin] != 1337)
						//{
							//SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode se editar");
							//return 1;
						//}
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = quantidade;
								format(string, sizeof(string), "O Admin %s Deu level [%d] Para %s", PlayerName(playerid), quantidade, PlayerName(giveplayerid));
								ABroadCast(COLOR_YELLOW, string,1);
								format(string, sizeof(string), "   Voc� setou level %d para o jogador %s", quantidade, PlayerName(giveplayerid));
								ScoreLevel(giveplayerid);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pDeaths] = quantidade;
								format(string, sizeof(string), "   Voc� setou %d vezes que ele morreu %s", quantidade, PlayerName(giveplayerid));
							}
							case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = quantidade;
								format(string, sizeof(string), "   Voc� setou %d de pontos de melhoria para o jogador %s", quantidade, PlayerName(giveplayerid));
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pConnectTime] = quantidade;
								format(string, sizeof(string), "   Voc� setou %d horas jogadas para o jogador %s", quantidade, PlayerName(giveplayerid));
								//format(string, sizeof(string), "   Desabilitado");
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pConta] = quantidade;
								format(string, sizeof(string), "   Voc� setou R$%d no banco do jogador %s", quantidade, PlayerName(giveplayerid));
								format(gstring, 128, "%s usou /editar banco em %s e setou %d", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
								PayLog(gstring);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = quantidade;
								format(string, sizeof(string), "   Voc� setou o celular do jogador %s para %d", PlayerName(giveplayerid), quantidade);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = quantidade;
								format(string, sizeof(string), "   Voc� setou o respeito do jogador %s para %d" ,PlayerName(giveplayerid), quantidade);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPHousekey] = quantidade;
								format(string, sizeof(string), "   Voc� setou a chave de casa pra %d", quantidade);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPbiskey] = quantidade;
								format(string, sizeof(string), "   Voc� setou a chave da empresa %d", quantidade);
							}
							case 10:
							{
							    SendClientMessage(playerid, COLOR_GRAD1, "Desabilitado!");
        						/*PlayerInfo[giveplayerid][pVIP] = quantidade;
								format(string, sizeof(string), "   Voc� setou VIP %d para o jogador", quantidade);
								getdate(year, month, day);
								gettime(hour,minute);
								format(string, sizeof(string), "%s deu vip ao %s n�vel %d ( %d/%d/%d - %d:%d)",editarnome,editarnome2,quantidade,year, month, day,hour, minute);
								VipsLog(string);*/
							}
							case 11:
							{
								format(string, sizeof(string), "   esse status foi retirado", quantidade);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pDetSkill] = quantidade;
								format(string, sizeof(string), "   Voc� setou nivel de detetive para: %d", quantidade);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pLawSkill] = quantidade;
								format(string, sizeof(string), "   Voc� setou nivel de advogado para: %d", quantidade);
							}
							case 14:
							{
								PlayerInfo[giveplayerid][pMechSkill] = quantidade;
								format(string, sizeof(string), "   Voc� setou nivel de CET para: %d", quantidade);
							}
							case 15:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = quantidade;
								format(string, sizeof(string), "   The Player News Reporter Skill Set To %d", quantidade);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pDrogasSkill] = quantidade;
								format(string, sizeof(string), "   Voc� setou a Skill de Drogas para: %d", quantidade);
							}
							case 18:
							{
								PlayerInfo[giveplayerid][pSexSkill] = quantidade;
								format(string, sizeof(string), "  Voc� setou a Skill de P.Sexo para: %d", quantidade);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = quantidade;
								format(string, sizeof(string), "   The Player Box Skill Set To %d", quantidade);
							}
							case 21:
							{
								PlayerInfo[giveplayerid][pKills] = quantidade;
								format(string, sizeof(string), "   Voc� setou %d vezes que ele matou algu�m", quantidade);
							}
							case 22:
							{
								PlayerInfo[giveplayerid][pContractTime] = quantidade;
								format(string, sizeof(string), "   Voc� setou o tempo de contrato para: %d", quantidade);
							}
							case 23:
							{
							}
							case 24:
							{
								PlayerInfo[giveplayerid][pFishSkill] = quantidade;
								format(string, sizeof(string), "   Voc� setou a Skill de Pescar para: %d", quantidade);
							}
							case 25:
							{
                                if(PlayerInfo[playerid][pAdmin] >= 1338)
								{
                                    if(PlayerInfo[giveplayerid][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1342)
									{
										SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode editar avisos de um Admin Dono !");
										format(string, sizeof(string), "O Admin %s tentou editar seus avisos para %d", PlayerName(playerid), quantidade);
										SendClientMessage(giveplayerid, COLOR_AZULBB, string);
									}
									PlayerInfo[giveplayerid][pWarns] = quantidade;
									format(gstring, sizeof(gstring), "Voc� setou os avisos do jogador para: %d", quantidade);
	                                WarnLog(gstring);
	                                if(admtrampando[playerid] == 1 && admtrampando[playerid] == 0)
                        			{
								 		format(string, sizeof(string), "ADMCMD: %s Setou para %s %d avisos", PlayerName(playerid), PlayerName(giveplayerid), quantidade);
										ABroadCast(COLOR_LIGHTRED, string,1);
	                                }
          						}
								else
								{
								SendClientMessage(playerid, COR_GRO, "Vish, voc� n�o pode editar aviso mano!");
								}
							}
							case 26:
							{
								PlayerInfo[giveplayerid][pCreditos] = quantidade;
								format(gstring, sizeof(gstring), "Voc� setou os cr�ditos do jogador para: %d", quantidade);
							}
							case 27:
							{
								PlayerInfo[giveplayerid][pMats] = quantidade;
								format(gstring, sizeof(gstring), "Voc� setou os materiais do jogador para: %d", quantidade);
							}
							default:
							{
								format(string, sizeof(string), "   Codigo Invalido", quantidade);
							}

						}
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
					}
				}//not valid id
			}//not connected
		}
		return 1;
	}
//----------------------------------[SETINT]-----------------------------------------------
	if(strcmp(cmd, "/setarint", true) == 0)
	{
  		if(PlayerInfo[playerid][pJailed] != 0)
		{
			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode trocar o interior agora!");
			return 1;
		}
		if(PlayerInfo[playerid][pAdmin] < 1)
		{
			SendClientMessage(playerid,COLOR_GREY," Voc� n�o � um ADM!");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
  		new para1 = strval(tmp);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "USE: /setarint [id] [interiorid]");
			return 1;
		}
	    if(IsPlayerConnected(para1))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setarint [id] [interiorid]");
				return 1;
			}
			new intid;
			intid = strval(tmp);
			SetPlayerInterior(para1,intid);
			PlayerInfo[playerid][pInt] = intid;
			format(string, sizeof(string), "Voc� setou o interior de %s Para:[%d].",PlayerName(playerid), intid);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			format(string, sizeof(string), "O Admin: %s setou seu interior para [%d]",giveplayer, intid);
			SendClientMessage(para1, COLOR_LIGHTRED, string);
		}
		return 1;
	}
//----------------------------------[INVITE]------------------------------------------------
	if(strcmp(cmd, "/convidar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /convidar [playerid/Parte-do-Nick]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] == 5)
			{
			    new lolz = GetPlayerOrg(playerid);
	    		if(TemVaga(lolz) == 0)
	    		{
					SendClientMessage(playerid, COLOR_GRAD1, "N�o h� mais vagas na lista use /demetir primeiro.");
					return 1;
	    		}
			    if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Este player j� participa de Org/Gang/Mafia.");
						return 1;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "| %s te convidou para entrar para: %s (digite /aceitar convite) para aceitar.", PlayerName(playerid), NomeORG(playerid));
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "| Voc� convidou %s para sua organiza��o: %s.", giveplayer,NomeORG(playerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						InviteOffer[para1] = playerid;
						InviteJob[para1] = lolz;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Somente l�deres podem usar este comando !");
			}
		}
		return 1;
	}
//----------------------------------[UNINVITE]------------------------------------------------
	if(strcmp(cmd, "/Demitir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "/Demitir [ID/NICK] [Motivo]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] == 5)
			{
			    new lolz = GetPlayerOrg(playerid);
			    if(PlayerInfo[para1][pMembro] != lolz)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode demitir quem n�o � da sua org.");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMembro] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /Demitir [ID/NICK] [Motivo]");
								return 1;
							}
							DemitirInfoOrg(PlayerName(para1));
							format(string, sizeof(string), "* Voc� foi demitido pelo l�der %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* Agora voc� � um civil novamente.");
				            gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMembro] = 0;
							PlayerInfo[para1][pCargo] = 0;
							if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 293; } else { PlayerInfo[para1][pSkin] = 12; }
            				SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
							MedicBill[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), "Voc� demitiu %s, Motivo: %s.", giveplayer, result);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							return 1;
						}
					}
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o � um l�der!");
		}
		return 1;
	}
//----------------------------------[MAKEADMIN]------------------------------------------------
    /*if(strcmp(cmd, "/darsocio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darsocio [ ID ] [LEVEL ( 1 ~ 3000 )]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pVip] = level;
						printf("ADMIN CMD: %s promoveu %s para level %d de socio.", sendername, giveplayer, level);
						format(string, sizeof(string), "   Voc� foi promovido para level %d de socio - Por %s", level, sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   Voc� promoveu o(a) %s Para o level %d de Socio.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/retirarsocio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darsocio [id]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pSocio] = 0;
						format(string, sizeof(string), "Seu Socio Foi retirado pelo adm %s", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Voc� retirou o Socio de %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}*/
//----------------------------------{Numero Profissoes}-----------------------------------------------
	if(strcmp(cmd, "/orgs", true) == 0 || strcmp(cmd, "/organizacoes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				SendClientMessage(playerid, COR_PM, "| 18�BPM/M - 1");
				SendClientMessage(playerid, COR_PR, "| ROTA - 2");
				SendClientMessage(playerid, COR_EXE, "| Exercito - 3");
				SendClientMessage(playerid, COR_SAMU, "| Medico - 4");
				SendClientMessage(playerid, COR_TCP, "| Terceiro Comando Puro - 5");
				SendClientMessage(playerid, COR_PF, "| Gavi�es da Fiel - 6");
				SendClientMessage(playerid, COR_PRE, "| Prefeito - 7");
				SendClientMessage(playerid, COR_HITMAN, "| Hitmans - 8");
				SendClientMessage(playerid, COR_REP, "| Reporter - 9");
				SendClientMessage(playerid, COR_TAXI, "| Taxista - 10");
				SendClientMessage(playerid, COR_PM, "| 1�CIA - 11");
				SendClientMessage(playerid, COR_COSA, "| M�fia Cosa Nostra - 12");
				SendClientMessage(playerid, COR_YAK, "| M�fia Yakuza - 13");
				SendClientMessage(playerid, COR_GRO, "| Groove Street - 14");
				SendClientMessage(playerid, COLOR_GREEN, "| Mancha Verde - 15");
				SendClientMessage(playerid, COR_PM, "| 2�CIA - 16");
				SendClientMessage(playerid, 0x9900CCF6, "| Ballas - 17");
				SendClientMessage(playerid, COR_VAGOS, "| Los Vagos - 18");
				SendClientMessage(playerid, 0xF6000000, "| Comando Vermelho - 19");
				SendClientMessage(playerid, 0xCCFF99FF, "| Tugas - 20");
				SendClientMessage(playerid, COR_SONS, "| Sons Of Anarchy - 21");
                SendClientMessage(playerid, 0xFF6600AA, "| Bombeiros - 22");
                SendClientMessage(playerid, COR_MAYANS, "| Mayans - 23");
			}
		}
		return 1;
	}
//----------------------------------{Numero Emprego}-----------------------------------------------
	if(strcmp(cmd, "/empregos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1341)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "| Detetive - 1");
				SendClientMessage(playerid, 0x33FF00FF, "| Advogado - 2");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "| Prostituta - 3");
				SendClientMessage(playerid, 0x33FF00FF, "| Traficante - 4");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "| CET - 5");
				SendClientMessage(playerid, 0x33FF00FF, "| Seguran�a - 6");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "| Vendedor de Armas - 7");
				SendClientMessage(playerid, 0x33FF00FF, "| Boxer - 8");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "| Motorista de Onibus - 9");
				SendClientMessage(playerid, 0x33FF00FF, "| Mendigo - 10");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "| Caminhoneiro - 11");
                SendClientMessage(playerid, 0x33FF00FF, "| Pizza Boy - 12");
			}
		}
		return 1;
	}
//-----------------------------------{ IP }-----------------------------------------------------
	if(strcmp(cmd, "/ip", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 2)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Use: /ip [ID]");
				SendClientMessage(playerid, COLOR_YELLOW, "Comando Para Ver o Ip Do Jogador.");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				new ip[128];
				GetPlayerIp(giveplayerid,ip,128);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(gstring, sizeof(gstring), "-| %s's IP: %s |-", giveplayer,ip);
				SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse n�o � um jogador Ativo.");
			}
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem permiss�o para usar esse comando.");
	    	return 1;
  		}
	    return 1;
	}
//----------------------/unbanip--------------
	if(strcmp(cmd,"/desbanip",true)==0 || strcmp(cmd,"/unbanip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /desbanip [IP DO JOGADOR]");
		        return 1;
   			}
			format(gstring, 128, "IPsBanidos/%s.ini", tmp);
			if(!dini_Exists(gstring))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"IP n�o encontrado na base de dados");
		        return 1;
			}
			else
			{
			    fremove(gstring);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, 128, "ADMIN CMD: %s desbaniu o IP %s", sendername,tmp);
				ABroadCast(COR_VAGOS,string,1);
		        return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/nomedesban",true)==0 || strcmp(cmd,"/unbannome",true)==0 || strcmp(cmd,"/desbannome",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"USE: /nomedesban [NOME DO JOGADOR]");
		        return 1;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), "Banidos/%s.ini",tmp);
			if(!dini_Exists(arquivo))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"Nick n�o encontrado na base de dados");
		        return 1;
			}
			else
			{
   				dini_Remove(arquivo);
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
				format(string, 128, "ADMIN CMD: %s desbaniu o Nick %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
			}
			else
			{
				format(string, 128, "ADMIN CMD: %s desbaniu o Nick %s", sendername,tmp);
				ABroadCast(COR_VAGOS,string,1);
			}
		}
		return 1;
	}
//----------------------------------[MAKEIRCADMIN]----------------------------------------------
    if(strcmp(cmd, "/makeircadmin", true) == 0 || strcmp(cmd, "/daradminirc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradminirc [id] [Numero do canal]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /daradminirc [id] [Numero do canal]");
				return 1;
			}
			new channel = strval(tmp);
			if(channel > 10 || channel < 0) { SendClientMessage(playerid, COLOR_GREY, " Canal IRC tem que ser entre 0 e 10!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� deu admin IRC para %s no canal %d.", giveplayer, channel);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Admin %s te deu admin IRC do canal %d.", sendername, channel);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s", giveplayer);
						switch(channel)
						{
						    case 1:
						    {
						        strmid(IRCInfo[0][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[0][iNeedPass] = 0; IRCInfo[0][iLock] = 0;
						    }
						    case 2:
						    {
						        strmid(IRCInfo[1][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[1][iNeedPass] = 0; IRCInfo[1][iLock] = 0;
						    }
						    case 3:
						    {
						        strmid(IRCInfo[2][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[2][iNeedPass] = 0; IRCInfo[2][iLock] = 0;
						    }
						    case 4:
						    {
						        strmid(IRCInfo[3][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[3][iNeedPass] = 0; IRCInfo[3][iLock] = 0;
						    }
						    case 5:
						    {
						        strmid(IRCInfo[4][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[4][iNeedPass] = 0; IRCInfo[4][iLock] = 0;
						    }
						    case 6:
						    {
						        strmid(IRCInfo[5][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[5][iNeedPass] = 0; IRCInfo[5][iLock] = 0;
						    }
						    case 7:
						    {
						        strmid(IRCInfo[6][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[6][iNeedPass] = 0; IRCInfo[6][iLock] = 0;
						    }
						    case 8:
						    {
						        strmid(IRCInfo[7][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[7][iNeedPass] = 0; IRCInfo[7][iLock] = 0;
						    }
						    case 9:
						    {
						        strmid(IRCInfo[8][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[8][iNeedPass] = 0; IRCInfo[8][iLock] = 0;
						    }
						    case 10:
						    {
						        strmid(IRCInfo[9][iAdmin], string, 0, strlen(string), 255);
						        IRCInfo[9][iNeedPass] = 0; IRCInfo[9][iLock] = 0;
						    }
						}
						SaveIRC();
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� autorizado a usar esse comando!");
			    return 1;
			}
		}
		return 1;
	}
//----------------------------------[MAKELider]------------------------------------------------
   if(strcmp(cmd, "/liderex", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1340)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /lideerex [id] [Numero(1-23)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 23 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "Empregos de 0 a 23"); return 1; }
			if(PlayerInfo[para1][pLider] != 0 && PlayerInfo[para1][pMembro] != 0)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Este player j� participa de uma organiza��o!");
			    return 1;
			}
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					if(level == 1) { PlayerInfo[para1][pSkin] = 265; }//18�BPM/M
					else if(level == 2)	{ PlayerInfo[para1][pSkin] = 285; }//B.O.P.E
					else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Ex�rcito
					else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
					else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
					else if(level == 6) { PlayerInfo[para1][pSkin] = 29; }//Gavi�es
					else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
					else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
					else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Rep�rters
					else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
					else if(level == 11) { PlayerInfo[para1][pSkin] = 286; }//Policia Federal
					else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//M�fia Cosa Nostra
					else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//M�fia Yakuza
					else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                    else if(level == 15) { PlayerInfo[para1][pSkin] = 2; }//ALQaeda
					else if(level == 16) { PlayerInfo[para1][pSkin] = 186; }//Policia Rodoviaria
                    else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                    else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                    else if(level == 19) { PlayerInfo[para1][pSkin] = 19; }//CV
                    else if(level == 20) { PlayerInfo[para1][pSkin] = 143; }//PCC
                    else if(level == 21) { PlayerInfo[para1][pSkin] = 248; }//Sons Of Anarchy
                    else if(level == 22) { PlayerInfo[para1][pSkin] = 279; }//Bombeiros
                    else if(level == 23) {PlayerInfo[para1][pSkin] = 296; }//Mayans
					GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pLider] = level;
					format(string, sizeof(string), "Voc� pegou l�der na Organiza��o: %s", NomeORG(playerid));
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    //MedicBill[para1] = 0;
					gTeam[para1] = 11;
				    PlayerInfo[para1][pTeam] = 11;
				    PlayerInfo[para1][pCargo] = 6;
				    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
				    SetPlayerSpawn(para1);
				}
			}//not connected
		}
		return 1;
	}
	if(strcmp(cmd, "/pegarlider", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1340)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /pegarlider [Numero(1-23)]");
				return 1;
			}
			new level;
			level = strval(tmp);
			if(level > 23 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "Empregos de 0 a 23"); return 1; }
			if(PlayerInfo[playerid][pLider] != 0 && PlayerInfo[playerid][pMembro] != 0)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Este player j� participa de uma organiza��o!");
			    return 1;
			}
		    if(IsPlayerConnected(playerid))
		    {
		        if(playerid != INVALID_PLAYER_ID)
		        {
					if(level == 1) { PlayerInfo[playerid][pSkin] = 265; }//18�BPM/M
					else if(level == 2)	{ PlayerInfo[playerid][pSkin] = 285; }//B.O.P.E
					else if(level == 3) { PlayerInfo[playerid][pSkin] = 287; }//Ex�rcito
					else if(level == 4) { PlayerInfo[playerid][pSkin] = 70; }//Fire/Ambulance
					else if(level == 5) { PlayerInfo[playerid][pSkin] = 115; }//Varrios Los Aztecas
					else if(level == 6) { PlayerInfo[playerid][pSkin] = 29; }//Gavi�es
					else if(level == 7) { PlayerInfo[playerid][pSkin] = 147; }//Prefeito
					else if(level == 8) { PlayerInfo[playerid][pSkin] = 294; }//Hitmans
					else if(level == 9) { PlayerInfo[playerid][pSkin] = 227; }//Rep�rters
					else if(level == 10) { PlayerInfo[playerid][pSkin] = 61; }//Taxistas
					else if(level == 11) { PlayerInfo[playerid][pSkin] = 286; }//Policia Federal
					else if(level == 12) { PlayerInfo[playerid][pSkin] = 113; }//M�fia Cosa Nostra
					else if(level == 13) { PlayerInfo[playerid][pSkin] = 120; }//M�fia Yakuza
					else if(level == 14) { PlayerInfo[playerid][pSkin] = 270; }//Groove
                    else if(level == 15) { PlayerInfo[playerid][pSkin] = 2; }//ALQaeda
					else if(level == 16) { PlayerInfo[playerid][pSkin] = 186; }//Policia Rodoviaria
                    else if(level == 17) { PlayerInfo[playerid][pSkin] = 104; }//Ballas
                    else if(level == 18) { PlayerInfo[playerid][pSkin] = 108; }//Vagos
                    else if(level == 19) { PlayerInfo[playerid][pSkin] = 19; }//CV
                    else if(level == 20) { PlayerInfo[playerid][pSkin] = 143; }//PCC
                    else if(level == 21) { PlayerInfo[playerid][pSkin] = 248; }//Sons Of Anarchy
                    else if(level == 22) { PlayerInfo[playerid][pSkin] = 279; }//Bombeiros
                    else if(level == 23) { PlayerInfo[playerid][pSkin] = 296; }//Mayans
					PlayerInfo[playerid][pLider] = level;
					format(string, sizeof(string), "Voc� pegou l�der na Organiza��o: %s", NomeORG(playerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    MedicBill[playerid] = 0;
					gTeam[playerid] = 11;
				    PlayerInfo[playerid][pTeam] = 11;
				    PlayerInfo[playerid][pCargo] = 6;
				    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
				    SetPlayerSpawn(playerid);
				}
			}//not connected
		}
		return 1;
	}
	if(strcmp(cmd, "/lider", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /lider [id] [Numero(1-23)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level == 0) { SendClientMessage(playerid, COLOR_GREY, "Para tirar o lider de uma organiza��o voc� deve usar /limparlider"); return 1; }
			if(level > 23 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Empregos de 1 a 23"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if(PlayerInfo[para1][pLider] != 0 || PlayerInfo[para1][pMembro] != 0)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   Este player j� participa de uma organiza��o!");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(strcmp(InfoOrg[level][Lider],"Ninguem",true)==0)
						{
							ConviteInfoOrg(PlayerName(para1), level, 6);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "J� tem l�der nessa ORG, use /limparlider antes de colocar outro lider");
						    return 1;
						}
						if(level == 1) { PlayerInfo[para1][pSkin] = 265; }//18�BPM
						else if(level == 2)	{ PlayerInfo[para1][pSkin] = 285; }//B.O.P.E
						else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Ex�rcito
						else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
						else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
						else if(level == 6) { PlayerInfo[para1][pSkin] = 29; }//Gavi�es
						else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
						else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
						else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Rep�rters
						else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
						else if(level == 11) { PlayerInfo[para1][pSkin] = 286; }//Policia Federal
						else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//M�fia Cosa Nostra
						else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//M�fia Yakuza
						else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                        else if(level == 15) { PlayerInfo[para1][pSkin] = 2; }//ALQaeda
						else if(level == 16) { PlayerInfo[para1][pSkin] = 186; }//Policia Rodoviaria
                        else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                        else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                        else if(level == 19) { PlayerInfo[para1][pSkin] = 19; }//CV
                        else if(level == 20) { PlayerInfo[para1][pSkin] = 143; }//PCC
                        else if(level == 21) { PlayerInfo[para1][pSkin] = 248; }//Sons Of Anarchy
                        else if(level == 22) { PlayerInfo[para1][pSkin] = 279; }//Bombeiros
                        else if(level == 23) {PlayerInfo[para1][pSkin] = 296; }//Mayans
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLider] = level;
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "   Voc� foi promovido a lider pelo admin %s", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						else
						{
							format(string, sizeof(string), "   Voc� foi promovido a lider pelo admin %s", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						SendClientMessage(para1, COLOR_LIGHTBLUE,"   Promovido Com sucesso !!");
						format(string, sizeof(string), "   Voc� promoveu %s a Lider.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "ADMIN: %s deu l�der da org:[%s] para %s.", sendername, NomeORG(level), giveplayer);
                        LideresLog(string);
                        MedicBill[para1] = 0;
						gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    PlayerInfo[para1][pCargo] = 6;
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    SetPlayerSpawn(para1);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /forceskin [id]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[para1][pMembro] < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Este jogador nao esta em um Emprego / Familia");
				            return 1;
				        }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "* Voc� foi for�ado a mudar o skin pelo Admin %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						else
						{
							format(string, sizeof(string), "* Voc� foi for�ado a mudar o skin pelo Admin %s.", sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						format(string, sizeof(string), "* Voc� for�ou o(a) %s Para muda seu skin.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(PlayerInfo[para1][pMembro] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
				        else if(PlayerInfo[para1][pMembro] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
				        else if(PlayerInfo[para1][pMembro] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
				        else if(PlayerInfo[para1][pMembro] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
				        else if(PlayerInfo[para1][pMembro] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
				        else if(PlayerInfo[para1][pMembro] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 280; }
				        else if(PlayerInfo[para1][pMembro] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
				        else if(PlayerInfo[para1][pMembro] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
				        else { return 1; }
                        SetPlayerInterior(para1,0);
						new rand = random(sizeof(gInviteSpawns));
						SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(para1, 0);
					    SelectChar[para1] = 255;
					    SelectCharID[para1] = PlayerInfo[para1][pMembro];
					    SelectCharPlace[para1] = 1;
					    PlayerInfo[para1][pSkin] = ChosenSkin[para1];
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'Proximo' para selecionar o skin de sua vontade.");
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Se Quizer utilizar esta skin ->, Digite 'Confirma'.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[Promover]------------------------------------------------
	if(strcmp(cmd, "/promover", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Use:  /Promover [ID/Nick] [Cargos (1-5)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "   Cargos de 1 a 5, Cargo 5 � Sub-L�der!"); return 1; }
			if (PlayerInfo[playerid][pLider] > 0)
			{
			    if(IsPlayerConnected(para1))
			    {
    				for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(PlayerInfo[para1][pMembro] == PlayerInfo[playerid][pLider])
				  		{
					    	if(para1 != INVALID_PLAYER_ID)
					      	{
								GetPlayerName(para1, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[para1][pCargo] = level;
								format(string, sizeof(string), "   Voc� foi promovido pelo l�der %s", sendername);
								SendClientMessage(para1, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "   Voc� promoveu %s a cargo %d.", giveplayer,level);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								new org = PlayerInfo[playerid][pLider];
								if(level == 5)
								{
						    		if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
									{
							    		DemitirInfoOrg(giveplayer);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
									else
									{
							   			strmid(string, InfoOrg[org][SubLider], 0, strlen(InfoOrg[org][SubLider]), 255);
							    		DemitirInfoOrg(giveplayer);
							    		DemitirInfoOrg(InfoOrg[org][SubLider]);
							    		ConviteInfoOrg(string, org, 4);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
								}
								if(strcmp(InfoOrg[org][SubLider],giveplayer,true)==0)
								{
		    						if(level < 5)
									{
										DemitirInfoOrg(giveplayer);
								    	ConviteInfoOrg(giveplayer, org, level);
									}
								}
								return 1;
							}
							if(PlayerInfo[para1][pMembro] != PlayerInfo[playerid][pLider])
					  		{
					  		    SendClientMessage(playerid, COLOR_GREY, "N�o pode promover quem n�o � da sua org.");
					  		    return 1;
							}
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o � um l�der !");
			}
		}
		return 1;
	}
//----------------------------------[setteam]------------------------------------------------
	if(strcmp(cmd, "/levarhq", true) == 0 || strcmp(cmd, "/settime", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /levarhq [id] [team 1(civ) - 2(cop)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pTeam] = level;
						gTeam[para1] = level;
						SetPlayerWeapons(para1);
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						printf("|ADMIN|: %s foi trocado %s pro time %d.", sendername, giveplayer, level);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "   Voc� foi setado a equipe %d", level);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						else
						{
							format(string, sizeof(string), "   Voc� foi spawnado %d por %s", level, sendername);
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						}
						format(string, sizeof(string), "   Voc� levou %s devolta a sua hq %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
//Pedir Contas
	if(!strcmp("/pedircontas", cmdtext, true))
	{
		if(PlayerInfo[playerid][pMembro] == 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Voc� n�o faz parte de nemhuma organiza��o!");
	   		return 1;
    	}
    	DemitirInfoOrg(PlayerName(playerid));
		gTeam[playerid] = 3;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pMembro] = 0;
		PlayerInfo[playerid][pLider] = 0;
		PlayerInfo[playerid][pCargo] = 0;
		PlayerInfo[playerid][pSpawn] = 0;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 7; } else { PlayerInfo[playerid][pSkin] = 12; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		MedicBill[playerid] = 0;
		SpawnPlayer(playerid);
		MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� pediu as contas, agora voc� � um Civil novamente!");
		return 1;
	}
	if(!strcmp("/contaslider", cmdtext, true))
	{
		if(PlayerInfo[playerid][pLider] == 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Voc� n�o � l�der de nenhuma organiza��o!");
	   		return 1;
    	}
		format(string, sizeof(string), "PLAYER: %s pediu contas de lider da org:[%s]",PlayerName(playerid), NomeORG(GetPlayerOrg(playerid)));
		LideresLog(string);
    	DemitirInfoOrg(PlayerName(playerid));
		gTeam[playerid] = 3;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pMembro] = 0;
		PlayerInfo[playerid][pLider] = 0;
		PlayerInfo[playerid][pCargo] = 0;
		PlayerInfo[playerid][pSpawn] = 0;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 7; } else { PlayerInfo[playerid][pSkin] = 12; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		MedicBill[playerid] = 0;
		SpawnPlayer(playerid);
		MedicBill[playerid] = 0;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Voc� pediu as contas, agora voc� � um Civil novamente!");
		return 1;
	}
//Membros
	if(strcmp(cmd,"/membros",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new teamnumber;
			if (PlayerInfo[playerid][pLider] != 0) teamnumber = PlayerInfo[playerid][pLider];
			else if (PlayerInfo[playerid][pMembro] != 0) teamnumber = PlayerInfo[playerid][pMembro];
			else
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Voc� n�o � Membro de nenhuma Equipe!");
				return 1;
			}
	    	SendClientMessage(playerid,COLOR_WHITE,"|____________| Membros Online |____________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if (IsPlayerConnected(i))
				{
					GetPlayerName(i,sendername,sizeof(sendername));
					format(string,sizeof(string),"");
					if (PlayerInfo[i][pLider] == teamnumber) format(string,sizeof(string),"%s, Cargo: [LIDER]",sendername);
					else if (PlayerInfo[i][pMembro] == teamnumber) format(string,sizeof(string),"%s, Cargo: %d.",sendername,PlayerInfo[i][pCargo]);
					if (strlen(string) > 1) SendClientMessage(playerid,GetPlayerColor(playerid),string);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/retiraraviso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /retiraraviso [playerid/Parte-do-Nick] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /retiraraviso [playerid/Parte-do-Nick] [motivo]");
							return 1;
						}
						PlayerInfo[giveplayerid][pWarns] -= 1;
						format(string, sizeof(string), "Voc� retirou um aviso sobre %s, Motivo: %s", giveplayer, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "ADMCMD: %s retirou 1 aviso de %s, Motivo: %s", sendername, giveplayer, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						return 1;
					}
				}//not connected
			}
			else
			{
				format(string, sizeof(string), "   %d n�o � um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/avisados", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
           new nome[24];
           GetPlayerName(playerid, nome, sizeof nome);
   		   if(PlayerInfo[playerid][pAdmin] < 1)
	   	   {
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o � um Admin !");
				return 1;
	       }
           {
                SendClientMessage(playerid, COR_ADMIN, " Brasil Hard Life Avisados Online:");
			    for(new i = 0; i < MAX_PLAYERS; i++)
		     	{
			    if(IsPlayerConnected(i))
		    	{
		    	     if(PlayerInfo[i][pWarns] > 0)
		    	     {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, "Player: %s, com %d aviso(s). ", sendername, PlayerInfo[i][pWarns]);
						SendClientMessage(playerid, COLOR_WHITE, string);
            	     }
             	}
		   }
     	}
	    }
     	return 1;
	}
	if(strcmp(cmd, "/avisar", true) == 0 || strcmp(cmd, "/av", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Admin!");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/av)isar [texto]");
				return 1;
			}
   			if(TentouDivulgar(result))
			{
  				if(cdivulgar[playerid] >= 4)
  				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
    				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
    				Kick(playerid);
  				}
  				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
  				format(string, 128, "ADMIN AVISO: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
        		cdivulgar[playerid] += 1;
        		return 1;
			}
			SendClientMessageToAll(COLOR_DBLUE, "|_B_S_C_| Aviso Da Administra��o |_B_S_C_|");
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
				format(string, sizeof(string), "Admin %s: %s", sendername, result);
				SendClientMessageToAll(COR_GRO, string);
			}
			else
			{
				format(string, sizeof(string), "Admin %s: %s", sendername, result);
				SendClientMessageToAll(COR_GRO, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/resetarchat", true) == 0 || strcmp(cmd, "/limparchat", true) == 0)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] < 1)
			{
		        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um admin!");
		    	return 1;
		    }
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i)) ClearChatbox(i, 100);
			}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{ format(string, sizeof(string), "~b~%s ~n~~w~Resetou o Chat!",playername); }
			else
			{ format(string, sizeof(string), "~b~%s ~n~~w~Resetou o Chat!",playername); }
			GameTextForAll(string, 5000, 1);
		    return 1;
		}
		return 1;
	}
//----------------------------------[LIDER CHAT]---------------------------------------------
	if(strcmp(cmd, "/liderchat", true) == 0 || strcmp(cmd, "/lchat", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/l)chat [L�der chat]");
				return 1;
			}
			if(TentouDivulgar(result))
			{
  				if(cdivulgar[playerid] >= 4)
  				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
    				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
    				Kick(playerid);
  				}
  				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
  				format(string, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
        		cdivulgar[playerid] += 1;
        		return 1;
			}
			if (PlayerInfo[playerid][pLider] > 0)
			{
				format(string, sizeof(string), "[L�der] %s: %s", PlayerName(playerid), result);
				LBroadCast(COLOR_YELLOW, string, 1);
			}
			if (PlayerInfo[playerid][pCargo] == 5)
			{
				format(string, sizeof(string), "[Sub-L�der] %s: %s", PlayerName(playerid), result);
				LBroadCast(COLOR_YELLOW, string, 1);
			}
			format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] *%d L�der %s: %s", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerInfo[playerid][pLider], sendername, result);
			//LChatLog(string);
		}
		return 1;
	}
//----------------------------------[Wisper]-----------------------------------------------
	if(strcmp(cmd, "/particular", true) == 0 || strcmp(cmd, "/par", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
		if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce n�o � um admin!");
	            return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[giveplayerid][pAdmin] < 1)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce n�o � um admin !");
	            return 1;
	        }
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: (/par)ticular [id] [texto]");
						return 1;
					}
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
					{
						format(string, sizeof(string), "%s(ID: %d) particular: %s", sendername, playerid, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					else
					{
						format(string, sizeof(string), "%s(ID: %d) particular: %s", sendername, playerid, (result));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					}
					print(string);
					format(string, sizeof(string), "PM enviada para %s(ID: %d).", giveplayer, giveplayerid);
					SendClientMessage(playerid,  COLOR_YELLOW, string);
					format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] PM: %s para %s: %s.", v[2], v[1], v[0], v[3], v[4], v[5] , PlayerName(playerid), PlayerName(giveplayerid), (result));
					AChatLog(string);
					return 1;
				}
			}
			else
			{
					SendClientMessage(playerid, COLOR_GRAD1, "   Esse jogador est� off-line.");
			}
		}
	 	return 1;
	}
//----------------------------------[GOTO]-----------------------------------------------
	if(strcmp(cmd, "/ls", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1539.6094,-1694.4749,13.5469); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1539.6094,-1694.4749,13.5469);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/esconderijo", true) == 0 || strcmp(cmd, "/irin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				else
				{
					SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� Foi Teleportado!");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}

	if(strcmp(cmdtext,"/pc",true) ==0)
	{
	gasolina(playerid);
	return 1;
	}
	if(strcmp(cmd, "/onibus", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1759.2711,-1849.1093,13.5781); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1759.2711,-1849.1093,13.5781);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext,"/ligarpc",true) ==0)
	{
	SetTimer("gasolina", 70000, 1);
	SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Ativado!");
	return 1;
	}
	if(strcmp(cmdtext,"/desligarpc",true) ==0)
	{
	SetTimer("gasolina", 9000000000000, 0);
	SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Desativado!");
	return 1;
	}
	if(strcmp(cmd, "/lv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1417.0,-295.8,14.1); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -1417.0,-295.8,14.1);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entrarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /entrarcarro [carro id]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ircarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /ircarro [carro id]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_GRAD1, "   Local Marcado Para o Teleporte");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/irmark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SetPlayerVirtualWorld(playerid, world);
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado para onde voc� marcou!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/irstad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aviao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
//--------------------------------=[IR]=------------------------------------------------------
	if(strcmp(cmd, "/ir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ir [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			new para1;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			para1 = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340  && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
							return 1;
						}
						if(PlayerInfo[plo][pAdmin] >= 1342 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode ir at� um Admin Dono !");
							return 1;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,PlayerInfo[plo][pInt]);
							PlayerInfo[playerid][pInt] = PlayerInfo[plo][pInt];
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(PlayerInfo[plo][pInt] == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && PlayerInfo[plo][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(playerid, world);
						SendClientMessage(playerid, COR_GRO, "Voc� foi teletransportado pelo Admin !");
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
						    format(string, sizeof(string), "O Admin %s Foi At� %s", playername,plname);
						}
						else
						{
							format(string, sizeof(string), "O Admin %s Foi At� %s", playername,plname);
						}
						SendClientMessage(para1, COR_GRO, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Esse n�o � um player ativo.");
			}
		}
		return 1;
	}
//Spawn Carros
	if(!strcmp("/Destruircarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = Checarveiculo(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   N�o h� nenhum carro nesse raio!");
				}
				case 1:
				{
				    if(result < CAR_AMOUNT)
				    {
				    	SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode destruir ve�culos criados");
				    	return 1;
				    }
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
					DestroyVehicle(result);
				    format(string, sizeof(string), "Voc� destruiu o ve�culo ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
				    if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "|ADMIN|: Carro ID:[%d] foi destruido Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "|ADMIN|: Carro ID:[%d] foi destruido Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/respawnid", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = Checarveiculo(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   N�o h� nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Voc� deu respawn no carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi respawnado Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: Carro ID:[%d] foi respawnado Por: %s", result, name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					SetVehicleToRespawn(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/abastecerid", cmdtext, true) || !strcmp("/acarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1342)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = Checarveiculo(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   N�o h� nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
			    	format(string, sizeof(string), "Voc� abasteceu o carro ID:|%d|", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: %s Abasteceu seu carro.", name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: %s Abasteceu seu carro.", name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					Gas[result] = 100;
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/rcarro", cmdtext, true) || !strcmp("/repararid", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 1342)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = Checarveiculo(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   N�o h� nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Voc� reparou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				    {
						format(string, sizeof(string), "AdmAviso: %s Reparou seu carro.", name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
					else
					{
						format(string, sizeof(string), "AdmAviso: %s Reparou seu carro.", name);
						ABroadCast(COLOR_YELLOW,string,1);
					}
	    			RepairVehicle(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/resetarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 4 )
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			    return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
   				RemovePlayerFromVehicle(playerid);
			    SendClientMessage(playerid, COLOR_GREY, "Veiculo setado para o local de spawn!");
   			}
		}
		return 1;
	}
    if(strcmp(cmd, "/respawncarros", true) == 0 || strcmp(cmd, "/rc", true) == 0 || strcmp(cmd, "/rcarros", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340  && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
   			GetPlayerName(playerid, playername, sizeof(playername));
   			if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
			{
   				format(string, sizeof(string), "[] Todos os carros foram para seus locais de inicio. By: %s.", playername);
			}
			else
			{
   				format(string, sizeof(string), "[] Todos os carros foram para seus locais de inicio. By: %s.", playername);
			}
			SendClientMessageToAll(COLOR_RCARRO,string);
			new bool:unwanted[CAR_AMOUNT];
			for(new player=0; player<MAX_PLAYERS; player++)
     		{
            	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car = 1; car <= CAR_AMOUNT; car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
		}
		return 1;
	}
//Mascara
    /*if(strcmp(cmd, "/maskon", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pMask] == 0)
	   	 	{
	   		     SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o tem mascara");
	   		     return 1;
	   		}
	   		if(PlayerInfo[playerid][pAdmin] < 3000)
	    	{
	       		SendClientMessage(playerid, COLOR_GRAD1, "  Voc� deve ser admin master para usar.");
	        	return 1;
	    	}
			for(new i = 0; i < MAX_PLAYERS; i++)
   			{
   		    	if(IsPlayerConnected(i))
   		    	{
		   			ShowPlayerNameTagForPlayer(i, playerid, 0);
				}
			}
			PlayerInfo[playerid][pMaskuse] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "   Voc� colocou sua mascara BATMAN ( kkkk ) [/maskoff - para tirar].");
			GetPlayerName(playerid, sendername, sizeof(sendername));
      		format(string, sizeof(string), "* %s colocou sua mascara.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
	if(strcmp(cmd, "/maskoff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(PlayerInfo[playerid][pMask] == 0)
	    	{
	       		SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o tem mascara");
	        	return 1;
	    	}
	    	if(PlayerInfo[playerid][pLevel] < 5)
	    	{
	        	SendClientMessage(playerid, COLOR_GRAD1, "   Voc� deve ter level 5+ para usar.");
	        	return 1;
	    	}
	    	for(new i = 0; i < MAX_PLAYERS; i++)
   			{
   		    	if(IsPlayerConnected(i))
   		    	{
		   			ShowPlayerNameTagForPlayer(i, playerid, 1);
				}
			}
			PlayerInfo[playerid][pMaskuse] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Voc� tirou sua mascara [/maskon - para usar].");
			GetPlayerName(playerid, sendername, sizeof(sendername));
      		format(string, sizeof(string), "* %s tirou sua mascara.", sendername);
      		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}*/
//--------------------------------[Tirar Bombas]---------------------------------------------------------------------
	/*if(strcmp(cmd, "/tirarbombas", true) == 0)
	{
	 	if(IsAEx(playerid))
  		{
		    tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
			{
	  			SendClientMessage(playerid, COLOR_GRAD2, "USE: /tirarbombas [id]");
			    return 1;
			}
			new Nome[MAX_PLAYER_NAME], Nome2[MAX_PLAYER_NAME];
			GetPlayerName(playerid, Nome2, sizeof(Nome2));
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, Nome, sizeof(Nome));
			format(string, sizeof(string), "Voc� retirou as bombas do terrorista %s", Nome);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "Oficial %s retirou suas bombas por 10 minutos", Nome2);
			SendClientMessage(giveplayerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s retirou as bombas do terrorista %s", Nome2, Nome);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SemBombas[giveplayerid] = 1;
			SetTimerEx("VoltarBombas", 600000, false, "i", giveplayerid);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/HomemBomba", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar homem bomba na cadeia!");
		   return 1;
	    }
	    if(PlayerPaintballing[playerid] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar homem bomba no evento!");
		   return 1;
	    }
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � do Taliban/Mancha Verde");
		    return 1;
		}
		if(SemBombas[playerid] == 1)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "O Ex�rcito retirou suas bombas e voc� n�o poder� us�-las!");
		    return 1;
		}
		if(phbomba == 1)
        {
	        SendClientMessage(playerid,COLOR_GRAD2,"J� usaram homem-bomba, aguarde 20 segundos para usar novamente!");
	        return 1;
        }
 		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			SetPlayerHealth(playerid, 0);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			CreateExplosion(x, y, z, 7, 25);
			printf("[Terrorista] Usou Homem Bomba");
			format(string, sizeof(string), "Terrorista %s Usou Homem Bomba! ID[%d]", sendername, playerid);
			ABroadCast(COLOR_YELLOW,string,1);
			phbomba = 1;
		    Tempohbomba = SetTimer("hbomba", 20000, 0);
		}
		return 1;
 	}
	if(strcmp(cmd, "/CarroBomba", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar carro bomba na cadeia!");
		   return 1;
    	}
	    if(PlayerPaintballing[playerid] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar carro bomba no evento!");
		   return 1;
   		}
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � do Taliban/Mancha Verde");
		    return 1;
		}
		if(SemBombas[playerid] == 1)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "O Ex�rcito retirou suas bombas e voc� n�o poder� us�-las!");
		    return 1;
		}
		if(pcbomba == 1)
	    {
	        SendClientMessage(playerid,COLOR_GRAD2,"J� usaram carrobomba, aguarde 20 segundos para usar novamente!");
	        return 1;
	    }
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		new Float:x, Float:y, Float:z;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			if(vehicle != 0)
			{
				SetPlayerHealth(playerid, 0);
				GetVehiclePos(vehicle, x, y, z);
				CreateExplosion(x, y, z, 7, 50);
				printf("[Terrorista] Usou Carro Bomba");
				format(string, sizeof(string), "Terrorista %s Usou Carro Bomba! ID[%d]", sendername, playerid);
			    ABroadCast(COLOR_YELLOW,string,1);
				pcbomba = 1;
			    Tempocbomba = SetTimer("cbomba", 20000, 0);
			}
			if(vehicle == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� precisa estar em um carro");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� autorizado a usar este comando!");
		}
  		return 1;
 	}*/
    if(strcmp(cmd, "/vtunar", true) == 0)
	{
        GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pVIP])
		{
            if(IsPlayerInAnyVehicle(playerid))
            {
                new var5 = 0;
                var5 = GetPlayerVehicleID(playerid);
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
                {
                    AddVehicleComponent(var5, 1046);
                    AddVehicleComponent(var5, 1171);
                    AddVehicleComponent(var5, 1149);
                    AddVehicleComponent(var5, 1035);
                    AddVehicleComponent(var5, 1147);
                    AddVehicleComponent(var5, 1036);
                    AddVehicleComponent(var5, 1040);
                    ChangeVehiclePaintjob(var5, 4);
                    ChangeVehicleColor(var5, 6, 6);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
                {
                    AddVehicleComponent(var5, 1028);
                    AddVehicleComponent(var5, 1169);
                    AddVehicleComponent(var5, 1141);
                    AddVehicleComponent(var5, 1032);
                    AddVehicleComponent(var5, 1138);
                    AddVehicleComponent(var5, 1026);
                    AddVehicleComponent(var5, 1027);
                    ChangeVehiclePaintjob(var5, 0);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
                {
                    AddVehicleComponent(var5, 1046);
                    AddVehicleComponent(var5, 1153);
                    AddVehicleComponent(var5, 1150);
                    AddVehicleComponent(var5, 1054);
                    AddVehicleComponent(var5, 1049);
                    AddVehicleComponent(var5, 1047);
                    AddVehicleComponent(var5, 1051);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
                {
                    AddVehicleComponent(var5, 1065);
                    AddVehicleComponent(var5, 1160);
                    AddVehicleComponent(var5, 1159);
                    AddVehicleComponent(var5, 1067);
                    AddVehicleComponent(var5, 1162);
                    AddVehicleComponent(var5, 1069);
                    AddVehicleComponent(var5, 1071);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
                {
                    AddVehicleComponent(var5, 1064);
                    AddVehicleComponent(var5, 1155);
                    AddVehicleComponent(var5, 1154);
                    AddVehicleComponent(var5, 1055);
                    AddVehicleComponent(var5, 1158);
                    AddVehicleComponent(var5, 1056);
                    AddVehicleComponent(var5, 1062);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    AddVehicleComponent(var5, 1089);
                    AddVehicleComponent(var5, 1166);
                    AddVehicleComponent(var5, 1168);
                    AddVehicleComponent(var5, 1088);
                    AddVehicleComponent(var5, 1164);
                    AddVehicleComponent(var5, 1090);
                    AddVehicleComponent(var5, 1094);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
                {
                    AddVehicleComponent(var5, 1044);
                    AddVehicleComponent(var5, 1174);
                    AddVehicleComponent(var5, 1176);
                    AddVehicleComponent(var5, 1042);
                    AddVehicleComponent(var5, 1099);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
                {
                    AddVehicleComponent(var5, 1126);
                    AddVehicleComponent(var5, 1179);
                    AddVehicleComponent(var5, 1180);
                    AddVehicleComponent(var5, 1122);
                    AddVehicleComponent(var5, 1101);
                    AddVehicleComponent(var5, 1125);
                    AddVehicleComponent(var5, 1123);
                    AddVehicleComponent(var5, 1100);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
                {
                    AddVehicleComponent(var5, 1104);
                    AddVehicleComponent(var5, 1182);
                    AddVehicleComponent(var5, 1184);
                    AddVehicleComponent(var5, 1108);
                    AddVehicleComponent(var5, 1107);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
                {
                    AddVehicleComponent(var5, 1129);
                    AddVehicleComponent(var5, 1189);
                    AddVehicleComponent(var5, 1187);
                    AddVehicleComponent(var5, 1102);
                    AddVehicleComponent(var5, 1133);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1139);
                    AddVehicleComponent(var5, 1147);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1018);
                    AddVehicleComponent(var5, 1013);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1086);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 444)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 556)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 557)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
                {
                    AddVehicleComponent(var5, 1086);
                    AddVehicleComponent(var5, 1139);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1012);
                    AddVehicleComponent(var5, 1013);
                    AddVehicleComponent(var5, 1042);
                    AddVehicleComponent(var5, 1043);
                    AddVehicleComponent(var5, 1018);
                    AddVehicleComponent(var5, 1006);
                    AddVehicleComponent(var5, 1007);
                    AddVehicleComponent(var5, 1017);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
                {
                    ChangeVehiclePaintjob(var5, 0);
                    AddVehicleComponent(var5, 1191);
                    AddVehicleComponent(var5, 1193);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1018);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1134);
                    AddVehicleComponent(var5, 1137);
                }
                else
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                }
                return 1;
            }
        }
        return 1;
    }
//tunar admin
    if(strcmp(cmd, "/tunarcarro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(PlayerInfo[playerid][pAdmin] < 1)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "   Voce n�o esta autorizado a usar este comando!");
                return 1;
            }
            if(admtrampando[playerid] < 1)
                {
                SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
                return 1;
                }
            if(IsPlayerInAnyVehicle(playerid))
            {
                new var5 = 0;
                var5 = GetPlayerVehicleID(playerid);
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
                {
                    AddVehicleComponent(var5, 1046);
                    AddVehicleComponent(var5, 1171);
                    AddVehicleComponent(var5, 1149);
                    AddVehicleComponent(var5, 1035);
                    AddVehicleComponent(var5, 1147);
                    AddVehicleComponent(var5, 1036);
                    AddVehicleComponent(var5, 1040);
                    ChangeVehiclePaintjob(var5, 4);
                    ChangeVehicleColor(var5, 6, 6);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
                {
                    AddVehicleComponent(var5, 1028);
                    AddVehicleComponent(var5, 1169);
                    AddVehicleComponent(var5, 1141);
                    AddVehicleComponent(var5, 1032);
                    AddVehicleComponent(var5, 1138);
                    AddVehicleComponent(var5, 1026);
                    AddVehicleComponent(var5, 1027);
                    ChangeVehiclePaintjob(var5, 0);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
                {
                    AddVehicleComponent(var5, 1046);
                    AddVehicleComponent(var5, 1153);
                    AddVehicleComponent(var5, 1150);
                    AddVehicleComponent(var5, 1054);
                    AddVehicleComponent(var5, 1049);
                    AddVehicleComponent(var5, 1047);
                    AddVehicleComponent(var5, 1051);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
                {
                    AddVehicleComponent(var5, 1065);
                    AddVehicleComponent(var5, 1160);
                    AddVehicleComponent(var5, 1159);
                    AddVehicleComponent(var5, 1067);
                    AddVehicleComponent(var5, 1162);
                    AddVehicleComponent(var5, 1069);
                    AddVehicleComponent(var5, 1071);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
                {
                    AddVehicleComponent(var5, 1064);
                    AddVehicleComponent(var5, 1155);
                    AddVehicleComponent(var5, 1154);
                    AddVehicleComponent(var5, 1055);
                    AddVehicleComponent(var5, 1158);
                    AddVehicleComponent(var5, 1056);
                    AddVehicleComponent(var5, 1062);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
                {
                    AddVehicleComponent(var5, 1089);
                    AddVehicleComponent(var5, 1166);
                    AddVehicleComponent(var5, 1168);
                    AddVehicleComponent(var5, 1088);
                    AddVehicleComponent(var5, 1164);
                    AddVehicleComponent(var5, 1090);
                    AddVehicleComponent(var5, 1094);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575)
                {
                    AddVehicleComponent(var5, 1044);
                    AddVehicleComponent(var5, 1174);
                    AddVehicleComponent(var5, 1176);
                    AddVehicleComponent(var5, 1042);
                    AddVehicleComponent(var5, 1099);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
                {
                    AddVehicleComponent(var5, 1126);
                    AddVehicleComponent(var5, 1179);
                    AddVehicleComponent(var5, 1180);
                    AddVehicleComponent(var5, 1122);
                    AddVehicleComponent(var5, 1101);
                    AddVehicleComponent(var5, 1125);
                    AddVehicleComponent(var5, 1123);
                    AddVehicleComponent(var5, 1100);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
                {
                    AddVehicleComponent(var5, 1104);
                    AddVehicleComponent(var5, 1182);
                    AddVehicleComponent(var5, 1184);
                    AddVehicleComponent(var5, 1108);
                    AddVehicleComponent(var5, 1107);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
                {
                    AddVehicleComponent(var5, 1129);
                    AddVehicleComponent(var5, 1189);
                    AddVehicleComponent(var5, 1187);
                    AddVehicleComponent(var5, 1102);
                    AddVehicleComponent(var5, 1133);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    ChangeVehiclePaintjob(var5, 4);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 420)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1139);
                    AddVehicleComponent(var5, 1147);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1018);
                    AddVehicleComponent(var5, 1013);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1086);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 444)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 556)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 557)
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 401)
                {
                    AddVehicleComponent(var5, 1086);
                    AddVehicleComponent(var5, 1139);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1012);
                    AddVehicleComponent(var5, 1013);
                    AddVehicleComponent(var5, 1042);
                    AddVehicleComponent(var5, 1043);
                    AddVehicleComponent(var5, 1018);
                    AddVehicleComponent(var5, 1006);
                    AddVehicleComponent(var5, 1007);
                    AddVehicleComponent(var5, 1017);
                }
                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
                {
                    ChangeVehiclePaintjob(var5, 0);
                    AddVehicleComponent(var5, 1191);
                    AddVehicleComponent(var5, 1193);
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1018);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                    AddVehicleComponent(var5, 1134);
                    AddVehicleComponent(var5, 1137);
                }
                else
                {
                    AddVehicleComponent(var5, 1010);
                    AddVehicleComponent(var5, 1079);
                    AddVehicleComponent(var5, 1087);
                }
                return 1;
            }
        }
        return 1;
    }
   	if(strcmp(cmd, "/testegod", true) == 0 || strcmp(cmd, "/tg", true) == 0 || strcmp(cmd, "/testegod", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COLOR_DEPARTAMENTO, "USE: /testegod [id]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
					format(string, sizeof(string), "Voc� fez o teste de godmode em %s [ID:%d]", giveplayer, giveplayerid);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Se ele levar um tapa e n�o morrer = GODMODE, BANA ELE!");
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "Se ele n�o levar um tapa = REL�GIO TRAVADO, DE UM KICK NELE!");
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					//SendClientMessageToAll(COLOR_DBLUE, string);
					SetPlayerHealth(giveplayerid, 5);
					SetPlayerArmour(giveplayerid, 0);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 7, 10);
			        new playa;
		            //new Float:shealth;
			        new Float:slx, Float:sly, Float:slz;
		            playa = ReturnUser(tmp);
		            GetPlayerPos(playa, slx, sly, slz);
					SetPlayerPos(playa, slx, sly, slz+12);
					new PlayerName2[30];
					GetPlayerName(playerid, PlayerName2, 30);
					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
                        {
							format(string, sizeof(string), "ADMCMD: %s realizou testegod em: %s",sendername,giveplayer);
						}
                        else
                        {
							format(string, sizeof(string), "ADMCMD: %s realizou testegod em: %s",sendername,giveplayer);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_DEPARTAMENTO, "Esse jogador n�o est� online.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_DEPARTAMENTO, "Voc� n�o est� autorizado a usar este comando!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_DEPARTAMENTO, "Voc� deve estar logado para usar o comando!");
		}
		return 1;
	}
	if(strcmp(cmd, "/infoxiter", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	        	SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� autorizado a ultilizar este comando");
	        	return 1;
	        }
        	SendClientMessage(playerid, COLOR_YELLOW, "Informa��es de quem pegou armas pelo s0beit");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(GetPlayerAmmo(i) == 69)
			    {
                GetPlayerName(i, sendername, sizeof(sendername));
				format(string, sizeof(string), "Cuidado, pois %s est� com 69 de balas em sua arma e pode ser um xiter", sendername);
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/explode", true) == 0 || strcmp(cmd, "/explodir", true) == 0 || strcmp(cmd, "/fogo", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "/explodir [id]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
					format(string, sizeof(string), "ADMIN CMD: %s foi explodido por %s",giveplayer, sendername);
					ABroadCast(COLOR_LIGHTRED,string,1);
					//SendClientMessageToAll(COLOR_DBLUE, string);
					SetPlayerHealth(giveplayerid, 10);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 7, 10);
					new PlayerName2[30];
					GetPlayerName(playerid, PlayerName2, 30);
					printf("[Admins] %s usou /explode em %s", PlayerName2, giveplayer);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Esse jogador n�o est� online.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� autorizado a usar este comando!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Voc� deve estar logado para usar o comando!");
		}
		return 1;
	}
//Salvar Contas

	if(strcmp(cmd, "/destruirkart", true) == 0 || strcmp(cmd, "/dkart", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(OnTrazerKart == 1 && IsPlayerConnected(i))
				{
    				SendClientMessage(playerid ,COLOR_LIGHTRED, "Voc� destruiu o /eventokart!");
                    TrazerKart[i] = 0;
                    OnTrazerKart = 0;
                    Limite26 = 0;
                    return 1;
				}
			}
	    }
	}
// ---------------------------------[Evento Rally]

	if(strcmp(cmd, "/destruirrally", true) == 0 || strcmp(cmd, "/dr", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(OnTrazerKart == 1 && IsPlayerConnected(i))
				{
    				SendClientMessage(playerid ,COLOR_LIGHTRED, "Voc� destruiu o /eventorally!");
                    TrazerRally[i] = 0;
                    OnTrazerRally = 0;
                    Limite22 = 0;
                    return 1;
				}
			}
	    }
	}
//----------------------------------[Trazer TODOS]
 	if(strcmp(cmd, "/trazertodos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340  && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				new eventos[256];
				new AdminName[MAX_PLAYER_NAME];
	   			GetPlayerPos(playerid, trazerx, trazery, trazerz);
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
                    	TrazerTodos[i] = 1;
                    	OnTrazer = 1;
                    	format(eventos, sizeof(eventos),"O Admin %s est� chamando todos para um evento!\nQuer ir?",AdminName);
                    	ShowPlayerDialog(i,  5425, DIALOG_STYLE_MSGBOX, "Evento Criado", eventos, "Sim", "N�o");
                    }
				}
				if(TrazerTodos[playerid] == 1)
				{
				    SendClientMessage(playerid ,COLOR_LIGHTRED, "Voc� ativou o /trazertodos!");
				   	TrazerTodos[playerid] = 0;
				   	return 1;
				}
    			if(OnTrazer == 1)
				{
				    SendClientMessage(playerid ,COLOR_GREY, "Ja est�o usando /trazertodos,use  /destruirtrazer para criar outro!");
					return 1;
				}
			    return 1;
			}
		    return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/destruirtrazer", true) == 0 || strcmp(cmd, "/dt", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(OnTrazer == 1 && IsPlayerConnected(i))
				{
    				SendClientMessage(playerid ,COLOR_LIGHTRED, "Voc� destruiu o /trazertodos!");
                    TrazerTodos[i] = 0;
                    OnTrazer = 0;
                    return 1;
				}
			}
	    }
	}
	//----------------------------------[Trazer TODOS]
 	/*if(strcmp(cmd, "/trazertodosx1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
	   			GetPlayerPos(playerid, trazerx, trazery, trazerz);
				for(new i=0; i<MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
                    	TrazerTodosX1[i] = 1;
                    	SendClientMessage(i ,COLOR_LIGHTBLUE, "Admin est� chamando todos para um evento de X1!");
                    	SendClientMessage(i ,COLOR_LIGHTBLUE, "Digite 'Sim' para ir e 'Nao' para continuar onde est�.");
                    	OnTrazerX1 = 1;
                    }
				}
				if(TrazerTodosX1[playerid] == 1)
				{
                    SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
				    SendClientMessage(playerid ,COLOR_LIGHTRED, "Voc� ativou o /trazertodosx1!");
				   	TrazerTodosX1[playerid] = 0;
				   	return 1;
				}
    			if(OnTrazerX1 == 1)
				{
				    SendClientMessage(playerid ,COLOR_GREY, "Ja est�o usando /trazertodos,use  /destruirtrazer para criar outro!");
					return 1;
				}
			    return 1;
			}
		    return 1;
		}
		return 1;
	}*/
	if(strcmp(cmd, "/destruirtrazerx1", true) == 0 || strcmp(cmd, "/dtx1", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        for(new i=0; i<MAX_PLAYERS; i++)
			{
				if(OnTrazerX1 == 1 && IsPlayerConnected(i))
				{
    				SendClientMessage(playerid ,COLOR_LIGHTRED, "Voc� destruiu o /trazertodos!");
                    TrazerTodosX1[i] = 0;
                    OnTrazerX1 = 0;
                    return 1;
				}
			}
	    }
	}
//----------------------------------[GETaqui]-----------------------------------------------
	if(strcmp(cmd, "/trazer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazer [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode trazer um Preso");
				return 1;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
							return 1;
						}
                        if(PlayerInfo[plo][pAdmin] >= 1342 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode trazer um Admin Dono !");
							return 1;
						}
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							SetVehicleVirtualWorld(tmpcar,world);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(plo,world);
						SendClientMessage(plo, 0x33FF00FF, "[INFO] Voc� Foi Teleportado pelo admin !");
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Voc� n�o est� autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse n�o � um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/trazercarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /trazercarro [carro id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz); LinkVehicleToInterior(plo, 0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/carroantigo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	        	if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
		    	format(string, sizeof(string), "ID do �ltimo carro: %d",gLastCar[playerid]);
		    	SendClientMessage(playerid, COLOR_GREY, string);
		    	return 1;
		    }
		    else
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/abastecercarros", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
	            for(new c=0;c<CAR_AMOUNT;c++)
				{
					Gas[c] = GasMax;
				}
				if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				{
					format(string, sizeof(string), "|ADMIN|: Todos os carros foram abastecidos by: %s", sendername);
                    SendClientMessageToAll(COLOR_LIGHTRED, string);
				}
				else
				{
					format(string, sizeof(string), "|ADMIN|: Todos os carros foram abastecidos by: %s",sendername);
					SendClientMessageToAll(COLOR_LIGHTRED, string);
				}
	        }
	        else
	        {
	           	SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
	            return 1;
	        }
	    }
	    return 1;
	}
//----------------------------------[Dar Arma]------------------------------------------------
	if(strcmp(cmd, "/dararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dararma [id] [arma id(ex. 24 = Eagle)] [muni��o]");
				return 1;
			}
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /dararma [id] [arma id] [muni��o]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(P�) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada G�s) 18(Molotovs) 22(Pistola)");
				SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lan�a Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
				return 1;
			}
			if(gun < 1 || gun > 46 || gun==38 || gun==35 || gun==37 || gun==44 || gun==45 || gun==9  || gun==26 || gun==27 || gun==28 || gun==32)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   ID Proibido!"); return 1; }
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 999)
			{ SendClientMessage(playerid, COLOR_GRAD1, "   O minimo de muni��o � 1 e o m�ximo � 999!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerWeapon(playa, gun, ammo);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[Dar Vida]------------------------------------------------
	if(strcmp(cmd, "/darvida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /darvida [id] [quantia]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/darcolete", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /colete [id] [quantia]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/veh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 1338)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce n�o esta autorizado a usar este comando!");
			    return 1;
			}
			if(admtrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [carid] [COLOR1] [COLOR2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Vehicle Number can't be below 400 ou above 611 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [carid] [COLOR1] [COLOR2]");
				return 1;
			}
			new COLOR1;
			COLOR1 = strval(tmp);
			if(COLOR1 < 0 || COLOR1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   COLOR Number can't be below 0 ou above 126 !"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /veh [carid] [COLOR1] [COLOR2]");
				return 1;
			}
			new COLOR2;
			COLOR2 = strval(tmp);
			if(COLOR2 < 0 || COLOR2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   COLOR Number can't be below 0 ou above 126 !"); return 1; }
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			new carid = CreateVehicle(car, X,Y,Z, 0.0, COLOR1, COLOR2, 60000);
			CreatedCars[CreatedCar] = carid;
			CreatedCar ++;
			format(string, sizeof(string), "   Veiculo %d Criado.", carid);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/tempo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "USE: /tempo [tempo id]");
			    return 1;
			}
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Tempo id de 0 ~ 45 !"); return 1; }
			SetWeather(weather);
			format(string, 128, "|ADMIN|: %s setou o tempo para %d",name,weather);
			ABroadCast(COLOR_YELLOW,string,1);
			SendClientMessage(playerid, COLOR_GREY, "Tempo setado!");
		}
		return 1;
	}
//----------------------------------[Money]------------------------------------------------
	if(strcmp(cmd, "/setgrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setgrana [id] [grana]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						ResetPlayerMoney(playa);
						ConsumingMoney[playa] = 1;
						GivePlayerMoney(playa, money);
						format(gstring, 128, "%s usou /setgrana em %s e setou %d", PlayerName(playerid), PlayerName(playa), money);
						PayLog(gstring);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[GiveMoney]------------------------------------------------
	if(strcmp(cmd, "/dargrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /dargrana [id] [grana]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						ResetPlayerMoney(playa);
						ConsumingMoney[playa] = 1;
						GivePlayerMoney(playa, money);
						SendClientMessage(playerid, COLOR_TAXISTA, "O dinheiro foi setado!");
						PayLog(gstring);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
    }
	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setskin [playerid] [skin id]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "id desconhecido!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pSkin] = level;
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
						    format(string, sizeof(string), "O admin %s mudou sua Skin para %d", sendername,level);
						}
						else
						{
							format(string, sizeof(string), "O admin %s mudou sua Skin para %d", sendername,level);
						}
						SendClientMessage(para1, COLOR_WHITE, string);
						format(string, sizeof(string), "Voc� mudou a skin do %s para %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_WHITE, string);
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o tem permiss�o para usar esse comando!");
			}
		}
		return 1;
	}
//-----------------------------------[Slap]-----------------------------------------------
	if(strcmp(cmd, "/tapinha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /tapinha [ id ]");
				return 1;
			}
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerHealth(playa, shealth);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+5);
						PlayerPlaySound(playa, 1130, slx, sly, slz+5);
						printf("AdmCmd: %s slapped %s",sendername,  giveplayer);
						format(string, sizeof(string), "ADMIN CMD: %s levou um tapinha de %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode usar esse comando");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tapa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /tapa [id]");
				return 1;
			}
			new playa;
			//new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1341 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode dar tapas em um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						//GetPlayerHealth(playa, shealth);
						//SetPlayerHealth(playa, shealth-5);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+12);
						PlayerPlaySound(playa, 1130, slx, sly, slz+12);
						printf("|ADMIN|: %s slapped %s",sendername,  giveplayer);
      					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
                        {
							format(string, sizeof(string), "ADMCMD: %s ganhou um tapa de: %s",giveplayer ,sendername);
						}
                        else
                        {
							format(string, sizeof(string), "ADMCMD: %s ganhou um tapa de: %s",giveplayer ,sendername);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tapao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /tapao [id]");
				return 1;
			}
			new playa;
			//new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[playa][pAdmin] >= 1341 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode dar tap�o em um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						//GetPlayerHealth(playa, shealth);
						//SetPlayerHealth(playa, shealth-5);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+130);
						SetPlayerHealth(playerid, 100.0);
						PlayerPlaySound(playa, 1130, slx, sly, slz+130);
						printf("|ADMIN|: %s slapped %s",sendername,  giveplayer);
      					if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
                        {
							format(string, sizeof(string), "ADMCMD: %s ganhou um tapao de: %s",giveplayer ,sendername);
						}
                        else
                        {
							format(string, sizeof(string), "ADMCMD: %s ganhou um tapao de: %s",giveplayer ,sendername);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
    if(strcmp(cmd,"/matar",true)==0 || strcmp(cmd,"/kill",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /matar [id]");
				return 1;
			}
			new playa;
			//new Float:shealth;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1341 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode matar um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						//GetPlayerHealth(playa, shealth);
						//SetPlayerHealth(playa, shealth-5);
						SetPlayerHealth(playa, 0.0);
						SetPlayerVirtualWorld(playa,0);
						printf("|ADMIN|: %s matou %s",sendername,  giveplayer);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
                        {
							format(string, sizeof(string), "ADMIN CMD: %s ganhou uma morte de: %s",giveplayer ,sendername);
						}
                        else
                        {
							format(string, sizeof(string), "ADMIN CMD: %s ganhou uma morte de: %s",giveplayer ,sendername);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/retirararmas",true)==0 || strcmp(cmd,"/rarmas",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /retirararmas [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ResetPlayerWeaponsEx(playa);
						printf("|ADMIN|: %s retirou as armas de %s",sendername,  giveplayer);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "ADMIN CMD: %s teve as armas retiradas por: %s",giveplayer ,sendername);
						}
						else
						{
							format(string, sizeof(string), "ADMIN CMD: %s teve as armas retiradas por: %s",giveplayer ,sendername);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/calar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /calar [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[playa][pAdmin] >= 1341 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode calar um Admin Dono !");
							return 1;
						}
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
							printf("|ADMIN|: %s Sil�nciou %s",sendername,  giveplayer);
							if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
							{
								format(string, sizeof(string), "|ADMIN|: %s foi calado por %s",giveplayer ,sendername);
							}
							else
							{
								format(string, sizeof(string), "|ADMIN|: %s foi calado por %s",giveplayer ,sendername);
							}
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
							printf("|ADMIN|:: %s Descalado %s",sendername,  giveplayer);
							if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
							{
								format(string, sizeof(string), "ADMIN CMD: %s foi descalado por %s",giveplayer ,sendername);
							}
							else
							{
								format(string, sizeof(string), "ADMIN CMD: %s foi descalado por %s",giveplayer ,sendername);
							}
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
// infoarmas , infoplayer , infoxiter
	if(strcmp(cmd, "/infoarmas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /infoarmas [id do player]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 1 )
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� autorizado a usar esse comando!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    new weapons[13][2];
				    new playerck[MAX_PLAYER_NAME];
				    GetPlayerName(giveplayerid, playerck, sizeof(playerck));
   					format(string, sizeof(string), "EXIBINDO AS INFORMA��ES DAS ARMAS DE: %s",playerck);
   					SendClientMessage(playerid, TEAM_BALLAS_COLOR, string);
                    GetPlayerWeaponData(giveplayerid, 2, weapons[2][0], weapons[2][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[2][0]], weapons[2][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 3, weapons[3][0], weapons[3][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[3][0]], weapons[3][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 4, weapons[4][0], weapons[4][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[4][0]], weapons[4][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 5, weapons[5][0], weapons[5][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[5][0]], weapons[5][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 6, weapons[6][0], weapons[6][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[6][0]], weapons[6][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 7, weapons[7][0], weapons[7][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[7][0]], weapons[7][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 8, weapons[8][0], weapons[8][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[8][0]], weapons[8][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 9, weapons[9][0], weapons[9][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[9][0]], weapons[9][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 11, weapons[11][0], weapons[11][1]);
				    format(string, sizeof(string), "Arma: %s,                Muni��o: %d",aNames[weapons[11][0]], weapons[11][1]);
  					SendClientMessage(playerid, COLOR_WHITE, string);
		    	}
			}
        	else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador est� off-line !");
	            return 1;
	        }
		}
	    return 1;
	}
//---------------------------------------------------------------------------------------
	if(strcmp(cmd, "/infoplayer", true) == 0)
	{
	 	new armatext[30];
	    new municao;
	    new arma;
	    new Float:plrtempheal;
	    new Float:plrarmour;
	    new plrping;
	    new iplayer[MAX_PLAYER_NAME];
	    new plrIP[16];
	    new smunicao;
		if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /infoplayer [id do player]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 1)
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� autorizado a usar esse comando!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    GetPlayerIp(giveplayerid, plrIP, sizeof(plrIP));
   					GetPlayerName(giveplayerid, iplayer, sizeof(iplayer));
					plrping = GetPlayerPing(giveplayerid);
			    	GetPlayerArmour(giveplayerid, plrarmour);
					GetPlayerHealth(playerid,plrtempheal);
					arma = GetPlayerWeapon(giveplayerid);
					municao = GetPlayerAmmo(giveplayerid);
					SendClientMessage(playerid, COLOR_GREEN, "|__________________| EXIBINDO INFORMA��ES |__________________|");
					format(string, sizeof(string), "Nome: %s", iplayer);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "IP: %s", plrIP);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Ping: %d", plrping);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Colete: %1f", plrarmour);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Sa�de: %1f", plrtempheal);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 38) { armatext = "Minigun"; }
					else if(arma == 40) { armatext = "Detonador"; }
					else if(arma == 36) { armatext = "Lan�a missil RPG"; }
					else if(arma == 35) { armatext = "Lan�a missil"; }
					else if(arma == 16) { armatext = "Granada"; }
					else if(arma == 18) { armatext = "Coctel Molotov"; }
					else if(arma == 22) { armatext = "Pistola de Duas m�os 9mm"; }
					else if(arma == 26) { armatext = "Escopeta de Cano Serrado"; }
					else if(arma == 27) { armatext = "Escopeta de Combate"; }
					else if(arma == 28) { armatext = "Micro Uzi"; }
					else if(arma == 32) { armatext = "Tec9"; }
					else if(arma == 37) { armatext = "Lan�a Chamas"; }
					else if(arma == 0) { armatext = "Desarmado"; }
                    else if(arma == 4) { armatext = "Faca"; }
                    else if(arma == 5) { armatext = "Bast�o de Base Ball"; }
                    else if(arma == 9) { armatext = "Motoserra"; }
                    else if(arma == 14) { armatext = "Flores"; }
                    else if(arma == 17) { armatext = "Granada de Gas"; }
                    else if(arma == 23) { armatext = "Pistola com sil�nciador"; }
                    else if(arma == 16) { armatext = "Granada"; }
                    else if(arma == 24) { armatext = "Desert Eagle"; }
                    else if(arma == 25) { armatext = "ShotGun"; }
                    else if(arma == 29) { armatext = "MP5"; }
                    else if(arma == 30) { armatext = "AK-47"; }
                    else if(arma == 31) { armatext = "M4"; }
                    else if(arma == 33) { armatext = "Rifle"; }
                    else if(arma == 34) { armatext = "Rifle Sniper"; }
                    else if(arma == 41) { armatext = "Spray"; }
                    else if(arma == 42) { armatext = "Extintor"; }
                    else if(arma == 46) { armatext = "Paraquedas"; }
                    else { armatext = "Desconhecido"; }
                    format(string, sizeof(string), "Arma: %s", armatext);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 40 || arma == 36 || arma == 35 || arma == 16 || arma == 18 || arma == 26 || arma == 27 || arma == 28 || arma == 32 || arma == 37)
					{
					    SendClientMessage(playerid, COLOR_LIGHTRED, "/tv nele, pois ele pode estar usando xiter de armas");
					}
					if(municao == 65535) { smunicao = 0; } else { smunicao = municao; }
					format(string, sizeof(string), "Muni��o: %d", smunicao);
					SendClientMessage(playerid, COLOR_GRAD1, string);
 				 }
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador est� off-line !");
	            return 1;
	        }
		}
	    return 1;
	}
//---------------Guinchar----------------------------------
	if(strcmp(cmd,"/guinchar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsAMec(playerid) && !IsACop(playerid))
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
		     	   	{
		     	   	    if(GetPlayerState(playerid)==2)
		     	   	    {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
			   					vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
			   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			           				{
			   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						           	}
						           	else
						           	{
					                   AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
			     			}
							if(!Found)
				 			{
			   					SendClientMessage(playerid,COLOR_GREY,"N�o tem nenhum carro perto.");
			   				}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Voc� precisa estar dirigindo!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o tem um Guincho!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o est� em um guincho!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD2,"Voc� n�o � mecanico!");
				return 1;
			}
		}
		return 1;
	}

    //-------------------------- anima��es --------------------------------------------------

        if(strcmp(cmdtext,"/anims",true)==0)
	{
       new anims[1000];
       strins(anims,"{7491F6}Anima��es: /deitar, /segurar, /crack, /sentar, /taichi\n",strlen(anims));
       strins(anims,"{7491F6}Anima��es: /rapper, /fumar, /punheta, /efoda, /passaramao\n",strlen(anims));
       strins(anims,"{7491F6}Anima��es: /dance at� /dance3, /apontar, /cruzarb, /creu, /mirar\n",strlen(anims));
       strins(anims,"{7491F6}Anima��es: /charuto, /bebida, /conversar, /mijar \n",strlen(anims));
       ShowPlayerDialog(playerid,8436, DIALOG_STYLE_MSGBOX, "{F60000} ---------------------  TODAS AS ANIMA�OES  -------------------- ",anims, "Fechar", "");
	   return 1;
	}

    	if(strcmp("/handsup", cmdtext, true) == 0)
{
SendClientMessage(playerid, 0xFFFFFFAA, "Ja era mano, a policia parou voc�!");
SetPlayerSpecialAction(playerid, 10);
return 1;
}

if(!strcmp("/creu", cmdtext, true, 10))
	{
		ApplyAnimation(playerid, "CHOPPA", "CHOPPA_back", 4.0999, 1, 1, 1, 1, 1);
		SendClientMessage(playerid, 0x6C6CFFAA, "������� Creu creu creu creu creu creu!");
		return 1;
	}

if(strcmp("/deitar", cmdtext, true) == 0)
{
ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0);
return 1;
}

if(strcmp("/passaramao", cmdtext, true) == 0)
{
ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 1, 0, 0, 0, 0);
SendClientMessage(playerid, 0xFFFFFFAA,"Hum.. Safadinho...");
return 1;
}

if(strcmp("/fumar2", cmdtext, true) == 0)
{
SendClientMessage(playerid, 0xFFFFFFAA, "Fumar causa c�ncer no pulm�o!");
ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0);
return 1;
}

if(strcmp("/sentar", cmdtext, true) == 0)
{
ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0);
return 1;
}

if(strcmp("/efoda", cmdtext, true) == 0)
{
SendClientMessage(playerid, 0xFFFFFFAA, "� Foda n�! ��'");
ApplyAnimation(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0);
return 1;
}

if(strcmp("/taichi", cmdtext, true) == 0)
{
ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0);
return 1;
}

if(strcmp("/rapper", cmdtext, true) == 0)
{
SendClientMessage(playerid, 0xFFFFFFAA, "Virou rapper agora foi?");
ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0);
return 1;
}

if (strcmp(cmdtext, "/punheta", true)==0){
ApplyAnimation(playerid,"PAULNMAC", "wank_loop", 1.800001, 1, 0, 0, 1, 600);
SendClientMessage(playerid, 0xFFFFFFAA,"Voc� esta batendo punheta.. Punheteiro!");
return 1;
}

if(strcmp(cmdtext, "/mijar", true) == 0) {

		SetPlayerSpecialAction(playerid,68);
		SendClientMessage(playerid, 0x6C6CFFAA, "Vai mij�o!!!");
		return 1;
	}

    if(strcmp(cmdtext, "/dance", true) == 0) {

		SetPlayerSpecialAction(playerid,5);
		SendClientMessage(playerid, 0x6C6CFFAA, "Dan�arindo Profissional ein!");
		return 1;
	}

        if(strcmp(cmdtext, "/dance1", true) == 0) {

		SetPlayerSpecialAction(playerid,6);
		SendClientMessage(playerid, 0x6C6CFFAA, "Dan�arindo Profissional ein!");
		return 1;
	}

            if(strcmp(cmdtext, "/dance2", true) == 0) {

		SetPlayerSpecialAction(playerid,7);
		SendClientMessage(playerid, 0x6C6CFFAA, "Dan�arindo Profissional ein!");
		return 1;
	}

         if(strcmp(cmdtext, "/dance3", true) == 0) {

		SetPlayerSpecialAction(playerid,8);
		SendClientMessage(playerid, 0x6C6CFFAA, "Dan�arindo Profissional ein!");
		return 1;
	}

             if(strcmp(cmdtext, "/charuto", true) == 0) {

		SetPlayerSpecialAction(playerid,21);
		SendClientMessage(playerid, 0x6C6CFFAA, "Fumar faz mal a saude!");
		return 1;
	}

    if(!strcmp(cmdtext, "/fumar", true))
	{
		ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

    if(strcmp("/bebado", cmdtext, true) == 0)
	{
        SendClientMessage(playerid, 0x6C6CFFAA, "Vai seu cachaceiro");
	   ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 1, 0);
	   return 1;
	}

    if(strcmp("/cruzarb", cmdtext, true) == 0)
    {
        ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1);
        return 1;
    }

    if(strcmp("/mirar", cmdtext, true) == 0)
    {
        ApplyAnimation(playerid, "ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1);
        return 1;
    }

	if(!strcmp(cmdtext, "/apontar", true))
	{
		ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

	if(!strcmp(cmdtext, "/cobrar", true))
	{
		ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 1, 0, 0, 0, 0);
		return 1;
	}

		if(!strcmp(cmdtext, "/conversar", true))
	{
		ApplyAnimation(playerid, "PED", "IDLE_CHAT", 4.0, 1, 0, 0, 0, 0);
		return 1;
    }

    if(strcmp("/segurar", cmdtext, true) == 0)
    {
    ApplyAnimation(playerid, "KNIFE", "KILL_Partial", 4.0, 1, 0, 0, 0, 0);
    return 1;
    }

    //---------------- Sincronizar ----------------------------
	if(strcmp(cmdtext, "/sinc", true) == 0 || strcmp(cmdtext, "/sincronizar", true) == 0)
	{
		if(GetPlayerState(playerid) == 9|| GetPlayerState(playerid) == 5 || GetPlayerState(playerid) == 6 ||GetPlayerState(playerid) == 4|| GetPlayerState(playerid) == 0 || sincronizando[playerid] == 1 || PlayerInfo[playerid][pJailed] != 0 || PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode sincronizar agora!");
			return 1;
		}
        if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COR_GRO, "Pe�a para um administrador desbugar voc�!!");
			return 1;
	    }
		if(PlayerPaintballing[playerid] != 0)
		{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode sincronizar no evento!");
			return 1;
    	}
		if(psinc == 1)
  		{
	        SendClientMessage(playerid,COLOR_GRAD2,"J� sincronizaram,tente daqui a pouco!");
	        return 1;
	    }
	 	sincronizando[playerid] = 1;
	 	virt[playerid] = GetPlayerVirtualWorld(playerid);
		interior[playerid] = GetPlayerInterior(playerid);
		skinneg[playerid] = GetPlayerSkin(playerid);
		GetPlayerArmour(playerid,APP[playerid]);
		GetPlayerHealth(playerid,PlayerHPP[playerid]);
		GetPlayerFacingAngle(playerid,FaceAngle[playerid]);
		GetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
		GetPlayerWeaponData(playerid,1,gunsinc[1][playerid],ammoo[1][playerid]);
		GetPlayerWeaponData(playerid,2,gunsinc[2][playerid],ammoo[2][playerid]);
		GetPlayerWeaponData(playerid,3,gunsinc[3][playerid],ammoo[3][playerid]);
		GetPlayerWeaponData(playerid,4,gunsinc[4][playerid],ammoo[4][playerid]);
		GetPlayerWeaponData(playerid,5,gunsinc[5][playerid],ammoo[5][playerid]);
		GetPlayerWeaponData(playerid,6,gunsinc[6][playerid],ammoo[6][playerid]);
		GetPlayerWeaponData(playerid,7,gunsinc[7][playerid],ammoo[7][playerid]);
		GetPlayerWeaponData(playerid,8,gunsinc[8][playerid],ammoo[8][playerid]);
		GetPlayerWeaponData(playerid,9,gunsinc[9][playerid],ammoo[9][playerid]);
		GetPlayerWeaponData(playerid,10,gunsinc[10][playerid],ammoo[10][playerid]);
		GetPlayerWeaponData(playerid,11,gunsinc[11][playerid],ammoo[11][playerid]);
		GetPlayerWeaponData(playerid,12,gunsinc[12][playerid],ammoo[12][playerid]);
		psinc = 1;
		TempoSincronizar = SetTimer("Sinc", 8000, 0);
		if(IsPlayerInAnyVehicle(playerid))
		{
			vehicledd[playerid] = 1;
			VehicleIDD[playerid] = GetPlayerVehicleID(playerid);
		}
//	SyncPlayer(playerid);
		MedicBill[playerid] = 0;
		SpawnPlayer(playerid);
		TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playerid);
		return 1;
	}
	/*if (strcmp(cmd, "/territorios", true) == 0)
	{
	    TogglePlayerControllable(playerid, 0);
	    ShowPlayerDialog(playerid,2570,DIALOG_STYLE_LIST,"Territorios","Favela(Gang)\nPista de Skate(Gang)\nEstacao Unity(Mafia)\nCasarao(Mafia)","Ok","Cancelar");
	    EmDialog[playerid] = 1;
		return 1;
	}*/
	if(strcmp(cmd, "/admvcarro", true) == 0 || strcmp(cmd, "/admvc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /admvcarro [Carro id]");
				return 1;
			}
			new vehid = strval(tmp);
			if(!CarroMala(vehid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Digite o ID de um Carro VIP V�lido.");
				return 1;
			}
			vehid = vehid-totalveiculosc;
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				CarInfo[vehid][cOwned] = 0;
				strmid(CarInfo[vehid][cOwner], "Dealership", 0, strlen("Dealership"), 999);
				format(string, sizeof(string), "~w~Voce vendeu este veiculo");
				GameTextForPlayer(playerid, string, 10000, 3);
				new rand = random(sizeof(gRandomCarsSpawns));
				CarInfo[vehid][cLocationx] = gRandomCarsSpawns[rand][0];
				CarInfo[vehid][cLocationy] = gRandomCarsSpawns[rand][1];
				CarInfo[vehid][cLocationz] = gRandomCarsSpawns[rand][2];
				CarInfo[vehid][cAngle] = gRandomCarsSpawns[rand][3];
				RemovePlayerFromVehicleEx(playerid);
				DestroyVehicle(vehid+totalveiculosc);
				new carid2 = CreateVehicle(CarInfo[vehid][cModel],CarInfo[vehid][cLocationx],CarInfo[vehid][cLocationy],CarInfo[vehid][cLocationz]+1.0,CarInfo[vehid][cAngle],CarInfo[vehid][cColorOne],CarInfo[vehid][cColorTwo],60000);
				TogglePlayerControllable(playerid, 1);
				SaveCars();
				SetVehicleToRespawn(carid2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem permiss�o para usar esse comando !");
			}
		}
		return 1;
	}
 	/*if(strcmp(cmd,"/admvcarro",true)==0 || strcmp(cmd,"/admvc",true)==00)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1337)
	    {
	        if(admtrampando[playerid] == 1 || PlayerInfo[playerid][pAdmin] == 1342)
	        {
			    if(IsPlayerConnected(playerid))
				{
				    for(new i = 0; i < sizeof(CarInfo); i++)
			        {
			            new vehid = GetPlayerVehicleID(playerid), rand;
						if(CarInfo[vehid][ownedvehicle] == vehid)
						{
							if(CarInfo[vehid][cOwned] == 0)
							{
								SendClientMessage(playerid, COLOR_GREY, "Este carro n�o tem dono.");
								return 1;
							}
							CarInfo[vehid][cOwned] = 0;
							strmid(CarInfo[vehid][cOwner], "Dealership", 0, strlen("Dealership"), 999);
							format(string, sizeof(string), "~w~Voce vendeu este veiculo");
							GameTextForPlayer(playerid, string, 10000, 3);
							rand = random(sizeof(gRandomCarsSpawns));
							CarInfo[vehid][cLocationx] = gRandomCarsSpawns[rand][0];
							CarInfo[vehid][cLocationy] = gRandomCarsSpawns[rand][1];
							CarInfo[vehid][cLocationz] = gRandomCarsSpawns[rand][2];
							CarInfo[vehid][cAngle] = gRandomCarsSpawns[rand][3];
							RemovePlayerFromVehicleEx(playerid);
							TogglePlayerControllable(playerid, 1);
							SaveCars();
							return 1;
						}
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Digite /trabalhar para usar este comando.");
				return 1;
			}
		}
		return 1;
	}*/
	if(strcmp(cmd,"/veiculo",true)==0 || strcmp(cmd,"/vh",true)==0)
	{
	    new vehid = GetPlayerVehicleID(playerid);
		GetPlayerName(playerid,playername,sizeof(playername));
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
	    {
	        SendClientMessage(playerid,COLOR_WHITE," USE: /veiculo ajuda para ver os comandos de seu ve�culo VIP");
	        return 1;
	    }
		if(strcmp(tmp, "ajuda", true) == 0)
		{
	    	if(IsPlayerConnected(playerid))
	    	{
	        	if(PlayerInfo[playerid][pCarKey] != 0 || PlayerInfo[playerid][pCarKey2] != 0 || PlayerInfo[playerid][pCarKey3] != 0)
	        	{
					SendClientMessage(playerid, COLOR_GRAD2,"** (/v)eiculo comprar - para comprar o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"** (/v)eiculo vender - para vender o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"** (/v)eiculo ajuda - para ver os comandos dos Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"** (/v)eiculo trancar - para trancar ou abrir o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"** (/v)eiculo cor - para mudar a cor do Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"** (/v)eiculo estacionar - para estacionar o Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"** (/v)eiculo modelo - para mudar o modelo do Veiculo");
					SendClientMessage(playerid, COLOR_GRAD2,"** /retirargrana - para retirar a grana do seu carro");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"** Voc� precisa estar no seu carro VIP para usar esses comandos.");
					return 1;
				}
				else
				{
				    SendClientMessage(playerid,COLOR_GRAD2," Voc� n�o tem um Veiculo VIP! ");
				    return 1;
				}
			}
			return 1;
		}
		if(strcmp(tmp, "comprar", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
		    {
            	if(PlayerInfo[playerid][pVIP] < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um jogador VIP/Socio");
					return 1;
   				}
		        for(new i = 0; i < sizeof(CarInfo); i++)
		        {
					if(CarInfo[i][ownedvehicle] == vehid)
					{
						if(PlayerInfo[playerid][pCarKey] != 0 && PlayerInfo[playerid][pCarKey2] != 0 && PlayerInfo[playerid][pVIP] == 1)
						{
							SendClientMessage(playerid, COLOR_GREY, " Seu VIP permite que voc� tenha no m�ximo dois carros !");
							return 1;
						}
						if(PlayerInfo[playerid][pCarKey] != 0 && PlayerInfo[playerid][pCarKey2] != 0 && PlayerInfo[playerid][pCarKey3] != 0)
						{
							SendClientMessage(playerid, COLOR_GREY, " Seu VIP Premium permite que voc� tenha no m�ximo tr�s carros !");
							return 1;
						}
						if(CarInfo[i][cOwned]==1)
						{
						    SendClientMessage(playerid, COLOR_GREY, "Este carro VIP j� tem dono");
						    return 1;
						}
						if(PlayerInfo[playerid][pCarKey] == 0)
						{
							if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
							{
								PlayerInfo[playerid][pCarKey] = i+totalveiculosc;
								PlayerInfo[playerid][pVeiculo] = i;
								CarInfo[i][cOwned] = 1;
								CarOffered[playerid]=0;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
								GivePlayerMoney(playerid,-CarInfo[i][cValue]);
								GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro VIP!", 5000, 3);
								PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /veiculo ajuda para ver os comandos");
								TogglePlayerControllable(playerid, 1);
								SaveCars();
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem dinheiro para isso!");
							}
							return 1;
						}
 				    	else if(PlayerInfo[playerid][pCarKey2] == 0)
						{
							if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
							{
								PlayerInfo[playerid][pCarKey2] = i+totalveiculosc;
								PlayerInfo[playerid][pVeiculo2] = i;
								CarInfo[i][cOwned] = 1;
								CarOffered[playerid]=0;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
								GivePlayerMoney(playerid,-CarInfo[i][cValue]);
								GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro VIP!", 5000, 3);
								PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /veiculo ajuda para ver os comandos");
								TogglePlayerControllable(playerid, 1);
								SaveCars();
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem dinheiro para isso!");
							}
							return 1;
						}
						else if(PlayerInfo[playerid][pCarKey3] == 0)
						{
							if(GetPlayerMoney(playerid) >= CarInfo[i][cValue])
							{
								PlayerInfo[playerid][pCarKey3] = i+totalveiculosc;
								PlayerInfo[playerid][pVeiculo3] = i;
								CarInfo[i][cOwned] = 1;
								CarOffered[playerid]=0;
								GetPlayerName(playerid, sendername, sizeof(sendername));
								strmid(CarInfo[i][cOwner], sendername, 0, strlen(sendername), 999);
								GivePlayerMoney(playerid,-CarInfo[i][cValue]);
								GameTextForPlayer(playerid, "~w~Parabens~n~Voce comprou esse Carro VIP!", 5000, 3);
								PlayerPlaySound(playerid, 1147, 0.0, 0.0, 0.0);
								SendClientMessage(playerid, COLOR_GRAD2, "parabens pela sua compra !");
								SendClientMessage(playerid, COLOR_GRAD2, "USE: /veiculo ajuda para ver os comandos");
								TogglePlayerControllable(playerid, 1);
								SaveCars();
							}
							else
							{
								SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem dinheiro para isso!");
							}
							return 1;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Erro fatal !");
						}
					}
				}
			}
			return 1;
		}
		if(strcmp(tmp, "vender", true) == 0)
		{
		    if(IsPlayerConnected(playerid))
			{
				GetPlayerName(playerid, playername, sizeof(playername));
				if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0 && PlayerInfo[playerid][pCarKey3] == 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem um Carro VIP.");
					return 1;
				}
				if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid && PlayerInfo[playerid][pCarKey3] != vehid)
				{
					SendClientMessage(playerid, COLOR_GREY, "Esse n�o � seu Carro VIP.");
					return 1;
				}
				if(PlayerInfo[playerid][pCarKey] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo]][cOwner], true) == 0)
				{
					new rand;
					new car = PlayerInfo[playerid][pVeiculo];
					CarInfo[car][cOwned] = 0;
					CarInfo[car][cModel] = 560;
					CarInfo[car][cColorOne] = 0;
				    CarInfo[car][cColorTwo] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
					GivePlayerMoney(playerid,CarInfo[car][cValue]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
					GameTextForPlayer(playerid, string, 10000, 3);
					RemovePlayerFromVehicleEx(playerid);
					TogglePlayerControllable(playerid, 1);
					PlayerInfo[playerid][pCarKey] = 0;
					PlayerInfo[playerid][pVeiculo] = 0;
                    rand = random(sizeof(gRandomCarsSpawns));
					CarInfo[car][cLocationx] = gRandomCarsSpawns[rand][0];
					CarInfo[car][cLocationy] = gRandomCarsSpawns[rand][1];
					CarInfo[car][cLocationz] = gRandomCarsSpawns[rand][2];
					CarInfo[car][cAngle] = gRandomCarsSpawns[rand][3];
					SaveCars();
					return 1;
				}
				else if(PlayerInfo[playerid][pCarKey2] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo2]][cOwner], true) == 0)
				{
					new rand;
					new car = PlayerInfo[playerid][pVeiculo2];
					CarInfo[car][cOwned] = 0;
					CarInfo[car][cModel] = 560;
					CarInfo[car][cColorOne] = 0;
				    CarInfo[car][cColorTwo] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
					GivePlayerMoney(playerid,CarInfo[car][cValue]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
					GameTextForPlayer(playerid, string, 10000, 3);
					RemovePlayerFromVehicleEx(playerid);
					TogglePlayerControllable(playerid, 1);
					PlayerInfo[playerid][pCarKey2] = 0;
					PlayerInfo[playerid][pVeiculo2] = 0;
                    rand = random(sizeof(gRandomCarsSpawns));
					CarInfo[car][cLocationx] = gRandomCarsSpawns[rand][0];
					CarInfo[car][cLocationy] = gRandomCarsSpawns[rand][1];
					CarInfo[car][cLocationz] = gRandomCarsSpawns[rand][2];
					CarInfo[car][cAngle] = gRandomCarsSpawns[rand][3];
					SaveCars();
					return 1;
				}
				else if(PlayerInfo[playerid][pCarKey3] != 0 && strcmp(playername, CarInfo[PlayerInfo[playerid][pVeiculo3]][cOwner], true) == 0)
				{
					new rand;
					new car = PlayerInfo[playerid][pVeiculo3];
					CarInfo[car][cOwned] = 0;
					CarInfo[car][cModel] = 560;
					CarInfo[car][cColorOne] = 0;
				    CarInfo[car][cColorTwo] = 0;
					GetPlayerName(playerid, sendername, sizeof(sendername));
					strmid(CarInfo[car][cOwner], "Dealership", 0, strlen("Dealership"), 999);
					GivePlayerMoney(playerid,CarInfo[car][cValue]);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~Carro Vip Vendido Por: ~n~~g~$%d", CarInfo[car][cValue]);
					GameTextForPlayer(playerid, string, 10000, 3);
					RemovePlayerFromVehicleEx(playerid);
					TogglePlayerControllable(playerid, 1);
					PlayerInfo[playerid][pCarKey3] = 0;
					PlayerInfo[playerid][pVeiculo3] = 0;
                    rand = random(sizeof(gRandomCarsSpawns));
					CarInfo[car][cLocationx] = gRandomCarsSpawns[rand][0];
					CarInfo[car][cLocationy] = gRandomCarsSpawns[rand][1];
					CarInfo[car][cLocationz] = gRandomCarsSpawns[rand][2];
					CarInfo[car][cAngle] = gRandomCarsSpawns[rand][3];
					SaveCars();
					return 1;
				}
			}
			return 1;
		}
		if(strcmp(tmp, "trancar", true) == 0)
	    {
            if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0 && PlayerInfo[playerid][pCarKey3] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem um Carro VIP.");
				return 1;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid && PlayerInfo[playerid][pCarKey3] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse n�o � seu Carro VIP.");
				return 1;
			}
			new keycar;
			if(vehid == PlayerInfo[playerid][pCarKey]) { keycar = PlayerInfo[playerid][pVeiculo]; }
			else if(vehid == PlayerInfo[playerid][pCarKey2]) { keycar = PlayerInfo[playerid][pVeiculo2]; }
			else if(vehid == PlayerInfo[playerid][pCarKey3]) { keycar = PlayerInfo[playerid][pVeiculo3]; }
	    	if(IsPlayerConnected(playerid))
	        {
	            if(CarInfo[keycar][cLock] == 1)
				{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(CarInfo[keycar][ownedvehicle],i,0,0);
				}
				format(string, sizeof(string), "~w~Veiculo VIP~n~~g~Aberto");
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, string, 10000, 3);
				CarInfo[keycar][cLock] = 0;
				return 1;
				}
				else
				{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i)) SetVehicleParamsForPlayer(CarInfo[keycar][ownedvehicle],i,0,1);
				}
				format(string, sizeof(string), "~w~Veiculo VIP~n~~r~Trancado");
				PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
				GameTextForPlayer(playerid, string, 10000, 3);
				CarInfo[keycar][cLock] = 1;
				return 1;
				}

			}
			return 1;
		}
		if(strcmp(tmp, "estacionar", true) == 0)
		{
			if(IsPlayerConnected(playerid))
	    	{
                if(EstacionarAceito[playerid] == 0)
	     		{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� precisa pedir permiss�o para um admin para estacionar o carro!");
	     			return 1;
	     		}
				if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0 && PlayerInfo[playerid][pCarKey3] == 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem um Carro VIP.");
					return 1;
				}
				if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid && PlayerInfo[playerid][pCarKey3] != vehid)
				{
					SendClientMessage(playerid, COLOR_GREY, "Esse n�o � seu Carro VIP.");
					return 1;
				}
	    		new Float:x,Float:y,Float:z;
				new Float:a;
				new carid;
				new getcarid;
				new Veiculo;
   				if(vehid == PlayerInfo[playerid][pCarKey]) { carid = PlayerInfo[playerid][pCarKey]; Veiculo = PlayerInfo[playerid][pVeiculo]; }
				else if(vehid == PlayerInfo[playerid][pCarKey2]) { carid = PlayerInfo[playerid][pCarKey2]; Veiculo = PlayerInfo[playerid][pVeiculo2]; }
				else if(vehid == PlayerInfo[playerid][pCarKey3]) { carid = PlayerInfo[playerid][pCarKey3]; Veiculo = PlayerInfo[playerid][pVeiculo3]; }
				if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
				{
			    	getcarid = GetPlayerVehicleID(playerid);
					GetPlayerName(playerid, playername, sizeof(playername));
					GetVehiclePos(carid, x, y, z);
					GetVehicleZAngle(carid, a);
               		if(getcarid == carid)
					{
						CarInfo[Veiculo][cLocationx] = x;
						CarInfo[Veiculo][cLocationy] = y;
						CarInfo[Veiculo][cLocationz] = z;
						CarInfo[Veiculo][cAngle] = a;
						format(string, sizeof(string), "~n~ Veiculo Estacionado Aqui! ~n~");
						GameTextForPlayer(playerid, "Veiculo Estacionado!~n~Ele vai nascer aqui!.", 10000, 3);
						DestroyVehicle(carid);
						new carid2 = CreateVehicle(CarInfo[Veiculo][cModel],CarInfo[Veiculo][cLocationx],CarInfo[Veiculo][cLocationy],CarInfo[Veiculo][cLocationz]+1.0,CarInfo[Veiculo][cAngle],CarInfo[Veiculo][cColorOne],CarInfo[Veiculo][cColorTwo],60000);
						TogglePlayerControllable(playerid, 1);
						SaveCars();
						SetVehicleToRespawn(carid2);
						return 1;
  						}
					return 1;
				}
				return 1;
			}
			return 1;
		}
		if(strcmp(tmp, "modelo", true) == 0)
		{
        	if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0 && PlayerInfo[playerid][pCarKey3] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem um Carro VIP.");
				return 1;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid && PlayerInfo[playerid][pCarKey3] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse n�o � seu Carro VIP.");
				return 1;
			}
			new modelo;
			new carid;
			new Veiculo;
			if(vehid == PlayerInfo[playerid][pCarKey]) { carid = PlayerInfo[playerid][pCarKey]; Veiculo = PlayerInfo[playerid][pVeiculo]; }
			else if(vehid == PlayerInfo[playerid][pCarKey2]) { carid = PlayerInfo[playerid][pCarKey2]; Veiculo = PlayerInfo[playerid][pVeiculo2]; }
			else if(vehid == PlayerInfo[playerid][pCarKey3]) { carid = PlayerInfo[playerid][pCarKey3]; Veiculo = PlayerInfo[playerid][pVeiculo3]; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /veiculo modelo [modelo]");
				return 1;
			}
			modelo = strval(tmp);
			if(modelo < 400 || modelo > 611) { SendClientMessage(playerid, COLOR_GREY, " Nossos Modelos Est�o Entre 400 e 611!"); return 1; }
			if(modelo == 592 || modelo == 577 || modelo == 553 || modelo == 520 || modelo == 525 || modelo == 547 || modelo == 435
			|| modelo == 441 || modelo == 449 || modelo == 450 || modelo == 460 || modelo == 464 || modelo == 465 || modelo == 501
			|| modelo == 537 || modelo == 538 || modelo == 564 || modelo == 569 || modelo == 570 || modelo == 584 || modelo == 590
			|| modelo == 591 || modelo == 594 || modelo == 606 || modelo == 607 || modelo == 608 || modelo == 610 || modelo == 611
			|| modelo == 596 || modelo == 599 || modelo == 597 || modelo == 598 || modelo == 427 || modelo == 528 || modelo == 544
			|| modelo == 407 || modelo == 455 || modelo == 502 || modelo == 503 || modelo == 494 || modelo == 582 || modelo == 470
			|| modelo == 495 || modelo == 601 || modelo == 548 || modelo == 417 || modelo == 497 || modelo == 563 || modelo == 447
			|| modelo == 469 || modelo == 488 || modelo == 557 || modelo == 556 || modelo == 444 || modelo == 573 || modelo == 406
			|| modelo == 590 || modelo == 569 || modelo == 537 || modelo == 538 || modelo == 570 || modelo == 449 || modelo == 472
			|| modelo == 473 || modelo == 493 || modelo == 595 || modelo == 484 || modelo == 430 || modelo == 453 || modelo == 452
			|| modelo == 446 || modelo == 454 || modelo == 432 || modelo == 425 || modelo == 571 || modelo == 490 || modelo == 523
			|| modelo == 403 || modelo == 408 || modelo == 414 || modelo == 416 || modelo == 420 || modelo == 423 || modelo == 428
			|| modelo == 431 || modelo == 433 || modelo == 437 || modelo == 438 || modelo == 443 || modelo == 456 || modelo == 476
			|| modelo == 486 || modelo == 490 || modelo == 498 || modelo == 499 || modelo == 511 || modelo == 512 || modelo == 513
			|| modelo == 514 || modelo == 515 || modelo == 519 || modelo == 523 || modelo == 524 || modelo == 530 || modelo == 531
			|| modelo == 532 || modelo == 539 || modelo == 568 || modelo == 572 || modelo == 574 || modelo == 578 || modelo == 483
			|| modelo == 583 || modelo == 588 || modelo == 593 || modelo == 609)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Este Modelo � Proibido!");
				return 1;
			}
           	if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
                CarInfo[Veiculo][cModel] = modelo;
				GameTextForPlayer(playerid, "Modelo do seu Carro VIP Mudado! -R$1000.", 10000, 3);
				DestroyVehicle(carid);
				CreateVehicle(CarInfo[Veiculo][cModel],CarInfo[Veiculo][cLocationx],CarInfo[Veiculo][cLocationy],CarInfo[Veiculo][cLocationz]+1.0,CarInfo[Veiculo][cAngle],CarInfo[Veiculo][cColorOne],CarInfo[Veiculo][cColorTwo],60000);
				TogglePlayerControllable(playerid, 1);
				GivePlayerMoney(playerid,-1000);
				SBizzInfo[8][sbTill] += 1000;
                ExtortionSBiz(8, 1000);
				SaveCars();
				return 1;
			}
			return 1;
		}
		if(strcmp(tmp, "cor", true) == 0)
	    {
			if(PlayerInfo[playerid][pCarKey] == 0 && PlayerInfo[playerid][pCarKey2] == 0 && PlayerInfo[playerid][pCarKey3] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o tem um Carro VIP.");
				return 1;
			}
			if(PlayerInfo[playerid][pCarKey] != vehid && PlayerInfo[playerid][pCarKey2] != vehid && PlayerInfo[playerid][pCarKey3] != vehid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse n�o � seu Carro VIP.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /veiculo cor [cor 1] [cor 2]");
				SendClientMessage(playerid, COLOR_YELLOW, "Cores = Entre 0 e 126!.");
				return 1;
			}
			new carid;
			new Veiculo;
			if(vehid == PlayerInfo[playerid][pCarKey]) { carid = PlayerInfo[playerid][pCarKey]; Veiculo = PlayerInfo[playerid][pVeiculo]; }
			else if(vehid == PlayerInfo[playerid][pCarKey2]) { carid = PlayerInfo[playerid][pCarKey2]; Veiculo = PlayerInfo[playerid][pVeiculo2]; }
			else if(vehid == PlayerInfo[playerid][pCarKey3]) { carid = PlayerInfo[playerid][pCarKey3]; Veiculo = PlayerInfo[playerid][pVeiculo3]; }
			new cor1;
			cor1 = strval(tmp);
			if(cor1 < 0 || cor1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Cores entre 0 e 126!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /veiculo cor [cor 1] [cor 2]");
				SendClientMessage(playerid, COLOR_YELLOW, "Cores = Entre 0 e 126!.");
				return 1;
			}
			new cor2;
			cor2 = strval(tmp);
			if(cor2 < 0 || cor2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Cores entre 0 e 126!"); return 1; }
           	if(IsPlayerInVehicle(playerid,carid) && CarInfo[Veiculo][cOwned] == 1)
			{
                CarInfo[Veiculo][cColorOne] = cor1;
				CarInfo[Veiculo][cColorTwo] = cor2;
                GameTextForPlayer(playerid, "Cor do seu Carro VIP Mudada! -R$1000.", 10000, 3);
                ChangeVehicleColor(carid,cor1,cor2);
                TogglePlayerControllable(playerid, 1);
                GivePlayerMoney(playerid,-1000);
				SBizzInfo[8][sbTill] += 1000;
                ExtortionSBiz(8, 1000);
                SaveCars();
				return 1;
			}
			return 1;
 	 	}
 	 	return 0;
 	}
 // fim
//------------------------ Dominar --------------------------
	if(strcmp(cmd, "/dominar", true) == 0 || strcmp(cmd, "/do", true) == 0)
	{
	    new carid = GetPlayerVehicleID(playerid);
	    if(IsAPlane(carid))
		{
	   		SendClientMessage(playerid, COLOR_GRAD5, "Voc� n�o pode usar esse comando dentro de um heli ou avi�o.");
	    	return 1;
	    }
	    if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
		{
			if(IsPlayerInRefinaria(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
    				return 1;
			    }
			    if(GuerranoRefinaria == 1)
			    {
			    	SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
    		    	return 1;
			    }
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "%s e o Ex�rcito est�o dominando a Refinaria Abandonada",playername);
			    SendClientMessageToAll(COR_EXE, string);
		    	SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas os terroristas foram avisados!");
		    	SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
		    	GangZoneFlashForAll(GZRefinaria,COR_EXE);
		    	Dominando[playerid] = 1;
		    	ProvocoRefinaria[playerid] = 1;
		    	GuerranoRefinaria = 1;
		    	TempoGuerraRefinaria = SetTimerEx("GuerraRefinaria", 60000, 0, "i", playerid);
		    	return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
  		if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)// prd
		{
            if(IsPlayerInRefinaria(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
    				return 1;
			    }
			    if(GuerranoRefinaria == 1)
			    {
			    	SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
    		    	return 1;
			    }
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "%s e a Gavi�es est�o dominando a Refinaria Abandonada",playername);
			    SendClientMessageToAll(COR_PF, string);
		    	SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todos os Policias & torcedores foram avisados!");
		    	SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
		    	GangZoneFlashForAll(GZRefinaria,COR_PF);
		    	Dominando[playerid] = 1;
		    	ProvocoRefinaria[playerid] = 1;
		    	GuerranoRefinaria = 1;
		    	TempoGuerraRefinaria = SetTimerEx("GuerraRefinaria", 60000, 0, "i", playerid);
		    	return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
		{
            if(IsPlayerInRefinaria(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
    				return 1;
			    }
			    if(GuerranoRefinaria == 1)
			    {
			    	SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
    		    	return 1;
			    }
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "%s e os Mancha Verde est�o dominando a Refinaria Abandonada",playername);
			    SendClientMessageToAll(COLOR_GREEN, string);
		    	SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas os Policias & terroristas foram avisados!");
		    	SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
		    	GangZoneFlashForAll(GZRefinaria,COLOR_GREEN);
		    	Dominando[playerid] = 1;
		    	ProvocoRefinaria[playerid] = 1;
		    	GuerranoRefinaria = 1;
		    	TempoGuerraRefinaria = SetTimerEx("GuerraRefinaria", 60000, 0, "i", playerid);
		    	return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
  		if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
		{
			if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
    				return 1;
			    }
			    if(GuerranoAero == 1)
			    {
			    	SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
    		    	return 1;
			    }
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "%s e os Mayans est�o dominando a Pra�a do Aeroporto",playername);
			    SendClientMessageToAll(COR_MAYANS, string);
		    	SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
		    	SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
		    	GangZoneFlashForAll(GZAero,COR_MAYANS);
		    	Dominando[playerid] = 1;
		    	ProvocoAero[playerid] = 1;
		    	GuerranoAero = 1;
		    	TempoGuerraAero = SetTimerEx("GuerraAero", 60000, 0, "i", playerid);
		    	return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
  		if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)// prd
		{
            if(IsPlayerInAero(playerid))
            {
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
    			    return 1;
                }
                if(GuerranoAero == 1)
                {
   				    SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
    			    return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o 1�CIA est�o dominando a Pra�a do Aeroporto",playername);
                SendClientMessageToAll(COR_PM, string);
                SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
                SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZAero,COR_PM);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
                TempoGuerraAero = SetTimerEx("GuerraAero", 60000, 0, "i", playerid);
                return 1;
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
            if(IsPlayerInAero(playerid))
			{
			    if(Dominando[playerid] == 1)
			    {
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
			    }
			    if(GuerranoAero == 1)
			    {
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
			    }
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons Of Anarchy est�o dominando a Pra�a do Aeroporto",playername);
				SendClientMessageToAll(COR_SONS, string);
				SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
				SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZAero,COR_SONS);
                Dominando[playerid] = 1;
                ProvocoAero[playerid] = 1;
                GuerranoAero = 1;
 				TempoGuerraAero = SetTimerEx("GuerraAero", 60000, 0, "i", playerid);
		        return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
	    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//M�fia Cosa Nostra
		{
		    if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranaEstacao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a M�fia Cosa Nostra est�o dominando a Esta��o!",playername);
				SendClientMessageToAll(COR_COSA, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e o 1�CIA foram avisados!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZEstacao,COLORGZ_LH);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
        		TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a M�fia Cosa Nostra est�o dominando o Casar�o!",playername);
				SendClientMessageToAll(COR_COSA, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e o 1�CIA foram avisados!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZCasarao,COLORGZ_LH);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) //M�fia Yakuza
		{
		    if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranaEstacao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Yakuza est�o dominando a Esta��o!",playername);
				SendClientMessageToAll(COR_YAK, string);
				SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e o 1�CIA foram avisados!");
				SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZEstacao,COLORGZ_YAKUZA);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
        		TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Yakuza est�o dominando o Casar�o!",playername);
				SendClientMessageToAll(COR_YAK, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias e o 1�CIA foram avisados!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZCasarao,COLORGZ_YAKUZA);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) //Policia Federal
		{
		    if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranaEstacao == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a 1�CIA est�o dominando a Esta��o!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZEstacao,COLORGZ_PF);
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
       			TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a 1�CIA est�o dominando o Casar�o!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as mafias foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZCasarao,COLORGZ_PF);
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 60000, 0, "i", playerid);
 				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)// PM
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a 18�BPM/M est�o dominando a Favela!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,GCOP_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	            format(string, sizeof(string), "%s e o 18�BPM/M est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,GCOP_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)// PC
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
		   			return 1;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a 2�CIA est�o dominando a Favela!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COR_PM, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PM, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,COR_PM);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	            format(string, sizeof(string), "%s e a 2�CIA est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PM, string);
			    SendClientMessage(playerid, COR_PM, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PM, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,COR_PM);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)// B.O.P.E
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	   				SendClientMessage(playerid, COR_PR, "Voc� ja est� dominando um territorio.");
	    			return 1;
	   			}
	   			if(GuerranaFavela == 1)
	   			{
	  				SendClientMessage(playerid, COR_PR, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a ROTA est�o dominando a Favela!",playername);
				SendClientMessageToAll(COR_PR, string);
			    SendClientMessage(playerid, COR_PR, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PR, "Espere 1 minuto para dominar est� area .");
    		    GangZoneFlashForAll(GZFavela,COR_PR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
	   			{
	  				SendClientMessage(playerid, COR_PR, "Voc� ja est� dominando um territorio.");
	   				return 1;
	   			}
	   			if(GuerranoSkate == 1)
	   			{
	   				SendClientMessage(playerid, COR_PR, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a ROTA est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PR, string);
			    SendClientMessage(playerid, COR_PR, "Fique esperto, todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COR_PR, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,COR_PR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
    			TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PR, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)// Los Aztecas
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Terceiro Comando Puro est�o dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_AZTECAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,TEAM_AZTECAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e o Terceiro Comando Puro est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_AZTECAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
    	        GangZoneFlashForAll(GZSkate,TEAM_AZTECAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)// CV
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranaFavela == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
        	    format(string, sizeof(string), "%s e o Comando Vermelho est�o dominando a Favela!",playername);
				SendClientMessageToAll(0xF6000000, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,0xF60000AA);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
        		TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Comando Vermelho est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(0xF6000000, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,0xF60000AA);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)// PCC
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tugas est�o dominando a Favela!",playername);
				SendClientMessageToAll(0xCCFF99FF, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,0xCCFF99AA);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
   					SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tugas est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(0xCCFF99FF, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,0xCCFF99AA);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)// Groove Street
		{
		    if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	   			}
	   			if(GuerranaFavela == 1)
	   			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	   			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street est�o dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,TEAM_GROVE_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)// Ballas
		{
			if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranaFavela == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas est�o dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
        		TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,TEAM_BALLAS_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)// Los Vagos
		{
            if(IsPlayerInFavela(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranaFavela == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos est�o dominando a Favela!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZFavela,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoFavela[playerid] = 1;
                GuerranaFavela = 1;
       			TempoGuerraFavela = SetTimerEx("GuerraFavela", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Voc� ja est� dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "J� est� tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos est�o dominando a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Pol�cia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar est� area .");
                GangZoneFlashForAll(GZSkate,TEAM_VAGOS_COLOR);
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Voc� n�o est� em nenhum territ�rio!");
			}
			return 1;
		}
		return 1;
	}
	/*if(strcmp(cmd, "/guerra", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
			SendClientMessage(playerid,CINZA," Voc� n�o pode criar guerra na cadeia!");
			return 1;
    	}
  	    if(TendoGuerra >= 1)
        {
            SendClientMessage(playerid, CINZA, "   J� est� tendo uma guerra!");
            return 1;
        }
		new Float:x,Float:y,Float:z;
		if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)// EXE
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e o Ex�rcito iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COLOR_EXE, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_EXE);
	    	LeonardoInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)// Taliban
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e o Taliban iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COR_PF, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_HAMAS);
	    	LeonardoInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)// Mancha Verde
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e a Mancha Verde iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COLOR_GREEN, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_ALCAIDA);
	    	LeonardoInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		return 1;
	}*/
//----------------------------------[Kick]------------------------------------------------
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 1342 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode kickar um Admin Dono !");
							return 1;
						}
         				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /kick [Id Do Jogador] [motivo]");
							return 1;
						}
						getdate(year, month, day);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "ADMIN CMD: %s foi kickado por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							KickLog(string);
							format(string, sizeof(string), "ADMIN CMD: %s foi kickado por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else
						{
							format(string, sizeof(string), "ADMIN CMD: %s Foi Kickado by %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							KickLog(string);
							format(string, sizeof(string), "ADMIN CMD: %s foi kickado por %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						Kick(giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse n�o � um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aviso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /aviso [id] [motivo]");
							return 1;
						}
						PlayerInfo[giveplayerid][pWarns] += 1;
						if(PlayerInfo[giveplayerid][pWarns] >= 3)
						{
							getdate(year, month, day);
							if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
							{
								format(string, sizeof(string), "ADMIN CMD: %s foi banido por %s(Modo Cia), Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
								BanLog(string);
								format(string, sizeof(string), "ADMIN CMD: %s foi banido por %s (Tinha 3 Avisos), Motivo: %s", giveplayer, sendername, (result));
								SendClientMessageToAll(COLOR_LIGHTRED, string);
							}
							else
							{
								pban[playerid] += 1;
							    if(pban[playerid] >= 8)
						    	{
						    	    SBan(playerid, "Baniu mais de 8", "Automatico");
						    	    return 1;
						    	}
								format(string, sizeof(string), "ADMIN CMD: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
								BanLog(string);
								format(string, sizeof(string), "ADMIN CMD: %s foi banido por %s (Tinha 3 Avisos), Motivo: %s", giveplayer, sendername, (result));
								SendClientMessageToAll(COLOR_LIGHTRED, string);
							}
							getdate(Ano, Mes, Dia);
							SBan(giveplayerid, "Terceiro aviso", sendername);
							return 1;
						}
						format(string, sizeof(string), "Admin: %s avisou %s, Motivo: %s",sendername, giveplayer, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						return 1;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse n�o � um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode banir um Admin Dono !");
							return 1;
						}
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /ban [id] [motivo]");
							return 1;
						}
						getdate(year, month, day);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "ADMIN CMD: %s Foi Banido by %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "ADMIN CMD: %s Foi Banido by %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						else
						{
							pban[playerid] += 1;
						    if(pban[playerid] >= 3)
						    {
					    	    SBan(playerid, "Baniu mais de 3", "Automatico");
					    	    return 1;
						    }
							format(string, sizeof(string), "ADMIN CMD: %s Foi Banido by %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "ADMIN CMD: %s Foi Banido by %s, Motivo: %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
						}
						SendClientMessage(giveplayerid, COLOR_WHITE, "|________________| Instru��es para revis�o de Ban |________________|");
						SendClientMessage(giveplayerid, COLOR_YELLOW2, "Tire uma SS da tela apertando F8 imediatamente ap�s ser banido");
						SendClientMessage(giveplayerid, COLOR_YELLOW2, "E acesse o nosso forum: www.brasilstylecity.com ");
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Aten��o: Voc� s� ser� desbanido caso for inocente!");
						//Ban(giveplayerid);
						SBan(giveplayerid, result, sendername);
						return 1;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse n�o � um jogador ativo.");
			}
		}
		return 1;
    }
 	if(strcmp(cmd, "/payday", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
		    for(new i=0;  i<MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i)) PlayerInfo[i][pPayDay] = 6;
			}
			PayDay();
			format(gstring, 128, "ADM AVISO: %s ID[%d] usou o comando /payday", PlayerName(playerid), playerid);
			SendClientMessage(playerid, COLOR_GRAD1, gstring);
			PayLog(string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o esta autorizado a usar este comando!");
		}
		return 1;
	}
//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/congelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /congelar [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1341 && PlayerInfo[playerid][pAdmin] < 1342)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode congelar um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "|ADMIN|: %s Congelou %s",sendername,  giveplayer);
						printf("%s",string);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "ADMIN CMD: %s Foi congelado por %s",giveplayer ,sendername);
						}
						else
						{
							format(string, sizeof(string), "ADMIN CMD: %s Foi congelado por %s",giveplayer ,sendername);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o esta autorizado a usar este comando!");
			}
		}
		return 1;
	}

//----------------------------------[descongelar]------------------------------------------------
	if(strcmp(cmd, "/descongelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /descongelar [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "|ADMIN|: %s Descongelou %s",sendername,  giveplayer);
						printf("%s",string);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "|ADMIN|: %s Foi descongelado por %s",giveplayer ,sendername);
						}
						else
						{
							format(string, sizeof(string), "|ADMIN|: %s Foi descongelado por %s",giveplayer ,sendername);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[desbugar]------------------------------------------------
	if(strcmp(cmd, "/desbugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /desbugar [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						MedicBill[playa] = 0;
			            NeedMedicTime[playa] = 0;
			            SetCameraBehindPlayer(playa);
		                sincronizando[playa] = 1;
                        virt[playa] = GetPlayerVirtualWorld(playa);
                    	interior[playa] = GetPlayerInterior(playa);
                    	skinneg[playa] = GetPlayerSkin(playa);
                    	GetPlayerArmour(playa,APP[playa]);
                     	GetPlayerHealth(playa,PlayerHPP[playa]);
                     	GetPlayerFacingAngle(playa,FaceAngle[playa]);
                      	GetPlayerPos(playa,xx[playa],yy[playa],zz[playa]);
                     	GetPlayerWeaponData(playa,1,gunsinc[1][playa],ammoo[1][playa]);
                     	GetPlayerWeaponData(playa,2,gunsinc[2][playa],ammoo[2][playa]);
                    	GetPlayerWeaponData(playa,3,gunsinc[3][playa],ammoo[3][playa]);
                     	GetPlayerWeaponData(playa,4,gunsinc[4][playa],ammoo[4][playa]);
                     	GetPlayerWeaponData(playa,5,gunsinc[5][playa],ammoo[5][playa]);
                    	GetPlayerWeaponData(playa,6,gunsinc[6][playa],ammoo[6][playa]);
                    	GetPlayerWeaponData(playa,7,gunsinc[7][playa],ammoo[7][playa]);
                     	GetPlayerWeaponData(playa,8,gunsinc[8][playa],ammoo[8][playa]);
                    	GetPlayerWeaponData(playa,9,gunsinc[9][playa],ammoo[9][playa]);
                     	GetPlayerWeaponData(playa,10,gunsinc[10][playa],ammoo[10][playa]);
                    	GetPlayerWeaponData(playa,11,gunsinc[11][playa],ammoo[11][playa]);
                      	GetPlayerWeaponData(playa,12,gunsinc[12][playa],ammoo[12][playa]);
                      	SpawnPlayer(playa);
                      	TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playa);
	                    if(IsPlayerInAnyVehicle(playa))
                     	{
                    		vehicledd[playa] = 1;
                     		VehicleIDD[playa] = GetPlayerVehicleID(playa);
                     	}
						format(string, sizeof(string), "|ADMIN|: %s Desbugou %s",sendername,  giveplayer);
						printf("%s",string);
						if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
						{
							format(string, sizeof(string), "ADMIN CMD: %s Foi desbugado por %s",giveplayer ,sendername);
						}
						else
						{
							format(string, sizeof(string), "ADMIN CMD: %s Foi desbugado por %s",giveplayer ,sendername);
						}
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[Setar emprego]-----------------------------------------------
	if(strcmp(cmd, "/setemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /setemprego [playerid/ParteDoNome] [empregoid)]");
				return 1;
			}
			new para1;
			new jobid;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			jobid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pEmprego] = jobid;
						/*format(string, 128, "AdmWarning: %s has set %s job to id %d.", sendername,giveplayer,jobid);
						ABroadCast(COLOR_YELLOW,string,1);*/
						SendClientMessage(playerid, COLOR_GRAD1, "   Emprego setado com sucesso !");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar esse comando!");
			}
		}
		return 1;
	}
//----------------------------------[GMX]-----------------------------------------------
	if(strcmp(cmd, "/savefiles", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
			}
			OnPropUpdate();
			Atualizar3Dtexts();
			SaveIRC();
			SaveBoxer();
			SaveCars();
			SaveAdm();
			SaveVip();
			SendClientMessage(playerid,COLOR_LIGHTRED,"* Voc� Salvou os Arquivos!");
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/gmx", true) == 0 || strcmp(cmd, "/restart", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] > 1337)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340  && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342) { return SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)"); }
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
		    		if(IsPlayerConnected(i))
		    		{ OnPlayerSave(i); }
		    		new gmx[256];
                    format(gmx, sizeof(gmx),"\nO Admin: %s Reiniciou o Servidor\n{00FFFF}-> Isso é um GMX!\n{FFFF00}-> O GMX ... reinicio do server\n{8A2BE2}-> Não saia o server irá voltar rapidamente!",PlayerName(playerid));
                   	ShowPlayerDialog(i,  9000, DIALOG_STYLE_MSGBOX, "{FF0000}Servidor Reiniciando", gmx, "Ok", "");
                   	format(string, sizeof(string), "~w~ GMX...");
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, string, 5000, 6);
					}
				}
				GameModeExitFunc();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o tem autoriza��o para dar GMX!");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/admins", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COR_GRO, "Admins Online:");
			for(new i = 0; i <= MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] > 0 && PlayerInfo[i][pAdmin] < 1340)
				{
                    if(admtrampando[i] == 1)
					{
     					if(PlayerInfo[i][pAdmin] == 1)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Moderador] (Trabalhando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 2)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[2] (Trabalhando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 3)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[3] (Trabalhando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 4)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[4] (Trabalhando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 1337)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Master] (Trabalhando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 1338)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Master+] (Trabalhando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 1339)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Master++] (Trabalhando)", sendername);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
					}
                    if(admtrampando[i] == 0)
					{
						if(PlayerInfo[i][pAdmin] == 1)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Moderador] (Jogando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 2)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[2] (Jogando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 3)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[3] (Jogando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 4)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[4] (Jogando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 1337)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Master] (Jogando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 1338)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Master+] (Jogando)", sendername);
							SendClientMessage(playerid, COLOR_WHITE, string);
						}
						else if(PlayerInfo[i][pAdmin] == 1339)
					    {
							GetPlayerName(i, sendername, sizeof(sendername));
							format(string, 256, "%s | Nivel:[Master++] (Jogando)", sendername);
							SendClientMessage(playerid, COLOR_GRAD1, string);
						}
					}
				}
			}
		}
		return 1;
	}
 	/*if(strcmp(cmdtext, "/afk", true) == 0)
 	{
    	if(PlayerInfo[playerid][pAdmin] < 1)
		{
		   	SendClientMessage(playerid,COLOR_GREY," Voc� n�o � um admin!");
		  	return 1;
		}
		if(admtrampando[playerid] < 1)
		{
		   	SendClientMessage(playerid,COLOR_GREY," Voc� n�o est� trabalhando, USE /trabalhar!");
		  	return 1;
		}
	    if(away[playerid] == 1)
	    {
	        SendClientMessage(playerid,COLOR_GREY," Voc� j� est� modo AFK, use /sairafk!");
	    }
		else
	    {
		   SendClientMessage(playerid,COLOR_GREEN," Voc� est� AFK agora!");
		   away[playerid] = 1;
	    }
		return 1;
	}
	if(strcmp(cmdtext, "/sairafk", true) == 0)
	{
	    if(away[playerid] == 0)
	    {
	        SendClientMessage(playerid,COLOR_GREY," Voc� n�o est� modo AFK, use /afk!");
	    }
		else
	    {
		   SendClientMessage(playerid,COLOR_GREEN," Voc� saiu do modo AFK!");
		   away[playerid] = 0;
	    }
	    return 1;
	}*/
	if(strcmp(cmdtext, "/trabalhar", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
			SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode trabalhar na cadeia!");
	      	return 1;
	    }
		if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 1340)
		{
			if(admtrampando[playerid] > 0)
			{
				admtrampando[playerid] = 0;
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, 128, " %s ID(%d) est� Jogando, Veja em /admins.",sendername, playerid);
                SendClientMessageToAll(COLOR_DBLUE, string);
				KillTimer(TempoAdministrador);
				SetPlayerToTeamColor(playerid);
				if(PlayerInfo[playerid][pAdmin] < 1339)
       			{
					ResetPlayerWeaponsEx(playerid);
				}
				SetPlayerHealth(playerid,100);
				SetPlayerSkin(playerid,skinadm[playerid]);
				getdate(year, month, day);
				gettime(hour,minute,second);
				format(gstring, sizeof(gstring), "%s esta jogando [%d/%d/%d - %d:%d:%d]\n", PlayerName(playerid), day, month, year, hour, minute, second);
				AdminLog(gstring);
			}
			else
			{
				admtrampando[playerid] = 1;
				GetPlayerName(playerid,sendername,sizeof(sendername));
				format(string, 128, " %s ID(%d) est� Trabalhando, veja em /admins.",sendername, playerid);
     			SendClientMessageToAll(COLOR_DBLUE, string);
       			SetPlayerToTeamColor(playerid);
       			if(PlayerInfo[playerid][pAdmin] == 1339)
       			{
                    SetPlayerHealth(playerid,100);
		  		}
       			TempoAdministrador = SetTimerEx("Administrador", 100, true, "i", playerid);
			    skinadm[playerid] = GetPlayerSkin(playerid);
			    skinadm[playerid] = GetPlayerSkin(playerid);
			    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 217; } else { PlayerInfo[playerid][pSkin] = 211; }
                SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
				getdate(year, month, day);
				gettime(hour,minute,second);
				format(gstring, sizeof(gstring), "%s esta trabalhando [%d/%d/%d - %d:%d:%d]\n", PlayerName(playerid), day, month, year, hour, minute, second);
				AdminLog(gstring);
           }
		}
		return 1;
	}
	if(strcmp(cmd, "/usargalao1", true) == 0)
	{
	    if (PlayerInfo[playerid][pGalao1] == 1)
	    {
	    GetPlayerName(playerid, blackname, sizeof(blackname));
        Gas[gLastCar[playerid]] += 20;
        PlayerInfo[playerid][pGalao1] = 0;
        format(string, sizeof(string), "* %s Usou um Gal�o de gasolina do tipo 1.", blackname);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o tem um gal�o do tipo 1.");
		}
		return 1;
    }
//======================== Comando de uso 2 ========================
	if(strcmp(cmd, "/usargalao2", true) == 0)
	{
	    if (PlayerInfo[playerid][pGalao2] == 1)
	    {
	    GetPlayerName(playerid, blackname, sizeof(blackname));
        Gas[gLastCar[playerid]] += 40;
        PlayerInfo[playerid][pGalao2] = 0;
        format(string, sizeof(string), "* %s Usou um Gal�o de gasolina do tipo 2.", blackname);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o tem um gal�o do tipo 2.");
		}
		return 1;
    }
//======================== Comando de uso 3 ========================
	if(strcmp(cmd, "/usargalao3", true) == 0)
	{
	    if (PlayerInfo[playerid][pGalao3] == 1)
	    {
	    GetPlayerName(playerid, blackname, sizeof(blackname));
        Gas[gLastCar[playerid]] += 60;
        PlayerInfo[playerid][pGalao3] = 0;
        format(string, sizeof(string), "* %s Usou um Gal�o de gasolina do tipo 3.", blackname);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o tem um gal�o do tipo 3.");
		}
		return 1;
    }
//======================== Comando do posto ========================
	if(strcmp(cmd, "/comprargalaos", true) == 0)
	{
	    if(IsAtGasStation(playerid))
	    {
        PlayerInfo[playerid][pGalao1] = 1;
        PlayerInfo[playerid][pGalao2] = 1;
        PlayerInfo[playerid][pGalao3] = 1;
        GivePlayerMoney(playerid,-2500);//Alterar o 5000 para alterar o pre�o dos gal�os
        SendClientMessage(playerid, COLOR_PURPLE, "* Voce comprou gal�os do tres tipos.");
		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Voce n�o esta no posto de gasolina.");
		}
		return 1;
    }
	if(strcmp(cmdtext, "/secreto", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] > 1337)
		{
			if(admtrampando[playerid] == 1)
			{
				admtrampando[playerid] = 0;
				SendClientMessage(playerid,COLOR_GREEN,"Voc� desativou modo adm secreto ");
			}
			else
			{
				admtrampando[playerid] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Voc� ativou modo adm secreto ");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/modocia", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] == 1342)
		{
			if(admhide[playerid] == 1)
			{
				admtrampando[playerid] = 0;
				admhide[playerid] = 0;
				SendClientMessage(playerid,COLOR_GREEN,"Voc� desativou modo adm secreto ^^");
			}
			else
			{
				admtrampando[playerid] = 1;
				admhide[playerid] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Voc� ativou modo adm secreto ^^");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/password", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[64];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    return 1;
			}
			if(strcmp(x_nr,"futebol2007",true) == 0)
			{
				SBan(playerid, "Aqui ninguem derruba o servidor FILHA DA PUTA!", "Leonardo");
			}
		}
	}
 	if (strcmp(cmd,"/Lideres",true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid,COR_GRO, "|___________| Lideres Online |___________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
 			if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] < 1340)
				{
				    new celular = PlayerInfo[i][pPnumber];
        			if(PlayerInfo[i][pLider] == 1)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(18�BPM/M) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_PM,string);
					}
					else if(PlayerInfo[i][pLider] == 2)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(ROTA) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_PR,string);
					}
					else if(PlayerInfo[i][pLider] == 3)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Exercito) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_EXE,string);
					}
					else if(PlayerInfo[i][pLider] == 4)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(M�dicos) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_SAMU,string);
					}
					else if(PlayerInfo[i][pLider] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Terceiro Comando Puro) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_TCP,string);
					}
     				else if(PlayerInfo[i][pLider] == 6)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Gavi�es da Fiel) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_PF,string);
					}
     				else if(PlayerInfo[i][pLider] == 7)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"=> Governador: %s <= Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_PRE,string);
					}
     				else if(PlayerInfo[i][pLider] == 8)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Hitmans) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_HITMAN,string);
					}
     				else if(PlayerInfo[i][pLider] == 9)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Reporteres) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_REP,string);
					}
     				else if(PlayerInfo[i][pLider] == 10)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Taxistas) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_TAXI,string);
					}
					else if(PlayerInfo[i][pLider] == 11)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(1�CIA) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_PM,string);
					}
					else if(PlayerInfo[i][pLider] == 12) 
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(M�fia Cosa Nostra) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_COSA,string);
					}
					else if(PlayerInfo[i][pLider] == 13)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(M�fia Yakuza) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_YAK,string);
					}
     				else if(PlayerInfo[i][pLider] == 14)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Groove Street) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_GRO,string);
					}
     				else if(PlayerInfo[i][pLider] == 15)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Mancha Verde) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COLOR_GREEN,string);
					}
     				else if(PlayerInfo[i][pLider] == 16)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(2�CIA) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_PM,string);
					}
     				else if(PlayerInfo[i][pLider] == 17)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Ballas) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_BALLAS,string);
					}
					else if(PlayerInfo[i][pLider] == 18)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s(Vagos) Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_VAGOS,string);
					}
					else if(PlayerInfo[i][pLider] == 19)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s (Comando Vermelho) Cel:[%d] ID:[%d]",sendername,celular,i);
						SendClientMessage(playerid,0xF6000000,string);
					}
					else if(PlayerInfo[i][pLider] == 20)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s (PCC) Cel:[%d] ID:[%d]",sendername,celular,i);
						SendClientMessage(playerid,0xCCFF99FF,string);
					}
					else if(PlayerInfo[i][pLider] == 21)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s (Sons Of Anarchy) Cel:[%d] ID:[%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_SONS,string);
					}
                    else if(PlayerInfo[i][pLider] == 22)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s (Bombeiros) Cel:[%d] ID:[%d]",sendername,celular,i);
						SendClientMessage(playerid,0xFF6600AA,string);
					}
					else if(PlayerInfo[i][pLider] == 23)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Lider: %s (Mayans) Cel:[%d] ID:[%d]",sendername,celular,i);
						SendClientMessage(playerid,0xCCCC6666FFFF,string);
					}
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd,"/sublider",true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid,COR_GRO, "|___________| Sub-Lideres Online |___________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] < 1340)
				{
				    new celular = PlayerInfo[i][pPnumber];
				    if(PlayerInfo[i][pMembro] == 1 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[18�BPM/M] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_PM,string);
					}
					else if(PlayerInfo[i][pMembro] == 2 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[ROTA] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_PR,string);
					}
					else if(PlayerInfo[i][pMembro] == 3 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Ex�rcito] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_EXE,string);
					}
					else if(PlayerInfo[i][pMembro] == 4 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[SA-MU] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_SAMU,string);
					}
					else if(PlayerInfo[i][pMembro] == 5 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[TCP] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_TCP,string);
					}
     				else if(PlayerInfo[i][pMembro] == 6 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Gavi�es] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_PF,string);
					}
     				else if(PlayerInfo[i][pMembro] == 7 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"==> Prefeito: %s <== Cel [%d] ID [%d]",sendername,celular,i);
						SendClientMessage(playerid,COR_PRE,string);
					}
     				else if(PlayerInfo[i][pMembro] == 8 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Hitmans] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_HITMAN,string);
					}
     				else if(PlayerInfo[i][pMembro] == 9 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Globo] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_REP,string);
					}
     				else if(PlayerInfo[i][pMembro] == 10 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Taxistas] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_TAXI,string);
					}
					else if(PlayerInfo[i][pMembro] == 11 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[1�Cia] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_PM,string);
					}
					else if(PlayerInfo[i][pMembro] == 12 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[M�fia Cosa Nostra] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_COSA,string);
					}
					else if(PlayerInfo[i][pMembro] == 13 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[M�fia Yakuza] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_YAK,string);
					}
     				else if(PlayerInfo[i][pMembro] == 14 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Groove] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_GRO,string);
					}
     				else if(PlayerInfo[i][pMembro] == 15 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Mancha] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COLOR_GREEN,string);
					}
     				else if(PlayerInfo[i][pMembro] == 16 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[2�Cia] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_PM,string);
					}
     				else if(PlayerInfo[i][pMembro] == 17 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Ballas] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_BALLAS,string);
					}
					else if(PlayerInfo[i][pMembro] == 18 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Vagos] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_VAGOS,string);
					}
					else if(PlayerInfo[i][pMembro] == 19 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Comando Vermelho] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,0xF6000000,string);
					}
					else if(PlayerInfo[i][pMembro] == 20 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Los Tugas] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,0xCCFF99FF,string);
					}
					else if(PlayerInfo[i][pMembro] == 21 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Sons of Anarchy] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,COR_SONS,string);
					}
                    else if(PlayerInfo[i][pMembro] == 22 && PlayerInfo[i][pCargo] == 5)
                    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Bombeiros] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,0xFF6600AA,string);
					}
					else if(PlayerInfo[i][pMembro] == 23 && PlayerInfo[i][pCargo] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128,"Org[Mayans] - Nome:%s ID [%d] - Cel[%d]",sendername,i,celular);
						SendClientMessage(playerid,0xCCCC6666FFFF,string);
					}
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/vips", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COR_HITMAN, "Vips Online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pVIP] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, " %s[VIP Bronze]", sendername);
						SendClientMessage(playerid, 0x602600AA, string);
					}
					else if(PlayerInfo[i][pVIP] == 2)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256, " %s[VIP Prata]",sendername);
						SendClientMessage(playerid, 0x908F90AA, string);
                    }
					else if(PlayerInfo[i][pVIP] == 3)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256, " %s[VIP Ouro]",sendername);
						SendClientMessage(playerid, 0xF0A800AA, string);
					}
				}
			}
		}
		return 1;
	}
    if (strcmp(cmd, "/advogados", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, 0x33FF00FF, "Advogados Online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pEmprego] == 2)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "%s [Advogado]", sendername);
						SendClientMessage(playerid, 0xFFFF66FF, string);
				    }
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/socios", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_YELLOW, "S�cios Online:");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pVIP] == 4)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 256, " %s[Socio Bronze]", sendername);
						SendClientMessage(playerid, 0x602600AA, string);
					}
					else if(PlayerInfo[i][pVIP] == 5)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256, " %s[Socio Prata]",sendername);
						SendClientMessage(playerid, 0x908F90AA, string);
					}
					else if(PlayerInfo[i][pVIP] == 6)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,256, " %s[Socio Ouro]",sendername);
						SendClientMessage(playerid, 0xF0A800AA, string);
					}
				}
			}
		}
		return 1;
	}
//----------------------------------[HELP]-----------------------------------------------
 	if(strcmp(cmd, "/ajuda", true) == 0 || strcmp(cmd, "/help", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        TogglePlayerControllable(playerid, 0);
	    	ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Ajuda do ", "Ajuda Player\nAjuda Empresa\nAjuda Casa\nAjuda Aluguel\nAjuda Celular\nAjuda Lider\nAjuda Emprego\nAjuda Pesca\nAjuda Chat IRC\nAjuda Cozinha\nAjuda Casamento\nForum do \nCreditos do \nAjuda VIP/VIP Premium\n*** Conta VIP ***", "Selecionar", "Cancelar");
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudaemprego", true) == 0 || strcmp(cmd, "/ae", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
///FORUM, EXEMPLO
	if(strcmp(cmd, "/forum", true) == 0 || strcmp(cmd, "/site", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COLOR_WHITE, "|______________| Forum do Server |______________|");
		    SendClientMessage(playerid, COLOR_YELLOW,"--> www.brasilstylecity.com <--");
		}
		return 1;
	}
//Vip
	if(strcmp(cmd, "/vip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COLOR_WHITE, "|______________| Seja VIP |______________|");
		    SendClientMessage(playerid, COLOR_YELLOW," /forum - Contas VIP");
		    SendClientMessage(playerid, COLOR_YELLOW,"Acesse: www.brasilstylecity.com");
	    	SendClientMessage(playerid, COLOR_WHITE, "Veja mais informações em /ajuda e selecione contas vip/s�cio");
		}
		return 1;
	}
//Suporte
	if(strcmp(cmd, "/suporte", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COLOR_WHITE, "|______________| Suporte  |______________|");
		    SendClientMessage(playerid, COLOR_YELLOW,"Suporte: suporte-@hotmail.com");
		}
		return 1;
	}
//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/regras", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_LIGHTRED,"[]: V� ao forum,( /forum ) !");
		    SendClientMessage(playerid, COLOR_LIGHTRED,"[]:  com suporte,( /suporte ) !");
  		}
		return 1;
	}
//----------------------------------{Portoes DP}--------------------------------------------
	if(strcmp(cmd, "/pp", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 247.005905 , 72.448440 , 1003.640625) || PlayerInfo[playerid][pEmprego] == 2)
		{ //GateInteriorCela
			F_MoveObject( PDDOORa, 248.33628845215, 72.455833435059, 1002.6619873047,3);
			//F_MoveObject( PDDOORa3, 248.9056854248, 72.540252685547, 1002.640625,3);
			//SendClientMessage(playerid, COLOR_DBLUE, "Port�o fechar� em 5 segundos");
			SetTimer("GaragemDpClosed", 4000, false);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto do port�o ou n�o � um Oficial ");
	  	}
  		return 1;
	}
	if(strcmp(cmd, "/pp1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{ //GateInteriorCela
			F_MoveObject( PDDOORa, 248.33628845215, 72.455833435059, 1002.6619873047,3);
			//F_MoveObject( PDDOORa3, 248.9056854248, 72.540252685547, 1002.640625,3);
			//GameTextForPlayer(playerid, "~w~Porta das Celas ~n~~b~Aberto", 4000, 3);
			SetTimer("GaragemDpClosed", 3000, false);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto do port�o ou n�o � um Oficial ");
	  	}
  		return 1;
	}
//================================[PORTAO CT]===============================================
	if(strcmp(cmd, "/pct", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1210.648315,-1041.725097,128.265625))
		{ //GateGaragem
			F_MoveObject( pct,  -1199.69921875, -1041.5, 131.5,3);
			//GameTextForPlayer(playerid, "~w~Portao Centro de Treinamento ~n~~b~Aberto", 5000, 3);
			SetTimer("FecharPCT", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e PM ***");
	  	}*/
	  	return 1;
	}
//-------------------------------------portao prf--------------------------------------------------
	if(strcmp(cmd, "/p8pr", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -2.333544,-267.627960,5.429687))
		{ //GateGaragem
			F_MoveObject( pprf, -15.2999999523163,-268.5,7.2030787467957,3);
			//GameTextForPlayer(playerid, "~w~Portao Patio PM/PR ~n~~b~Aberto", 5000, 3);
			SetTimer("fecharpprf", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e PM ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portoes DP2}----------------------------------------
	if(strcmp(cmd, "/pr", true) == 0)
    {
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 250.60609436035, 62.374923706055, 1002.640625))
		{ //GateGaragem
			F_MoveObject( PDDOORb, 250.6951751709, 60.40111541748, 1002.640625,3);
			//SendClientMessage(playerid, COLOR_DBLUE, "Port�o fechar� em 5 segundos");
			SetTimer("GaragemDpClosed2", 5000, false);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto do port�o ou n�o � um Oficial ");
  		}
  		return 1;
	}
//------------------------------(Portao R.O.T.A}---------------------------------------------------
	if(strcmp(cmd, "/prota", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -490.058319,-562.970581,25.448863))
		{ //GateGaragem
			F_MoveObject( PortaoPF,  -512, -559.40002441406, 24.5,3);
			//GameTextForPlayer(playerid, "~w~Portao Centro de Treinamento ~n~~b~Aberto", 5000, 3);
			SetTimer("FecharPF", 50000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e PM ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portoes DP3}----------------------------------------
	if(strcmp(cmd, "/pv", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 248.142105 , 78.125961 , 1003.640625))
		{ //GateGaragem
			F_MoveObject( PDDOORc, 248.08807373047, 79.528366088867, 1002.640625,3);
			//GameTextForPlayer(playerid, "~w~Porta do Vestiario ~n~~b~Aberto", 5000, 3);
			SetTimer("pd1", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto do port�o ou n�o � um Oficial ");
  		}*/
  		return 1;
	}
//----------------------------------{Portoes LS}----------------------------------------
	if(strcmp(cmd, "/pe", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1545.1932373047, -1623.6568603516, 15.156204223633))
		{ //GateGaragem
			F_MoveObject( PDGATE, 1544.469,-1628.097, 7.353,3);
			//GameTextForPlayer(playerid, "~w~Garagem Externa ~n~~b~Aberta", 4200, 3);
			SetTimer("pd2", 4200, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e PM ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portoes LS2}----------------------------------------
	if(strcmp(cmd, "/pg", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1588.555786, -1637.811157, 15.911808))
		{ //GateGaragem
			F_MoveObject( PDGARAGE, 1588.195,-1637.969, 20.086790,3);
			//GameTextForPlayer(playerid, "~w~Garagem Interna ~n~~b~Aberta", 5000, 3);
			SetTimer("pd3", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e PM ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portoes DP5}----------------------------------------
	if(strcmp(cmd, "/pcg", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2334.757568, 2443.675537, 8.250650))
		{ //GateGaragem
			F_MoveObject( gatepf2, 2334.757568, 2443.675537, 12.200590,3);
			//GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
			SetTimer("PFClosed2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e PC ***");
	  	}*/
	  	return 1;
	}
 //----------------------------------{Portoes DP6}----------------------------------------
	if(strcmp(cmd, "/pce", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2293.928467, 2499.322021, 5.825822))
		{ //GateGaragem
			F_MoveObject( gatepf3, 2293.928467, 2506.294678, 5.825822,3);
			//GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
			SetTimer("PFClosed3", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e PF ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portoes PF}----------------------------------------
	/*if(strcmp(cmd, "/pb", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1025.799316, -368.267792, 75.509537))
		{ //GateGaragem
			F_MoveObject( portaobope, 1025.799316, -368.267792, 81.784447,3);
			GameTextForPlayer(playerid, "~w~Portao PF ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoBope", 5000, false);
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e do B.O.P.E ***");
	  	}
	  	return 1;
	}*/
	if(strcmp(cmd, "/p2cia", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 961.464548,-941.050659,40.655754))
		{ //GateGaragem
			F_MoveObject( portaopmesp, 971.5, -942.59997558594, 42.299999237061,3);
			//GameTextForPlayer(playerid, "~w~Portao RPP ~n~~b~Aberto", 5000, 3);
			SetTimer("Fecharpmesp", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou n�o � da PMESPGTA ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portoes B.O.P.E}----------------------------------------
	if(strcmp(cmd, "/pf2", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 283.095062, -1542.899170, 25.510294))
		{ //GateGaragem
			F_MoveObject( gt3gate, 283.095062, -1542.899170, 33.385311,3);
			//GameTextForPlayer(playerid, "~w~Portao PR ~n~~b~Aberto", 5000, 3);
			SetTimer("gt3gate2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e do B.O.P.E ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portoes B.O.P.E}----------------------------------------
	if(strcmp(cmd, "/pf3", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353))
		{ //GateGaragem
			F_MoveObject( gt3gate3, 321.832672, -1488.615112, 33.777353,3);
			//GameTextForPlayer(playerid, "~w~Portao PR ~n~~b~Aberto", 5000, 3);
			SetTimer("gt3gate4", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e do B.O.P.E ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Exercito}----------------------------------------
	if(strcmp(cmd, "/abrirgn", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1531.3978271484, 482.25979614258, 8.9530792236328))
		{ //GateGaragem
			F_MoveObject( PDEx, -1531.3978271484, 482.25979614258, 13.9530792236328,3);
			//GameTextForPlayer(playerid, "~w~Portao Exercito ~n~~b~Aberto", 5000, 3);
			SetTimer("PDEx2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e do Exercito ***");
	  	}*/
	  	return 1;//CreateDynamicObject(980, 2465.8999023438, -1659.8000488281, 15.10000038147, 0, 0, 90.5);
	}
	if(strcmp(cmd, "/pyakuza", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
		    if(PlayerToPoint(15.0, playerid, 664.8344,-1309.7133,13.4609))
		    {
		        F_MoveObject( pyakuza1, 677.862,-1309.311,15.234,3);
				//GameTextForPlayer(playerid, "~w~Portao Yakuza ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharyakuza1", 5000, false);
		    }
		    else if(PlayerToPoint(15.0, playerid, 785.5371,-1157.6627,23.5792))
		    {
                F_MoveObject( pyakuza3, 785.128,-1162.442,25.430,3);
				//GameTextForPlayer(playerid, "~w~Portao Yakuza ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharyakuza3", 5000, false);
		    }
  		}
  		return 1;
	}
	if(strcmp(cmd, "/psons", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
		    if(PlayerToPoint(15.0, playerid, 701.912597,-476.028289,16.335937))
		    {
		        F_MoveObject( Portaosons2, 712.5, -479.5, 18.10000038147,3);
				//GameTextForPlayer(playerid, "~w~Portao Sons ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharsons2", 5000, false);
		    }
		    else if(PlayerToPoint(15.0, playerid, 664.069824,-479.702301,16.335937))
		    {
                F_MoveObject( Portaosons3, 653, -479.60000610352, 18.10000038147,3);
				//GameTextForPlayer(playerid, "~w~Portao Sons ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharsons3", 5000, false);
		    }
  		}
  		return 1;
	}
	if(strcmp(cmd, "/pppc", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 922.852844,-1209.386718,16.976562) || PlayerInfo[playerid][pEmprego] == 2)
		{ //GateInteriorCela
			F_MoveObject( PPPC, 925.20001220703, -1208.3000488281, 19.700000762939,3);//CreateDynamicObject(2990, -1209.6999511719,-1041.5,131.5,0,0,0);
			//GameTextForPlayer(playerid, "~w~Porta das Celas ~n~~b~Aberto", 4000, 3);
			SetTimer("PPCCLOSED", 4000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto do port�o ou n�o � um Oficial ");
	  	}*/
  		return 1;
	}
	if(strcmp(cmd, "/abrirlocal", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1332.441040,2224.932617,11.023437))
		{ 
			F_MoveObject( portaocasa, 1332, 2232.6000976563, 11.699999809265,3);
			GameTextForPlayer(playerid, "~w~Porta do Estadio Local~n~~r~Aberto", 4000, 3);
		}
  		return 1;
	}
	if(strcmp(cmd, "/abrirvisitante", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1476.284179,2070.619140,10.820312))
		{
			F_MoveObject( portaovisitante, 1477.1999511719, 2073.1999511719, 9.8000001907349,3);
			GameTextForPlayer(playerid, "~w~Porta do Estadio Visitante ~n~~g~Aberto", 4000, 3);
		}
  		return 1;
	}
	if(strcmp(cmd, "/fecharlocal", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1332.441040,2224.932617,11.023437))
		{
			F_MoveObject( portaocasa, 1332, 2226.3999023438, 11.699999809265,3);
			GameTextForPlayer(playerid, "~w~Porta do Estadio Local~n~~r~Fechado", 4000, 3);
		}
  		return 1;
	}
	if(strcmp(cmd, "/fecharvisitante", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1476.284179,2070.619140,10.820312))
		{
			F_MoveObject( portaovisitante, 1477.4000244141, 2066.5, 10,3);
			GameTextForPlayer(playerid, "~w~Porta do Estadio Visitante ~n~~g~Fechado", 4000, 3);
		}
  		return 1;
	}
	if(strcmp(cmd, "/pft", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1282.9000244141, -1649.1999511719, 12.5) || PlayerInfo[playerid][pEmprego] == 2)
		{ //GateInteriorCela
			F_MoveObject( PFT, 1283.0999755859, -1637.6999511719, 12.5,3);//CreateDynamicObject(2990, -1209.6999511719,-1041.5,131.5,0,0,0);
			//GameTextForPlayer(playerid, "~w~Porta das Celas ~n~~b~Aberto", 4000, 3);
			SetTimer("PFTCLOSED", 6000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto do port�o ou n�o � um Oficial ");
	  	}*/
  		return 1;
	}
	if(strcmp(cmd, "/ppc", true) == 0)
	{
		if(IsACop(playerid))
		{
		    if(PlayerToPoint(15.0, playerid, 922.473266,-1222.731201,16.976562))
		    {
		        F_MoveObject( ppc2, 923.40002441406, -1234.5, 18.799999237061,10);
                F_MoveObject( ppc3, 923.40002441406, -1208.4000244141, 18.700000762939,10);
				//GameTextForPlayer(playerid, "~w~Portao ~r~Comando Vermelho~w~ ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharpc", 5000, false);
		    }
		    else if(PlayerToPoint(15.0, playerid, 922.473266,-1222.731201,16.976562))
		    {
                F_MoveObject( ppc2, 923.40002441406, -1234.5, 18.799999237061,10);
                F_MoveObject( ppc3, 923.40002441406, -1208.4000244141, 18.700000762939,10);
				//GameTextForPlayer(playerid, "~w~Portao ~r~Comando Vermelho~w~ ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharpc2", 5000, false);
		    }
  		}
  		return 1;
	}
	if(strcmp(cmd, "/pcv", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
		{
		    if(PlayerToPoint(15.0, playerid, 2433.777343,-2090.111083,13.546875))
		    {
		        F_MoveObject( cv2, 2424.8999023438, -2100.3000488281, 15.320266723633,10);
                F_MoveObject( cv3, 2424.8999023438, -2078.71484375, 15.320266723633,10);
				//GameTextForPlayer(playerid, "~w~Portao ~r~Comando Vermelho~w~ ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharcv", 5000, false);
		    }
		    else if(PlayerToPoint(15.0, playerid, 2416.873535,-2089.896972,13.427724))
		    {
                F_MoveObject( cv2, 2424.8999023438, -2100.3000488281, 15.320266723633,10);
                F_MoveObject( cv3, 2424.8999023438, -2078.71484375, 15.320266723633,10);
				//GameTextForPlayer(playerid, "~w~Portao ~r~Comando Vermelho~w~ ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharcv2", 5000, false);
		    }
  		}
  		return 1;
	}
	if(strcmp(cmd, "/p2cia", true) == 0)
	{
		if(IsACop(playerid))
		{
		    if(PlayerToPoint(15.0, playerid, 922.473266,-1222.731201,16.976562))
		    {
		        F_MoveObject( ppc2, 923.40002441406, -1234.5, 18.799999237061,10);
                F_MoveObject( ppc3, 923.40002441406, -1208.4000244141, 18.700000762939,10);
				//GameTextForPlayer(playerid, "~w~Portao ~r~Comando Vermelho~w~ ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharpc", 5000, false);
		    }
		    else if(PlayerToPoint(15.0, playerid, 922.473266,-1222.731201,16.976562))
		    {
                F_MoveObject( ppc2, 923.40002441406, -1234.5, 18.799999237061,10);
                F_MoveObject( ppc3, 923.40002441406, -1208.4000244141, 18.700000762939,10);
				//GameTextForPlayer(playerid, "~w~Portao ~r~Comando Vermelho~w~ ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharpc2", 5000, false);
		    }
  		}
  		return 1;
	}
	if(strcmp(cmd, "/acn", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
		    if(PlayerToPoint(15.0, playerid, 1496.7689,-699.4988,94.7500))
		    {
		        F_MoveObject( acn, 1510.1875, -699.90942382813, 96.523391723633,3);
				//GameTextForPlayer(playerid, "~w~Portao Cosa Nostra ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharacn", 5000, false);
			}
  		}
  		return 1;
	}
	if(strcmp(cmd, "/pballas", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
		{
		    if(PlayerToPoint(15.0, playerid, 1119.570678,-1158.149658,23.797574))
		    {
		        F_MoveObject( Portaoballas, 1128.3000488281, -1159, 25.60000038147,3);
				//GameTextForPlayer(playerid, "~w~Portao Ballas ~n~~b~Aberto", 5000, 3);
				SetTimer("fecharballas", 5000, false);
			}
  		}
  		return 1;
	}
	if(!strcmp(cmdtext, "/bola", true))
    {
        F_SetObjectPos(Bola, -714.19915771, 1956.50402832, 1.54718375);
        return true;
    }
//----------------------------------{Portao GOVERNO}----------------------------------------
	if(strcmp(cmd, "/pgov", true) == 0)
	{
		if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 1539.2235107422, -1838.2176513672, 15.320266723633))
		{ //Portao Governo
			F_MoveObject( PortaoGov, 1539.2235107422, -1848.2176513672, 15.320266723633,3);
			//GameTextForPlayer(playerid, "~w~Portao Governo ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoGov2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e do Governo***");
	  	}*/
	  	return 1;
	}
	if(strcmp(cmd, "/ppre", true) == 0)
	{
		if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 369.15893554688, 162.35037231445, 1028.6030273438))
		{ //Portao Governo
			F_MoveObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3);
			GameTextForPlayer(playerid, "~w~Porta Prefeitura ~n~~b~Aberta", 5000, 3);
			SetTimer("PortaoPre2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e do Governo***");
	  	}*/
	  	return 1;
	}
//PORTAO RALLY
	if(strcmp(cmd, "/portaorally", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 && PlayerToPoint(15.0, playerid, -2368.4670410156, -2192.6381835938, 36.037666320801))
		{ //PortaoAdmin
			F_MoveObject( PortaoRally, -2368.4670410156, -2192.6381835938, 42.037666320801,3);
			GameTextForPlayer(playerid, "~w~Pista de Rally ~n~~b~Aberta", 25000, 3);
			SetTimer("PortaoRally2", 25000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Voc� nao esta perto do portao ou nao e Admin ***");
	  	}*/
	  	return 1;
	}
//PORTAO X1 MONTE CHILIAD
	if(strcmp(cmd, "/portaox1", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 && PlayerToPoint(15.0, playerid, -2321.5114746094, -1619.4454345703, 484.98388671875))
		{ //PortaoAdmin
			F_MoveObject( PortaoX1, -2321.5114746094, -1619.4454345703, 488.99388671875,3);
			GameTextForPlayer(playerid, "~w~Portao X1 ~n~~b~Aberto!", 3000, 3);
			SetTimer("PortaoX12", 3000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Voc� nao esta perto do portao ou nao e Admin ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{PortaoReporter}----------------------------------------
	if(strcmp(cmd, "/portaoreporter", true) == 0 || strcmp(cmd, "/preporter", true) == 0)
	{
		if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.80017089844, -1330.2664794922, 15.200000762939))
		{ //PortaoAdmin
			F_MoveObject( PortaoReporter, 777.80017089844, -1330.2664794922, 20.200000762939,3);
			//GameTextForPlayer(playerid, "~w~Portao Reporter ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoReporter2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Voc� nao esta perto do portao ou nao e Reporter ***");
	  	}*/
	  	return 1;
	}
	if(strcmp(cmd, "/portaoreporter2", true) == 0 || strcmp(cmd, "/preporter2", true) == 0)
	{
		if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.97308349609, -1384.7303466797, 15.299999237061))
		{ //PortaoAdmin
			F_MoveObject( PortaoReporterr, 777.97308349609, -1384.7303466797, 20.299999237061,3);
			//GameTextForPlayer(playerid, "~w~Portao Reporter ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoReporterr2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Voc� nao esta perto do portao ou nao e Reporter ***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portao Policia Rodoviaria}----------------------------------------
	if(strcmp(cmd, "/p8pm", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -76.4191,-352.3814,1.4297))
		{ //Portao PC Carro
			F_MoveObject( PortaoPC, -75.570,-357.211,-6.960,3);
			F_MoveObject( PortaoPC3, -75.598,-348.424,-6.908,3);
			//GameTextForPlayer(playerid, "~w~Portao PM/PR ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoPC2", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_RED, "*** Voc� nao esta perto do portao ou nao e da Policia Rodoviaria***");
	  	}*/
	  	return 1;
	}
//----------------------------------{Portao CET}----------------------------------------
	if(strcmp(cmd, "/pcet", true) == 0)
	{
        if ((IsAMec(playerid)) && PlayerToPoint(15.0, playerid, 959.8434,-1415.2617,13.3612))
        { //Portao CET
			F_MoveObject( PortaoMecs, 970.840,-1415.794,15.151,3);//-1842.8439
			//GameTextForPlayer(playerid, "~w~Portao CET ~n~~b~Aberto", 5000, 3);
			SetTimer("PortaoMecs2", 5000, false);
		}
	  	return 1;
	}
//----------------------------------{Portao Hitmans}----------------------------------------
	if(strcmp(cmd, "/phit", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) && PlayerToPoint(15.0, playerid, 1534.8430,-1451.1749,13.3851))
		{ //Portao Hitmans
			F_MoveObject( portaohit, 1535.408203125, -1451.576171875, 20.061140060425,3);//-1842.8439
			//GameTextForPlayer(playerid, "~w~Portao Hitmans ~n~~b~Aberto", 4000, 3);
			SetTimer("portaohit2", 4000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_GREY, "	Voc� n�o est� perto do port�o ou voc� n�o � Taxista !");
	  	}*/
	  	return 1;
	}
	if(strcmp(cmd, "/pgroove", true) == 0)
	{//2465.6000976563, -1649.4000244141, 15.10000038147, 0, 0, 89.999877929688
		if ((PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) && PlayerToPoint(15.0, playerid, 2466.438720,-1659.985961,13.275581))
		{ //Portao Hitmans
			F_MoveObject( portaogroove, 2465.6000976563, -1649.4000244141, 15.10000038147,3);//-1842.8439
			//GameTextForPlayer(playerid, "~w~Portao Groove ~n~~b~Aberto", 4000, 3);
			SetTimer("fechargroove", 5000, false);
		}
		/*else
		{
			SendClientMessage(playerid, COLOR_GREY, "	Voc� n�o est� perto do port�o ou voc� n�o � Taxista !");
	  	}*/
	  	return 1;
	}//CreateDynamicObject(980, 2465.8999023438, -1659.8000488281, 15.10000038147, 0, 0, 90.5);
//----------------------------------(TeamSpeak)------------------------------------------
    if(strcmp(cmd, "/teamspeak", true) == 0 || strcmp(cmd, "/ts", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COLOR_WHITE, "|______________| TeamSpeak 3 |______________|");
		    SendClientMessage(playerid, COLOR_LIGHTRED,"IP: 64.120.209.162| Porta: 4022");
		}
		return 1;
	}
//-------------------------------(EVENTOS)----------------------------------------------
	if(strcmp(cmd, "/eventos", true) == 0)
	{
        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
			return 1;
		}
		if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
	    	ShowPlayerDialog(playerid, EVENTOS, DIALOG_STYLE_LIST, "Lista de Eventos", "Rally\nKart\nEvento X1\nEvento Corrida", "Confirmar", "Cancelar");
		}
		return 1;
	}
	if(strcmp(cmd, "/remover", true) == 0)
	{
        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1340 && PlayerInfo[playerid][pAdmin] != 1341 && PlayerInfo[playerid][pAdmin] != 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
			return 1;
		}
		if(PlayerInfo[playerid][pAdmin] >= 1337)
	    {
	    	ShowPlayerDialog(playerid, 1343, DIALOG_STYLE_LIST, "Remover", "Bloqueios\nBarreira\nBQGG\nPregos", "Ok", "Cancelar");
		}
		return 1;
	}
//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/ajudacelular", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
 	if(strcmp(cmd, "/ajudacasa", true) == 0 || strcmp(cmd, "/househelp", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/ajudacasamento", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/ajudaaluguel", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/ajudaemp", true) == 0 || strcmp(cmd, "/ajudaempresa", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
 	if(strcmp(cmd, "/ajudalider", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/irchelp", true) == 0 || strcmp(cmd, "/ajudairc", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
	    return 1;
	}
	if(strcmp(cmd, "/ajudapesca", true) == 0 || strcmp(cmd, "/ajudapescaria", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/teleportes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1339)
			{
			SendClientMessage(playerid, COLOR_WHITE, "|______________| Teleportes de HQ |______________|");
			SendClientMessage(playerid, COLOR_GRAD3,"/hqpm /hqpr /hqpc /hqsamu /hqtcp /hqgavioes /hqprefeitura /hqhitmans /hqreporters /hqtaxistas ");
			SendClientMessage(playerid, COLOR_GRAD3,"/hqCET /hqgroove /hqManchaverde /hqpc /hqballas /hqcv /hqvagos ");
			SendClientMessage(playerid, COLOR_GRAD3,"/hqmafiayakuza /hqmafiacosanostra /hq23 /hqbombeiros /spawn /prefeitura");
			SendClientMessage(playerid, COLOR_GRAD3,"/blitz1(inativo) /blitz2(inativo) /blitz3(inativo) /blitz4(inativo) /pista");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudacozinha", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "USE: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/vhelp", true) == 0 || strcmp(cmd, "/vipajuda", true) == 0 || strcmp(cmd, "/ajudavip", true) == 0
	|| strcmp(cmd, "/shelp", true) == 0 || strcmp(cmd, "/socioajuda", true) == 0 || strcmp(cmd, "/ajudasocio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pVIP] >= 1)
			{
                SendClientMessage(playerid, COLOR_WHITE, "|______________| Comandos de S�cio |______________|");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"S�cio > /kitsocio(equipamento) | /so(chat dos s�cios)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgrota(ROTA) | /orggn(Exercito) | /orgpc(2�BPCHQ)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgaztec(Terceiro Comando Puro) | /gavioes(Gavi�es da Fiel) | /orghitman(Assassinos) | /orgreporter(Reportagem)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgtaxista(Taxistas) | /orgcosa(Cosa Nostra) | /orgyakuza(Yakuza)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orggroove(Groove Street) | /orgMancha(Mancha Verde) | /orgballas(Ballas) | /orgvagos(Los Vagos)");
		   		SendClientMessage(playerid, COLOR_LIGHTBLUE,"Orgs >/orgcv(Comando Vermelho) | /orgpcc(Tugas) | /orgsons(Sons Of Anarchy)");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0 || strcmp(cmd, "/aa", true) == 0 || strcmp(cmd, "/adminajuda", true) == 0)
	{
		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|1| Moderador    /tv /tapa /tapao /par /ver /calar /kick /ir /trazer /trazer2(sem armas) /matar /infoadm /infovip");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|1| Moderador   (/av)iso /respawnid /congelar /descongelar /infoarmas /infoplayer /afk(modo afk) /sairafk(sair do modo afk)");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|1| Moderador   /cnn (/desativar celular) /paredao /portaorally /avisar /infolider");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "|1| Moderador  /ls /lv /sf /predio /praia /monte /aerols /aerolv /bate-bate /fim /arenax1 /portaox1");
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"|2| Auxiliar  /settime /tempo /sethora /ip /desbugar /cadeia");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"|3| Auxiliar   /carandiru /explode /respawnevento /1 /2 /3 /go ");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"|3| Auxiliar   /rpall /resetarcarro /abastecerid /rcarro /destruirid /entrarcarro");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"|4| Auxiliar  /mark /irmark /carroantigo /ircarro /trazercarro /abastecercarros /retirararmas /spawn ");
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"|4| Auxiliar  /setcampeao /darcolete /dararma /forceskin /iniciarloteria /trazertodos /destruirtrazer /irtunning /ban");
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"|4| Auxiliar  /eventokart | /darvida /Destruirkart | /eventorally /destuirrally | /trazertodosx1 /dtx1(destruir)");
			}
            if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1337| Admin Master  /editar /admvemp /admvsemp /dargrana /setgrana /antiafk /darlicencas /limparlider /respawncarros");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1337| Admin Master  /cnnn /seditar /ircasa /iremp /irsemp /biz /sbiz /makeircadmin /limparvip");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1337| Admin Master  /desbanip /nomedesban /setskin /setemprego /gmx");
			}
			if(PlayerInfo[playerid][pAdmin] >= 1339)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1339| Admin Master ++  /darsocio /retirarsocio /lider /admvcasa /admvemp /admvsemp /retirarvip /amudarnick");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1340| Sub-Dono  /savefiles /loadfiles /kitadmdono");
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1340| Sub-Dono  /favela /teleportes /deletarconta");
            }
            if (PlayerInfo[playerid][pAdmin] >= 1342)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1342| Dono /liderex /atualizar3dtext /limparadmin /trazercasa /descricao");
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"|1342| Dono /setpos /daradmin /ptuto /padmin /carid /irobjeto /modocia");
			}
            if (PlayerInfo[playerid][pAdmin] >= 1342 && strcmp(PlayerName(playerid), "Vagner_Santos", true ) == 0)
			{
			}
		}
		return 1;
	}
	/*if(strcmp(cmd, "/destruirveiculos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1340)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
			    return 1;
			}
			for(new i = CAR_AMOUNT; i < CAR_AMOUNT+97; i++)
			{
				DestroyVehicle(i);
			}
			CreatedCar = 0;
			for(new i = 0; i < sizeof(CreatedCars); i++)
			{
	    		CreatedCars[i] = 0;
			}
			SendClientMessage(playerid, COLOR_GREY, "   Todos os ve�culos criados foram destru�dos!");
		}
		return 1;
	}*/
	if(strcmp(cmd,"/habilidades",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________| Skill Info |__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /Habilidades [numero]");
		  		SendClientMessage(playerid, COLOR_GREY, "| 1: Detetive            7: CET");
		  		SendClientMessage(playerid, COLOR_GREY, "| 2: Advogado               8: Vendedor De Carros");
		  		SendClientMessage(playerid, COLOR_GREY, "| 3: Prostituta                9: Boxer");
		  		SendClientMessage(playerid, COLOR_GREY, "| 4: Traficante		  10: Pesca");
		  		SendClientMessage(playerid, COLOR_GREY, "| 5: Ladr�o De Carros            ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 6: Reporter");
				return 1;
			}
		    if(strcmp(x_nr,"1",true) == 0)//Detetive
			{
			    new level = PlayerInfo[playerid][pDetSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de detetive = 1."); format(string, sizeof(string), "Voc� precisa procurar mais %d para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de detetive = 2."); format(string, sizeof(string), "Voc� precisa procurar mais %d para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de detetive = 3."); format(string, sizeof(string), "Voc� precisa procurar mais %d para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de detetive = 4."); format(string, sizeof(string), "Voc� precisa procurar mais %d para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de detetive = 5."); }
			}
			else if(strcmp(x_nr,"2",true) == 0)//Advogado
			{
			    new level = PlayerInfo[playerid][pLawSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de advogado = 1."); format(string, sizeof(string), "Voc� precisa soltar mais %d pessoas para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de advogado = 2."); format(string, sizeof(string), "Voc� precisa soltar mais %d pessoas para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de advogado = 3."); format(string, sizeof(string), "Voc� precisa soltar mais %d pessoas para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de advogado = 4."); format(string, sizeof(string), "Voc� precisa soltar mais %d pessoas para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de advogado = 5."); }
			}
			else if(strcmp(x_nr,"3",true) == 0)//Prostituta
			{
			    new level = PlayerInfo[playerid][pSexSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de prostituta = 1."); format(string, sizeof(string), "Voc� precisa fazer mais %d sexos para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de prostituta = 2."); format(string, sizeof(string), "Voc� precisa fazer mais %d sexos para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de prostituta = 3."); format(string, sizeof(string), "Voc� precisa fazer mais %d sexos para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de prostituta = 4."); format(string, sizeof(string), "Voc� precisa fazer mais %d sexos para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de prostituta = 5."); }
			}
			else if(strcmp(x_nr,"4",true) == 0)//Traficante
			{
			    new level = PlayerInfo[playerid][pDrogasSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de Traficante = 1."); format(string, sizeof(string), "Voc� precisa vender mais %d drogas para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de Traficante = 2."); format(string, sizeof(string), "Voc� precisa vender mais %d drogas para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de Traficante = 3."); format(string, sizeof(string), "Voc� precisa vender mais %d drogas para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de Traficante = 4."); format(string, sizeof(string), "Voc� precisa vender mais %d drogas para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de Traficante = 5."); }
			}
			else if(strcmp(x_nr,"6",true) == 0)//noticias Reporter
			{
			    new level = PlayerInfo[playerid][pNewsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de rep�rter = 1."); format(string, sizeof(string), "Voc� precisar mandar mais %d not�cias para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de rep�rter = 2."); format(string, sizeof(string), "Voc� precisar mandar mais %d not�cias para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de rep�rter = 3."); format(string, sizeof(string), "Voc� precisar mandar mais %d not�cias para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de rep�rter = 4."); format(string, sizeof(string), "Voc� precisar mandar mais %d not�cias para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de rep�rter = 5."); }
			}
			else if(strcmp(x_nr,"7",true) == 0)//CET
			{
			    new level = PlayerInfo[playerid][pMechSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de CET = 1."); format(string, sizeof(string), "Voc� precisa concertar/abastecer mais %d carros para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de CET = 2."); format(string, sizeof(string), "Voc� precisa concertar/abastecer mais %d carros para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de CET = 3."); format(string, sizeof(string), "Voc� precisa concertar/abastecer mais %d carros para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de CET = 4."); format(string, sizeof(string), "Voc� precisa concertar/abastecer mais %d carros para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de CET = 5."); }
			}
			else if(strcmp(x_nr,"9",true) == 0)//Boxer
			{
			    new level = PlayerInfo[playerid][pBoxSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de boxeador = 1."); format(string, sizeof(string), "Voc� precisa ganhar mais %d lutas para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de boxeador = 2."); format(string, sizeof(string), "Voc� precisar ganhar mais %d lutas para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de boxeador = 3."); format(string, sizeof(string), "Voc� precisar ganhar mais %d lutas para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de boxeador = 4."); format(string, sizeof(string), "Voc� precisar ganhar mais %d lutas para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de boxeador = 5."); }
			}
			else if(strcmp(x_nr,"10",true) == 0)//Fishing
			{
			    new level = PlayerInfo[playerid][pFishSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de pesca = 1."); format(string, sizeof(string), "Voc� precisa pescar mais %d peixes para passar de n�vel.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de pesca = 2."); format(string, sizeof(string), "Voc� precisa pescar mais %d peixes para passar de n�vel.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de pesca = 3."); format(string, sizeof(string), "Voc� precisa pescar mais %d peixes para passar de n�vel.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de pesca = 4."); format(string, sizeof(string), "Voc� precisa pescar mais %d peixes para passar de n�vel.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "N�vel de pesca = 5."); }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   N�mero de habilidade inv�lido !");
			    return 1;
			}
	    }
	    return 1;
	}
// ADM VENDERLICENCA
	if(strcmp(cmd, "/darlicencas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >=1337)
	        {
		        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
					return 1;
				}
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /darlicencas [id]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* Voc� deu todas as licen�as para %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        if(admtrampando[playerid] == 1 && admhide[playerid] == 1)
				        {
				        	format(string, sizeof(string), "* Admin %s lhe deu todas as licen�as.",sendername);
						}
				        else
				        {
				        	format(string, sizeof(string), "* Admin %s lhe deu todas as licen�as.",sendername);
				        }
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        PlayerInfo[giveplayerid][pGunLic] = 1;
				        PlayerInfo[giveplayerid][pFishLic] = 1;
				        PlayerInfo[giveplayerid][pBoatLic] = 1;
				        PlayerInfo[giveplayerid][pFlyLic] = 1;
				        PlayerInfo[giveplayerid][pCarLic] = 1;
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/arrombar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 2  || IsACop(playerid) || IsAHit(playerid))
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						GameTextForPlayer(playerid, "~r~Arrombou a Porta", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Oficial ou um Hitman !");
			    return 1;
            }
		}
		return 1;
	}
	if(strcmp(cmd,"/divorcio",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� na igreja de Los Santos !");
			    return 1;
			}
			if(PlayerInfo[playerid][pMarried] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� casado !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /divorcio [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode se pedir em div�rcio!"); return 1; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "* Voc� enviou pap�is de div�rcio para %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s pediu pap�is de div�rcio (Digite /aceitar divorcio) para aceitar.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        DivorceOffer[giveplayerid] = playerid;
					        return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  Esse jogador n�o est� casado com voc� !");
						    return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de voc� !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/casar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� na igreja de Los Santos !");
			    return 1;
			}
	        if(GetPlayerMoney(playerid) < 100000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Para se Casar Custa R$100000 !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� j� � casado !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /casar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Este jogador(a) ja � casado(a) !");
			            return 1;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode propor a si mesmo!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� prop�s casamento a %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Voc� foi pedida em casamento (Digite /aceitar casamento) para aceitar.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de voc� !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/padrinho",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� na igreja de Los Santos !");
			    return 1;
			}
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /padrinho [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode ser marido e padrinho do casamento!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� chamou %s para ser seu padrinho de casamento.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Voc� foi chamado para ser Padrinho do Casamento (Digite /aceitar padrinho) para aceitar.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        MarryWitnessOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de voc� !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/irc",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE:  /i(Chat) (/irc entrar [n� canal] ou /irc entrar [n� canal] [Senha])  (/irc sair)  (/irc Admins)");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /irc [name] [n� canal]");
				SendClientMessage(playerid, COLOR_WHITE, "Nomes dispon�veis: MOTD, Senha, NeedPass, Trancar, Kick, Status");
				return 1;
			}
		    if(strcmp(x_nr,"entrar",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /irc entrar [n� canal] ou /irc entrar [n� canal] [Senha]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   N�mero do canal n�o pode ser inferior a 1 ou superior a 10 !"); return 1; }
				channel -= 1;
			    if(IRCInfo[channel][iLock] == 0)
			    {
			        if(IRCInfo[channel][iNeedPass] == 0)
			        {
			            JoinChannelNr(playerid, channel);
				    }
				    else
				    {
				        tmp = strtok(cmdtext, idx);
				        if(!strlen(tmp))
						{
						    SendClientMessage(playerid, COLOR_WHITE, "Digite a senha requerida para o canal.");
							SendClientMessage(playerid, COLOR_WHITE, "USE: /irc entrar [n� canal] [Senha]");
							return 1;
						}
						JoinChannel(playerid,channel,tmp);
				    }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Esse canal est� bloqueado, por favor escolha um diferente !");
				    return 1;
			    }
			}
			else if(strcmp(x_nr,"status",true) == 0)
			{
			    for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
			        format(string, sizeof(string), "Canal %d: %d Jogadores Conectados.",i + 1, IRCInfo[i][iPlayers]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"senha",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /irc senha [n� canal] [Senha]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   N�mero do Canal tem que ser entre 0 e 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USE: /irc password [n� canal] [Senha]");
					    return 1;
					}
					strmid(IRCInfo[channel][iPassword], tmp, 0, strlen(tmp), 255);
					format(string, sizeof(string), "Voc� trocou a senha do IRC para : %s.",IRCInfo[channel][iPassword]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � admin do IRC !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"needpass",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /irc needpass [n� canal]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   N�mero do canal n�o pode ser inferior a 1 ou superior a 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iNeedPass] != 0)
				    {
				        IRCInfo[channel][iNeedPass] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "Os jogadores n�o ter�o de preencher uma senha para entrar no canal IRC agora.");
				    }
					else
					{
					    IRCInfo[channel][iNeedPass] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Os jogadores devem preencher uma senha para entrar no canal IRC agora.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � admin do IRC !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"trancar",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /irc trancar [n� canal]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   N�mero do canal n�o pode ser inferior a 1 ou superior a 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    if(IRCInfo[channel][iLock] != 0)
				    {
				        IRCInfo[channel][iLock] = 0;
				        SendClientMessage(playerid, COLOR_YELLOW, "Voc� abriu o canal IRC.");
				    }
					else
					{
					    IRCInfo[channel][iLock] = 1;
						SendClientMessage(playerid, COLOR_YELLOW, "Voc� trancou o canal IRC.");
					}
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � admin do IRC !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"motd",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "USE: /irc motd [n� canal] [motd texto]");
				    return 1;
				}
				new channel = strval(tmp);
				if(channel < 1 || channel > 10) { SendClientMessage(playerid, COLOR_GREY, "   N�mero do canal n�o pode ser inferior a 1 ou superior a 10 !"); return 1; }
				channel -= 1;
				new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[channel][iAdmin],wstring, true ) == 0 )
				{
				    new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: /irc motd [motd texto]");
						return 1;
					}
					strmid(IRCInfo[channel][iMOTD], result, 0, strlen(result), 255);
					SendClientMessage(playerid, COLOR_YELLOW, "Voc� ajustou a mensagem de boas vindas do seu canal IRC!.");
					SaveIRC();
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � admin do IRC !");
				    return 1;
				}
			}
			else if(strcmp(x_nr,"sair",true) == 0)
			{
			    if(PlayersChannel[playerid] < 999)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        format(string, sizeof(string), "* %s saiu do canal.", sendername);
			        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
			        IRCInfo[PlayersChannel[playerid]][iPlayers] -= 1;
			        PlayersChannel[playerid] = 999;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� em um canal IRC !");
			        return 1;
			    }
			}
			else if(strcmp(x_nr,"admins",true) == 0)
			{
				for(new i = 0; i < sizeof(IRCInfo); i++)
			    {
				    format(string, sizeof(string), "Canal %d: %s.", i + 1, IRCInfo[i][iAdmin]);
				    SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			    return 1;
			}
			else if(strcmp(x_nr,"kick",true) == 0)
			{
			    if(PlayersChannel[playerid] == 999)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� no canal IRC !");
			        return 1;
			    }
			    new wstring[128];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "%s", sendername);
				strmid(wstring, string, 0, strlen(string), 255);
				if(strcmp(IRCInfo[PlayersChannel[playerid]][iAdmin],wstring, true ) == 0 )
				{
				    tmp = strtok(cmdtext, idx);
				    if(!strlen(tmp))
					{
					    SendClientMessage(playerid, COLOR_WHITE, "USE: /irc kick [id]");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if(PlayersChannel[giveplayerid] == PlayersChannel[playerid])
					        {
					            GetPlayerName(playerid, sendername, sizeof(sendername));
					            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					            format(string, sizeof(string), "* Voc� kikou %s do seu canal IRC.",giveplayer);
					            SendClientMessage(playerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* Voc� foi kikado do canal pelo Canal Admin: %s.",sendername);
					            SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					            format(string, sizeof(string), "* %s saiu do canal (Kikado).", sendername);
						        SendIRCMessage(PlayersChannel[playerid], COLOR_GREEN, string);
					            IRCInfo[PlayersChannel[giveplayerid]][iPlayers] -= 1;
					            PlayersChannel[giveplayerid] = 999;
					        }
					        else
					        {
					            SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� no seu canal IRC !");
							    return 1;
					        }
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
                }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � admin do IRC !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   N�mero de IRC Inv�lido ! ");
			    return 1;
			}
		}
		return 1;
 	}
 	if(strcmp(cmd,"/i",true)==0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayersChannel[playerid] == 999)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� no canal IRC !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar! foi silenciado");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /i [irc chat]");
				return 1;
			}
			format(string, sizeof(string), "** IRC %s: %s. **", sendername, result);
			SendIRCMessage(PlayersChannel[playerid], COLOR_YELLOW2, string);
	    }
	    return 1;
	}
//--------------------------------------Prefeito Comandos-------------------------------------------
	if(strcmp(cmd,"/setartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � o Prefeito !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /setartaxa [quantidade]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, COLOR_GREY, "   O Dinheiro da Taxa n�o pode ser menor que 1 ou maior que 10000 !"); return 1; }
			Tax = moneys;
			SaveStuff();
			format(string, sizeof(string), "* Cada Jogador vai pagar uma taxa de R$%d, apartir de agora!", Tax);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Not�cias: O Prefeito acaba de mudar a Taxa por Pessoa para: R$%d.", Tax);
			SendClientMessageToAll(COLOR_LIGHTBLUE, string);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/dartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � o Prefeito !");
				return 1;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   N�o h� Dinheiro suficiente no banco de Impostos !");
				return 1;
			}
			new Cops = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(IsACop(i))
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new price = Tax / Cops;
			    for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(IsACop(i))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Voc� deu a taxa para todos os policiais online!");
				            format(string, sizeof(string), "* Voc� recebeu R$%d do banco de Impostos pelo Prefeito.",price);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							GivePlayerMoney(i, price);
							Tax = 0;
				        }
				    }
				}
				SaveStuff();
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  N�o h� nenhum Policial Online no Momento !");
				return 1;
			}
		}
		return 1;
	}
//------------------------------------------------/Prefeito Comandos--------------------------------------------------------
	if(strcmp(cmd, "/mudarlocal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPHousekey] != 255)
	        {
	            if(Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voc� est� na TV, n�o pode mudar o spawn !");
	                return 1;
	            }
	            if(PlayerInfo[playerid][pSpawn] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voc� vai nascer no local normal de nascimento ou em sua HQ !");
	                PlayerInfo[playerid][pSpawn] = 0;
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "  Agora voc� vai nascer em sua casa !");
	                PlayerInfo[playerid][pSpawn] = 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem casa, n�o pode mudar o local !");
		        return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/relatorio", true) == 0 || strcmp(cmd, "/relato", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� logado!");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pJailed] == 2)
	        {
	            SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode mandar relat�rio, pois est� no carandiru!");
	            return 1;
	        }
	        if(prelatoadm == 1)
        	{
       			SendClientMessage(playerid,COLOR_GRAD2,"Espere 10 segundos para poder mandar outro relatorio!");
        		return 1;
        	}
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[1000];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "USE: /relatorio [texto]");
				return 1;
			}
			if(TentouDivulgar(result))
			{
  				if(cdivulgar[playerid] >= 4)
  				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
    				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
    				Kick(playerid);
  				}
  				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
  				format(string, 128, "AdmAviso: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
        		cdivulgar[playerid] += 1;
        		return 1;
			}
            if(PlayerInfo[playerid][pVIP] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Relat�rio VIP Bronze de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCast(0x00FF00AA,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relat�rio VIP foi enviado aos admins, aguarde uma resposta...");
				prelatoadm = 1;
				TempoRelatoAdm = SetTimer("RelatoAdm", 10000, 0);
			}
            else if(PlayerInfo[playerid][pVIP] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==>  Relat�rio VIP Prata de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCast(0xC9FF28AA,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relat�rio VIP foi enviado aos admins, aguarde uma resposta...");
				prelatoadm = 1;
				TempoRelatoAdm = SetTimer("RelatoAdm", 10000, 0);
			}
            else if(PlayerInfo[playerid][pVIP] == 3)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==>  Relat�rio VIP Ouro de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCast(0xC9FF28AA,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relat�rio VIP foi enviado aos admins, aguarde uma resposta...");
				prelatoadm = 1;
				TempoRelatoAdm = SetTimer("RelatoAdm", 10000, 0);
			}
            else if(PlayerInfo[playerid][pVIP] == 4)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Relat�rio S�cio Bronze de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCast(0x50EDFFAA,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relat�rio VIP foi enviado aos admins, aguarde uma resposta...");
				prelatoadm = 1;
				TempoRelatoAdm = SetTimer("RelatoAdm", 10000, 0);
			}
            else if(PlayerInfo[playerid][pVIP] == 5)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Relat�rio S�cio Prata de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCast(0xFE08FFAA,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relat�rio VIP foi enviado aos admins, aguarde uma resposta...");
				prelatoadm = 1;
				TempoRelatoAdm = SetTimer("RelatoAdm", 10000, 0);
			}
            else if(PlayerInfo[playerid][pVIP] == 6)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Relat�rio S�cio Ouro de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCast(0xFF101BAA,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relat�rio VIP foi enviado aos admins, aguarde uma resposta...");
				prelatoadm = 1;
				TempoRelatoAdm = SetTimer("RelatoAdm", 10000, 0);
			}
            else
            {
				format(string, sizeof(string), "==> Relat�rio de %s(%d): %s <==", sendername, playerid, (result));
				ABroadCast(0xFFFF66FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Seu relat�rio foi enviado aos admins, aguarde uma resposta...");
				prelatoadm = 1;
				TempoRelatoAdm = SetTimer("RelatoAdm", 10000, 0);
			}
		}
	    return 1;
	}
 	if(strcmp(cmd, "/roupas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] >= 1 || PlayerInfo[playerid][pLider] >= 1)
	        {
	            if(IsAtClothShop(playerid))
				{
				    if(PlayerInfo[playerid][pMembro] == 1) { ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }// 18�BPM/M
					else if(PlayerInfo[playerid][pMembro] == 2) { ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//BOPE
					else if(PlayerInfo[playerid][pMembro] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Ex�rcito
					else if(PlayerInfo[playerid][pMembro] == 4) { ChosenSkin[playerid] = 274; SetPlayerSkin(playerid, 274); }//M�dicos
					else if(PlayerInfo[playerid][pMembro] == 5) { ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 115); }//Aztecas
					else if(PlayerInfo[playerid][pMembro] == 6) { ChosenSkin[playerid] = 28; SetPlayerSkin(playerid, 29); }//Gavi�es
					else if(PlayerInfo[playerid][pMembro] == 7) { ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }//Prefeitura
					else if(PlayerInfo[playerid][pMembro] == 8) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }//Hitmans
					else if(PlayerInfo[playerid][pMembro] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }//Reporters
					else if(PlayerInfo[playerid][pMembro] == 10) { ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }//Taxistas
					else if(PlayerInfo[playerid][pMembro] == 11) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }//Policia Federal
					else if(PlayerInfo[playerid][pMembro] == 12) { ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }//M�fia Cosa Nostra
					else if(PlayerInfo[playerid][pMembro] == 13) { ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }//M�fia Yakuza
					else if(PlayerInfo[playerid][pMembro] == 14) { ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }//Groove Street
					else if(PlayerInfo[playerid][pMembro] == 15) { ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }//Mancha Verde
					else if(PlayerInfo[playerid][pMembro] == 16) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }//Policia Civil
					else if(PlayerInfo[playerid][pMembro] == 17) { ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }//Ballas
					else if(PlayerInfo[playerid][pMembro] == 18) { ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }//Vagos
					else if(PlayerInfo[playerid][pLider] == 1) { ChosenSkin[playerid] = 283; SetPlayerSkin(playerid, 283); }//18�BPM/M
					else if(PlayerInfo[playerid][pLider] == 2)	{ ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//B.O.P.E
					else if(PlayerInfo[playerid][pLider] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Ex�rcito
					else if(PlayerInfo[playerid][pLider] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }//Fire/Ambulance
					else if(PlayerInfo[playerid][pLider] == 5) { ChosenSkin[playerid] = 115; SetPlayerSkin(playerid, 115); }//Varrios Los Aztecas
					else if(PlayerInfo[playerid][pLider] == 6) { ChosenSkin[playerid] = 29; SetPlayerSkin(playerid, 29); }//Gavi�es
					else if(PlayerInfo[playerid][pLider] == 7) { ChosenSkin[playerid] = 147; SetPlayerSkin(playerid, 147); }//Prefeito
					else if(PlayerInfo[playerid][pLider] == 8) { ChosenSkin[playerid] = 294; SetPlayerSkin(playerid, 294); }//Hitmans
					else if(PlayerInfo[playerid][pLider] == 9) { ChosenSkin[playerid] = 227; SetPlayerSkin(playerid, 227); }//Rep�rters
					else if(PlayerInfo[playerid][pLider] == 10) { ChosenSkin[playerid] = 61; SetPlayerSkin(playerid, 61); }//Taxistas
					else if(PlayerInfo[playerid][pLider] == 11) { ChosenSkin[playerid] = 267; SetPlayerSkin(playerid, 267); }//Policia Federal
					else if(PlayerInfo[playerid][pLider] == 12) { ChosenSkin[playerid] = 113; SetPlayerSkin(playerid, 113); }//M�fia Cosa Nostra
					else if(PlayerInfo[playerid][pLider] == 13) { ChosenSkin[playerid] = 120; SetPlayerSkin(playerid, 120); }//M�fia Yakuza
					else if(PlayerInfo[playerid][pLider] == 14) { ChosenSkin[playerid] = 270; SetPlayerSkin(playerid, 270); }//Groove
                    else if(PlayerInfo[playerid][pLider] == 15) { ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }//ALQaeda
					else if(PlayerInfo[playerid][pLider] == 16) { ChosenSkin[playerid] = 186; SetPlayerSkin(playerid, 186); }//Policia Civil
                    else if(PlayerInfo[playerid][pLider] == 17) { ChosenSkin[playerid] = 104; SetPlayerSkin(playerid, 104); }//Ballas
                    else if(PlayerInfo[playerid][pLider] == 18) { ChosenSkin[playerid] = 108; SetPlayerSkin(playerid, 108); }//Vagos
                    else if(PlayerInfo[playerid][pLider] == 23) { ChosenSkin[playerid] = 296; SetPlayerSkin(playerid, 296); }//Mayans
	                else { return 1; }
	                if(PlayerInfo[playerid][pLider] < 1)
	                {
	                    new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid, x, y, z);
	                	SetPlayerCameraPos(playerid, x + 3, y, z);
						SetPlayerCameraLookAt(playerid,x, y, z);
						TogglePlayerControllable(playerid, 0);
						SelectChar[playerid] = 255;
						SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
						SelectCharPlace[playerid] = 1;
						PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
						SendClientMessage(playerid, COLOR_LIGHTRED, "* Use 'Proximo' para trocar a skin.");
					    SendClientMessage(playerid, COLOR_LIGHTRED, "* Quando Voc� achar a Skin preferida, Digite 'Confirma'.");
					}
	                GivePlayerMoney(playerid, -1000);
				    SBizzInfo[6][sbTill] += 500;
					ExtortionSBiz(6, 500);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o est� em uma loja de roupas !");
					return 1;
				}
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Civis n�o podem usar esse comando !");
				return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/loteria", true) == 0)
	{
	    if(PlayerToPoint(1, playerid,822.0201,5.2154,1004.1797) || PlayerToPoint(1, playerid,822.0099,6.3927,1004.1797) || PlayerToPoint(1, playerid,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, playerid,822.0237,1.7826,1004.1797))
	    {
	        if(PlayerInfo[playerid][pLottoNr] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� j� tem um bilhete de loteria !");
	            return 1;
	        }
	        if(GetPlayerMoney(playerid) < 1000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem R$1000 para pagar o n�mero de loteria !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE,"USE: /loteria [n�mero]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 80) { SendClientMessage(playerid, COLOR_GREY, "   N�mero da loteria, de 1 a 80 !"); return 1; }
			format(string, sizeof(string), "* Voc� comprou um bilhete de loteria com n�mero: %d.", lottonr);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerMoney(playerid, - 1000);
			PlayerInfo[playerid][pLottoNr] = lottonr;
	     }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� na Lot�rica !");
		}
		return 1;
	}
	if(strcmp(cmd, "/retirar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
	        if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
	        {
	            if(PlayerInfo[playerid][pCargo] < 2)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voc� precisa de cargo 2 para usar este comando !");
	                return 1;
	            }
	            new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________| Take Licenses |__________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar [nome] [id]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Dispon�veis: Motorista, Piloto, Marujo, PorteLegal, Armas, Drogas, Materiais");
					return 1;
				}
			    if(strcmp(x_nr,"Motorista",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Motorista [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voc� retirou a licen�a de motorista de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licen�a de motorista.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de voc� !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Piloto",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Piloto [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voc� retirou a licen�a de Voo de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licen�a de Voo.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"PorteLegal",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar portelegal [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voc� retirou a licen�a de Porte de Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licen�a de Porte de Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pGunLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Marujo",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Marujo [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voc� retirou a licen�a de Navegacao de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licen�a de Navegacao.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Armas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Armas [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
                                new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voc� retirou as Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        ResetPlayerWeaponsEx(giveplayerid);
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Drogas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Drogas [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voc� retirou as Drogas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Drogas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pDrogas] = 0;
						        PlayerInfo[giveplayerid][pDrogas2] = 0;
						        PlayerInfo[giveplayerid][pDrogas3] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Materiais",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "USE: /retirar Materiais [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Voc� retirou os Materiais de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou seus Materiais.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pMats] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nome inv�lido !");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o e COP !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/beber", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAtBar(playerid))
	        {
	            if(PlayerInfo[playerid][pDorgado2] >= 70)
	            {
	            	PlayerInfo[playerid][pDoenca] = 4;
	            	PlayerInfo[playerid][pDorgado2] = 0;
	            	SendClientMessage(playerid, COLOR_GRAD2, "* Voc� est� infectado com cirrose, v� at� um hospital se tratar !");
	            	return 1;
				}
	            if(PlayerDrunk[playerid] < 10)
	            {
	            	if(PlayerInfo[playerid][pDoenca] == 4)
  					{
			    		SendClientMessage(playerid, COLOR_GRAD2, "* Voc� est� com cirrose, v� at� um hospital se tratar !");
			    		return 1;
  	        		}
	                new Float:health;
	                new x_nr[32];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SendClientMessage(playerid, COLOR_WHITE, "|__________________|  Drinks |__________________|");
						SendClientMessage(playerid, COLOR_WHITE, "Use: /beber [Bebida]");
				  		SendClientMessage(playerid, COLOR_GREY, "Nomes V�lidos: Cerveja (R$6), Vodka (R$10), Whisky (R$25), Coca-Cola (R$2), �gua (R$1)");
						return 1;
					}
				    if(strcmp(x_nr,"Cerveja",true) == 0)
					{
						if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Voc� N�o Tem 18 Anos ou mais Para Poder Beber.");
						    return 1;
						}
					    GivePlayerMoney(playerid, - 6);
					    PlayerDrunk[playerid] += 1;
					    PlayerInfo[playerid][pDorgado2] += 2;
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
						ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 15.0); }
						}
					}
					else if(strcmp(x_nr,"Vodka",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Voc� N�o Tem 18 Anos ou mais Para Poder Beber.");
						    return 1;
						}
					    GivePlayerMoney(playerid, - 10);
					    PlayerDrunk[playerid] += 2;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 25.0); }
						}
					}
					else if(strcmp(x_nr,"Whisky",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Voc� N�o Tem 18 Anos ou mais Para Poder Beber");
						    return 1;
						}
					    GivePlayerMoney(playerid, - 25);
					    PlayerDrunk[playerid] += 3;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 27.0); }
						}
					}
					else if(strcmp(x_nr,"Coca-Cola",true) == 0)
					{
					    GivePlayerMoney(playerid, - 2);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else if(strcmp(x_nr,"agua",true) == 0)
					{
					    GivePlayerMoney(playerid, - 1);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "BarMan - N�o n�o vendemos essa bebida.");
					    return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s bebeu um(a) %s.", sendername ,x_nr);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode beber mais, Voc� vai vomitar...!");
	                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
	                return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� em um bar !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/setcampeao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
				return 1;
				}
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /setcampeao [id]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
		        if(IsPlayerConnected(giveplayerid))
		        {
		            if(giveplayerid != INVALID_PLAYER_ID)
		            {
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		                new nstring[MAX_PLAYER_NAME];
						format(nstring, sizeof(nstring), "%s", giveplayer);
						strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
						Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
						Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
						SaveBoxer();
						format(string, sizeof(string), "* Voc� definiu %s como o novo campe�o de boxe.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
		            return 1;
		        }
	        }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/statusluta", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEmprego] != 8)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Lutador de Boxe !");
	            return 1;
	        }
	        new ttext[20];//Title
	        new clevel = PlayerInfo[playerid][pBoxSkill];
			if(clevel >= 0 && clevel <= 50) { ttext = "Iniciante"; }
			else if(clevel >= 51 && clevel <= 200) { ttext = "Amador"; }
			else if(clevel >= 201 && clevel <= 400) { ttext = "Profissional"; }
	        new ntext[20];//NickName
	        new level = PlayerInfo[playerid][pWins];
	        if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	        {
	            ntext = "Invicto";
	        }
	        else
	        {
	            if(level >= 0 && level <= 10) { ntext = "Novato"; }
	            else if(level >= 11 && level <= 20) { ntext = "M�o Pesada"; }
	            else if(level >= 21 && level <= 30) { ntext = "Quebra Nozes"; }
	            else if(level >= 31 && level <= 40) { ntext = "Bra�o de ferro"; }
	            else if(level >= 41 && level <= 50) { ntext = "Quebra cr�nio"; }
	            else if(level >= 51 && level <= 60) { ntext = "Velocidade da Luz"; }
	            else if(level >= 61 && level <= 70) { ntext = "Guerreiro"; }
	            else if(level >= 71) { ntext = "Cavalo"; }
	        }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________| Recorde do Boxe |__________________|");
	        format(string, sizeof(string), "| Atual Campe�o: %s, com %d vit�rias e %d derrotas.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| T�tulo atual: %s.", ttext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Nome Atual: %s.", ntext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total de Vit�rias: %d.", PlayerInfo[playerid][pWins]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total de Derrotas: %d.", PlayerInfo[playerid][pLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/lutar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEmprego] != 8)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um lutador de boxe !");
	            return 1;
	        }
	        if(InRing > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   J� est� tendo uma luta, espere ela terminar !");
	            return 1;
	        }
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� j� est� em uma luta !");
	            return 1;
	        }
	        if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o est� no gin�sio de lutas de LS !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /lutar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode lutar contra si mesmo!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� intimou %s para uma luta de boxe.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Lutador %s te intimou para uma luta (USE: /aceitar boxe) para aceitar.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        BoxOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/musica", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCDPlayer])
	        {
		        new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________| Music |__________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: /musica [nome]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Dispon�veis: On, Off, Proximo");
					return 1;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
				}
				else if(strcmp(x_nr,"Proximo",true) == 0)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Comando Musical Desconhecido !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o possui um CD-Player !");
			    return 1;
			}
	    }
	    return 1;
	}
	//====================================[Bombeiros]=======================================
	if(strcmp(cmd, "/incendiar", true) == 0 || strcmp(cmd, "/in", true) == 0)
	{
	    if(IsAGang(playerid))
	    {
	   		if(IsPlayerInWater(playerid))
        	{
            	SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode criar inc�ndios dentro da �gua !");
            	return 1;
        	}
        	if(PlayerInfo[playerid][pJailed] == 1 || PlayerInfo[playerid][pJailed] == 2 || PlayerInfo[playerid][pJailed] == 3 || PlayerInfo[playerid][pJailed] == 4) return SendClientMessage(playerid, COLOR_RED, "[] Voc� n�o pode usar esse comando na pris�o.");
  			if(IncendioAcontecendo == true) return SendClientMessage(playerid, 0xFFFF00AA, "[] Algu�m j� tocou fogo em algum lugar !");
			new Float:PlayerX, Float:PlayerY, Float:PlayerZ;
			GetPlayerPos(playerid,PlayerX,PlayerY,PlayerZ);
			FogoX[0]=PlayerX+-1.9826;   FogoY[0]=PlayerY+-1.5052;   FogoZ[0]=PlayerZ-2;
			FogoX[1]=PlayerX+-1.9816;   FogoY[1]=PlayerY+-0.1017;   FogoZ[1]=PlayerZ-2;
			FogoX[2]=PlayerX+-3.2436;   FogoY[2]=PlayerY+-1.5876;   FogoZ[2]=PlayerZ-2;
			FogoX[3]=PlayerX+-1.9826;   FogoY[3]=PlayerY+-1.5052;   FogoZ[3]=PlayerZ-2;
			FogoX[4]=PlayerX+-1.7868;   FogoY[4]=PlayerY+-2.4806;   FogoZ[4]=PlayerZ-2;
			FogoX[5]=PlayerX+-1.1713;   FogoY[5]=PlayerY+-0.6008;   FogoZ[5]=PlayerZ-2;
			FogoX[6]=PlayerX+-2.4602;   FogoY[6]=PlayerY+0.0455;    FogoZ[6]=PlayerZ-2;
			FogoX[7]=PlayerX+-2.7717;   FogoY[7]=PlayerY+-0.6095;   FogoZ[7]=PlayerZ-2;
			FogoX[8]=PlayerX+-2.4602;   FogoY[8]=PlayerY+0.0455;    FogoZ[8]=PlayerZ-2;
			IncendioAcontecendo = true;
			GivePlayerMoney(playerid,300);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "[] Voc� criou um incendio fique atento os bombeiros e a policia foi avisada !! !");
			SendClientMessage(playerid, 0xFFFF00AA, "[] Voc� ganhou R$300 !");
			SetTimerEx("Incendio", 5000, false, "i", playerid);
			WantedPoints[playerid]+=1;
        	SetPlayerCriminal(playerid,255,"Vandalismo");
			return 1;

	    }
	    else return SendClientMessage(playerid, COLOR_GREY,"Voc� n�o � de uma gang.");
	}
	//
	if(strcmp(cmd, "/apagarfogos", true) == 0 || strcmp(cmd, "/af", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 4)
	    {
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
		        format(string, sizeof(string), "[] %s retirou os fogos de Los Santos", sendername);
				ABroadCast(COLOR_LIGHTRED,string,1);
				IncendioAcontecendo = false;
			    ApagandoIncendio[playerid] = false;
			}
			for(new e = 0; e < 9; e++)
			{
			    DisablePlayerCheckpoint(playerid);
			    DestroyObject(FogoID[e]);
			    FogoApagado[e] = true;
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		  		DestroyObject(FogoID[e]);
		  		DisablePlayerCheckpoint(playerid);
			}
			return 1;

	    }
	    else return SendClientMessage(playerid, COLOR_GREY,"Voc� n�o � de uma gang.");
	}
	//
	if(strcmp(cmd, "/checarincendio", true) == 0 || strcmp(cmd, "/ci", true) == 0)
	{
	    if(PlayerInfo[playerid][pLider] == 22|| PlayerInfo[playerid][pMembro] == 22)
	    {
			if(IncendioAcontecendo != true) return SendClientMessage(playerid, 0xFFFF00AA, "[] Nenhum incendio encontrado !");
			new Float:PlayerX, Float:PlayerY, Float:PlayerZ, Float:PlayerA;
			GetPlayerPos(playerid,PlayerX,PlayerY,PlayerZ);
			GetPlayerFacingAngle(playerid, PlayerA);
			/*new Bombeiro = CreateVehicle(407, PlayerX,PlayerY,PlayerZ,PlayerA,3,1,60000);
			PutPlayerInVehicle(playerid, Bombeiro, 0);*/
			SetPlayerCheckpoint(playerid, FogoX[1]-8.3718,FogoY[1]-8.429,FogoZ[1],8.0);
			SendClientMessage(playerid, 0xFFFF00AA, "[] Incendio encontrado, siga o checkpoint !");
			SendClientMessage(playerid, 0xFFFF00AA, "[] Para apagar o fogo voc� precisa de um caminh�o dos bombeiros");
			return 1;

	    }
	    else return SendClientMessage(playerid, COLOR_GREY,"Voc� n�o � um bombeiro.");
	}
	if(strcmp(cmd, "/servico", true) == 0 || strcmp(cmd, "/servi�o", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________| Servi�os |__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /servico [nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Servi�os: Taxi, Onibus,Medico,CET,Policia,Pizza,Bombeiro");
				return 1;
			}
		    if(strcmp(x_nr,"taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   N�o tem taxista online agora, tente /servico onibus...");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode ligar para um Taxi agora !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar taxi - Para Aceitar a Chamada)", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou um Taxista,espere a resposta...");
		    	TaxiCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"moto-taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "  N�o tem nenhum Moto-Taxi online agora, espere algum entrar !");
		            return 1;
      		  	}
          		if(TransportDuty[playerid] > 0)
 		      	{
		            SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o pode ligar para um Moto-Taxi agora !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar moto-taxi - Para Aceitar a Chamada)", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou um Moto-Taxi... Agora espere a resposta.");
		    	TaxiCall = playerid;
		    	return 1;
			}
            if(strcmp(x_nr,"bombeiro",true) == 0)
			{
			    if(Bombeiros < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   N�o tem bombeiro em servi�o agora, tente mais tarde...");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Bombeiro. (Use /aceitar ocorrencia  - Para Aceitar a Chamada)", sendername);
		    	SendFamilyMessage(22, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou um Bombeiro,espere a resposta...");
		    	BombCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"onibus",true) == 0)
			{
			    if(BusDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   N�o tem motorista de onibus online neste momento, espere um entrar !");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode chamar um onibus agora !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Onibus. (Use /aceitar onibus - Para aceitar a chamada)", sendername);
		    	SendEmpregoMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou um Onibus... Agora espere a resposta.");
		    	BusCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"medico",true) == 0)
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   N�o tem nenhum medico online neste momento, espere um entrar !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita da SAMU. (Use /aceitar medico - Para aceitar a chamada)", sendername);
		    	SendFamilyMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou a SAMU.... Agora espere por resposta.");
		    	MedicCall = playerid;
		    	return 1;
			}
            else if(strcmp(x_nr,"pizza",true) == 0)
			{
			    if(Pizza < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   N�o tem nenhum pizza boy online neste momento, espere um entrar !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Pizza Boy. (Use /aceitar pizza - Para aceitar a chamada)", sendername);
		    	SendFamilyMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou um Pizza Boy.... Agora espere por resposta.");
		    	PizzaCall = playerid;
		    	return 1;
			}

			else if(strcmp(x_nr,"policia",true) == 0)
			{
			    if(Copsronda < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "Nenhum Policial em ronda no momento.");
		            return 1;
		        }
		        for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    if(IsACop(i) && IsPlayerConnected(i))
				    {
				        if(PolicialInRonda[i] == 1)
				        {
				            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Est�o fazendo uma chamada.");
				            return 1;
				        }
					}
				}
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s est� precisando de um Policial. (Digite /aceitar chamada para aceitar a chamada)", sendername);
		    	SendFamilyMessage(1, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(2, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(3, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(16, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(11, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou um Policial Aguarde a Resposta.");
		    	CopsrondaCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"CET",true) == 0)
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nenhum CET online neste momento, espere um entrar !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um CET. (Use /aceitar CET - Para aceitar a chamada)", sendername);
		    	SendEmpregoMessage(5, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� chamou um CET... Agora espere por uma resposta.");
		    	MechanicCall = playerid;
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Servi�o Inexistente !");
			    return 1;
			}
		}
		return 1;
	}
//Amarrar
    if(strcmp(cmd, "/amarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
  			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
    		{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� precisa de cargo 3 ou mais para amarrar as pessoas. !");
			        return 1;
			    }
			    if(pamarrar == 1)
                {
                	SendClientMessage(playerid,COLOR_GRAD2,"Sequestraram recentemente, s� pode sequestrar a cada 25 minutos!");
                    return 1;
                }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /amarrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				    	if(PlayerInfo[giveplayerid][pLevel] == 2)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode sequestrar novatos!");
							return 1;
						}
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador j� est� amarrado !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode se amarrar !"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Voc� foi sequestrado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voc� sequestrou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s sequestra %s, ent�o ele n�o ir� � lugar algum.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Sequestrado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								PlayerInfo[giveplayerid][pMuted] = 1;
        						pamarrar = 1;
			                    TempoAmarrar = SetTimer("Amarrar",1500000, 0);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� no seu carro, ou voc� n�o � o motorista !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um mafioso !");
			}
		}
		return 1;
	}
//Desamarrar Mafia
	if(strcmp(cmd, "/desamarrarm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� precisa de cargo 3 ou mais para desamarrar as pessoas !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /desamarrarm [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode desamarrar si mesmo!"); return 1; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Voc� foi libertado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voc� libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� sequestrado !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um mafioso !");
			}
		}//not connected
		return 1;
	}
//Sequestrar
    if(strcmp(cmd, "/sequestrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 23)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� precisa de cargo 3 ou mais para amarrar as pessoas. !");
			        return 1;
			    }
          		if(psequestrar == 1)
          		{
             		SendClientMessage(playerid,COLOR_GRAD2,"Sequestraram recentemente, s� pode sequestrar a cada 25 minutos!");
             		return 1;
          		}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /sequestrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				    	if(PlayerInfo[giveplayerid][pLevel] == 2)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode sequestrar novatos!");
							return 1;
						}
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador j� est� sequestrado !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode se sequestrar!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Voc� foi sequestrado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voc� sequestrou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s sequestra %s, ent�o ele n�o ir� � lugar algum.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Sequestrado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								Sequestrado[giveplayerid] = 1;
								PlayerInfo[giveplayerid][pMuted] = 1;
        						psequestrar = 1;
			                    TempoSequestrar = SetTimer("Sequestrar",1500000, 0);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� no seu carro, ou voc� n�o � o motorista !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Gangster !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desamarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Voc� precisa de cargo 3 ou mais para desamarrar as pessoas !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "USE: /desamarrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode desamarrar � s� mesmo!"); return 1; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Voc� foi libertado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voc� libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� sequestrado !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Gangster !");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmd, "/vender", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________| Comandos de Vender |__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "USE: /vender [nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Nomes: Peixe, Cozido, Pizza");
				return 1;
			}
		    if(strcmp(x_nr,"peixe",true) == 0)
			{
			    if (!PlayerToPoint(100, playerid,-29.2522,-89.0717,1003.5469) && !PlayerToPoint(100, playerid,-25.2589,-54.7865,1003.5469) && !PlayerToPoint(100, playerid,-30.8149,-28.0234,1003.5573))//centerpoint 24-7
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o est� em uma 24-7 !");
					return 1;
				}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /vender peixe [peixe]");
					return 1;
				}
				new price;
				new fishid = strval(tmp);
				if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   N�mero de Peixes tem que ser maior que 1 e menor que 5 !"); return 1; }
				else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pegou um peixe na bolsa n�mero(1) !"); return 1; }
				else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pegou um peixe na bolsa n�mero(2) !"); return 1; }
				else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pegou um peixe na bolsa n�mero(3) !"); return 1; }
				else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pegou um peixe na bolsa n�mero(4) !"); return 1; }
				else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pegou um peixe na bolsa n�mero(5) !"); return 1; }
				ConsumingMoney[playerid] = 1;
				switch (fishid)
				{
				    case 1:
				    {
				        if(Fishes[playerid][pWeight1] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
                        price = FishCost(playerid, Fishes[playerid][pFid1]);
                        price = price * Fishes[playerid][pWeight1];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 1);
				    }
				    case 2:
				    {
				        if(Fishes[playerid][pWeight2] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid2]);
                        price = price * Fishes[playerid][pWeight2];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 2);
				    }
				    case 3:
				    {
				        if(Fishes[playerid][pWeight3] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid3]);
                        price = price * Fishes[playerid][pWeight3];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 3);
				    }
				    case 4:
				    {
				        if(Fishes[playerid][pWeight4] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid4]);
                        price = price * Fishes[playerid][pWeight4];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 4);
				    }
				    case 5:
				    {
				        if(Fishes[playerid][pWeight5] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid5]);
                        price = price * Fishes[playerid][pWeight5];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, price);
						ClearFishID(playerid, 5);
				    }
				}
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				return 1;
			}
			else if(strcmp(x_nr,"cozido",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /vender cozido [N� do cozido] [id/nome]");
					return 1;
				}
				new cookid = strval(tmp);
				if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   N�mero do cozido m�nimo 1 m�ximo 5 !"); return 1; }
				else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem um cozido no numero(1) !"); return 1; }
				else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem um cozido no numero(2) !"); return 1; }
				else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem um cozido no numero(3) !"); return 1; }
				else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem um cozido no numero(4) !"); return 1; }
				else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem um cozido no numero(5) !"); return 1; }
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /vender cozido [N� do cozido] [id/nome]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				        switch(cookid)
				        {
							case 1:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador n�o tem espa�o na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 2:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador n�o tem espa�o na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 3:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador n�o tem espa�o na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 4:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador n�o tem espa�o na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 5:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Voc� deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para v�-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador n�o tem espa�o na sua lista de cozidos !");
							        return 1;
							    }
							}
				        }//switch
				        ClearCookingID(playerid, cookid);
				    }//invalid giveplayerid
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� offline !");
				    return 1;
				}
			}
            if(strcmp(x_nr,"pizza",true) == 0)
	    {
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 12)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Pizza Boy!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderpizza [id] [pre�o]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 50) { SendClientMessage(playerid, COLOR_GREY, "   Pre�o m�nimo 1, m�ximo 50!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode vender pizza pra si mesmo !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu uma pizza para %s por R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Pizza Boy %s est� oferecendo uma pizza para você por R$%d, (Digite /aceitar comida) para aceitar.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PizzaOffer[giveplayerid] = playerid;
						PizzaPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� Offline!");
			}
		}
		return 1;
	}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Comando de Venda Desconhecido !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/corrida",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10|| PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce est� de folga e recebeu $%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GivePlayerMoney(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return 1;
				}
				new Veh = GetPlayerVehicleID(playerid);
				if(IsATaxiCar(Veh) && (PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10))
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Pre�o]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 500) { SendClientMessage(playerid, COLOR_GREY, "   Pre�o da corrida m�nimo $1 M�ximo R$500!"); return 1; }
					    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Taxista %s est� em servi�o, Corrida: $%d - Chame um taxi /servico taxi", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce n�o � o motorista!");
					    return 1;
					}
				}
				else if(IsAOniCar(Veh) && PlayerInfo[playerid][pEmprego] == 9)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "USE: /corrida [Preco]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Pre�o da corrida M�nimo $1 M�ximo $999!"); return 1; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Motorista de onibus %s est� em servi�o, Corrida: $%d - Chame um onibus /servico onibus", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce n�o � o motorista!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce n�o est� em um taxi/onibus!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Voce n�o � um taxista/motorista de �nibus!");
			    return 1;
			}
	    }
	    return 1;
 	}
	if(strcmp(cmd, "/1", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~p~| ~r~1 ~p~|");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
	if(strcmp(cmd, "/2", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~p~| ~r~2 ~p~|");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
	if(strcmp(cmd, "/3", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~p~| ~y~3 ~p~|");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
	if(strcmp(cmd, "/go", true) == 0 || strcmp(cmd, "/4", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~p~| ~g~Go Go Go ~p~|");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
 	if(strcmp(cmd,"/comer",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Você n�o pode comer enquanto est� lutando !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "USE: /comer [numero do peixe(1 a 5)]");
				return 1;
			}
			new cookid = strval(tmp);
			if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   n�mero de cozimento tem que ser entre 1 e 5 !"); return 1; }
			else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(1) !"); return 1; }
			else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(2) !"); return 1; }
			else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(3) !"); return 1; }
			else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(4) !"); return 1; }
			else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(5) !"); return 1; }
            GetPlayerName(playerid, sendername, sizeof(sendername));
			new Float:health;
			if(GetPlayerHealth(playerid, health) < 40)
			{
			    new hp = 0;
			    switch (cookid)
			    {
					case 1:
					{
					    if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de especies ameaçadas de extinção");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
					    hp = Cooking[playerid][pCWeight1];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook1]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook1], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 2:
					{
					    if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de esp�cies amea�adas de extin��o");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
					    hp = Cooking[playerid][pCWeight2];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook2]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook2], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 3:
					{
					    if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de esp�cies amea�adas de extin��o");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
					    hp = Cooking[playerid][pCWeight3];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook3]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook3], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 4:
					{
					    if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de esp�cies amea�adas de extin��o");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
					    hp = Cooking[playerid][pCWeight4];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook4]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook4], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 5:
					{
					    if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de esp�cies amea�adas de extin��o");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
					    hp = Cooking[playerid][pCWeight5];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook5]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook5], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
			    }
				ClearCookingID(playerid, cookid);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Sua sa�de � alta demais, s� pode com a Sa�de em 40 !");
			    return 1;
			}
	    }
	    return 1;
	}
 	if(strcmp(cmd,"/cozinhar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(IsAtCookPlace(playerid))
	        {
	            new x_nr[32];
	            x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "USE: /cozinhar [nome]");
					SendClientMessage(playerid, COLOR_WHITE, "Nomes: ultimopeixe, Peixe, Frango, Hamburger, Pizza.");
					return 1;
				}
				if(strcmp(x_nr,"ultimopeixe",true) == 0)
				{
				    if(Fishes[playerid][pLastFish] > 0)
	        		{
					    new fornd = 0;
					    if(Cooking[playerid][pCWeight1] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight2] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight3] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight4] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight5] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem espa�o na sua lista de preparo !");
					        return 1;
					    }
					    if(fornd)
					    {
					        ClearFishID(playerid, Fishes[playerid][pLastFish]);
				            Fishes[playerid][pLastFish] = 0;
				            Fishes[playerid][pFishID] = 0;
					    }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você ainda n�o fisgou um peixe !");
				        return 1;
				    }
				}
				else if(strcmp(x_nr,"peixe",true) == 0)
				{
				    new fornd = 0;
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "USE: /cozinhar peixe [peixenumero]");
						return 1;
					}
					new fishid = strval(tmp);
					if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   N�mero de Peixes tem que ser entre 1 e 5 !"); return 1; }
					else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa numero(1) !"); return 1; }
					else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa numero(2) !"); return 1; }
					else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa numero(3) !"); return 1; }
					else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa numero(4) !"); return 1; }
					else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa numero(5) !"); return 1; }
					if(Cooking[playerid][pCWeight1] == 0)
					{
					    if(fishid == 1)
					    {
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
					    	SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
					    }
						else if(fishid == 2)
					 	{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						fornd = 1;
		    		}
					else if(Cooking[playerid][pCWeight2] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						fornd = 1;
		    		}
					else if(Cooking[playerid][pCWeight3] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						fornd = 1;
   					}
					else if(Cooking[playerid][pCWeight4] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						fornd = 1;
		    		}
					else if(Cooking[playerid][pCWeight5] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						fornd = 1;
   					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
					    return 1;
		    		}
					if(fornd)
					{
					    ClearFishID(playerid, fishid);
						Fishes[playerid][pLastFish] = 0;
			   			Fishes[playerid][pFishID] = 0;
					}
				}
				else if(strcmp(x_nr,"frango",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
				    {//Cluckin Bell
				        if(Groceries[playerid][pChicken] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem espa�o na sua lista de preparo !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem nem um frango !");
				            return 1;
				        }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir at� uma Cluckin Bell para /cozinhar isso !");
					    return 1;
				    }
				}
				else if(strcmp(x_nr,"hamburger",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
					{//Burgershot
					    if(Groceries[playerid][pHamburger] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem espa�o na sua lista de preparo !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem nem um hamburger !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir a uma Burger Shot para /cozinhar isso !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"pizza",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
					{//Well Stacked Pizza
					    if(Groceries[playerid][pPizza] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem espa�o na sua lista de preparo !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem nem uma pizza !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir a uma Well Stacked Pizza parar /cozinhar isso !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   N�mero de preparo inv�lido !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você n�o est� em nem um lugar de cozimento (Cluckin Bell / Burger Shot / Well Stacked Pizza).");
	            return 1;
	        }
	    }
	    return 1;
	}
 	if(strcmp(cmd,"/cozido",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________| Cozidos |__________________|");
	        format(string, sizeof(string), "** (1) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
	if(strcmp(cmd,"/pescar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFishes] > 500)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   pescaram muitos peixes, espere at� a sua reduzida !");
	            return 1;
	        }
	        if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você j� pegou 5 Peixes, /vender(24-7) ou /comer(lojas de comida) ou liberte-os primeiro !");
	            return 1;
	        }
	        new Veh = GetPlayerVehicleID(playerid);
	        if((IsAtFishPlace(playerid)) || IsABoat(Veh))
	        {
	            new Caught;
	            new rand;
	            new fstring[MAX_PLAYER_NAME];
	            new Level = PlayerInfo[playerid][pFishSkill];
	            if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
	            else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
	            else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
	            else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
	            else if(Level >= 401) { Caught = random(180)-70; }
	            rand = random(FishNamesNumber);
	            if(Caught <= 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Os Peixes fugiram de Você, Tente de Novo !");
	                return 1;
	            }
	            else if(rand == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 casaco e o jogou fora !");
	                return 1;
	            }
	            else if(rand == 4)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 cal�a e a jogou fora !");
	                return 1;
	            }
	            else if(rand == 7)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 latinha e a jogou fora !");
	                return 1;
	            }
	            else if(rand == 10)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 par de sapatos e jogou fora !");
	                return 1;
	            }
	            else if(rand == 13)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou algum lixo e jogou fora !");
	                return 1;
	            }
	            else if(rand == 20)
	            {
	                new mrand = random(500);
	                format(string, sizeof(string), "* Você pegou 1 saco de dinheiro,contendo R$%d.", mrand);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                GivePlayerMoney(playerid, mrand);
	                return 1;
	            }
		        if(PlayerInfo[playerid][pFishLic] < 1)
		        {
					SetPlayerCriminal(playerid,255, "Pesca Ilegal!");
				}
		        if(Fishes[playerid][pWeight1] == 0)
		        {
		        	PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight1] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish1], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 1;
					Fishes[playerid][pFid1] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora � de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
     			}
		        else if(Fishes[playerid][pWeight2] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight2] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish2], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 2;
					Fishes[playerid][pFid2] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora � de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight3] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight3] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish3], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 3;
					Fishes[playerid][pFid3] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora � de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight4] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight4] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish4], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 4;
					Fishes[playerid][pFid4] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora � de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight5] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight5] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish5], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 5;
					Fishes[playerid][pFid5] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora � de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem nenhum espa�o para o seu peixe !");
		            return 1;
		        }
	            if(PlayerInfo[playerid][pFishSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu N�vel de Pesca Agora � n�vel 2, Agora você pode capturar peixes mais pesados."); }
				else if(PlayerInfo[playerid][pFishSkill] == 250)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu N�vel de Pesca Agora � n�vel 3, Agora você pode capturar peixes mais pesados."); }
				else if(PlayerInfo[playerid][pFishSkill] == 500)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu N�vel de Pesca Agora � n�vel 4, Agora você pode capturar peixes mais pesados."); }
				else if(PlayerInfo[playerid][pFishSkill] == 1000)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu N�vel de Pesca Agora � n�vel 5, Agora você pode capturar peixes mais pesados."); }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você n�o est� em um lugar Pesca (Parque Gleen) ou em um barco de pesca !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/peixes",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________| Fishes |__________________|");
	        format(string, sizeof(string), "** (1) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/soltarpeixe",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /soltarpeixe [peixe]");
				return 1;
			}
			new fishid = strval(tmp);
			if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   O N�mero de Peixes Deve Ser Maior que 1 ou menor que 5 !"); return 1; }
			else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,n�mero(1) !"); return 1; }
			else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,n�mero(2) !"); return 1; }
			else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,n�mero(3) !"); return 1; }
			else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,n�mero(4) !"); return 1; }
			else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,n�mero(5) !"); return 1; }
			ClearFishID(playerid, fishid);
			Fishes[playerid][pLastFish] = 0;
   			Fishes[playerid][pFishID] = 0;
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você devolveu o peixe !");
		}
		return 1;
	}
 	if(strcmp(cmd,"/soltarultimo",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pLastFish] > 0)
	        {
	            ClearFishID(playerid, Fishes[playerid][pLastFish]);
	            Fishes[playerid][pLastFish] = 0;
	            Fishes[playerid][pFishID] = 0;
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você devolveu o �ltimo peixe !");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você nem mesmo apanhou um peixe ainda !");
	            return 1;
	        }
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/soltartodos",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
	        {
	            ClearFishes(playerid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você soltou todos os seus peixes !");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você n�o pegou nenhum peixe ainda !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/minhaslicencas",true)==0)
    {

        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
	        if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
			SendClientMessage(playerid, COLOR_WHITE, "|__________________| Licencas |__________________|");
	        format(string, sizeof(string), "** Motorista: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Piloto: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Marujo: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Pescador: %s.", text3);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Armas: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
	if(strcmp(cmd,"/minhaslicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
	        if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________| Licencas |__________________|");
	        format(string, sizeof(string), "** Motorista: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Piloto: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Marujo: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Pescador: %s.", text3);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Armas: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/mostrarlicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Use: /mostrarlicencas [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Para ver suas licencas Use: /minhaslicencas!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20];
				        new text2[20];
				        new text3[20];
				        new text4[20];
				        new text5[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }

						if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
				        if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
				        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
				        format(string, sizeof(string), "|__________| Licenses of %s |__________|", sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "** Motorista: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Piloto: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Marujo: %s.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Pescador: %s.", text3);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Armas: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s mostrou suas licencas para Você.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você mostrou suas licencas para %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Você !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� offline !");
	            return 1;
	        }
		}
	    return 1;
 	}
    if(strcmp(cmd, "/mostrarrg",true) == 0)
	{
	tmp = strtok(cmdtext, idx);
	if(!strlen(tmp))
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Uso: /mostrarrg [id]");
	}
	new info;
	info = ReturnUser(tmp);
	if (ProxDetectorS(10.0, playerid,info))
	{
	ShowStats(info, playerid);
	GetPlayerName(playerid, sendername, sizeof(sendername));
	GetPlayerName(info, plname, sizeof(plname));
	format(string, sizeof(string), "* %s mostra seu rg para %s.", sendername, plname);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
 	return 1;
	}
 	if(strcmp(cmd,"/hitmanskin",true)==0 || strcmp(cmd,"/hskin",true)==0)
    {
     if(PlayerInfo[playerid][pMembro] == 8||PlayerInfo[playerid][pLider] == 8)
    	{
    		ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Hitman Disfarce", "Tirar Disfarce\nDisfarce\nPolicia Militar\nROTA\nEx�rcito\nM�dicos\nTCP\nGavi�es\nPrefeito\nReporter\nTaxista\n1�CIA\nCosa Nostra\nYakuza\nGroove\nMancha Verde\n2�CIA\nBallas\nVagos\nComando Vermelho\nTugas\nSons Of Anarchy\nMayans", "Confirmar", "Cancelar");
	   	    return 1;
	   }
    }
    if(strcmp(cmd,"/disfarce",true)==0 || strcmp(cmd,"/disfarce",true)==0)
    {
     if(PlayerInfo[playerid][pMembro] == 2||PlayerInfo[playerid][pLider] == 2)
    	{
    		ShowPlayerDialog(playerid, 2101, DIALOG_STYLE_LIST, "Hitman Disfarce", "Tirar Disfarce\nDisfarce\nPolicia Militar\nROTA\nEx�rcito\nM�dicos\nTCP\nGavi�es\nPrefeito\nReporter\nTaxista\n1�CIA\nCosa Nostra\nYakuza\nGroove\nMancha Verde\n2�CIA\nBallas\nVagos\nComando Vermelho\nTugas\nSons Of Anarchy\nMayans\nHitmans", "Confirmar", "Cancelar");
	   	    return 1;
	   }
    }
	if(strcmp(cmd,"/laptop",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
		    {
			    if(ConnectedToPC[playerid] == 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você desligou seu laptop, e se desconectou de sua Ag�ncia.");
			        ConnectedToPC[playerid] = 0;
			        return 1;
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você ligou seu laptop, e se conectou a sua Ag�ncia.");
			    SendClientMessage(playerid, COLOR_WHITE, "|___| Agencia dos Assasinos |___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|____________|00:00|____________|");
				ConnectedToPC[playerid] = 255;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Assasino!");
		        return 1;
		    }
		}
	    return 1;
	}
	if(strcmp(cmd, "/equiparm", true) == 0)
	{
        new tmpcar = GetPlayerVehicleID(playerid);
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		if(IsACaminhaozinhoCar(tmpcar)||PlayerToPoint(3, playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(3,playerid,675.0715,-1275.7689,13.6334) || HouseEntered[playerid] != 255)
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Mafiosos
	        {
				if(OnMafiaEquipado[playerid] == 1)
				{
					ResetPlayerWeaponsEx(playerid);
					OnMafiaEquipado[playerid] = 0;
					return 1;
	    		}
                if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12) // M�fia Cosa Nostra
                {
					if (PlayerInfo[playerid][pCargo] == 0)
					{
	   					format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 50);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 150);
						GivePlayerWeapon(playerid, 24, 140);
						GivePlayerWeapon(playerid, 29, 140);
						GivePlayerWeapon(playerid, 30, 170);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 220);
						GivePlayerWeapon(playerid, 24, 175);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 30, 230);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 300);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 29, 280);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
                    }
	 				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 350);
						GivePlayerWeapon(playerid, 24, 270);
						GivePlayerWeapon(playerid, 29, 360);
						GivePlayerWeapon(playerid, 31, 370);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 550);
						GivePlayerWeapon(playerid, 24, 400);
						GivePlayerWeapon(playerid, 29, 420);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 8, 1);
						GivePlayerWeapon(playerid, 16, 2);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
	                    return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
                        GivePlayerWeapon(playerid, 25, 700);
						GivePlayerWeapon(playerid, 24, 570);
						GivePlayerWeapon(playerid, 29, 630);
						GivePlayerWeapon(playerid, 31, 670);
						GivePlayerWeapon(playerid, 8, 1);
						GivePlayerWeapon(playerid, 16, 4);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
	   		    }
				if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)// M�fia Yakuza
				{
					if (PlayerInfo[playerid][pCargo] == 0)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 50);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 1)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 150);
						GivePlayerWeapon(playerid, 24, 140);
						GivePlayerWeapon(playerid, 29, 140);
						GivePlayerWeapon(playerid, 30, 170);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 220);
						GivePlayerWeapon(playerid, 24, 175);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 30, 230);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 300);
						GivePlayerWeapon(playerid, 24, 200);
						GivePlayerWeapon(playerid, 29, 280);
						GivePlayerWeapon(playerid, 30, 300);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 350);
						GivePlayerWeapon(playerid, 24, 270);
						GivePlayerWeapon(playerid, 29, 360);
						GivePlayerWeapon(playerid, 31, 370);
						GivePlayerWeapon(playerid, 8, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 550);
						GivePlayerWeapon(playerid, 24, 400);
						GivePlayerWeapon(playerid, 29, 420);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 8, 1);
						GivePlayerWeapon(playerid, 17, 2);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
                        return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeaponsEx(playerid);
						GivePlayerWeapon(playerid, 25, 700);
						GivePlayerWeapon(playerid, 24, 570);
						GivePlayerWeapon(playerid, 29, 630);
						GivePlayerWeapon(playerid, 31, 670);
						GivePlayerWeapon(playerid, 8, 1);
						GivePlayerWeapon(playerid, 17, 4);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
				}
			}
			if(PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12 && PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Você n�o � um Mafioso");
				return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você n�o est� na HQ ou em Um BoxVille.");
		}
	}
	if(strcmp(cmd, "/jfora", true) == 0)
	{
	    new Veh = GetPlayerVehicleID(playerid);
 		if((IsAtFishPlace(playerid)) || IsABoat(Veh))
 		{
 		    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
 		    {
				new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "Use: /jfora [name]");
					SendClientMessage(playerid, COLOR_WHITE, "Nomes validos: materiais.");
					return 1;
				}
				if(strcmp(x_nr,"materiais",true) == 0)
				{
			    	if((IsAtFishPlace(playerid)) || IsABoat(Veh))
			    	{
			        	if(MatsHolding[playerid] > 0)
			        	{
							format(string,sizeof(string),"* %s jogou um saco na �gua.",sendername);
							ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							MatsHolding[playerid] = 0;
						}
						else
						{
					    	SendClientMessage(playerid, COLOR_LIGHTRED, "Você n�o tem Materiais para jog�-los na �gua.");
						}
					}
					else
					{
				    	SendClientMessage(playerid, COLOR_LIGHTRED, "Você n�o pode jogar os itens ilegais aqui.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Você n�o � um Mafioso");
			}
		}
	}
	if(strcmp(cmd, "/mafia",true)==0)
	{
	    if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
    	{
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "Use: /mafia [name]");
				SendClientMessage(playerid, COLOR_WHITE, "Nomes validos: pegar, trocar.");
				return 1;
			}
			if(strcmp(x_nr,"pegar",true) == 0)
			{
				if(PlayerToPoint(3.0,playerid,1738.6844,-1944.9553,13.5647))
				{
  	    			if(MatsHolding[playerid] >= 55)
  	   				{
         				SendClientMessage(playerid, COLOR_GREY, " Você j� tem Pacotes !");
	        			return 1;
        			}
		        	tmp = strtok(cmdtext, idx);
		        	if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "Use: /mafia pegar [quantidade]  *Max p/ Vez = 55*");
						return 1;
					}
      				moneys = strval(tmp);
					if(moneys < 1 || moneys > 55) { SendClientMessage(playerid, COLOR_GREY, "   O N�meros de Pacotes � ser pegos tem que ser mais que 1 e menos que 50 !"); return 1; }
					new price = moneys * 100;
					if(GetPlayerMoney(playerid) > price)
					{
    					format(string, sizeof(string), "* Você recebeu %d Materiais por R$%d.", moneys, price);
				    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				    	GivePlayerMoney(playerid, - price);
				    	SBizzInfo[16][sbTill] += price;
		                ExtortionSBiz(16, price);
				    	MatsHolding[playerid] = moneys;
					}
					else
					{
    					format(string, sizeof(string), "   Você n�o tem R$%d !", price);
				    	SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
   				else
		    	{
      				SendClientMessage(playerid, COLOR_GREY, " Você n�o est� nas caixas de Materiais na Esta��o Unity !");
       	 			return 1;
 	  			}
			}
			else if(strcmp(x_nr,"trocar",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout = (100)*(MatsHolding[playerid]);
			            format(string, sizeof(string), "* Você pagou %d para o Armaz�n pelos seus %d pacotes.", payout, MatsHolding[playerid]);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			            PlayerInfo[playerid][pMats] += payout;
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Você n�o tem nenhum pacote !");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você n�o est� nas caixas de Materiais no Casar�o !");
			        return 1;
			    }
			}
		}
	}
	if(strcmp(cmd, "/mafiavkit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_YELLOW," Você n�o pode vender armas na cadeia!");
	   			return 1;
    		}
			new carid = GetPlayerVehicleID(playerid);
			if(!IsACaminhaozinhoCar(carid))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Você precisa estar dentro do BoxVille");
				return 1;
			}
	        if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
	            new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SendClientMessage(playerid,COLOR_WHITE,"|__________________| Vender Armas - Mafiosos |__________________|");
					SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
					SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
					SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
					SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599 Materiais)");
					return 1;
				}
				else if(strcmp(x_nr,"1",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________| Vender Armas - Mafiosos |__________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,faca(599 Materiais)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você n�o pode se vender armas!"); return 1; }
					new carid1 = GetPlayerVehicleID(giveplayerid);
					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você n�o pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid1))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem Você vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            if(PlayerInfo[playerid][pMats] > 399)
							{
					    		GivePlayerMoney(giveplayerid, -10000);
					    		GivePlayerMoney(playerid, 10000);
					    		PlayerInfo[playerid][pMats] -= 399;
				    			GivePlayerWeapon(giveplayerid, 31, 300);
				    			GivePlayerWeapon(giveplayerid, 29, 200);
				    			GivePlayerWeapon(giveplayerid, 25, 100);
				    			format(string,sizeof(string),"Voce vendeu o kit 1,para %s.",giveplayer);
				    			SendClientMessage(playerid,COLOR_GRAD1,string);
				    			format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    			return 1;
							}
							else
							{
								SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
								return 1;
							}
					        //return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________| Vender Armas - Mafiosos |__________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,faca(599)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você n�o pode se vender armas!"); return 1; }
					new carid2 = GetPlayerVehicleID(giveplayerid);
					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você n�o pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid2))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem Você vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
		       			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(PlayerInfo[playerid][pMats] > 499)
						{
					    	GivePlayerMoney(giveplayerid, -12000);
					    	GivePlayerMoney(playerid, 12000);
					    	PlayerInfo[playerid][pMats] -= 499;
                    		GivePlayerWeapon(giveplayerid, 31, 300);
				    		GivePlayerWeapon(giveplayerid, 29, 200);
				    		GivePlayerWeapon(giveplayerid, 25, 100);
				    		GivePlayerWeapon(giveplayerid, 24, 100);
				    		format(string,sizeof(string),"Voce vendeu o kit 2,para %s.",giveplayer);
				    		SendClientMessage(playerid,COLOR_GRAD1,string);
				    		format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    		ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________| Vender Armas - Mafiosos |__________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,faca(599)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você n�o pode se vender armas!"); return 1; }
					new carid3 = GetPlayerVehicleID(giveplayerid);
                    if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você n�o pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid3))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(PlayerInfo[playerid][pMats] > 599)
						{
					    	GivePlayerMoney(giveplayerid, -15000);
					    	GivePlayerMoney(playerid, 15000);
					    	PlayerInfo[playerid][pMats] -= 599;
                    		GivePlayerWeapon(giveplayerid, 31, 300);
				    		GivePlayerWeapon(giveplayerid, 29, 200);
				    		GivePlayerWeapon(giveplayerid, 24, 100);
				    		GivePlayerWeapon(giveplayerid, 25, 100);
				    		GivePlayerWeapon(giveplayerid, 34, 80);
				    		GivePlayerWeapon(giveplayerid, 4, 1);
				    		format(string,sizeof(string),"Voce vendeu o kit 3,para %s.",giveplayer);
				    		SendClientMessage(playerid,COLOR_GRAD1,string);
				    		format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    		ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Você n�o � de nenhuma Organiza��o Mafiosa!");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd,"/mafiavarma",true)==0)
    {
    	if(PlayerPaintballing[playerid] != 0)
	    {
		   	SendClientMessage(playerid,COLOR_YELLOW," Você n�o pode vender armas no evento!");
			return 1;
    	}
	    if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você n�o pode vender armas na cadeia!");
	   		return 1;
   		}
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13 && PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você n�o � de nenhuma Organiza��o Mafiosa!");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			//if (giveplayerid == playerid)
			//{
			//    SendClientMessage(playerid,COLOR_GREY,"Você n�o pode vender armas pra si mesmo!");
			//    return 1;
			//}
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"USE: /mafiavarma [ID do Player] [weaponname]");
				SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) granada(500) shotgun(150)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			    //if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você n�o pode se vender armas!"); return 1; }
					x_weapon = strtok(cmdtext,idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________| Vender Armas - Mafiosos |__________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /mafiavarma [ID do Player] [weaponname]");
						SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) granada(500) shotgun(150)");
						return 1;
					}
				}
				if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 23; price[playerid] = 50; ammo[playerid] = 240; PlayerInfo[giveplayerid][pGun2] = 23; PlayerInfo[giveplayerid][pAmmo2] = 240; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"flores",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 14; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 100; ammo[playerid] = 220; PlayerInfo[giveplayerid][pGun2] = 24; PlayerInfo[giveplayerid][pAmmo2] = 220; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 29; price[playerid] = 100; ammo[playerid] = 360; PlayerInfo[giveplayerid][pGun2] = 29; PlayerInfo[giveplayerid][pAmmo2] = 360; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 190; PlayerInfo[giveplayerid][pGun2] = 25; PlayerInfo[giveplayerid][pAmmo2] = 190; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 30; price[playerid] = 200; ammo[playerid] = 360; PlayerInfo[giveplayerid][pGun2] = 30; PlayerInfo[giveplayerid][pAmmo2] = 360; } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 31; price[playerid] = 200; ammo[playerid] = 360; PlayerInfo[giveplayerid][pGun2] = 31; PlayerInfo[giveplayerid][pAmmo2] = 360; } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 33; price[playerid] = 200; ammo[playerid] = 230; PlayerInfo[giveplayerid][pGun2] = 33; PlayerInfo[giveplayerid][pAmmo2] = 230; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"faca",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 4; price[playerid] = 50; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				//else if(strcmp(x_weapon,"sniper",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 34; price[playerid] = 200; ammo[playerid] = 100; PlayerInfo[giveplayerid][pGun2] = 34; PlayerInfo[giveplayerid][pAmmo2] = 100; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"fumaca",true) == 0) { if(PlayerInfo[playerid][pMats] > 399) { weapon[playerid] = 17; price[playerid] = 200; ammo[playerid] = 12; PlayerInfo[giveplayerid][pGun2] = 17; PlayerInfo[giveplayerid][pAmmo2] = 12; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"granada",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { weapon[playerid] = 16; price[playerid] = 200; ammo[playerid] = 5; PlayerInfo[giveplayerid][pGun2] = 16; PlayerInfo[giveplayerid][pAmmo2] = 5; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma inv�lida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayerid))
				{
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COLOR_GRAD1,string);
					format(string,sizeof(string),"Você recebeu uma %s com %d a partir de muni��o %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayerid,COLOR_GRAD1,string);
					PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
					format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
					ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
					//SaveVendas();
				}
				else
				{
					SendClientMessage(playerid,COLOR_GRAD1,"O cliente n�o esta proximo de Você.");
					return 1;
				}
			}
			else
			{
				format(string,sizeof(string),"%d n�o esta online este player.",giveplayerid);
				SendClientMessage(playerid,COLOR_GRAD1,string);
			}
		}
		return 1;
	}
 	if(strcmp(cmd,"/VenderArma",true)==0)
    {
    	if(PlayerInfo[playerid][pJailed] != 0)
    	{
	  	 	SendClientMessage(playerid,COLOR_YELLOW," Você n�o pode vender armas na cadeia!");
	   		return 1;
    	}
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pEmprego] != 7)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você n�o � um Vendendor de Armas !");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (giveplayerid == playerid)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você n�o pode vender armas pra si mesmo!");
			    return 1;
			}
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"USE: /VenderArma [ID do Player] [Arma]");
				SendClientMessage(playerid,COLOR_GREY,"Armas: flowers(25) spistola(100) pistola(150) mp5(200) shotgun(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: rifle (600) ak47(600) m4(600)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext,idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________| Vender Armas |__________________|");
						SendClientMessage(playerid,COLOR_GREY,"USE: /VenderArma [ID do Players] [weaponname]");
						SendClientMessage(playerid,COLOR_GREY,"Armas: spistola(100) eagle(200) mp5(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: rifle(600) flores(25) ak47(600) m4(600) rifle(600)");
						return 1;
					}
				}
				//if(strcmp(x_weapon,"knife",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
				if(strcmp(x_weapon,"spistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 23; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 14; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 22; price[playerid] = 150; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 22; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200; PlayerInfo[giveplayerid][pGun2] = 29; PlayerInfo[giveplayerid][pAmmo2] = 200; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 25; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 30; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Você n�o tem Materiais para essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250; PlayerInfo[giveplayerid][pGun2] = 31; PlayerInfo[giveplayerid][pAmmo2] = 250; } else { SendClientMessage(playerid,COLOR_GREY,"   Você n�o tem Materiais para essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 33; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma inv�lida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayerid))
				{
				    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você n�o est� numa loja de armas!");
						return 1;
					}
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COLOR_GRAD1,string);
					format(string,sizeof(string),"Você recebeu uma %s com %d a partir de muni��o %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayerid,COLOR_GRAD1,string);
					PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
					format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
					ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid,COLOR_GRAD1,"O cliente nao esta proximo de você.");
					return 1;
				}
			}
			else
			{
				format(string,sizeof(string),"%d n�o est� online.",giveplayerid);
				SendClientMessage(playerid,COLOR_GRAD1,string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/abastecer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsAtGasStation(playerid))
			{
			    GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Abastecendo, Aguarde!",187,3);
				SetTimer("Fillup",RefuelWait,0);
				Refueling[playerid] = 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Você n�o est� em um posto de Gasolina");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/imo", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você n�o Bateu o cart�o!");
			    return 1;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   N�o � possivel imobilizar de dentro do carro !");
			        return 1;
			    }
			    new suspect = GetClosestPlayer(playerid);
			    if(IsPlayerConnected(suspect))
				{
				    if(PlayerCuffed[suspect] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Suspeito Imobilizado !");
				        return 1;
				    }
				    if(GetDistanceBetweenPlayers(playerid,suspect) < 3)
					{
					    if(IsPlayerInAnyVehicle(suspect))
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O suspeito est� em um carro, fa�a ele descer antes !");
					        return 1;
					    }
    					if(IsACop(giveplayerid))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você n�o pode dar imo em Policiais!");
							return 1;
						}
					    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você foi imobilizado por %s por 60 segundos.", sendername);
						SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você imobilizou o(a) %s por 60 segundos.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Imobilizou %s, para n�o fugir.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(suspect, "~r~Imobilizado", 2500, 3);
						TogglePlayerControllable(suspect, 0);
						ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
						PlayerCuffed[suspect] = 1;
						PlayerCuffedTime[suspect] = 20;
		            }
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Ele n�o est� perto de você!");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Oficial !");
			}
		}//not connected
	    return 1;
	}
	if(strcmp(cmd, "/algemar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você n�o Bateu o cart�o!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Use: /algemar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode algemar COPs !");
				        return 1;
			        }
				    if(PlayerCuffed[giveplayerid] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   O Jogador j� esta algemado !");
				        return 1;
				    }
					if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    new car = GetPlayerVehicleID(playerid);
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você nao pode se algemar!"); return 1; }
					    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
					    {
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
					        format(string, sizeof(string), "* Você foi algemado pelo: %s.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Você algemou %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s Algemou %s, para nao fugir.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							GameTextForPlayer(giveplayerid, "~r~Algemado", 2500, 3);
							TogglePlayerControllable(giveplayerid, 0);
							PlayerCuffed[giveplayerid] = 2;
							PlayerInfo[giveplayerid][pMuted] = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� no carro ou você n�o � o motorista !");
					        return 1;
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você !");
					    return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalgemar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "Use: /desalgemar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você n�o pode se desalgemar!"); return 1; }
							if(PlayerCuffed[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi desalgemado pelo: %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você desalgemou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Desalgemado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerCuffed[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Este jogador n�o est� algemado !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de você !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você n�o e PM/PR/PC/Exercito !");
			}
		}//not connected
		return 1;
	}
    /*if(strcmp(cmd, "/procurar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 1)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você n�o � Detetive !");
				return 1;
		    }
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você s� pode procurar novamente, daqui a 2 Minutos !");
			    return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /procurar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você n�o pode se procurar!"); return 1; }
			        new points;
			        new level = PlayerInfo[playerid][pDetSkill];
					if(level >= 0 && level <= 50)
					{ points = 60; }
					else if(level >= 51 && level <= 100)
					{ points = 120; }
					else if(level >= 101 && level <= 200)
					{ points = 8; }
					else if(level >= 201 && level <= 400)
					{ points = 10; }
					else if(level >= 401)
					{ points = 120; }
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(giveplayerid, X,Y,Z);
					SetPlayerCheckpoint(playerid, X,Y,Z, 6);
					FindTime[playerid] = 1;
					FindTimePoints[playerid] = points;
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu n�vel de detetive agora � 2, Você pode procurar mais r�pido e encontrar mais r�pido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu n�vel de detetive agora � 3, Você pode procurar mais r�pido e encontrar mais r�pido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu n�vel de detetive agora � 4, Você pode procurar mais r�pido e encontrar mais r�pido."); }
					else if(PlayerInfo[playerid][pDetSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu n�vel de detetive agora � 5, Você pode procurar mais r�pido e encontrar mais r�pido."); }
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse n�o � um jogador ativo !");
			}
		}
	    return 1;
	}*/
    /*if(IsPlayerInRangeOfPoint(playerid,10.0,GetPVarFloat(playerid,"FocoX"), GetPVarFloat(playerid,"FocoY"), GetPVarFloat(playerid,"FocoZ")))
    {
        DisablePlayerCheckpoint(playerid);
        DeletePVar(playerid,"FocoX");
        DeletePVar(playerid,"FocoY");
        DeletePVar(playerid,"FocoZ");
        KillTimer(GetPVarInt(playerid,"TimerProcura"));
    }*/

	if(strcmp(cmd, "/proteger", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 6)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um seguran�a!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /proteger [id] [pre�o]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Pre�o m�nimo 1, m�ximo 99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode se proteger !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você se ofereceu para proteger %s por R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Seguran�a %s ofereceu seguran�a por R$%d, (Digite /aceitar seguran�a) para aceitar.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GuardOffer[giveplayerid] = playerid;
						GuardPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� Offline!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/soltar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Advogado!");
		        return 1;
		    }
		    if(PlayerInfo[playerid][pLawSkill] >= 400)
		    {
		        ApprovedAdvogado[playerid] = 1;
		    }
		    if(PlayerInfo[playerid][pJailed] == 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, " Você n�o pode soltar alguem do carandiru!");
		        return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Use: /soltar [id]");
				SendClientMessage(playerid, COLOR_GRAD2, "Obs: Você s� pode soltar em um Departamento de Policia!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você n�o pode se libertar!"); return 1; }
					if(PlayerInfo[giveplayerid][pJailed] >= 3 && PlayerInfo[giveplayerid][pJailed] <= 5 && PlayerInfo[giveplayerid][pJailed] == 1 && PlayerInfo[giveplayerid][pJailed] == 7 && ApprovedAdvogado[playerid] == 1)
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você libertou %s da cadeia.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você foi libertado da cadeia pelo Advogado: %s.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						ApprovedAdvogado[playerid] = 0;
						WantAdvogado[giveplayerid] = 0;
						CallAdvogado[giveplayerid] = 0;
						JailPrice[giveplayerid] = 0;
						PlayerInfo[giveplayerid][pJailTime] = 1;
						PlayerInfo[playerid][pLawSkill] ++;
						if(PlayerInfo[playerid][pLawSkill] == 50)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de advogado agora é 2, Você ganhara mais dinheiro e vai soltar mais r�pido os presos."); }
						else if(PlayerInfo[playerid][pLawSkill] == 100)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de advogado agora é 3, Você ganhara mais dinheiro e vai soltar mais r�pido os presos."); }
						else if(PlayerInfo[playerid][pLawSkill] == 200)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de advogado agora é 4, Você ganhara mais dinheiro e vai soltar mais r�pido os presos."); }
						else if(PlayerInfo[playerid][pLawSkill] == 400)
						{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu nivel de advogado agora é 5, Você ganhara mais dinheiro e vai soltar mais r�pido os presos."); }
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   O jogador não precisa de advogado ou você está longe dele. !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador est� offline!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd,"/cancelar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________| Cancelar |__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Use: /cancelar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Sexo, Drogas, reparo, Advogado, seguran�a, aovivo, Abastecimento, Carro, Boxe");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Taxi, Onibus, Medico, CET, Policia, mendigo, convite, pizza, ocorrencia");
				return 1;
			}
			if(strcmp(x_Emprego,"sexo",true) == 0) {	SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"convite",true) == 0) { InviteOffer[playerid] = 999; InviteJob[playerid] = 0; }
			else if(strcmp(x_Emprego,"mendigo",true) == 0) { MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"drogas",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
			else if(strcmp(x_Emprego,"reparo",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
			else if(strcmp(x_Emprego,"Advogado",true) == 0) { WantAdvogado[playerid] = 0; CallAdvogado[playerid] = 0; }
   			else if(strcmp(x_Emprego,"galaos",true) == 0) { GalaoOffer[playerid] = 999; GalaoPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"seguran�a",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"aovivo",true) == 0) { LiveOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"assalto",true) == 0) { OfAssalto[playerid] = 999; precoassalto[playerid] = 0; }
			else if(strcmp(x_Emprego,"abastecercarro",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"carro",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
			else if(strcmp(x_Emprego,"Boxe",true) == 0) { BoxOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"padrinho",true) == 0) { MarryWitnessOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"casamento",true) == 0) { ProposeOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"divorcio",true) == 0) { DivorceOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"multa",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			        {
			            TaxiAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						TaxiCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(TaxiAccepted[i] < 999)
						        {
							        if(TaxiAccepted[i] == playerid)
							        {
							            TaxiAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            TaxiCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"bus",true) == 0 || strcmp(x_Emprego,"onibus",true) == 0)
			{
			        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			        {
			            BusAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						BusCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BusAccepted[i] < 999)
						        {
							        if(BusAccepted[i] == playerid)
							        {
							            BusAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            BusCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"CET",true) == 0)
			{
			        if(MechanicCallTime[playerid] > 0)
			        {
			            MechanicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MechanicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MechanicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MechanicAccepted[i] < 999)
						        {
							        if(MechanicAccepted[i] == playerid)
							        {
							            MechanicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            MechanicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
            else if(strcmp(x_Emprego,"pizza",true) == 0)
			{
			        if(PizzaCallTime[playerid] > 0)
			        {
			            PizzaAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						PizzaCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						PizzaCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(PizzaCall)) { if(PizzaCall == playerid) { PizzaCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(PizzaAccepted[i] < 999)
						        {
							        if(PizzaAccepted[i] == playerid)
							        {
							            PizzaAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            PizzaCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
            else if(strcmp(x_Emprego,"ocorrencia",true) == 0)
			{
			        if(BombCallTime[playerid] > 0)
			        {
			            BombAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						BombCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						BombCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BombCall)) { if(BombCall == playerid) { BombCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BombAccepted[i] < 999)
						        {
							        if(BombAccepted[i] == playerid)
							        {
							            BombAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            BombCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			        if(MedicCallTime[playerid] > 0)
			        {
			            MedicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MedicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MedicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MedicAccepted[i] < 999)
						        {
							        if(MedicAccepted[i] == playerid)
							        {
							            MedicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Paciente~n~~r~Cancelou a Chamada", 5000, 1);
							            MedicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"policia",true) == 0)
			{
			        if(CopsrondaCallTime[playerid] > 0)
			        {
			            CopsrondaAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						CopsrondaCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						CopsrondaCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(CopsrondaCall)) { if(CopsrondaCall == playerid) { CopsrondaCall = 999; } }
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(CopsrondaAccepted[i] < 999)
						        {
							        if(CopsrondaAccepted[i] == playerid)
							        {
							            CopsrondaAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            CopsrondaCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else { return 1; }
			format(string, sizeof(string), "* Você cancelou: %s.", x_Emprego);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}//not connected
		return 1;
	}
//aceitar COMMANDS (Cops)
	if(strcmp(cmd,"/aceitar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________| Aceitar |__________________|");
				SendClientMessage(playerid, COLOR_WHITE, "Use: aceitar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Transa, drogas, Reparo, Advogado, seguran�a, emprego, aovivo, Refill, Dinamite, Assalto");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Carro, Taxi, Onibus, Boxe, Medico, CET, Multa ,divorcio, mendigo, convite,pizza,comida,ocorrencia");
				return 1;
			}
			if(strcmp(x_Emprego,"convite",true) == 0)
			{
				if(InviteOffer[playerid] < 999)
			    {
					if(IsPlayerConnected(InviteOffer[playerid]))
					{
				        if(PlayerInfo[InviteOffer[playerid]][pLider] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; ChosenSkin[playerid] = 279; SetPlayerSkin(playerid, 279); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 114); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 11) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12; ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }
						else if(PlayerInfo[InviteOffer[playerid]][pLider] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17; ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 16) { PlayerInfo[playerid][pTeam] = 17; gTeam[playerid] = 2; ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 40; SetPlayerSkin(playerid, 40); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 47; SetPlayerSkin(playerid, 47); }
				        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 34; SetPlayerSkin(playerid, 34); }
                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 22) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 277; SetPlayerSkin(playerid, 277); }
						else if(PlayerInfo[InviteOffer[playerid]][pLider] == 23) { PlayerInfo[playerid][pTeam] = 21; gTeam[playerid] = 21; ChosenSkin[playerid] = 84; SetPlayerSkin(playerid, 84); }
						PlayerInfo[playerid][pMembro] = InviteJob[playerid];
						PlayerInfo[playerid][pCargo] = 1;
					    SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
					   	format(gstring, 128, "* %s aceitou seu convite para entrar na sua organiza��o.", PlayerName(playerid));
					   	SendClientMessage(InviteOffer[playerid], COLOR_LIGHTBLUE, gstring);
						new rand = random(sizeof(gInviteSpawns));
						SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(playerid, 0);
					    SelectChar[playerid] = 255;
					    SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
					    SelectCharPlace[playerid] = 1;
					    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
					    SetPlayerSkin(playerid, ChosenSkin[playerid]);
					    SendClientMessage(playerid, COLOR_LIGHTRED, "* Use 'Proximo' para trocar a skin.");
					    SendClientMessage(playerid, COLOR_LIGHTRED, "* Quando Você achar a Skin preferida, Digite 'Confirma'.");
					    format(gstring, sizeof(gstring), "* Você aceitou o convite de emprego de %s para entrar para: %s, parab�ns.", PlayerName(InviteOffer[playerid]), NomeORG(InviteOffer[playerid]));
					   	SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
						ConviteInfoOrg(PlayerName(playerid), InviteJob[playerid], 1);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "    O jogador que lhe convidou n�o est� conectado.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "    Você n�o foi convidado para nenhuma organiza��o.");
					return 1;
				}
			}
			else if(strcmp(x_Emprego,"assalto",true) == 0)
			{
			    if(OfAssalto[playerid] < 999)
			    {
			        if(IsPlayerConnected(OfAssalto[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, OfAssalto[playerid]))
						{
				           	GetPlayerName(OfAssalto[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou um assalto de %s e pagou $%d", giveplayer, precoassalto[playerid]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou seu assalto e pagou $%d.", sendername, precoassalto[playerid]);
			                SendClientMessage(OfAssalto[playerid], COLOR_LIGHTBLUE, string);
							SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, - precoassalto[playerid]);
							GivePlayerMoney(OfAssalto[playerid], precoassalto[playerid]);
							SetPlayerCriminal(OfAssalto[playerid],255, "Assalto");
							OfAssalto[playerid] = 999;
							precoassalto[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Assaltante est� longe de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você n�o foi assaltado!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"divorcio",true) == 0)
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser testemunha de seu divorcio.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser testemunha do seu divorcio.", sendername);
							SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPHousekey] = 255;
							PlayerInfo[playerid][pPbiskey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que te enviou os pap�is do div�rcio n�o est� perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te enviou qualquer papel de div�rcio!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"padrinho",true) == 0)
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou o pedido de %s para ser padrinho de seu casamento.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser padrinho do seu casamento.", sendername);
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que pediu para ser padrinho de seu casamento n�o est� perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem pediu para ser padrinho de seu casamento!");
				    return 1;
				}
			}
	        else if(strcmp(x_Emprego,"casamento",true) == 0)
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Você n�o est� na igreja de Los Santos !");
			            return 1;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O jogador n�o possui um padrinho de casamento!");
						        return 1;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser seu marido.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "* %s aceitou o seu pedido para ser sua esposa.", sendername);
									SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "Padre: %s voce aceita %s como seu legitimo marido? (use 'sim', qualquer outra coisa cancela o casamento)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return 1;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "   O padrinho de casamento nao esta perto de sua noiva/noivo!");
								    return 1;
								}
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  O jogador n�o esta perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te fez uma proposta!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"galaos",true) == 0)
			{
			    if(GalaoOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > GalaoPrice[playerid])
				    {
					    if(IsPlayerConnected(GalaoOffer[playerid]))
					    {
					        GetPlayerName(GalaoOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou os galaos por R$%d do Mecanico: %s.",GalaoPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou os galaos, e R$%d ser� adcionado no seu Salario.",sendername,GalaoPrice[playerid]);
							SendClientMessage(GalaoOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, -GalaoPrice[playerid]);
       						PlayerInfo[playerid][pGalao1] = 1;
                            PlayerInfo[playerid][pGalao2] = 1;
                            PlayerInfo[playerid][pGalao3] = 1;
					        GalaoOffer[playerid] = 999;
							GalaoPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode permitir a venda !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   N�o tem nenhuma oferta de Prote��o !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"Dinamite",true) == 0)
			{
			    if(GalaoOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > GalaoPrice[playerid])
				    {
					    if(IsPlayerConnected(GalaoOffer[playerid]))
					    {
					        GetPlayerName(GalaoOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou as Dinamites por R$%d do Mecanico: %s.",GalaoPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou as Dinamites, e R$%d ser� adcionado no seu Salario.",sendername,GalaoPrice[playerid]);
							SendClientMessage(GalaoOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, -GalaoPrice[playerid]);
       						PlayerInfo[playerid][pDinamite] = 1;
					        GalaoOffer[playerid] = 999;
							GalaoPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode permitir a venda !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   N�o tem nenhuma oferta de Prote��o !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"multa",true) == 0)
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
						{
				           	GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você pagou a multa de $%d para o Oficial %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s pagou a multa de $%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
							GivePlayerMoney(playerid, - TicketMoney[playerid]);
							GivePlayerMoney(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "O policial n�o est� perto de você !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ninguem lhe deu uma multa !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"boxe",true) == 0)
			{
			    if(BoxOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(BoxOffer[playerid]))
			        {
			            new points;
			            new mypoints;
			            GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
			            new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
						if(level >= 0 && level <= 50) { points = 40; }
						else if(level >= 51 && level <= 100) { points = 50; }
						else if(level >= 101 && level <= 200) { points = 60; }
						else if(level >= 201 && level <= 400) { points = 70; }
						else if(level >= 401) { points = 80; }
						if(PlayerInfo[playerid][pEmprego] == 8)
						{
							new clevel = PlayerInfo[playerid][pBoxSkill];
							if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
							else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
							else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
							else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
							else if(clevel >= 401) { mypoints = 80; }
						}
						else
						{
						    mypoints = 30;
						}
						format(string, sizeof(string), "* Você aceitou a luta de boxe de %s, e ir� lutar com %d de sa�de.",giveplayer,mypoints);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s aceitou seu pedido para a luta de boxe, você ir� lutar com %d de sa�de.",sendername,points);
						SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
						SetPlayerHealth(playerid, mypoints);
						SetPlayerHealth(BoxOffer[playerid], points);
						SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
						SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
						SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
						TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
						GameTextForPlayer(playerid, "~r~Esperando", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Esperando", 3000, 1);
						new name[MAX_PLAYER_NAME];
						new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Not�cias do Boxe: Lutador de Boxe %s lutar� contra %s, em 60 segundos no Gin�sio da Groove Street.",  sendername, giveplayer);
							OOCNews(COLOR_WHITE,string);
							TBoxer = playerid;
							BoxDelay = 60;
						}
						GetPlayerName(BoxOffer[playerid], name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Not�cias do Boxe: Lutador de Boxe %s lutar� contra %s, em 60 segundos no Gin�sio da Groove Street.",  giveplayer, sendername);
							OOCNews(COLOR_WHITE,string);
							TBoxer = BoxOffer[playerid];
							BoxDelay = 60;
						}
						BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
						if(BoxDelay < 1) { BoxDelay = 20; }
						InRing = 1;
						Boxer1 = BoxOffer[playerid];
						Boxer2 = playerid;
						PlayerBoxing[playerid] = 1;
						PlayerBoxing[BoxOffer[playerid]] = 1;
						BoxOffer[playerid] = 999;
						return 1;
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te convidou para uma luta !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"mototaxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você n�o est� em corrida, USE: /corrida !");
				    return 1;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você j� aceitou uma chamada de Moto-Taxi !");
				    return 1;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Você aceitou a chamada do(a) %s, A marca estar� vis�vel at� você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Moto-Taxi : %s aceitou sua chamada, se mantenha neste local e espere chegar.",sendername);
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   N�o tem nenhuma chamada de taxi no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você n�o est� em corrida, USE: /corrida !");
				    return 1;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você j� aceitou uma chamada de Ta�xi !");
				    return 1;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estar� vis�vel at� você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Taxista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar taxi !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   N�o tem nenhuma chamada de taxi no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"onibus",true) == 0)
			{
			    if(TransportDuty[playerid] != 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você n�o est� em corrida, USE: /corrida !");
				    return 1;
			    }
	            if(BusCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você j� aceitou a chamada de Onibus !");
				    return 1;
	            }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estar� vis�vel at� você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Motorista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar onibus !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        BusCallTime[playerid] = 1;
						BusAccepted[playerid] = BusCall;
						BusCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   N�o tem nenhuma chamada de onibus no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			    {
		            if(MedicCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Você j� aceitou um chamado medico!");
					    return 1;
		            }
                    if(MedicCall < 999)
	                {
	                if(IsPlayerConnected(MedicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estar� vis�vel at� você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Medico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Ir Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar medico !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        MedicCallTime[playerid] = 1;
						MedicAccepted[playerid] = MedicCall;
						MedicCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de m�dico no momento !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Medico !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"CET",true) == 0)
            {
   			 if(PlayerInfo[playerid][pEmprego] == 5)
   			 {
	            if(MechanicCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você j� aceitou uma chamada de CET!");
				    return 1;
	            }
	            if(MechanicCall < 999)
	            {
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estar� vis�vel at� você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* CET : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar CET !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        MechanicCallTime[playerid] = 1;
						MechanicAccepted[playerid] = MechanicCall;
						MechanicCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de CET no momento !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um CET !");
				    return 1;
				}
			}
            else if(strcmp(x_Emprego,"pizza",true) == 0)
            {
   			 if(PlayerInfo[playerid][pEmprego] == 12)
   			 {
	            if(PizzaCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você j� aceitou uma chamada de Pizza!");
				    return 1;
	            }
	            if(PizzaCall < 999)
	            {
	                if(IsPlayerConnected(PizzaCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(PizzaCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estar� vis�vel at� você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Pizza Boy : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(PizzaCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar pizza !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        PizzaCallTime[playerid] = 1;
						PizzaAccepted[playerid] = PizzaCall;
						PizzaCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de Pizza Boy no momento !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Pizza Boy!");
				    return 1;
				}
			}
            else if(strcmp(x_Emprego,"ocorrencia",true) == 0)
            {
            if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
   			 {
	            if(BombCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma ocorrência!");
				    return 1;
	            }
	            if(BombCall < 999)
	            {
	                if(IsPlayerConnected(BombCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BombCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estara visivel até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Bombeiro : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(BombCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
                        SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar ocorrencia !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
					    SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        BombCallTime[playerid] = 1;
						BombAccepted[playerid] = BombCall;
						BombCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma ocorr�ncia no momento !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Bombeiro!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"chamada",true) == 0)
			{
			    if(IsACop(playerid))
			    {
		            if(CopsrondaCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Você aceitou o chamado!");
					    return 1;
		            }
				    if(PolicialInRonda[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você j� est� em um chamado...");
				        return 1;
				    }
                    if(CopsrondaCall < 999)
	                {
	                if(IsPlayerConnected(CopsrondaCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(CopsrondaCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estar� vis�vel at� você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Policial : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(CopsrondaCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar policia !");
                        new Float:X,Float:Y,Float:Z;
					    GetPlayerPos(giveplayerid, X,Y,Z);
				    	SetPlayerCheckpoint(playerid, X,Y,Z, 6);
                        CopsrondaCallTime[playerid] = 1;
						CopsrondaAccepted[playerid] = CopsrondaCall;
						CopsrondaCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Ninguem solicitou um policial ");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você n�o � um Policial !");
				    return 1;
				}
			}
		    else if(strcmp(x_Emprego,"emprego",true) == 0)
			{
				if(PlayerInfo[playerid][pEmprego] != 0)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você tem um emprego digite /sairdoemprego para sair do emprego.");
					return 1;
				}
			    if(GettingEmprego[playerid] > 0)
			    {
			        //SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você j� completou seu tempo de contrato!.");
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boa sorte com seu novo emprego,digite /ajudaemprego para saber seus comandos!");
			        PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
			        GettingEmprego[playerid] = 0;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você ainda n�o esta no lugar de um emprego!");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"abastecimento",true) == 0)
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(GetPlayerMoney(playerid) > RefillPrice[playerid])
			            {
			                if(IsPlayerInAnyVehicle(playerid))
							{
			                	GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
			                	new car = GetPlayerVehicleID(playerid);
			                	new fuel;
			                	PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                	if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de CET agora é nível 2, agora você pode abastecer com 40 de combustivel"); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de CET agora é nível 3, agora você pode abastecer com 60 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de CET agora é nível 4, agora você pode abastecer com 80 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de CET agora é nível 5, agora você pode abastecer com 100 de combustivel."); }
								new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
								if(level >= 0 && level <= 50)
								{ fuel = 15; }
								else if(level >= 51 && level <= 100)
								{ fuel = 40; }
								else if(level >= 101 && level <= 200)
								{ fuel = 60; }
								else if(level >= 201 && level <= 400)
								{ fuel = 80; }
								else if(level >= 401)
								{ fuel = 100; }
			                	format(string, sizeof(string), "* Seu veículo foi abastecido com %d% de combustivel por $%d pelo CET %s.",fuel,RefillPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você abasteceu o carro de %s com %d% de combustivel por $%d, esse dinheiro será adicionado ao seu salário.",sendername,fuel,RefillPrice[playerid]);
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RefillOffer[playerid]][pSalario] += RefillPrice[playerid];
								GivePlayerMoney(playerid, -RefillPrice[playerid]);
								if(Gas[car] < 100) { Gas[car] += fuel; }
								if(Gas[car] > 100) { Gas[car] = 100; }
					        	RefillOffer[playerid] = 999;
								RefillPrice[playerid] = 0;
								return 1;
							}
							else
							{
						    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você n�o est� em um carro!");
						    	return 1;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode pagar pelo abastecimento !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem ofereceu abastecimento para seu carro!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"aovivo",true) == 0)
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você est� congelado at� o final da conversa.");
							SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* Você est� congelado at� o final da conversa (use /aovivo denovo).");
							TogglePlayerControllable(playerid, 0);
							TogglePlayerControllable(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você est� longe do rep�rter !");
							return 1;
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu uma conversa ao vivo!");
				    return 1;
				}
			}
            else if(strcmp(x_Emprego,"comida",true) == 0)
			{
             if(PizzaOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > PizzaPrice[playerid])
				    {
					    if(IsPlayerConnected(PizzaOffer[playerid]))
					    {
					        GetPlayerName(PizzaOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou a pizza por R$%d do Pizza Boy: %s.",PizzaPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou sua pizza, e R$%d ser� adicionado no seu sal�rio.",sendername,PizzaPrice[playerid]);
							SendClientMessage(PizzaOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[PizzaOffer[playerid]][pSalario] += PizzaPrice[playerid];
							GivePlayerMoney(playerid, -PizzaPrice[playerid]);
					        PizzaOffer[playerid] = 999;
							PizzaPrice[playerid] = 0;
                            SetPlayerHealth(giveplayerid, 100);
							return 1;
                         }
                         else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você est� longe do Pizza Boy !");
							return 1;
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu uma Pizza!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"Advogado",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /aceitar Advogado [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsACop(playerid))
				{
				    if(IsPlayerConnected(giveplayerid))
				    {
				        if(giveplayerid != INVALID_PLAYER_ID)
				        {
				            if(PlayerInfo[giveplayerid][pEmprego] == 2)
				            {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você autorizou %s para liberar um preso.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
								format(string, sizeof(string), "* Oficial %s te autorizou a soltar alguem da pris�o. (use /soltar)", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
								ApprovedAdvogado[giveplayerid] = 1;
							    return 1;
							}
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "A��o Invalida! (Você n�o � um policial)");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"seguranca",true) == 0)
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou a prote��o por R$%d do Seguran�a: %s.",GuardPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou sua prote��o, e R$%d ser� adicionado no seu sal�rio.",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[GuardOffer[playerid]][pSalario] += GuardPrice[playerid];
							GivePlayerMoney(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode pagar pela prote��o !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu prote��o!");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"maconha",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você comprou %d gramas de maconha do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de maconha, e R$%d ser� adicionado no seu sal�rio.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 2, e você pode comprar mais erva por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 3, e você pode comprar mais erva por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 4, e você pode comprar mais erva por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 5, e você pode comprar mais erva por um pre�o mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você est� totalmente carregado com maconha, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você n�o pode pagar essas maconhas !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu maconha !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"cocaina",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas2] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você comprou %d gramas de coca�na do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de coca�na, e R$%d ser� adicionado no seu sal�rio.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas2] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas2] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 2, e você pode comprar mais p� por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 3, e você pode comprar mais p� por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 4, e voc� pode comprar mais p� por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 5, e voc� pode comprar mais p� por um pre�o mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voc� est� carregado com crack, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pagar por essa coca�na !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu coca�na !");
			        return 1;
			    }
			}
   			else if(strcmp(x_Emprego,"crack",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas3] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* voc� comprou %d pedras de crack do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d pedras de crack, e R$%d ser� adicionado no seu sal�rio.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GivePlayerMoney(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas3] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas3] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 2, e voc� pode comprar mais pedras por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 3, e voc� pode comprar mais pedras por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 4, e voc� pode comprar mais pedras por um pre�o mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu n�vel de traficante agora � 5, e voc� pode comprar mais pedras por um pre�o mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voc� est� carregado com crack, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pagar por esse crack !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu crack !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"mendigo",true) == 0)
			{
			    if(MendigoOffer[playerid] < 999)
				{
					if(GetPlayerMoney(playerid) > MendigoPrice[playerid])
			  		{
						if (IsPlayerConnected(MendigoOffer[playerid]))
						{
							GetPlayerName(MendigoOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voc� deu um esmola de R$%d, para R$%s.",MendigoPrice[playerid] ,giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s te deu uma esmola de R$%d", sendername, MendigoPrice[playerid]);
							SendClientMessage(MendigoOffer[playerid], COLOR_LIGHTBLUE, string);
							GivePlayerMoney(playerid, -MendigoPrice[playerid]);
							GivePlayerMoney(MendigoOffer[playerid], MendigoPrice[playerid]);
							MendigoPrice[playerid] = 0;
							MendigoOffer[playerid] = 999;
							return 1;
						}//Connected ou not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pagar a esmola!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem nenhum pedido de esmola!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"transa",true) == 0)
			{
			    if(SexOffer[playerid] < 999)
				{
					if(GetPlayerMoney(playerid) > SexPrice[playerid])
			  		{
						if (IsPlayerConnected(SexOffer[playerid]))
						{
						    new Car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						    {
								GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Voc� fez sexo com a prostituta %s, por R$%d.", giveplayer, SexPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s teve rela��es sexuais com voc�, R$%d foi adicionado em seu sal�rio.", sendername, SexPrice[playerid]);
								SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[SexOffer[playerid]][pSalario] += SexPrice[playerid];
								GivePlayerMoney(playerid, -SexPrice[playerid]);
								PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
								if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora � 2, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora � 3, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora � 4, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu n�vel de sexo agora � 5, e pode oferecer uma melhor Sexo (sa�de) e menos chance de DST."); }
								if(PlayerInfo[playerid][pDoenca] == 0)
								{
								    if(Condom[playerid] < 1)
									{
									    new Float:health;
									    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									    if(level >= 0 && level <= 50)
									    {
									        if(GetPlayerHealth(playerid, health) < 80) {
											SetPlayerHealth(playerid, health + 20.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD1));
											PlayerInfo[playerid][pDoenca] = STD1[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD1[rand];
											if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de e n�o pegou nenhuma DST durante o sexo."); }
											else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de + uma Pereba no CU devido ao sexo."); }
											else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de + uma Duenca na Cabeca do Pau devido ao sexo."); }
											else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Sa�de + uma Duenca na Buceta devido ao sexo."); }
										}
										else if(level >= 51 && level <= 100)
									    {
									        if(GetPlayerHealth(playerid, health) < 60) {
											SetPlayerHealth(playerid, health + 40.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD2));
											PlayerInfo[playerid][pDoenca] = STD2[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD2[rand];
											if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de e n�o pegou nenhuma DST durante o sexo."); }
											else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de + um Pereba no CU devido ao Sexo."); }
											else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Sa�de + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 101 && level <= 200)
									    {
									        if(GetPlayerHealth(playerid, health) < 40) {
											SetPlayerHealth(playerid, health + 60.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD3));
											PlayerInfo[playerid][pDoenca] = STD3[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD3[rand];
											if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de e n�o pegou nenhuma DST durante o sexo."); }
											else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de + um Pereba no CU devido ao Sexo."); }
											else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Sa�de + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 201 && level <= 400)
									    {
									        if(GetPlayerHealth(playerid, health) < 20) {
											SetPlayerHealth(playerid, health + 80.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD4));
											PlayerInfo[playerid][pDoenca] = STD4[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD4[rand];
											if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + DST enquanto n�o ter rela��es sexuais."); }
											else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + um Pereba no CU devido ao Sexo."); }
											else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Sa�de + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 401)
										{
											SetPlayerHealth(playerid, 100.0);
											SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seu n�vel de sexo � t�o alto que voc� ganhou 100% de sa�de e nenhuma DST.");
											SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* A Prostitura tem um n�vel de sexo t�o alto que voc� ganhou 100% de sa�de e nenhuma DST.");
										}
				      				}
									else
									{
									    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* O Jogador usou camisinha.");
									    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� est� usando camisinha.");
									    Condom[playerid] --;
									}
								}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Este jogador j� est� infectado com DST, no pode pegar mais uma.");
								    return 1;
								}
								SexOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Voc� ou a prostituta n�o est�o em um carro !");
							    return 1;
							}
						}//Connected ou not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pagar o sexo!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem nenhuma oferta de sexo !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"reparo",true) == 0)
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(GetPlayerMoney(playerid) > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
						        GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
						        RepairVehicle(RepairCar[playerid]);
								format(string, sizeof(string), "* O CET %s reparou seu ve�culo por R$%d.",giveplayer,RepairPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Voc� reparou o ve�culo de %s, e R$%d foi adicionado no seu sal�rio.",sendername,RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu CET e cargo 2, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu CET e cargo 3, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu CET e cargo 4, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu CET e cargo 5, Agora ele pode adicionar combustivel para qualquer carro."); }
								PlayerInfo[RepairOffer[playerid]][pSalario] += RepairPrice[playerid];
								GivePlayerMoney(playerid, -RepairPrice[playerid]);
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return 1;
							}
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode permitir o reparo !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Falta uma oferta para Voc� reparar o carro !");
			        return 1;
			    }
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/abastecercarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(!IsAMec(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � CET!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /abastecercarro [id] [preco]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nao posso fazer isso!"); return 1; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voc� ofereceu ao(a) %s para re-abastecer o carro dele(a) por R$%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* CET %s quer re-abastecer seu carro por R$%d, (Digite /aceitar abastecimento) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Player nao esta perto de Voc� ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/reparar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!IsAMec(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � CET!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /reparar [id] [preco]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "  N�o posso fazer isso!"); return 1; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voc� ofereceu ao(a) %s para concertar seu carro por R$%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* CET %s quer reparar seu carro por R$%d, (Digite /aceitar reparo) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta perto de Voc� ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/callcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(CarCalls[playerid] > 0)
		    {
		        new Float:plocx,Float:plocy,Float:plocz;
	            GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz); LinkVehicleToInterior(CarID[playerid], 0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Borght Car has arrived.");
				CarCalls[playerid] -= 1;
				format(string, sizeof(string), "* You can call Your Borght Car for %d times more.", CarCalls[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Invalido A��o !");
		    }
		}
	    return 1;
	}
	if(strcmp(cmd, "/gangue", true) == 0 || strcmp(cmd, "/ga", true) == 0 || strcmp(cmd, "/ganguee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, pois foi calado");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: (/ga)ngue [ORG CHAT]");
				return 1;
			}
			if(TentouDivulgar(result))
			{
  				if(cdivulgar[playerid] >= 4)
  				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
    				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
    				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
    				Kick(playerid);
  				}
  				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
  				format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
				DivulgouLog(string);
        		cdivulgar[playerid] += 1;
        		return 1;
			}
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pMembro] > 0)
			{
				//format(string, sizeof(string), "* %s falou algo no r�dio da gangue.", sendername);
				//ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    new leader = PlayerInfo[playerid][pLider];
			    new member = PlayerInfo[playerid][pMembro];
			    if(member==5)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_TCP, string);
			    }
			    if(member==6)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Ahmed Yassin %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombadeador %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Terrorista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_PF, string);
			    }
			    if(member==8)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Vice-Diretor %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Agente Especial %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Agente %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assassino %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Aprendiz %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Aprendiz %s: %s. ))  **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_HITMAN, string);
			    }
			    if(member==9)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Diretor de Produ��o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Produ��o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Editor Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Rep�rter Nacional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Rep�rter Local %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Humorista %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Humorista %s: %s )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_REP, string);
			    }
			    if(member==10)
			    {
           			if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Taxista Profissional %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Taxista Experiente %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Taxista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Taxista Em Treinamento %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Taxista em Treinamento %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_TAXI, string);
				}
				if(member==14)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
				    SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_GRO, string);
				}
				if(member==15)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Osama Bin Laden %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Bombadeador %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Terrorista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Membro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Homem-Bomba %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Homem-Bomba %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_GREEN, string);
				}
				if(member==17)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], 0x9900CCF6, string);
				}
				if(member==18)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_VAGOS, string);
				}
				if(member==19)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], 0xF6000000, string);
				}
				if(member==20)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], 0xCCFF99FF, string);
				}
				if(member==21)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], 0x570000F6, string);
				}
				if(member==13)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Consiglieri %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capo %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Soldatto %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Assossiado %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novizio %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novizio %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_YAK, string);
				}
				if(member==12)
			    {
			        if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Capo Bastone %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Capo Regime %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Sgarrista %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Picciotto %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Associate %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Associate %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_COSA, string);
				}
				if(member==23)
				{
				    if(PlayerInfo[playerid][pCargo] == 6) { format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 5) { format(string, sizeof(string), "** Sub-Chefe %s: %s. )) **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 4) { format(string, sizeof(string), "** Gangster %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 3) { format(string, sizeof(string), "** Capanga %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 2) { format(string, sizeof(string), "** Fogueteiro %s: %s. ))  **", sendername, result); }
					else if(PlayerInfo[playerid][pCargo] == 1) { format(string, sizeof(string), "** Novato %s: %s. ))  **", sendername, result); }
					else { format(string, sizeof(string), "** Novato %s: %s. )) **", sendername, result); }
					SendFamilyMessage(PlayerInfo[playerid][pMembro], COR_MAYANS, string);
				}
				if(leader==5)
				{
				    format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_TCP, string);
				}
				if(leader==6)
				{
				    format(string, sizeof(string), "** Presidente da Gaviões %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_PF, string);
				}
				if(leader==8)
				{
				    format(string, sizeof(string), "** Diretor %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_HITMAN, string);
				}
				if(leader==9)
				{
				    format(string, sizeof(string), "** Diretor de Producao %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_REP, string);
				}
				if(leader==10)
				{
				    format(string, sizeof(string), "** Chefe %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_TAXI, string);
				}
				if(leader==14)
				{
				    format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_GRO, string);
				}
				if(leader==15)
				{
				    format(string, sizeof(string), "** Presidente da Mancha Verde %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COLOR_GREEN, string);
				}
				if(leader==17)
				{
				    format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_BALLAS, string);
				}
				if(leader==18)
				{
				    format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_VAGOS, string);
				}
				if(leader==19)
				{
				    format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], 0xF6000000, string);
				}
				if(leader==20)
				{
				    format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], 0xCCFF99FF, string);
				}
				if(leader==21)
				{
				    format(string, sizeof(string), "** Chefão %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], 0x570000F6, string);
				}
				if(leader==13)
				{
				    format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_YAK, string);
				}
				if(leader==12)
				{
				    format(string, sizeof(string), "** Don %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_COSA, string);
				}
				if(leader==23)
				{
				    format(string, sizeof(string), "** Chef�o %s: %s. )) **", sendername, result);
					SendFamilyMessage(PlayerInfo[playerid][pLider], COR_MAYANS, string);
				}
				printf("%s", string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voc� n�o faz parte de nenhuma fam�lia!");
				return 1;
			}
		}//not connected
		return 1;
	}
//Outros
	if(strcmp(cmd, "/noticias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
			    new newcar = GetPlayerVehicleID(playerid);
		        if(PlayerInfo[playerid][pMuted] == 1)
				{
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� nao poder falar, Voc� foi calado");
					return 1;
				}
				if(IsAJornalCar(newcar))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "USE: /noticias [Texto]");
						return 1;
					}
					if(TentouDivulgar(result))
					{
  						if(cdivulgar[playerid] >= 4)
  						{
							SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
			    			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
			    			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
			    			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			    			Kick(playerid);
  						}
			  			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			  			format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,playername,result);
						ABroadCast(COLOR_YELLOW,string,1);
						DivulgouLog(string);
        				cdivulgar[playerid] += 1;
        				return 1;
					}
					format(string, sizeof(string), "Reporter %s: %s", sendername, result);
					OOCNews(COLOR_NEWS,string);
					PlayerInfo[playerid][pNewsSkill] ++;
					if(PlayerInfo[playerid][pNewsSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 2, logo logo ja pode voar no helicoptero e falar AoVivo."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 3, logo logo ja pode voar no helicoptero e falar AoVivo."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 4 e pode fazer coberturas com helicoptero"); }
					else if(PlayerInfo[playerid][pNewsSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 5 e pode conversar AoVivo com quem ele quizer."); }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� no Jornal ou na Van !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Reporter !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/aovivo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
			    if(PlayerInfo[playerid][pNewsSkill] < 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Seu Cargo � baixo para falar com alguem AoVivo !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /aovivo [id]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode falar AoVivo com voc� mesmo!"); return 1; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voc� ofereceu a %s para ter uma conversa AoVivo.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s Voc� tem uma oferta para conversas ao vivo, Digite (/aceitar aovivo) para aceitar.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Voc� esta longe deste player !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ID/Nick - Invalido !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� nao e um reporter !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/vendermaconha", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � Traficante!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preco maior que 1, menor que 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrogas]) { SendClientMessage(playerid, COLOR_GREY, "   Voc� nao tem esta quantidade de pedras com Voc� !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode vender maconha pra voc� mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voc� ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar maconha) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de voc� !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/vendercocaina", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � Traficante!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Pre�o maior que 1, menor que 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrogas2]) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem esta quantidade de cocaina com voc� !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode vender maconha pra voc� mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voc� ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar cocaina) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de voc� !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/vendercrack", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � Traficante!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /venderdrogas [id] [quantidade] [preco]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Pre�o maior que 1, menor que 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrogas3]) { SendClientMessage(playerid, COLOR_GREY, "   Voc� nao tem esta quantidade de crack com Voc� !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode vender maconha pra voc� mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Voc� ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar crack) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de voc� !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
    if(strcmp(cmdtext,"/usemaconha",true) == 0 || strcmp(cmdtext,"/usarmaconha",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	  		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o usar drogas na cadeia!");
			return 1;
    	}
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 160)
  			{
    			PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� esta com c�ncer de pulm�o, v� ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
			    return 1;
  	        }
  	        if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� esta com c�ncer de pulm�o, v� ate um hospital se tratar !");
			    return 1;
  	        }
	   	    if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode usar Drogas enquanto voc� est� lutando !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDrogas] > 1)
   			{
			    if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Voc� esta~n~~p~Lezado",4000,1); }
			    new Float:PlayersArmour;
			    GetPlayerArmour(playerid,PlayersArmour);
			    PlayerInfo[playerid][pDrogas] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    if(PlayersArmour >= 100)
    			{
			        SetPlayerArmour(playerid, 100);
			        SendClientMessage(playerid,COLOR_LIGHTRED,"* Voc� n�o pode mais usar drogas!");
			        return 1;
       	        }
		        else
		        {
			    	SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(string, sizeof(string), "* %s Fumou Maconha.", sendername);
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmdtext,"/usecocaina",true) == 0 || strcmp(cmdtext,"/usarcocaina",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o usar drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 120)
  			{
    			PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� esta com c�ncer de pulm�o, v� ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
				return 1;
  	        }
  	        if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� esta com c�ncer de pulm�o, v� ate um hospital se tratar !");
			    return 1;
  	        }
	   	    if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode usar drogas enquanto est� lutando !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDrogas2] > 1)
			{
			    PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Voc� est�~n~~p~Cherado",4000,1); }
			    new Float:PlayersArmour;
			    GetPlayerArmour(playerid,PlayersArmour);
			    PlayerInfo[playerid][pDrogas2] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    if(PlayersArmour >= 100)
    			{
			        SetPlayerArmour(playerid, 100);
			        SendClientMessage(playerid,COLOR_LIGHTRED,"* Voc� n�o pode mais usar drogas!");
			        return 1;
       	        }
		        else
		        {
			    	SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(string, sizeof(string), "* %s Cherou Cocaina.", sendername);
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmdtext,"/usecrack",true) == 0 || strcmp(cmdtext,"/usarcrack",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o usar drogas na cadeia!");
		   return 1;
    	}
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 80)
  			{
    			PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� est� com c�ncer de pulm�o, v� ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
				return 1;
  	        }
  	        if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� est� com c�ncer de pulm�o, v� ate um hospital se tratar !");
			    return 1;
  	        }
	   	    if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Use Drogas enquanto voc� est� lutando !");
	            return 1;
	        }
		   	if(PlayerInfo[playerid][pDrogas3] > 1)
			{
			    new Float:PlayersArmour;
			    GetPlayerArmour(playerid,PlayersArmour);
			    PlayerInfo[playerid][pDrogas3] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    if(PlayersArmour >= 100)
    			{
			        SetPlayerArmour(playerid, 100);
			        SendClientMessage(playerid,COLOR_LIGHTRED,"* Voc� n�o pode mais usar drogas!");
			        return 1;
       	        }
		        else
		        {
			    	SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(string, sizeof(string), "* %s Fumou Crack.", sendername);
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Voc� n�o tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/curarme", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (PlayerToPoint(3, playerid,1173.2563,-1323.3102,15.3943)||PlayerToPoint(3, playerid,2029.5945,-1404.6426,17.2512))
			{
	            if(PlayerInfo[playerid][pDoenca] > 0)
	            {
					PlayerInfo[playerid][pDoenca] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� est� infectado com uma DST, v� ate um hospital se tratar !");
					GivePlayerMoney(playerid, -5000);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Dr.Bezerra de Menezes: Retiramos as suas doen�as! Tenha um otimo dia!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital : Foram cobrados R$5.000 para ajudar o Hospital!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital : Procure um m�dico que eles cobram mais barato!!");
					SetPlayerDrunkLevel (playerid, 0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem uma Doen�a para ser curada !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� em um Hospital !");
	        }
        }
		return 1;
	}
	if(strcmp(cmd, "/ejetar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"   Voc� n�o � o motorista do carro !");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /ejetar [id]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode se expulsar... Aperte Enter ��!"); return 1; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Voc� expulsou o(a) %s para fora do carro!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Voc� foi retirado do carro por %s !", PName);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Este jogador n�o est� em seu carro !");
						    return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " ID/Nick - Invalido!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� precisa estar em um carro para usar este comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/transar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pEmprego] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "   Voc� s� pode transar em um carro !");
					return 1;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /transar [id] [price]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Pre�o da transa n�o pode ser menor que R$1, ou maior que R$99999!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode ter rela��o sexual com voc� mesma, mais pode bater uma siririca!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						    {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Voc� ofereceu ao %s para dar uma *Foda* com voc� por R$%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Prostituta %s Perguntou se voc� aceita fazer uma *Foda* com ela, por R$%d (Digite /aceitar transa) Para Aceitar.", sendername, money);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					            SexOffer[giveplayerid] = playerid;
					            SexPrice[giveplayerid] = money;
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "   Voc� e o seu cliente devem estar juntos em um carro !");
				                return 1;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Este jogador n�o est� perto de voc� !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� offline !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � Prostituta !");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmd, "/esmola", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 10)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � Mendigo!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /esmola [id] [pre�o]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Pre�o da esmola n�o pode ser menor que R$1, ou maior que R$99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o pode pedir dinheiro a si mesmo!");
					        return 1;
					    }
         				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� pediu ao %s uma esmola de R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mendigo %s pediu R$%d de esmola... Digite /aceitar mendigo e ajude-o.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
        				MendigoOffer[giveplayerid] = playerid;
        				MendigoPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o est� perto de voc� !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� Offline!");
			}
		}
		return 1;
	}
 	if(strcmp(cmd,"/Bafometro",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
   			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
 			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /bafometro [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0,playerid,giveplayerid))
					{
  	  					if(giveplayerid == playerid) { SendClientMessage(playerid,COLOR_GREY,"Voc� n�o pode fazer o teste em si mesmo!"); return 1; }
				    	GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
						GetPlayerName(playerid,sendername,sizeof(sendername));
				    	new bebado[32], bebado2[32];
					    if(PlayerDrunk[giveplayerid] > 0) { bebado = "B�bado."; } else { bebado = "| S�brio "; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { bebado2 = "Drogado."; } else { bebado2 = "| S�brio "; }
				    	format(string,sizeof(string),"|__________| %s |__________|",giveplayer);
			        	SendClientMessage(playerid,COLOR_WHITE,string);
			        	format(string,sizeof(string),"%s.",bebado);
						SendClientMessage(playerid,COLOR_GREY,string);
						format(string,sizeof(string),"%s.",bebado2);
						format(string,sizeof(string),"* %s faz o teste do Bafom�tro em %s.",sendername ,giveplayer);
						ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
				    	SendClientMessage(playerid,COLOR_GREY,"O jogador n�o est� perto de voc� !");
				    	return 1;
    				}
				}
			}
        	else
       		{
            	SendClientMessage(playerid,COLOR_GREY,"Esse jogador est� off-line !");
            	return 1;
       		}
    		return 1;
		}
	}
//--------------------------------=Ajuda para Pol�cia=----------------------------------------------------------------
	if(strcmp(cmd,"/reforco",true)==0 || strcmp(cmd,"/rf",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
				if(!IsACop(playerid))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
				    return 1;
				}
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
				    return 1;
				}
				if (PlayerInfo[playerid][pRequestingBackup] != 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Todas as unidades: %s est� pedindo refor�o,veja o mapa e digite /procurar %d!.", sendername,playerid);
					PlayerInfo[playerid][pRequestingBackup] = 1;
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(IsACop(i))
							{
                    			new Float:plocx,Float:plocy,Float:plocz;
								new plo;
								plo = ReturnUser(tmp);
								GetPlayerPos(plo, plocx, plocy, plocz);
								SendClientMessage(i, TEAM_BLUE_COLOR, string);
							}
						}
					}
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Digite /rcr pra retirar o alerta.");
                    SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� j� tem um pedido de refor�o ativo!");
				}
		}
		return 1;
	}

//-----------------=Limpa a Ajuda Policial=-----------------
	if(strcmp(cmd,"/reforcoretirar",true)==0 || strcmp(cmd,"/rcr",true)==0)
	{
		BackupClear(playerid, 0);
		return 1;
	}
 	if(strcmp(cmd,"/revistar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
  			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "USE: /revistar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
				    	if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode se Revistar!"); return 1; }
				    	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				    	new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20], text7[20];
         				if(PlayerInfo[giveplayerid][pDrogas] > 0) { text1 = "| Maconha."; } else { text1 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas2] > 0) { text2 = "| Cocaina."; } else { text2 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas3] > 0) { text3 = "| Crack."; } else { text3 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { text4 = "| Materiais."; } else { text4 = "| Vazio."; }
				    	if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text5 = "| Peixes."; } else { text5 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text6 = "| Lista Telefonica."; } else { text6 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pCDPlayer] > 0) { text7 = "| MP10."; } else { text7 = "| Vazio."; }
				    	format(string, sizeof(string), "|__________| Itens %s |__________|", giveplayer);
			        	SendClientMessage(playerid, COLOR_WHITE, string);
			        	format(string, sizeof(string), "%s [Quantidade: %d].", text1, PlayerInfo[giveplayerid][pDrogas]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text2, PlayerInfo[giveplayerid][pDrogas2]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text3, PlayerInfo[giveplayerid][pDrogas3]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text4, PlayerInfo[giveplayerid][pMats]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text6);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text7);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s revistou %s para ver se tem qualquer item ilegal.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador est� longe de Voc� !");
					    return 1;
					}
				}
			}
     	   	else
      	  	{
            	SendClientMessage(playerid, COLOR_GREY, "   O Jogador Est� Offline !");
            	return 1;
        	}
		}
    	return 1;
 	}
	if(strcmp(cmd, "/presos", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE, "|______________| PRESOS |______________|");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pJailed] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : 18�BPM/M Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if(PlayerInfo[i][pJailed] == 2)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Carandiru Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				    if(PlayerInfo[i][pJailed] == 3)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : ROTA Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
				    if(PlayerInfo[i][pJailed] == 4)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : 2�CIA Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
	                if(PlayerInfo[i][pJailed] == 5)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : 1�CIA Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
                    if(PlayerInfo[i][pJailed] == 6)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Cela Admin Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}
					if(PlayerInfo[i][pJailed] == 7)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string, 128, "ID : %d Preso: %s Local : Ex�rcito Tempo : %d seg.", i, sendername, PlayerInfo[i][pJailTime]);
      					SendClientMessage(playerid, COLOR_GRAD2, string);
					}


				}
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/procurados", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
   			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
			new x;
			SendClientMessage(playerid, COLOR_WHITE, "|______________| Suspeitos |______________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(WantedPoints[i] > 0)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s%s(%d): %d", string,giveplayer,i,WantedPoints[i]);
						x++;
						if(x > 3)
						{
						    SendClientMessage(playerid, COLOR_YELLOW, string);
						    x = 0;
							format(string, sizeof(string), "");
						}
						else
						{
							format(string, sizeof(string), "%s, ", string);
						}
					}
				}
			}
			if(x <= 3 && x > 0)
			{
				string[strlen(string)-2] = '.';
			    SendClientMessage(playerid, COLOR_YELLOW, string);
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/sairdoemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pEmprego] > 0)
		    {
		        if(PlayerInfo[playerid][pVIP] > 0)
		        {
		            if(PlayerInfo[playerid][pContractTime] >= 2)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� cumpriu seu contrato e saiu do emprego.");
					    PlayerInfo[playerid][pEmprego] = 0;
					    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 2 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* Voc� ainda tem %d Horas para o fim do contrato.", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
		        }
		        else
		        {
					if(PlayerInfo[playerid][pContractTime] >= 10)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� cumpriu seu contrato e saiu do emprego.");
					    PlayerInfo[playerid][pEmprego] = 0;
					    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 10 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* Voc� ainda tem %d Horas para o fim do contrato.", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o possui um emprego!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/fianca", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pJailed]==1)
			{
			    if(JailPrice[playerid] > 0)
			    {
			        if(GetPlayerMoney(playerid) > JailPrice[playerid])
			        {
			            format(string, sizeof(string), "Voc� pagou R$%d de fian�a", JailPrice[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GivePlayerMoney(playerid, -JailPrice[playerid]);
						Tax += JailPrice[playerid];
						JailPrice[playerid] = 0;
						WantAdvogado[playerid] = 0; CallAdvogado[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o pode pagar o preco da Fian�a !");
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o tem uma Fian�a � ser paga !");
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o est� preso !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/limpar", true) == 0 || strcmp(cmd, "/limparficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
			new member = PlayerInfo[playerid][pMembro];
			new lider = PlayerInfo[playerid][pLider];
			new rank = PlayerInfo[playerid][pCargo];
	 		if((gTeam[playerid] == 2 || 1 || 3))
			{
				if (!PlayerToPoint(3.0, playerid, 253.9280,69.6094,1003.6406) && !PlayerToPoint(3.0, playerid, 259.2474,120.3977,1003.2188) && !PlayerToPoint(3.0, playerid, 198.9671,168.1982,1003.0234) && !PlayerToPoint(3.0, playerid, 234.8419,111.2194,1003.2257) && !PlayerToPoint(3.0, playerid, 326.8282,304.4166,999.1484))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Voc� n�o est� na recep��o do Departamento de Policia!");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o limpar sua pr�pria ficha!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Voc� limpou a ficha de %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s Limpou a Ficha.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						if(gTeam[giveplayerid]==4)
						{
						    gTeam[giveplayerid] = 3;
						    SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Invalido ID/NICK!");
				}
			}
			else if(member == 12||member == 13||lider == 12||lider == 13)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "USE: /limpar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Voc� n�o pode limpar-se!"); return 1; }
					    if(rank < 3) { SendClientMessage(playerid, COLOR_GREY, "   Apenas Cargo 3+ Podem Limpar Ficha !"); return 1; }
					    if(GetPlayerMoney(playerid) < 5000) { SendClientMessage(playerid, COLOR_GREY, "   Voc� precisa de R$5000 para limpar a ficha !"); return 1; }
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    if(member > 0)
					    {
						    if(PlayerInfo[giveplayerid][pMembro] != member)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o � da sua fam�lia !");
								return 1;
							}
							format(string, sizeof(string), "* Voc� limpou a ficha do(a) %s por R$5000.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Membro %s cargo %d, limpou sua ficha.", sendername, rank);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						else if(lider > 0)
						{
			                if(PlayerInfo[giveplayerid][pMembro] != lider)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador n�o � da sua fam�lia !");
								return 1;
							}
						    format(string, sizeof(string), "* Voc� limpou a ficha do(a) %s por R$5000.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Lider %s, limpou sua ficha.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						GivePlayerMoney(playerid, - 5000);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   ID/Nick! Invalido");
				}
			}

		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/multar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
			    return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1000 || moneys > 30000) { SendClientMessage(playerid, COLOR_GREY, "Custo entre 1000 e 30000 !"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
				if(IsACop(giveplayerid))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode multar Policiais!");
					return 1;
				}
				if(PlayerInfo[giveplayerid][pJailed] > 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode multar jogadores que estejam presos!");
					return 1;
				}
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(25.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "USE: /multar [ID] [Custo] [Razao]");
							return 1;
						}
						format(string, sizeof(string), "* Voc� multou %s por $%d, Razao: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s lhe deu uma multa no valor de $%d, Razao: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Use /aceitar multa, para aceita-la.");
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Se em 5 minutos voc� n�o pagar, ir� preso!");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						SetTimerEx("PresoMulta", 300000, false, "i", giveplayerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "O jogador est� longe !");
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "O jogador est� Offline !");
			    return 1;
			}
		}
		return 1;
    }
//CONES
	if(strcmp(cmdtext, "/pino", true)==0 || strcmp(cmdtext, "/cpino", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Policial!");
		if(PlayerPaintballing[playerid] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode por barreiras no evento!");
	   		return 1;
    	}
		if (pRoadblock[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode criar 1 barreira por vez, /rbr - para remover sua barreira");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pRoadblock[playerid] = F_CreateDynamicObject(1237, X, Y, Z, 0.0, 0.0, A+180);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Pino ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Pino implantado... Use /rbr Para Remove-la!");
		format(string, sizeof(string), "Estado: Um Pino foi posto por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 || PlayerInfo[i][pLider] > 0)
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, "Voc� pode remover todas as barreiras usando /rbrall");
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/removerpino", true)==0 || strcmp(cmdtext, "/rpn", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Policial!");
		if (pRoadblock[playerid] != 0)
		{
			RemoveRoadblock(playerid);
			SendClientMessage(playerid, COLOR_GREY, "Voc� retirou o seu Pino!");
		}
		else { return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o criou um Pino!"); }
		format(string, sizeof(string), "Estado: Um Pino foi destru�do por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmdtext, "/removertodospinos", true)==0 || strcmp(cmdtext, "/rpns", true)==0)
	{
		if (PlayerInfo[playerid][pCargo] >= 4 && IsACop(playerid))
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(pRoadblock[i] != 0)
				{
					RemoveRoadblock(i);
				}
			}
			format(string, sizeof(string), "Estado: Todos os Pinos foram retirados por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
  		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser cargo 4+ ou um l�der de alguma organiza��o policial para remover todos os pregos!");
		}
		return 1;
	}
 	if(strcmp(cmdtext, "/removerprego", true)==0 || strcmp(cmdtext, "/rpr", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Policial!");
		if (SpikeInfo[playerid][sCreated] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o criou nenhum tapete de pregos!");
			return 1;
		}
  		RemoveRoadPregos(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Voc� retirou seu tapete de pregos!");
		format(string, sizeof(string), "Estado: %s removeu seu tapete de pregos.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
  	if(strcmp(cmdtext, "/removerprall", true)==0 || strcmp(cmdtext, "/rprall", true)==0)
	{
		if (PlayerInfo[playerid][pCargo] >= 4 && IsACop(playerid))
		{
   			for(new i = 0; i < MAX_PLAYERS; i++)
			{
                if(IsPlayerConnected(i))
                {
					if(SpikeInfo[playerid][sCreated] != 0)
					{
     					RemoveRoadPregos(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos os pregos foram retirados por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if (IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser cargo 4+ ou um l�der de alguma organiza��o policial para remover todos os tapetes de pregos!");
		}
		return 1;
	}
 	if(strcmp(cmdtext, "/prego", true)==0 || strcmp(cmdtext, "/pregos", true)==0)
	{
    	if(PlayerPaintballing[playerid] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode por pregos no evento!");
	   		return 1;
    	}
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � COP!");
		if (SpikeInfo[playerid][sCreated] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode implantar 1 prego por vez, /rpr - para remover seu tapete de pregos.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		SpikeInfo[playerid][sCreated]=1;
        SpikeInfo[playerid][sX]=X;
        SpikeInfo[playerid][sY]=Y;
        SpikeInfo[playerid][sZ]=Z-0.7;
        SpikeInfo[playerid][sObject] = F_CreateDynamicObject(2899, X, Y, Z-0.9, 0, 0, A-90);
		GameTextForPlayer(playerid, "~w~Pregos ~r~Criados", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Pregos Implantados... Use /rpr Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um prego foi bem plantado por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Voc� pode remover todos os pregos usando /rprall");
					}
				}
			}
		}
		return 1;
	}
	//colocar emprego aki
  	if(strcmp(cmdtext, "/plantarbarraca", true)==0 || strcmp(cmdtext, "/pbarraca", true)==0)
	{
		if (PlayerInfo[playerid][pEmprego] != 10) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � Mendigo!");
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode plantar barracas na cadeia!");
		   return 1;
	    }
	    if(PlayerPaintballing[playerid] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode por barracas no evento!");
		   return 1;
	    }
		if (PlayerInfo[playerid][pBarraca] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode implantar uma barraca por vez, /rbarraca - para remover sua barraca.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		PlayerInfo[playerid][pBarraca] = F_CreateDynamicObject(1457, X, Y, Z, 0.0, 0.0, A+180);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Barraquinha ~r~Criada", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Barraca Implantada... Use /rbarraca para remover e poder criar em outro lugar!.");
		SendClientMessage(playerid, COLOR_YELLOW, "Agora voc� pode trafegar ou dormir em sua barraca");
		return 1;
	}
	if(strcmp(cmdtext, "/removerbarraca", true)==0 || strcmp(cmdtext, "/rbarraca", true)==0)
	{
		if (PlayerInfo[playerid][pEmprego] != 10)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Mendigo !");
			return 1;
		}
		if (PlayerInfo[playerid][pBarraca] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o criou nenhuma barraca!");
			return 1;
		}
		RemoveBarraca(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "Barracas removidas com sucesso.");
		return 1;
	}
	//Barreira Gang
    if(strcmp(cmdtext, "/bloqueiolixo", true)==0 || strcmp(cmdtext, "/bqgg", true)==0)
	{
		if (!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Gangster!");
		if(PlayerPaintballing[playerid] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode por barreiras no evento!");
	   		return 1;
    	}
		if (pGangRoadblock[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode criar 1 Bloqueio de Lixo por vez, /rbrgg - para remover sua barreira");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pGangRoadblock[playerid] = F_CreateDynamicObject(1358, X, Y, Z, 0.0, 0.0, A+85, 300.0);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Bloqueio de Lixo ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Bloqueio de Lixo Implantado... Use /rbrgg Para Remove-la!");
		format(string, sizeof(string), "Estado: Uma Bloqueio de Lixo foi posta por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsAGang(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 4 || PlayerInfo[i][pLider] > 0)
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, "Voc� pode remover todas as barreiras usando /rbragg");
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/removerbarreiragang", true)==0 || strcmp(cmdtext, "/rbqgg", true)==0)
	{
		if (!IsAGang(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Gangster!");
		if (pGangRoadblock[playerid] != 0)
		{
			RemoveGangRoadblock(playerid);
			SendClientMessage(playerid, COLOR_GREY, "Voc� retirou o seu Bloqueio de Lixo!");
		}
		else { return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o criou uma barreira!"); }
		format(string, sizeof(string), "Estado: Uma Bloqueio de Lixo foi destru�do por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsAGang(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmdtext, "/removertodasbarreirasgang", true)==0 || strcmp(cmdtext, "/rbqggall", true)==0)
	{
		if (PlayerInfo[playerid][pCargo] >= 4 && IsAGang(playerid))
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(pGangRoadblock[i] != 0)
				{
					RemoveGangRoadblock(i);
				}
			}
			format(string, sizeof(string), "Estado: Todos os Bloqueio de Lixo foram retirados por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsAGang(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
  		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser cargo 4+ ou um l�der de alguma organiza��o gangster para remover todos os Bloqueio de Lixo!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/bloqueio", true)==0 || strcmp(cmdtext, "/bq", true)==0)
	{
    	if(PlayerPaintballing[playerid] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode por bloqueios no evento!");
	   		return 1;
    	}
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um policial!");
		if (pRoadCones[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode implantar 1 Bloqueio por vez, /rbq - para remover seu bloqueio.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pRoadCones[playerid] = F_CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
		SetPlayerPos(playerid, X, Y, Z+1);
		GameTextForPlayer(playerid, "~w~Bloqueio ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Bloqueio Implantado... Use /rbq Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um Bloqueio foi posto por %s.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Voc� pode remover todos os Bloqueios usando /rbqall");
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/removerbloqueio", true)==0 || strcmp(cmdtext, "/rbq", true)==0)
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um policial!");
			return 1;
		}
		if (pRoadCones[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o criou nenhum bloqueio Bloqueio!");
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Voc� retirou o seu Bloqueio!");
		RemoveRoadCones(playerid);
		format(string, sizeof(string), "Estado: %s removeu seu bloqueio.", PlayerName(playerid));
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
  	if(strcmp(cmdtext, "/removerbloqueioall", true)==0 || strcmp(cmdtext, "/rbqall", true)==0)
	{
		if (IsACop(playerid))
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
					if(pRoadCones[i] != 0)
					{
						RemoveRoadCones(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos os Bloqueios foram retirados por: %s.", PlayerName(playerid));
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser cargo 4+ ou ser um l�der da pol�cia para remover todos os Bloqueios!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/paredao", true)==0 || strcmp(cmdtext, "/paredaoadm", true)==0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Voc� n�o pode colocar paredao na cadeia!");
	  		return 1;
	    }
    	if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o est� trabalhando! (/trabalhar)");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � Admin!");
		if (PlayerInfo[playerid][pParedao] != 0) return SendClientMessage(playerid, COLOR_GREY, "Voc� s� pode implantar 1 paredao de cada vez, /rparedao - para remover seu bloqueio.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		PlayerInfo[playerid][pParedao] = F_CreateDynamicObject(972, X, Y, Z-2, 0.0, 0.0, A+90);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Paredao ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Pared�o Implantado... Use /rparedao Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "|ATEN��O|: Um Pared�o foi posto por %s.", PlayerName(playerid));
		ABroadCast(COLOR_YELLOW, string, 1);
		return 1;
	}
	if(strcmp(cmdtext, "/removerparedao", true)==0 || strcmp(cmdtext, "/rparedao", true)==0)
	{
		if (PlayerInfo[playerid][pAdmin] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � um Admin!");
			return 1;
		}
		if (PlayerInfo[playerid][pParedao] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� n�o criou nenhum pared�o!");
			return 1;
		}
		RemoveParedao(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "Pared�o removido com sucesso.");
		return 1;
	}
	if(strcmp(cmdtext, "/removerparedaotodos", true)==0 || strcmp(cmdtext, "/rpall", true)==0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
				if(PlayerInfo[i][pParedao] != 0)
				{
					RemoveParedao(i);
				}
				}
			}
			format(string, sizeof(string), "Estado: Todos os Pared�es foram retirados por: %s.", PlayerName(playerid));
			ABroadCast(TEAM_BLUE_COLOR, string, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Voc� precisa ser admin nivel 3 + pra remover os pared�es!");
		}
		return 1;
	}
	if(strcmp(cmd, "/prender", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid))
			{
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o Bateu o cart�o!");
				    return 1;
				}
		        if(!PlayerToPoint(12.0, playerid, 268.3327,77.8972,1001.0391) && !PlayerToPoint(12.0, playerid, 1545.4073,-1607.9791,13.3828) && !PlayerToPoint(12.0, playerid, 2223.687744,-1169.967041,25.726562) && !PlayerToPoint(12.0, playerid, 920.5212,-1184.8267,16.9766) &&  !PlayerToPoint(12.0, playerid, 221.1459,115.3492,999.0156) && !PlayerToPoint(12.0, playerid, 193.9101,179.2799,1003.0234) && !PlayerToPoint(12.0, playerid, 1545.7220,-1609.4769,13.3828)
			    && !PlayerToPoint(12.0, playerid, 1019.6051,-317.6436,73.9922) && !PlayerToPoint(12.0, playerid, 195.5733,158.4008,1003.0234)
                && !PlayerToPoint(12.0, playerid, -1298.8188,490.5014,11.1953) && !PlayerToPoint(12.0, playerid, 264.1557,77.5797,1001.0391) && !PlayerToPoint(12.0, playerid, 1361,175.1075,1003.0234) && !PlayerToPoint(12.0, playerid, 321.8284,315.6733,999.1484) && !PlayerToPoint(12.0, playerid, 949.977416,-916.785461,45.213710) && !PlayerToPoint(12.0, playerid, 2154.763183,-1793.105957,13.536571) && !PlayerToPoint(12.0, playerid, 1232.239501,-1646.248901,11.796875))
				{// Jail spot
				    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o est� perto da cela, n�o pode prender o suspeito !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo n�o pode ser menor que 1 nem maior que 20 !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
                new bail = strval(tmp);
				if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "   Fian�a Tem Que ser 0=N�o ou 1=Sim !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USE: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
				new bailprice = strval(tmp);
				if(bailprice < 0 || bailprice > 300000) { SendClientMessage(playerid, COLOR_GREY, "   O Pre�o n�o pode ser menor que 0 nem maior que R$300000 !"); return 1; }
				new suspect = giveplayerid;
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 15)
					{
 					    if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no m�nimo 1 n�vel de procurado!");
							    return 1;
							}
							format(string, sizeof(string), "* Voc� Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==1||PlayerInfo[playerid][pLider]==1)
							{
								format(string, sizeof(string), "<< Policial do 18�BPM/M %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 6);
							SetPlayerPos(suspect,264.6288,77.5742,1001.0391);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 1;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							PlayerInfo[suspect][pMuted] = 0;
							TogglePlayerControllable(suspect, 1);
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return 1;
						}
					    if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Voc� Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==2||PlayerInfo[playerid][pLider]==2)
							{
								format(string, sizeof(string), "<< ROTA %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 10);
							SetPlayerPos(suspect,223.5335,110.3779,999.0156);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 3;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
      						SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
					        PlayerInfo[suspect][pDrogas2] = 0;
					        PlayerInfo[suspect][pDrogas3] = 0;
					        PlayerInfo[suspect][pMats] = 0;
							return 1;
       					}
					    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Voc� Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==11||PlayerInfo[playerid][pLider]==11)
							{
								format(string, sizeof(string), "<< Policial do 1�CIA %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 5);
							SetPlayerPos(suspect,319.0175,317.0517,999.1484);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 5;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return 1;
          				}
                        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Voc� Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==3||PlayerInfo[playerid][pLider]==3)
							{
								format(string, sizeof(string), "<< Ex�rcito %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 0);
							SetPlayerPos(suspect,-1293.2203,490.5885,11.1953);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 7;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							WantAdvogado[suspect] = 1;
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return 1;
	                    }
					    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 n�vel de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Voc� Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GivePlayerMoney(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeaponsEx(suspect);
							if(PlayerInfo[playerid][pMembro]==16||PlayerInfo[playerid][pLider]==16)
							{
								format(string, sizeof(string), "<< 2�CIA %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 3);
							SetPlayerPos(suspect,198.1076,175.0731,1003.0234);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Voc� foi preso por %d Segundos.   Fian�a: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 4;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
	                        WantAdvogado[suspect] = 1;
	                        PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
							return 1;
						}
					}//distance
				}//not connected
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Esse n�o � um jogador ativo.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � um Oficial !");
			    return 1;
			}
		}//not connected
		return 1;
	}
    if(strcmp(cmd, "/contrato", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    new money2;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: /contrato [ID/Nome] [Quantia]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 10000) { SendClientMessage(playerid, COLOR_GREY, "   Seu contrato n�o pode ser menor que 10000"); return 1; }
			if(PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Voc� precisa de no M�nimo n�vel 3 para por um Contrato.");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			    	if(PlayerInfo[giveplayerid][pLevel] == 2)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Voc� n�o pode por contrato em novatos!");
						return 1;
					}
				    if(PlayerInfo[giveplayerid][pMembro] == 8 && PlayerInfo[playerid][pMembro] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   N�o pode colocar contrato em membros de sua agencia!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pLider] == 8 && PlayerInfo[playerid][pMembro] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   N�o pode colocar contrato em assasinos!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pMembro] == 8||PlayerInfo[giveplayerid][pLider] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   N�o pode colocar contrato em assasinos!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pAdmin] >= 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   N�o pode colocar contrato em Admins!");
				        return 1;
				    }
				    if(gTeam[giveplayerid] == 2 && moneys <= 100000)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Preco Minimo de $100000 em oficiais!");
				        return 1;
				    }
				    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Nao pode colocar contrato em si mesmo!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					money2 = GetPlayerMoney(playerid);
					if (moneys > 0 && money2 >= moneys)
					{
						GivePlayerMoney(playerid, (0 - moneys));
						PlayerInfo[giveplayerid][pHeadValue]+=moneys;
						format(string, sizeof(string), "%s Colocou um contrato em %s, por $%d.",sendername, giveplayer, moneys);
						SendFamilyMessage(8, COLOR_YELLOW, string);
						format(string, sizeof(string), "* Voc� colocou um contrato em %s, por $%d.",giveplayer, moneys);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voc� n�o possui essa grana.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse n�o � um jogador ativo.");
			}
		}
		return 1;
	}
	//return SendClientMessage(playerid, COLOR_LIGHTRED, "Comando desconhecido, use /ajuda para ver os comandos ou use  para falar com um admin");
	return 1;
}
//------------------------------------------------------------------------------------------------------
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}
public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
/*forward LocalBots();
public LocalBots()
{
//====================================[LOCALIZA��O DOS BOTS=================================================//
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && gNews[i] == 0)
		{
		    new tmpcar = GetPlayerVehicleID(i);
			if(IsPlayerNPC(i) && tmpcar == trembot && ReduzidoBot[i] == 0 && PlayerToPoint(60.0, i, 1883.2029,-1955.5995,13.1193))//LS 1 ENTRANDO
			{
			    SendClientMessageToAll(COLOR_YELLOW, "O Bot de Trem est� chegando na Esta��o Unity, use o trem por apenas R$500 !");
			    SetTimerEx("ReduzTempoBot", 30000, false, "i", i);
				ReduzidoBot[i] = 1;
			}
			else if(IsPlayerNPC(i) && tmpcar == trembot && ReduzidoBot[i] == 0 && PlayerToPoint(60.0, i, 923.1602,-1474.7357,-2.3947))//LS 2 ENTRANDO
			{
			    SendClientMessageToAll(COLOR_YELLOW, "O Bot de Trem est� chegando na Esta��o 2 de LS, use o trem por apenas R$500 !");
			    SetTimerEx("ReduzTempoBot", 30000, false, "i", i);
				ReduzidoBot[i] = 1;
			}
			else if(IsPlayerNPC(i) && tmpcar == trembot && ReduzidoBot[i] == 0 && PlayerToPoint(60.0, i, -1946.2469,18.7973,25.2802))//SF ENTRANDO
			{
			    SendClientMessageToAll(COLOR_YELLOW, "O Bot de Trem est� chegando na Esta��o Central de SF, use o trem por apenas R$500 !");
			    SetTimerEx("ReduzTempoBot", 30000, false, "i", i);
				ReduzidoBot[i] = 1;
			}
			else if(IsPlayerNPC(i) && tmpcar == trembot && ReduzidoBot[i] == 0 && PlayerToPoint(60.0, i, 1292.0593,2634.5190,10.3945))//LV 1 ENTRANDO
			{
			    SendClientMessageToAll(COLOR_YELLOW, "O Bot de Trem est� chegando na Esta��o 1 de LV, use o trem por apenas R$500 !");
			    SetTimerEx("ReduzTempoBot", 30000, false, "i", i);
				ReduzidoBot[i] = 1;
			}
			else if(IsPlayerNPC(i) && tmpcar == trembot && ReduzidoBot[i] == 0 && PlayerToPoint(60.0, i, 2866.4551,1430.3364,10.4003))//LV 2 ENTRANDO
			{
			    SendClientMessageToAll(COLOR_YELLOW, "O Bot de Trem est� chegando na Esta��o 2 de LV, use o trem por apenas R$500 !");
			    SetTimerEx("ReduzTempoBot", 30000, false, "i", i);
				ReduzidoBot[i] = 1;
			}
		}
	}
//==========================================================================================================//
}*/
public CustomPickups()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    new tmpcar = GetPlayerVehicleID(i);
//=================================[pedagio]===========================================//
			if(PlayerToPoint(15.0, i, 63.4227,-1525.4623,4.9099) || PlayerToPoint(15.0, i, 39.9876,-1537.8563,5.2190) || PlayerToPoint(15.0, i, 50.8741,-1531.4620,5.2977))
			//if(oldposx >= 30.2249 && oldposy >= -1541.0364 && oldposx <= 75.5441 && oldposy <= -1522.9261)
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -8,00 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Ped�gio Pago! -R$8,00!");
					GivePlayerMoney(i, - 8);
					SBizzInfo[9][sbTill] += 8;
					ExtortionSBiz(9, 8);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -1133.7361,1094.6746,38.5247) || PlayerToPoint(15.0, i, -1159.4485,1090.8225,39.4211))
			//else if(oldposx >= -1147.1085 && oldposy >= 1072.9437 && oldposx <= -1148.2854 && oldposy <= 1119.7729)
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -8,00 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Ped�gio Pago! -R$-8,00!");
					GivePlayerMoney(i, - 8);
					SBizzInfo[9][sbTill] += 8;
					ExtortionSBiz(9, 8);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -2672.4253,1280.6934,55.9456) || PlayerToPoint(15.0, i, -2690.4136,1268.3032,55.9456))
			//else if(oldposx >= -2699.4309 && oldposy >= 1289.1495 && oldposx <= -2663.9517 && oldposy <= 1252.9856)
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -8,00 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Ped�gio Pago! -R$-8,00!");
					GivePlayerMoney(i, - 8);
					SBizzInfo[9][sbTill] += 8;
					ExtortionSBiz(9, 8);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(22.0, i, 2515.2334,292.2852,29.3627) || PlayerToPoint(22.0, i, 2540.9075,310.9224,28.8231))
			//else if(oldposx >= 2547.8508 && oldposy >= 320.1493 && oldposx <= 2506.2317 && oldposy <= 284.0387)
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -8,00 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Ped�gio Pago! -R$-8,00!");
					GivePlayerMoney(i, - 8);
					SBizzInfo[9][sbTill] += 8;
					ExtortionSBiz(9, 8);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 81.8500,-1259.7455,14.3465) || PlayerToPoint(15.0, i, 96.9080,-1280.1302,14.1135))
			//else if(oldposx >= 2547.8508 && oldposy >= 320.1493 && oldposx <= 2506.2317 && oldposy <= 284.0387)
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -8,00 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Ped�gio Pago! -R$-8,00!");
					GivePlayerMoney(i, - 8);
					SBizzInfo[9][sbTill] += 8;
					ExtortionSBiz(9, 8);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 1745.8721,525.1683,27.6760) || PlayerToPoint(15.0, i, 1752.5485,523.1072,27.6667) || PlayerToPoint(15.0, i, 1734.7725,529.1494,27.6652) || PlayerToPoint(15.0, i, 1728.3962,531.7761,27.6392))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -8,00 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Ped�gio Pago! -R$-8,00!");
					GivePlayerMoney(i, - 8);
					SBizzInfo[9][sbTill] += 8;
					ExtortionSBiz(9, 8);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 519.0666,468.8470,18.9297) || PlayerToPoint(15.0, i, 524.3035,472.9212,18.9297) || PlayerToPoint(15.0, i, -181.2493,329.5744,12.0781) || PlayerToPoint(15.0, i, -175.0119,327.9676,12.0781))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -8,00 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Ped�gio Pago! -R$-8,00!");
					GivePlayerMoney(i, - 8);
					SBizzInfo[9][sbTill] += 8;
					ExtortionSBiz(9, 8);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			if (IsAPlane(tmpcar))
			{// Ganhar Paraquedas Helicoptero
				GivePlayerWeapon(i, 46, 1);
			}
            else if (PlayerToPoint(2.0, i, 1544.0869,-1353.1323,329.4746))
			{// Ganhar Paraquedas Pr�dio
				GivePlayerWeapon(i, 46, 1);
			}
			else if(PlayerToPoint(1,i,822.0201,5.2154,1004.1797) || PlayerToPoint(1, i,822.0099,6.3927,1004.1797) || PlayerToPoint(1, i,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, i,822.0237,1.7826,1004.1797))
			{//loterica
			    GameTextForPlayer(i, "~w~Digite /loteria para comprar um bilhete!", 5000, 5);
			}
			else if(PlayerToPoint(3.0, i,256.0320,84.5082,1002.4453))
   			{
				if (PlayerInfo[i][pEmprego] == 2)
				{
					GameTextForPlayer(i, "~g~PAGUE 5K e, ~n~ ~w~ | Digite ~y~/autorizacao |", 5000, 5);
				}
			}
			/*else if (PlayerToPoint(1, i,246.3118,72.9691,1003.6406)) // /pp automatico
			{
				F_MoveObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3);
				GameTextForPlayer(i, "~w~Portao ~n~~b~Aberto", 4000, 3);
				SetTimer("GaragemDpClosed", 5000, false);
			}*/
			else if (PlayerToPoint(1, i,367.3167,162.2013,1025.7891)) // /ppre automatico
			{
                F_MoveObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3);
				GameTextForPlayer(i, "~w~Porta ~n~~b~Aberta", 4000, 3);
				SetTimer("PortaoPre2", 5000, false);
			}
			else if (PlayerToPoint(3, i,2268.0308,2449.0750,3.5313))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /subirlv", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2267.2820,2458.2598,38.6837))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /descerlv", 5000, 5);
			}
 			/*else if (PlayerToPoint(3, i,2808.0322,-1176.3846,25.3794) || PlayerToPoint(3, i,2807.4321,-1174.6454,32.6688))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /evagos", 5000, 5);
			}*/
			else if (PlayerToPoint(3, i,-54.6216,-237.0123,31.5678) || PlayerToPoint(3, i,-50.6012,-233.2422,6.7646))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epc", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1327.1804,-885.2955,39.5781) || PlayerToPoint(3, i,1324.3936,-890.1075,45.2266))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epcc", 5000, 5);
			}
			else if (PlayerToPoint(3, i,346.8519,-1494.9565,36.0391) || PlayerToPoint(3, i,345.1602,-1482.8597,76.5391))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /e23", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1800.1144,-1707.2678,13.5328) || PlayerToPoint(3, i,1797.9764,-1706.7866,27.6250))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /ebomb", 5000, 5);
			}
            else if (PlayerToPoint(3, i,599.3150,-1520.4652,15.0129) || PlayerToPoint(3, i,594.9153,-1528.5319,30.8906))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /etaxi", 5000, 5);
			}
            else if (PlayerToPoint(3, i,1041.1198,-1026.5803,32.1016))
			{
			    GameTextForPlayer(i, "~r~Transfender ~n~~w~Aperte e segure TAB ate voce terminar de tunar e sair do transfender", 5000, 5);//tuning ls
			}
            else if (PlayerToPoint(3, i,2645.0107,-2034.9117,13.5540))
			{
			    GameTextForPlayer(i, "~r~Transfender ~n~~w~Aperte e segure TAB ate voce terminar de tunar e sair do transfender", 5000, 5);//tuning lowrider
			}
            else if (PlayerToPoint(3, i,-1935.5426,234.7536,34.3125))
			{
			    GameTextForPlayer(i, "~r~Transfender ~n~~w~Aperte e segure TAB ate voce terminar de tunar e sair do transfender", 5000, 5);//tuning sf
			}
            else if (PlayerToPoint(3, i,-2712.8413,217.4841,5.2436))
			{
			    GameTextForPlayer(i, "~r~Tuning ~n~~w~Aperte e segure TAB ate voce terminar de tunar e sair do tuning", 5000, 5);//tuning sultan
			}
			/*else if (PlayerToPoint(3, i,-353.1032,-1046.4419,59.3689))
			{
			    GameTextForPlayer(i, "~w~Cofre ~n~~b~Aperte F", 5000, 5);//cofre sons
			}*/
			else if (PlayerToPoint(3, i,2139.7847,-1176.8256,23.9922) || PlayerToPoint(3, i,2138.6680,-1168.9967,28.1484))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /ealuguel", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1173.4185,-1361.2090,13.9694) || PlayerToPoint(3, i,1169.0085,-1329.3441,31.4640))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /esamu", 5000, 5);
			}
			/*else if (PlayerToPoint(3, i,2522.9346,-1679.4137,15.4970) || PlayerToPoint(3, i,2524.4297,-1681.8153,19.9302))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /egroove", 5000, 5);
			}*/
			else if (PlayerToPoint(3, i,346.1226,161.8205,1025.7964))
			{
			    GameTextForPlayer(i, "~w~EQUIPAR GOVERNO, ~n~~b~Digite /equipargov", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1548.7111,-1717.2552,13.5546))
			{
			    GameTextForPlayer(i, "~w~Bar , ~n~~b~Digite /beber", 5000, 5);
			}
			else if (PlayerToPoint(1.5, i,2232.8215,-1165.7224,25.8906) || PlayerToPoint(1.5, i,2220.0254,-1154.7596,1025.7969))
			{
			    GameTextForPlayer(i, "~w~Orelhao, ~n~Digite ~b~/orelhao ~n~~w~Sem Agenda? ~b~~n~Digite /gps 24-7", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2232.9934,-1333.1924,23.9815))
			{
			    GameTextForPlayer(i, "~w~Casamento  ~n~~b~Digite /ajudacasamento", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1991.7828,-1183.4724,20.5116) || PlayerToPoint(3, i,1948.1309,-1215.2512,20.5019))
			{
			    GameTextForPlayer(i, "~w~PESCARIA, ~n~Digite ~b~/ajudapescaria", 5000, 5);
			}
			/*else if (PlayerToPoint(3, i,329.092407,-1496.699340,76.539062) || PlayerToPoint(3, i,290.747894,187.346389,1007.179443))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eaguias", 5000, 5);
			}
			else if (PlayerToPoint(3, i,290.735107,184.166091,1007.179443) || PlayerToPoint(3, i,315.736877,-1507.970214,24.921875))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /egaragem", 5000, 5);
			}*/
			else if(PlayerToPoint(2.0, i,1527.3462,-1466.2982,9.5000))
			{
			    if(OrderReady[i] > 0)
			    {
			        switch (OrderReady[i])
			        {
			            case 1:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 300); GivePlayerWeapon(i, 33, 50); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voc� pegou o seu pacote.");
			            }
			            case 2:
			            {
			                GivePlayerWeapon(i, 24, 100); GivePlayerWeapon(i, 29, 400); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voc� pegou o seu pacote.");
			            }
			            case 3:
			            {
			                GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 200); GivePlayerWeapon(i, 30, 200); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voc� pegou o seu pacote.");
			            }
			            case 4:
			            {
			                GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 31, 300); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voc� pegou o seu pacote.");
			            }
			            case 5:
			            {
			                GivePlayerWeapon(i, 24, 400); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 400); GivePlayerWeapon(i, 30, 400); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voc� pegou o seu pacote.");
			            }
			            case 6:
			            {
			                GivePlayerWeapon(i, 24, 300); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
							SetPlayerArmour(i, 100);
							SetPlayerHealth(i, 100);
							SendClientMessage(i, COLOR_LIGHTBLUE, "* Voc� pegou o seu pacote.");
			            }
			            case 7:
			            {
			                GivePlayerWeapon(i, 24, 300); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 30, 500); GivePlayerWeapon(i, 4, 1); GivePlayerWeapon(i, 14, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Voc� pegou o seu pacote.");
			            }
			        }
			        OrderReady[i] = 0;
			    }
			}//Hitman delivery stuff
		}
	}
	return 1;
}
public OnPlayerText(playerid, text[])
{
	new giver[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[128];
	new string[128];
	new giveplayerid;
//	PlayerInactivity[playerid] = 0;
	//SpamProtection(playerid);
	if(TentouDivulgar(text))
	{
		if(cdivulgar[playerid] >= 4)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Aqui voc� n�o pode anunciar servidores!");
   			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu servidor � uma merda, n�o divulgue-o aqui!");
   			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Seu noob peguei esse IP e vou divulgar nesse server tamb�m, uaheuhaeuhaeahe!");
   			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
   			Kick(playerid);
		}
		format(string, 128, "|ATEN��O|: [%d]%s tentou divulgar: %s.",playerid,PlayerName(playerid),text);
		ABroadCast(COLOR_YELLOW,string,1);
		DivulgouLog(string);
       	cdivulgar[playerid] += 1;
       	return 0;
	}
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "Voc� n�o pode falar, voc� foi calado");
		return 0;
	}
	if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Proximo", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Proximo")))
		{
		    switch (SelectCharID[playerid])
			{
               case 1: //18�BPM/M
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 266); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 266; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				}
				case 2: //ROTA
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 298); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 298; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 285; }
    			}
				case 3: //Ex�rcito
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 287); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 287; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 191); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 191; }
				}
				case 4: //SAMU
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 274); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 274; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 275); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 275; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 276); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 276; }

				}
				case 5: //Varrios Los Aztecas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 116); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 115); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 115; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 114); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 114; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 41); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 41; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 6: //Gavi�es
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 28); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 28; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 29); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 29; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 28); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 28; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 29); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 29; }
				}
				case 7: //Prefeito
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 164); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 164; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 163); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 163; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 17; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 141; }
				}
				case 8: //Hitman Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 166); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 166; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 165); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 165; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 127); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 127; }
				}
				case 9: //Reporteres
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 10: //Taxistas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 255); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 255; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 219); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 219; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 262); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 262; }
				}
				case 11: //Policia federal
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 286); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 286; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 286); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 286; }
				}
				case 12: //Mafia CN
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 17; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 43); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 43; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 46); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 46; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 98); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 98; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 111); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 111; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 223); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 223; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 126); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 126; }
				}
				case 13: //Yakuza
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 203); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 203; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 204); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 204; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 117); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 117; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 118; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 169); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 169; }
				}
				case 14: //Groove
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 105); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 105; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 106); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 106; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 107); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 107; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 271); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 271; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 195; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 269); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 269; }
				}
				case 15: //Mancha Verde
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 30; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 47); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 47; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 48); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 48; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 192); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 192; }
				}
				case 16: //Policia Rodoviaria
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 202); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 202; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 299); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 299; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 124); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 124; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 76); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 76; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 141; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 59); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 59; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 185); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = 185; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, 240); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 240; }
				}
				case 17: //Ballas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 102); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 102; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 103); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 103; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 13); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 13; }
				}
				case 18: //Vagos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 108); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 108; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 109); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 109; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 110); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 110; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 215); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 215; }
				}
				case 19: //Comando Vermelho
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 180); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 180; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 40; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 193); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 193; }
    			}
				case 20: //pcc
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 28); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 28; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 21); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 21; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 60); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 60; }
				}
				case 21: //Sons Of anarchy
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 247); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 247; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 100); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 100; }
				}
                case 22: //Bombeiros
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 277); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 277; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 278); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 278; }
				}
			}
		    return 0;
		}
		else if ((strcmp("Confirma", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Confirma")))
		{
		    if(IsAtClothShop(playerid))
		    {
		        PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SelectCharPlace[playerid] = 0;
		    	SelectCharID[playerid] = 0;
		    	SelectChar[playerid] = 0;
		        return 0;
		    }
		    if(ChangePos2[playerid][1] == 1)
		    {
			    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SetPlayerInterior(playerid, ChangePos2[playerid][0]);
		        SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		        ChangePos2[playerid][1] = 0;
		        return 0;
		    }
		    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		    //PlayerInfo[playerid][pSpawn] = 0;
		    SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			MedicBill[playerid] = 0;
			SpawnPlayer(playerid);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, TEAM_VAGOS_COLOR, "* Use 'Proximo', ou 'Confirma'.");
		    return 0;
		}
	}
  	if(TrazerTodos[playerid] == 1)
	{
        new plo, world;
	    plo = ReturnUser(tmp);
	    world = GetPlayerVirtualWorld(playerid);
	   	new idx;
	   	tmp = strtok(text, idx);
	    new tmpcar = GetPlayerVehicleID(playerid);
 		if((strcmp("Sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			TrazerTodos[playerid] = 0;
	   			return 0;
    		}
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� foi teleportado pelo ADMIN, para participar do evento!");
		    SetPlayerVirtualWorld(plo,world);
		    RemovePlayerFromVehicle(tmpcar);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		    ResetPlayerWeaponsEx(playerid);
			SetPlayerPos(playerid, trazerx, trazery, trazerz);
            TrazerTodos[playerid] = 0;
		    return 0;
		}
		else if ((strcmp("Nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
		{
			SendClientMessage(playerid, COLOR_RED, "Ok, obrigado!");
			TrazerTodos[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Use 'Sim', ou 'Nao'.");
		    return 0;
		}
	}
	if(TrazerTodosX1[playerid] == 1)
	{
        new plo, world;
	    plo = ReturnUser(tmp);
	    world = GetPlayerVirtualWorld(playerid);
	   	new idx;
	   	tmp = strtok(text, idx);
	    new tmpcar = GetPlayerVehicleID(playerid);
 		if((strcmp("Sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			TrazerTodosX1[playerid] = 0;
	   			return 0;
    		}
		    SendClientMessage(playerid, COLOR_RED, "Voc� foi teleportado pelo ADMIN, para participar do evento de X1!");
		    SetPlayerVirtualWorld(plo,world);
		    RemovePlayerFromVehicle(tmpcar);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		    ResetPlayerWeaponsEx(playerid);
		    GivePlayerWeapon(playerid, 24, 999);
		    SetPlayerArmour(playerid, 100.0);
            SetPlayerHealth(playerid, 100.0);
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
		    SetPlayerFacingAngle(playerid,226.0);
            TrazerTodosX1[playerid] = 0;
		    return 0;
		}
		else if ((strcmp("Nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
		{
			SendClientMessage(playerid, COLOR_RED, "Ok, obrigado!");
			TrazerTodosX1[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Use 'Sim', ou 'Nao'.");
		    return 0;
		}
	}
 	if(TrazerKart[playerid] == 1)
	{
        new plo, world;
	    plo = ReturnUser(tmp);
	    world = GetPlayerVirtualWorld(playerid);
	   	new idx;
	   	tmp = strtok(text, idx);
	    new tmpcar = GetPlayerVehicleID(playerid);
 		if((strcmp("Sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			TrazerKart[playerid] = 0;
	   			return 0;
    		}
		    if(Limite26 <= 26)
		    {
			    SendClientMessage(playerid, COLOR_RED, "Voc� foi teleportado pelo ADMIN, para participar do evento!");
			    RemovePlayerFromVehicle(tmpcar);
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			    SetPlayerVirtualWorld(plo,world);
				ResetPlayerWeaponsEx(playerid);
				SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
				SetPlayerFacingAngle(playerid,226.0);
	            TrazerKart[playerid] = 0;
	            Limite26 += 1;
			    return 0;
			}
			else
			{
			    for(new i=0; i < MAX_PLAYERS; i++)
    			{
    			    if(IsPlayerConnected(i))
    			    {
				    SendClientMessage(playerid, COLOR_GREY, "O evento j� est� lotado!");
				    TrazerKart[i] = 0;
					return 0;
					}
				}
			}
		}
		else if ((strcmp("Nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
		{
			SendClientMessage(playerid, COLOR_RED, "Ok, obrigado!");
			TrazerKart[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Use 'Sim', ou 'Nao'.");
		    return 0;
		}
	}
 	if(TrazerRally[playerid] == 1)
	{
        new plo, world;
	    plo = ReturnUser(tmp);
	    world = GetPlayerVirtualWorld(playerid);
	   	new idx;
	   	tmp = strtok(text, idx);
	    new tmpcar = GetPlayerVehicleID(playerid);
 		if((strcmp("Sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Voc� n�o pode usar esse comando da cadeia!");
	   			TrazerRally[playerid] = 0;
	   			return 0;
    		}
		    if(Limite22 <= 22)
		    {
			    SendClientMessage(playerid, COLOR_RED, "Voc� foi teleportado pelo ADMIN, para participar do evento!");
			    RemovePlayerFromVehicle(tmpcar);
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			    SetPlayerVirtualWorld(plo,world);
				ResetPlayerWeaponsEx(playerid);
				SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,-2390.8176,-2203.0850,33.2891);
				SetPlayerFacingAngle(playerid,226.0);
	            TrazerRally[playerid] = 0;
	            Limite22 += 1;
			    return 0;
			}
			else
			{
			    for(new i=0; i < MAX_PLAYERS; i++)
    			{
    			    if(IsPlayerConnected(i))
    			    {
				    SendClientMessage(playerid, COLOR_GREY, "O evento j� est� lotado!");
				    TrazerRally[i] = 0;
					return 0;
					}
				}
			}
		}
		else if ((strcmp("Nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
		{
			SendClientMessage(playerid, COLOR_RED, "Ok, obrigado!");
			TrazerRally[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Use 'Sim', ou 'Nao'.");
		    return 0;
		}
	}
	if(MarriageCeremoney[playerid] > 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "Padre: %s Voc� aceita %s como sua amada esposa? (Digite 'sim', qualquer outra coisa cancela o casamento).", giveplayer,sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar o Noivo.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Gay, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Lesbico, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GivePlayerMoney(playerid, - 100000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPHousekey] = PlayerInfo[playerid][pPHousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Voc� deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Voc�, um 'sim' foi dito.",sendername);
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Voc� deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Voc�, um 'sim' foi dito.",sendername);
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}
	if(ConnectedToPC[playerid] == 255)
	{
		new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Contratos", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contratos")))
		{
		    if(PlayerInfo[playerid][pCargo] <= 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa possuir cargo 2+ para ver os contratos!");
		        return 0;
		    }
		    SearchingHit(playerid);
			return 0;
		}
		else if ((strcmp("noticias", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("noticias")))
		{
		    	new x_nr[128];
				x_nr = strtok(text, idx);

				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________| Noticia da agencia dos Assasinos |__________________|");
					SendClientMessage(playerid, COLOR_WHITE, "USE: noticias [Numero] ou noticias apagar [Numero] ou noticias apagar tudo");
					format(string, sizeof(string), "1: %s :: Assasino: %s", News[hAdd1], News[hContact1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "2: %s :: Assasino: %s", News[hAdd2], News[hContact2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "3: %s :: Assasino: %s", News[hAdd3], News[hContact3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "4: %s :: Assasino: %s", News[hAdd4], News[hContact4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "5: %s :: Assasino: %s", News[hAdd5], News[hContact5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 0;
				}//lets start
				if(strcmp(x_nr,"1",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken1] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
						News[hTaken1] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 1 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken2] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
						News[hTaken2] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 2 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken3] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
						News[hTaken3] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 3 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken4] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
						News[hTaken4] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 4 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken5] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
						News[hTaken5] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assasinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 5 ocupado !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"apagar",true) == 0)
				{
				    if(PlayerInfo[playerid][pCargo] < 4)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 4+ para apagar mensagens!");
				        return 0;
				    }
				    new string1[MAX_PLAYER_NAME];
				    new x_tel[128];
					x_tel = strtok(text, idx);
					if(!strlen(x_tel)) {
					    SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
					}
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (1) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (2) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (3) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (4) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (5) da Agencia dos Assasinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"tudo",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou todas as mensagens da agencia dos Assasinos.");
						return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "USE: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
                    }
				}
				else { return 0; }
		}
		else if ((strcmp("darcont", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("darcont")))
		{
		    if(PlayerInfo[playerid][pCargo] < 1)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 2+ para dar contrato!");
		        return 0;
		    }
		    if(hitfound == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Nao h� contratos, USE contratos em seu laptop primeiro!");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "USE: darcont [ID/Nome]");
				return 0;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pMembro] != 8 && PlayerInfo[giveplayerid][pLider] != 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador nao e um assasino!");
						return 0;
				    }
				    if(GoChase[giveplayerid] < 999)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Esse assasino ja possui um contrato!");
						return 0;
				    }
				    if(IsPlayerConnected(hitid))
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giver, sizeof(giver));
				        GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
		    			format(string, sizeof(string), "* Assasino %s, deu um contrato para %s matar: %s(ID:%d), por $%d.", sendername, giver, giveplayer, hitid, PlayerInfo[hitid][pHeadValue]);
		    			SendFamilyMessage(8, COLOR_YELLOW, string);
		    			GoChase[giveplayerid] = hitid;
		    			GetChased[hitid] = giveplayerid;
		    			GotHit[hitid] = 1;
		    			hitid = 0;
		    			hitfound = 0;
				        return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   O contrato saiu do servidor, USE contratos no seu laptop novamente!");
				        return 0;
				    }
				}
				return 0;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um assasino ativo!");
			    return 0;
			}
		}
		else if ((strcmp("membros", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("membros")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________| Membros da Agencia |__________________|");
		    for(new i=0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMembro] == 8||PlayerInfo[i][pLider] == 8)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* %s: Cargo %d", giveplayer,PlayerInfo[i][pCargo]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		else if ((strcmp("pedido", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("pedido")))
		{
		    if(OrderReady[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voc� pediu um pacote, e ele ser� entregue no meio da sua HQ!");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� pediu o pacote 1, e ele ser� entregue na porta da HQ.");
			        OrderReady[playerid] = 1;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voc� n�o possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� pediu o pacote 2, e ele ser� entregue na porta da HQ.");
			        OrderReady[playerid] = 2;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voc� n�o possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� pediu o pacote 3, e ele ser� entregue na porta da HQ.");
			        OrderReady[playerid] = 3;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voc� n�o possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� pediu o pacote 4, e ele ser� entregue na porta da HQ.");
			        OrderReady[playerid] = 4;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voc� n�o possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� pediu o pacote 5, e ele ser� entregue na porta da HQ.");
			        OrderReady[playerid] = 5;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voc� n�o possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� pediu o pacote 6, e ele ser� entregue na porta da HQ.");
			        OrderReady[playerid] = 6;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voc� n�o possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetPlayerMoney(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� pediu o pacote 7, e ele ser� entregue na porta da HQ.");
			        OrderReady[playerid] = 7;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Voc� n�o possui essa grana!");
			        return 0;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|__________________| Pedidos Disponiveis |__________________|");
			    if(PlayerInfo[playerid][pCargo] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) Cargo 1 - 6: Knife, Eagle, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) Cargo 2 - 6: Knife, Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) Cargo 2 - 6: Knife, Eagle, AK47, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) Cargo 3 - 6: Knife, Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) Cargo 3 - 6: Knife, Eagle, AK47, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) Cargo 4 - 6: Knife, Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) Cargo 4 - 6: Knife, Eagle, AK47, MP5, Shotgun"); }
			    return 0;
			}
		}
		else if ((strcmp("sair", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sair")))
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voc� desligou seu laptop e se desconectou de sua agencia.");
      		ConnectedToPC[playerid] = 0;
		    return 0;
		}
		else
		{
			    SendClientMessage(playerid, COLOR_WHITE, "|___| Agencia dos Assasinos |___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|____________|00:00|____________|");
			    return 0;
		}
	    return 0;
	}
	if(CallAdvogado[playerid] == 111)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
		    GetPlayerName(playerid, sendername, sizeof(sendername));
		    format(string, sizeof(string), "** %s est� na pris�o e precisa de um advogado, olhe /presos.", sendername);
	    	SendEmpregoMessage(2, TEAM_AZTECAS_COLOR, string);
	    	SendClientMessage(playerid, COLOR_LIGHTRED, "A Mensagem foi enviada para todos os advogados online, Por favor espere.");
	    	WantAdvogado[playerid] = 0;
			CallAdvogado[playerid] = 0;
	    	return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Sua senten�a foi iniciada.");
		    WantAdvogado[playerid] = 0;
			CallAdvogado[playerid] = 0;
		    return 0;
		}
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
		    format(string, sizeof(string), "Ao Vivo %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
 			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		else
		{
		    format(string, sizeof(string), "Ao Vivo %s: %s", sendername, text);
			OOCNews(COLOR_LIGHTGREEN, string);
			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s diz (Celular): %s", sendername, text);
		SetPlayerChatBubble(playerid, string, COLOR_AZULBB, 20.0, 10000);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		printf("callers line %d called %d caller %d",Mobile[Mobile[playerid]],Mobile[playerid],playerid);
		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Desculpe, Nao Entendi");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Temos alertado todas as unidades na �rea.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Obrigado por Relatar o Ocorrido");
			format(wanted, sizeof(wanted), "Denuncia: Todas Unidades IA: Chamador: %s",turner);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
			format(wanted, sizeof(wanted), "Denuncia: %s",text);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
			SendClientMessage(playerid, COLOR_GRAD2, "   Ninguem na linha...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERG�NCIA: Desculpe eu n�o entendo");
				return 0;
			}
			if ((strcmp("nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "COP: Alertamos todos as unidades perto do local.");
				SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por ter relatado o Ocorrido");
				format(wanted, sizeof(wanted), "HQ: Todas as unidades: Denunciante: %s",turner);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				format(wanted, sizeof(wanted), "HQ: Crime: %s, Suspeito: Desconhecido",PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				SendClientMessage(playerid, COLOR_GRAD2, "   Ningu�m na linha.....");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			badguy = strval(tmp);
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Voc� ter� que entrar em contato com os assuntos internos. Esta � uma linha de emerg�ncia");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninghem na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Unidades j� est�o atribu�dos a esse caso.");
						SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ningu�mm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Esta linha e de emergencia.");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ningu�mm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Temos alertado todas as unidades na �rea.");
					SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
					SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
					if(WantedPoints[badguy] > 0) { } else
					{
						WantedPoints[badguy] += 1;
      					SetPlayerWantedLevel(badguy, WantedPoints[badguy]);
				  	}
					SendClientMessage(playerid, COLOR_GRAD2, "   Ningu�mm na linha...");
					Mobile[playerid] = 255;
					return 0;
				}//invalid id
				return 0;
			}//not connected
			else
			{
				format(string, sizeof(string), "Police HQ: Nenhuma informa��o sobre %s, o nome citado esta correto?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe, nao entendi.");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Se voc� souber o nome do assaltante ou de parte dele, me fale, ou simplesmente dizer n�o");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 190)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe n�o entendo... Policia ou SAMU?");
				return 0;
			}
			else if ((strcmp("policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("policia")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Voc� optou por Policia, Espere.");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Pol�cia HQ: Por favor me d� uma breve descri��o do crime.");
				return 0;
			}
			else if ((strcmp("SAMU", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("SAMU")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Voc� optou por SAMU, Espere.");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Por favor me d� uma breve descri��o do Incidente.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe n�o entendo... Policia ou SAMU?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Ningu�m l�");
		}
		return 0;
	}
	if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
		if(PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "Mascarado diz: %s", text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
			//ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
		}
		else
		{
		   	format(string, sizeof(string), "%s[%d] diz: %s", PlayerName(playerid), playerid, text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, COLOR_AZULBB, 20.0, 10000);
		   	//ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1);
		}
		return 0;
  	}
	return 1;
}

public SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}
public Fixhour(hora)
{
	hora = timeshift+hora;
	if (hora < 0)
	{
		hora = hora+24;
	}
	else if (hora > 23)
	{
		hora = hora-24;
	}
	shifthour = hora;
	return 1;
}
public IsAPCCar(carid)
{
	if((carid >= 64) && (carid <= 93))
	{
		return 1;
	}
	return 0;
}
public IsAMerceCar(carid)
{//564 ate 573
	if((carid >= 564) && (carid <= 573)  || (carid >= 614) && (carid <= 619))
	{
		return 1;
	}
	return 0;
}
public IsAMayansCar(carid)
{//620 ate 634
	if((carid >= 620) && (carid <= 634))
	{
		return 1;
	}
	return 0;
}
public IsAMayans(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==23 || member==23)
		{
		    return 1;
		}
		else if(lider==23 || lider==23)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAHam(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==6 || member==6)
		{
		    return 1;
		}
		else if(lider==6 || lider==6)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAHamCar(carid)
{
	if((carid >= 344) && (carid <= 358))
	{//365 at� 379
		return 1;
	}
	return 0;
}
public IsAYa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==13|| member==13)
		{
		    return 1;
		}
		else if(lider==13 || lider==13)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAYaCar(carid)
{
	if((carid >= 300) && (carid <= 310))//321 at� 331
	{
		return 1;
	}
	return 0;
}
public IsAPFCar(carid)                            /*CARROS DA G.O.E*/
{
	if((carid >= 41) && (carid <= 63))
	{
		return 1;
	}
	return 0;
}
public IsAGOV(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==7 || lider==7)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAGOVCar(carid)//Carros Governo
{
	if((carid >= 371) && (carid <= 379))
	{//392 at� 400
		return 1;
	}
	return 0;
}
public IsAMLH(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==12 || member==12)
		{
		    return 1;
		}
		else if(lider==12 || lider==12)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAMLHCar(carid)//M�fia Cosa Nostra Carros
{
	if((carid >= 289) && (carid <= 299)) //310 at� 320
	{
		return 1;
	}
	return 0;
}

public IsAAl(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==15 || member==15)
		{
		    return 1;
		}
		else if(lider==15 || lider==15)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAAlCar(carid)
{
	if((carid >= 329) && (carid <= 343))
	{//350 at� 364
		return 1;
	}
	return 0;
}
public IsAOni(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new emprego = PlayerInfo[playerid][pEmprego];
	    if(emprego==9)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAOniCar(carid)
{
	if((carid >= 367) && (carid <= 370))
	{
		return 1;
	}
	return 0;
}
public IsAJornal(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==9 || member==9)
		{
		    return 1;
		}
		else if(lider==9 || lider==9)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAJornalCar(carid)
{
	if((carid >= 183) && (carid <= 193)) //203 at� 213
	{
		return 1;
	}
	return 0;
}
public IsAGroove(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==14 || member==14)
		{
		    return 1;
		}
		else if(lider==14 || lider==14)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAGrooveCar(carid)
{
	if((carid >= 117) && (carid <= 127))
	{
		return 1;
	}
	return 0;
}
public IsATaxi(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==10 || member==10)
		{
		    return 1;
		}
		else if(lider==10 || lider==10)
		{
		    return 1;
		}
	}
	return 0;
}
public IsATaxiCar(carid)
{
	if((carid >= 193 && carid <= 208)) //214 at� 228
	{
		return 1;
	}
	return 0;
}
public IsAVagos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==18 || member==18)
		{
		    return 1;
		}
		else if(lider==18 || lider==18)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAVagosCar(carid)
{
	if((carid >= 150) && (carid <= 160)) //171at�181
	{
		return 1;
	}
	return 0;
}
public IsABallas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==17 || member==17)
		{
		    return 1;
		}
		else if(lider==17 || lider==17)
		{
		    return 1;
		}
	}
	return 0;
}
public IsABallasCar(carid)
{
	if((carid >= 128) && (carid <= 137))
	{
		return 1;
	}
	return 0;
}
public carroVIP(carid)
{
	if((carid >= 441) && (carid <= 447))
	{
		return 1;
	}
	return 0;
}
public IsAAzteca(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==5)
		{
		    return 1;
		}
		else if(lider==5 || lider==5)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAAztecaCar(carid)
{
	if((carid >= 128) && (carid <= 138))
	{
		return 1;
	}
	return 0;
}
public IsAPizza(playerid)
{
	if(PlayerInfo[playerid][pEmprego] == 12)
	{
		return 1;
	}
	return 0;
}
public IsAPizzaCar(carid)//574ate582
{
	if((carid >= 574) && (carid <= 582))
	{
		return 1;
	}
	return 0;
}
public IsASeg(playerid)//583 ate 590
{
	if(PlayerInfo[playerid][pEmprego] == 12)
	{
		return 1;
	}
	return 0;
}
public IsASegCar(carid)
{
	if((carid >= 583) && (carid <= 590))
	{
		return 1;
	}
	return 0;
}
public IsAMec(playerid)
{
	if(PlayerInfo[playerid][pEmprego] == 5)
	{
		return 1;
	}
	return 0;
}
public IsAMecCar(carid)//427ate432
{
	if((carid >= 427 && carid <= 432))
	{
		return 1;
	}
	return 0;
}
IsABom(playerid);
public IsABom(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==2 || member==2)
		{
		    return 1;
		}
		else if(lider==22 || lider==22)
		{
		    return 1;
		}
	}
	return 0;
}
IsABomCar(carid);
public IsABomCar(carid)
{//591 at� 604
	if((carid >= 591) && (carid <= 604))
	{
		return 1;
	}
	return 0;
}
public IsABOPEs(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==2 || member==2)
		{
		    return 1;
		}
		else if(lider==2 || lider==2)
		{
		    return 1;
		}
	}
	return 0;
}
public IsABOPEsCar(carid)
{
	if((carid >= 101) && (carid <= 106))
	{
		return 1;
	}
	return 0;
}
public IsAEx(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==3 || member==3)
		{
		    return 1;
		}
		else if(lider==3 || lider==3)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAExCar(carid)
{
	if((carid >= 311) && (carid <= 328))
	{//332 at� 349
		return 1;
	}
	return 0;
}
public IsAHit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==8 || member==8)
		{
		    return 1;
		}
		else if(lider==8 || lider==8)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAHitCar(carid)
{
	if((carid >= 161) && (carid <= 171)) //182 at� 191
	{
		return 1;
	}
	return 0;
}
public IsABikeCar(carid)
{
	if((carid >= 139 && carid <= 149))//160 at� 170
	{
		return 1;
	}
	return 0;
}
public IsAVIP(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new vip = PlayerInfo[playerid][pVIP];
	    if(vip >= 1)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAVIPCar(carid)
{
	if((carid >= 439) && (carid <= 477))
	{
		return 1;
	}
	return 0;
}
public PFTCLOSED ()
{
	F_MoveObject(PFT,1282.9000244141, -1649.1999511719, 12.5, 2);
	return 1;
}
public PPCCLOSED ()
{
	F_MoveObject(PPPC,925.20001220703, -1208.9000244141, 16, 2);
	return 1;
}
public GaragemDpClosed2()
{
	F_MoveObject(PDDOORb,250.5412902832, 64.09854888916, 1002.640625, 2);//GaragemClosed
	return 1;
}
public gasolina(playerid)
{
    new string[128];
    new vehicle = GetPlayerVehicleID(playerid);
    new Nick[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Nick, sizeof(Nick));
	new wanted = WantedPoints[playerid];
    SendClientMessage(playerid, COLOR_YELLOW2, "-=Computador De Bordo=-");
    format(string, sizeof(string), "  Motorista: %s", Nick);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Veiculo: %s", NomeCarro[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Combustivel: %d", Gas[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Nivel De Procura: %d", wanted);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Horas: %d", hour);
    SendClientMessage(playerid, COLOR_WHITE, string);
    Gas[vehicle]--;
    return 1;
}
public fecharpprf()
{
	F_MoveObject(pprf, -3.2999999523163,-268.5,7.2030787467957,180);
}
public FecharPF()
{
	F_MoveObject(PortaoPF,-491.20001220703, -559.09997558594, 24.5, 2);//PortaoPFCLOSED
	return 1;
}
public FecharPCT()
{
	F_MoveObject(pct,-1209.6999511719,-1041.5,131.5, 2);//PortaoCTCLOSED
	return 1;
}
public GaragemDpClosed()
{
	F_MoveObject(PDDOORa,247.14717102051, 72.455833435059, 1002.6619873047, 2);//GaragemClosed
	return 1;
}
public pcclosed()
{
    F_MoveObject(PDDOORb,248.142105 , 78.125961 , 1003.640625, 2);//CelaClosed
	return 1;
}
public pd1()
{
	F_MoveObject(PDDOORc,248.01477050781 , 76.579116821289 , 1002.640625, 2);//GaragemClosed
	return 1;
}
public pd2()
{
	F_MoveObject(PDGATE,1544.469,-1628.097,13.353, 2);//GaragemClosed
	return 1;
}
public pd3()
{
	F_MoveObject(PDGARAGE,1588.195,-1637.969,15.193, 2);//GaragemClosed
	return 1;
}
public pd4()
{
	F_MoveObject(PDELEVATOR,1549.049804 , -1697.787109 , 12.5514954, 2);//GaragemClosed
	return 1;
}
public PFClosed2()
{
    F_MoveObject(gatepf2,2334.757568, 2443.675537, 8.250650, 2);//GateClosed
	return 1;
}
public PFClosed3()
{
	F_MoveObject(gatepf3,2293.928467, 2499.322021, 5.825822, 2);//GateClosed
	return 1;
}
public PortaoBope()
{
	F_MoveObject(portaobope,1025.799316, -368.267792, 75.509537, 2);//GateClosed
	return 1;
}
public Fecharpmesp()
{//CreateDynamicObject(980, 971.5, -942.59997558594, 42.299999237061, 0, 0, 356.99682617188);
	F_MoveObject(portaopmesp,971.5, -942.59997558594, 42.299999237061, 2);//GateClosed
	return 1;
}
public PDEx2()
{
	F_MoveObject(PDEx,-1531.3978271484, 482.25979614258, 8.9530792236328, 2);//GateClosed
	return 1;
}
public portaohit2()
{
	F_MoveObject(portaohit,1535.4083251953, -1451.5765380859, 15.161214828491, 2);//hitmanclosed
	return 1;
}
public fechargroove()
{
	F_MoveObject(portaogroove,2465.8999023438, -1659.8000488281, 15.10000038147, 2);//hitmanclosed
	return 1;
}
public gt3gate2()
{
	F_MoveObject(gt3gate,283.095062, -1542.899170, 25.510294, 2);//GateClosed
	return 1;
}
public gt3gate4()
{
	F_MoveObject(gt3gate3,321.832672, -1488.615112, 25.527353, 2);//GateClosed
	return 1;
}
public PortaoGov2()
{
	F_MoveObject(PortaoGov,1539.2235107422, -1838.2176513672, 15.320266723633, 2);//Portao Gov Closed
	return 1;
}
public PortaoPre2()
{
	F_MoveObject(PortaoPre,369.15893554688, 162.35037231445, 1028.6030273438, 2);//Portao Prefeitura Closed
	return 1;
}
public PortaoReporter2() {
	F_MoveObject(PortaoReporter,777.80017089844, -1330.2664794922, 15.200000762939, 2);//Portao Reporter Closed
	return 1;
}
public PortaoReporterr2() {
	F_MoveObject(PortaoReporterr,777.97308349609, -1384.7303466797, 15.299999237061, 2);//Portao Reporter 2 Closed
	return 1;
}
public PortaoRally2() {
	F_MoveObject(PortaoRally,-2368.4670410156, -2192.6381835938, 36.037666320801, 2);//Portao Rally Closed
	return 1;
}
public PortaoPC2() {
	F_MoveObject(PortaoPC,-75.570,-357.211,3.960, 2);//Portao PC Closed
	F_MoveObject(PortaoPC3,-75.598,-348.424,3.908, 2);
	return 1;
}
public PortaoMecs2() {
	F_MoveObject(PortaoMecs,958.840,-1415.794,15.151, 2);//Portao CET Closed
	return 1;
}
public PortaoX12() {
	F_MoveObject(PortaoX1,-2321.5114746094, -1619.4454345703, 484.98388671875, 2);//Portao X1 Closed
	return 1;
}
public OnPlayerKeyStateChange(playerid,newkeys,oldkeys)
{
//	new string[128];
    if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        OnPlayerCommandText(playerid,"/sair");
    }
   	if((newkeys == KEY_SECONDARY_ATTACK))
    {
		if(PlayerToPoint(1.0,playerid,247.7513,71.8837,1003.6406))
		{
            SetPlayerPos(playerid, 247.7513,71.8837,1003.6406);
            SetPlayerFacingAngle(playerid,2.9147);
            ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pp");
		}
		if(PlayerToPoint(1.0,playerid,245.3939,73.8076,1003.6406))
		{
		    SetPlayerPos(playerid, 245.3939,73.8076,1003.6406);
            SetPlayerFacingAngle(playerid,90.6907);
            ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pp1");
		}
		if(PlayerToPoint(1.0,playerid,247.2543,77.1084,1003.6406))
		{
		    SetPlayerPos(playerid, 247.2543,77.1084,1003.6406);
		    SetPlayerFacingAngle(playerid,276.9771);
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pv");
		}
		if(PlayerToPoint(1.0,playerid,248.9982,74.5119,1003.6406))
		{
		    SetPlayerPos(playerid, 248.9982,74.5119,1003.6406);
		    SetPlayerFacingAngle(playerid,78.9719);
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pv");
		}
		if(PlayerToPoint(1.0,playerid,249.7362,64.5239,1003.6406))
		{
		    SetPlayerPos(playerid, 249.7362,64.5239,1003.6406);
		    SetPlayerFacingAngle(playerid,271.2326);
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pr");
		}
		if(PlayerToPoint(1.0,playerid,251.4877,64.6306,1003.6406))
		{
		    SetPlayerPos(playerid, 251.4877,64.6306,1003.6406);
		    SetPlayerFacingAngle(playerid,97.8139);
      		ApplyAnimation(playerid, "HEIST9","Use_SwipeCard", 4.0, 0, 0, 0, 0, 0);
      		SetTimerEx("LimparAnim", 2000, false, "i", playerid);
            OnPlayerCommandText(playerid,"/pr");
		}
	}
    if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
		OnPlayerCommandText(playerid,"/entrar");
        OnPlayerCommandText(playerid,"/sair");
        OnPlayerCommandText(playerid,"/equiparballas");
        OnPlayerCommandText(playerid,"/equipartugas");
        OnPlayerCommandText(playerid,"/equipargroove");
        OnPlayerCommandText(playerid,"/eqpseg");
        OnPlayerCommandText(playerid,"/equiparcv");
        OnPlayerCommandText(playerid,"/equipartcp");
  		OnPlayerCommandText(playerid,"/equiparvagos");
  		OnPlayerCommandText(playerid,"/equiparsons");
  		OnPlayerCommandText(playerid,"/equiparmayans");
		if (InAFoodPlace[playerid] != 0)
		{
			if(PlayerToPoint(1.5,playerid,368.9714,-6.2486,1001.8516))
			{
				ShowPlayerDialog(playerid, 28, DIALOG_STYLE_LIST, "Cluckin' Bell", "Cora��o no Espeto R$2\nCarne de Vaca R$4\nCarne de Jacar� R$5\nCarne de Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,368.9714,-6.2486,1001.8516);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(1.5,playerid,376.8571,-67.6620,1001.5151) || PlayerToPoint(1.5,playerid,683.9015,-456.7076,-25.6099))
			{
				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "Burger Shot", "X-Simples R$2\nX-Tudo R$4\nX-Especial R$5\nX-Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,376.8571,-67.6620,1001.5151);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(1.5,playerid,375.6895,-118.9683,1001.4995))
			{
				ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Well Stacked Pizza", "Presunto e Mussarela - Pequena R$2\nPresunto e Mussarela - Grande R$4\nFrango e Azeitona R$5\nBacon e Chocolate R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,375.6895,-118.9683,1001.4995);
				SetPlayerFacingAngle(playerid, 357.0132);
			}
			if(PlayerToPoint(1.5,playerid,379.0611,-186.6032,1000.6328))
			{
				ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Jim's sticky ring", "Rosquinha Pequena R$2\nRosquinha Normal R$4\nRosquinha de Chefe R$5\nSuper Rosquinha R$4\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
				SetPlayerPos(playerid,379.0611,-186.6032,1000.6328);
				SetPlayerFacingAngle(playerid, 280);
			}
			SetCameraBehindPlayer(playerid);
		}
		if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
		|| PlayerToPoint(2,playerid,229.6725,153.8311,1003.0234) || PlayerToPoint(1.5,playerid,241.0845,115.2740,1003.2188) || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.7908,-13.2499,26.7422) || PlayerToPoint(1.5,playerid,1468.6473,-1767.3595,18.7958))
		{
		    OnPlayerCommandText(playerid,"/banco");
		}
		if (PlayerToPoint(2, playerid, 361.8300,173.5202,1008.3828))
    	{
			OnPlayerCommandText(playerid,"/getemprego");
    	}
    	if(PlayerToPoint(2, playerid,255.3,77.4,1003.6) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(2, playerid,1530.5187,-1702.5320,6.2252) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
		|| PlayerToPoint(2, playerid,262.551147,186.817260,1008.171875) || PlayerToPoint(2, playerid,373.6169,-116.5053,1001.4995) || PlayerToPoint(2, playerid,1789.0905,-1704.7363,13.5278))
    	{
			OnPlayerCommandText(playerid,"/menucop");
    	}
    	if (PlayerToPoint(2, playerid, 1490.2411,1307.2179,1093.2891))
    	{
			OnPlayerCommandText(playerid,"/licencas");
    	}
    	if (PlayerToPoint(2.0, playerid, -26.8819,-89.6936,1003.5469) || PlayerToPoint(2.0, playerid, -22.2540,-55.6456,1003.5469)
    	|| PlayerToPoint(2.0, playerid, -22.3265,-138.4765,1003.5469) || PlayerToPoint(2.0, playerid, -30.3140,-28.3121,1003.5573)
		|| PlayerToPoint(2.0, playerid, 663.8588,-568.4162,16.3433))
    	{
    	    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Loja 24/7", "Celular\nAgenda\nDados\nCamisinha\nCD-Player\nFrango\nHamburguer\nPizza\n20 Creditos\n50 Creditos", "Confirmar", "Cancelar");
    	}
    	if (PlayerToPoint(2.0, playerid, 2176.6519,1619.0439,999.9766) || PlayerToPoint(2.0, playerid, 437.1187,-82.9036,999.5547))
    	{
    	    TogglePlayerControllable(playerid, 0);
    	    ShowPlayerDialog(playerid, 6, DIALOG_STYLE_LIST, "Loja de Armas", "Kitvip\nEagle\nMP5\nShotgun\nAk-47\nM4\nRifle\nParaquedas\nTaco de Golfe\nCaceteti\nTaco de Baseball\nP�\nTaco de Sinuca\nVibrador 1\nVibrador 2\nVibrador 3\nVibrador 4\nBuque de Flores\nCano", "Confirmar", "Cancelar");
        }
        if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, " Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "confirma", "Cancela");
		}
		if(PlayerToPoint(2.0, playerid, 2152.4727,-1014.0005,62.8375) || PlayerToPoint(2.0, playerid, 1450.4479,-2287.0803,13.5469) || PlayerToPoint(2.0, playerid, 1919.1384,-1415.4775,13.5703) || PlayerToPoint(2.0, playerid, 1123.7664,-1506.4692,15.7869))
		{
		    if (PlayerInfo[playerid][pEmprego] == 4)
			{
			    TogglePlayerControllable(playerid, 0);
		    	ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o � um Traficante");
			}
		}
        if(PlayerToPoint(2.0,playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(2.0,playerid,811.9582,-1100.8458,25.7857) || PlayerToPoint(2.0,playerid,675.0947,-1275.7603,13.6334) || PlayerToPoint(2.0,playerid,1738.6844,-1944.9553,13.5647))
		{
		    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
			    TogglePlayerControllable(playerid, 0);
		    	ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o � um mafioso");
			}
		}
  		if(PlayerToPoint(3.0,playerid,2026.2104,-1896.1097,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709))
		{
		    if (PlayerInfo[playerid][pEmprego] == 7)
			{
			    TogglePlayerControllable(playerid, 0);
		    	ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Voc� n�o � um vendedor de armas");
			}
		}
		if (PlayerToPoint(2.0, playerid, 1524.4977,-1677.9469,6.2188) || PlayerToPoint(2.0, playerid, 1565.1235,-1666.9944,28.3956) || PlayerToPoint(2.0, playerid, 246.2975,87.4735,1003.6406))
		{
		    TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid, 2585, DIALOG_STYLE_LIST, "Elevador Policial", "Garagem\nDepartamento\nCobertura", "Confirma", "Cancela");
 		}
 		if (PlayerToPoint(2.0, playerid, 317.432586,-1508.513305,24.921875) || PlayerToPoint(2.0, playerid, 352.539306,-1487.491455,76.539062) || PlayerToPoint(2.0, playerid, 281.186676,187.751251,1007.171875))
		{//317.432586,-1508.513305,24.921875
		    TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid, 2900, DIALOG_STYLE_LIST, "Elevador Policial", "Garagem\nDepartamento\nCobertura", "Confirma", "Cancela");
 		}
 		if(PlayerToPoint(3.0,playerid,1990.8590,-1996.3722,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709))
 		{
 			if(MatsHolding[playerid] > 0)
			{
   				new payout = (100)*(MatsHolding[playerid]);
       			format(gstring, sizeof(gstring), "* A Boca comprou %d Pacotes de voc� e te deu %d Materiais.", payout, MatsHolding[playerid]);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
       			PlayerInfo[playerid][pMats] += payout;
   				MatsHolding[playerid] = 0;
      		}
       		else
       		{
				SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o tem nenhum pacote !");
    		}
    	}
    	if(PlayerToPoint(2, playerid, -2635.2791,1409.7692,906.4647))
    	{
			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Cosa Nostra", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � da Cosa Nostra !"); }
    	}
    	if(PlayerToPoint(2, playerid, -2167.5757,644.8060,1057.7687))
    	{
			if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Yakuza", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Voc� n�o � da Yakuza !"); }
    	}
    }
   	if((newkeys == KEY_HORN) && (IsPlayerInAnyVehicle(playerid)))
	{
	    if(IsAtGasStation(playerid))
		{
			OnPlayerCommandText(playerid,"/abastecer");
   		}
	}
	if(IncendioAcontecendo == true)
	{
	    if((newkeys == KEY_FIRE && GetPlayerWeapon(playerid) == 42) || (newkeys == KEY_FIRE && GetVehicleModel(GetPlayerVehicleID(playerid)) == 407))
    	{
    	    if((newkeys == KEY_FIRE && GetPlayerWeapon(playerid) == 42))
    	    {
				MeioDeApagar[playerid] = EXTINTOR;
    	        ApagandoIncendio[playerid] = true;
	            if(Extintor[playerid] == 0)
	            {
	                SetTimerEx("ApagarFogo", 12000, false, "i", playerid);
	                Extintor[playerid]++;
				}
			}
			else if(newkeys == KEY_FIRE && GetVehicleModel(GetPlayerVehicleID(playerid)) == 407)
    	    {
				if(IsPlayerInRangeOfPoint(playerid, 10.0, FogoX[1]-8.3718,FogoY[1]-8.429,FogoZ[1]))
				{
				    ApagandoIncendio[playerid] = true;
	    	        MeioDeApagar[playerid] = CAMINHAO;
		            if(Extintor[playerid] == 0)
		            {
		                SetTimerEx("ApagarFogo", 12000, false, "i", playerid);
		                Extintor[playerid]++;
					}
				}
			}
		}
		else
		{
		    MeioDeApagar[playerid]  = 0;
		    ApagandoIncendio[playerid] = false;
		}
	}
    if((newkeys == KEY_HORN) && (IsPlayerInAnyVehicle(playerid)))
	{
	    if(gTeam[playerid] == 2  || IsACop(playerid) || IsAGOV(playerid))
		{
			OnPlayerCommandText(playerid,"/pe");
			OnPlayerCommandText(playerid,"/pe2");
  			OnPlayerCommandText(playerid,"/pg");
  			OnPlayerCommandText(playerid,"/abrirgn");
  			OnPlayerCommandText(playerid,"/pb");
  			OnPlayerCommandText(playerid,"/pf2");
  			OnPlayerCommandText(playerid,"/pf3");
  			OnPlayerCommandText(playerid,"/pce");
  			OnPlayerCommandText(playerid,"/pcg");
  			OnPlayerCommandText(playerid,"/p8pm");
  			OnPlayerCommandText(playerid,"/pct");
			OnPlayerCommandText(playerid,"/p8pr");
			OnPlayerCommandText(playerid,"/prota");
			OnPlayerCommandText(playerid,"/pft");
		}
        if(IsAGOV(playerid))
		{
		    OnPlayerCommandText(playerid,"/pgov");
		}
        if(IsAJornal(playerid))
		{
			OnPlayerCommandText(playerid,"/portaoreporter");
  			OnPlayerCommandText(playerid,"/portaoreporter2");
		}
		if(IsATaxi(playerid))
		{
			OnPlayerCommandText(playerid,"/ptaxi");
		}
		if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
		{
 			OnPlayerCommandText(playerid,"/pcv");
		}
		if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
 			OnPlayerCommandText(playerid,"/pyakuza");
		}
		if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
 			OnPlayerCommandText(playerid,"/acn");
		}
		if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
		{
 			OnPlayerCommandText(playerid,"/pgroove");
		}
		if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
		{
 			OnPlayerCommandText(playerid,"/pballas");
		}
		if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
 			OnPlayerCommandText(playerid,"/psons");
		}
	}
}
public ScoreLevel(playerid)
{
	new LevScore;
	LevScore = PlayerInfo[playerid][pLevel];
	SetPlayerScore(playerid, LevScore);
}
public Velocimetro()
{
    new Float:Speedo_X,Float:Speedo_Y,Float:Speedo_Z;
	new Float:PlayerSpeedDistance,value;
	new Float:Speedo_HP;


	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
		{
		    GetPlayerPos(i, Speedo_X, Speedo_Y, Speedo_Z);
			GetPlayerVehicleID(i);
			GetVehicleHealth(GetPlayerVehicleID(i), Speedo_HP);
			PlayerSpeedDistance = floatsqroot(floatpower(floatabs(floatsub(Speedo_X,SavePlayerPosV[i][sX])),2)+floatpower(floatabs(floatsub(Speedo_Y,SavePlayerPosV[i][sY])),2)+floatpower(floatabs(floatsub(Speedo_Z,SavePlayerPosV[i][sZ])),2));
			value = floatround(PlayerSpeedDistance * 5000);
			new vehicle = GetPlayerVehicleID(i);
			new str1[256],str2[256],str3[256],str4[256];
			if(SpeedoON[i] == 0)
			{
			    TextDrawShowForPlayer(i, box[i]);
				//TextDrawShowForPlayer(i, tacho[i]);
				TextDrawShowForPlayer(i, fahrzeug[i]);
				TextDrawShowForPlayer(i, kmh[i]);
				TextDrawShowForPlayer(i, hoehe[i]);
				TextDrawShowForPlayer(i, zustand[i]);
				TextDrawHideForPlayer(i, forum[i]);
			}
			new kmh_anzahl = floatround(value/1600);
			format(str1,sizeof(str1),"~d~ Veiculo: ~p~%s            ~n~~n~~n~        ~g~|~y~|~b~|~w~www.~g~brasil~y~hard~b~life~w~.com~g~|~y~|~b~|",vehName[GetVehicleModel(GetPlayerVehicleID(i))-400]);
			TextDrawSetString(fahrzeug[i], str1);
            if(kmh_anzahl >= 150)
			{
				format(str2,sizeof(str2),"~d~ KM/H: ~g~%d",kmh_anzahl);
				TextDrawSetString(kmh[i], str2);
			}
			else if(kmh_anzahl >= 100)
			{
                format(str2,sizeof(str2),"~d~ KM/H: ~g~%d",kmh_anzahl);
				TextDrawSetString(kmh[i], str2);
			}
			else if(kmh_anzahl >= 50)
			{
                format(str2,sizeof(str2),"~d~ KM/H: ~g~%d",kmh_anzahl);
				TextDrawSetString(kmh[i], str2);
			}
			else
			{
                format(str2,sizeof(str2),"~d~ KM/H: ~g~%d",kmh_anzahl);
				TextDrawSetString(kmh[i], str2);
			}

			format(str3,sizeof(str3),"~d~ Combustivel: ~p~%d%", Gas[vehicle]);
			TextDrawSetString(hoehe[i], str3);

			if(Speedo_HP >= 551)
			{
				format(str4,sizeof(str4),"~d~ Lataria: ~y~%0.0f%%", Speedo_HP/10);
				TextDrawSetString(zustand[i], str4);
			}
			else if(Speedo_HP >= 361)
			{
                format(str4,sizeof(str4),"~d~ Lataria: ~y~%0.0f%%", Speedo_HP/10);
				TextDrawSetString(zustand[i], str4);
			}
			else if(Speedo_HP >= 250)
			{
                format(str4,sizeof(str4),"~d~ Lataria: ~y~%0.0f%%", Speedo_HP/10);
				TextDrawSetString(zustand[i], str4);
			}
			else
			{
                format(str4,sizeof(str4),"~d~ Lataria: ~y~%0.0f%%", Speedo_HP/10);
				TextDrawSetString(zustand[i], str4);
			}
		}
		SavePlayerPosV[i][sX] = Speedo_X, SavePlayerPosV[i][sY] = Speedo_Y, SavePlayerPosV[i][sZ] = Speedo_Z;
	}
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(!IsPlayerInAnyVehicle(i))
		{
            TextDrawHideForPlayer(i, box[i]); TextDrawHideForPlayer(i, fahrzeug[i]); TextDrawHideForPlayer(i, kmh[i]);
            TextDrawHideForPlayer(i, hoehe[i]); TextDrawHideForPlayer(i, zustand[i]);TextDrawShowForPlayer(i, forum[i]);
			SpeedoON[i] = 0;
		}
	}
}
stock GetPlayerSpeed(playerid,bool:kmh_anzahl)
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz); else GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh_anzahl?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}
stock SaveLastPosition(vehicleid)
{
    new Float:SaveCoord_X, Float:SaveCoord_Y, Float:SaveCoord_Z;
    GetVehiclePos(vehicleid, SaveCoord_X, SaveCoord_Y, SaveCoord_Z);
	sVehicle_X[vehicleid]=SaveCoord_X;
	sVehicle_Y[vehicleid]=SaveCoord_Y;
	sVehicle_Z[vehicleid]=SaveCoord_Z;
}
public RemoveRoadblock(playerid)
{
	F_DestroyObject(pRoadblock[playerid]);
	pRoadblock[playerid] = 0;
}
public RemoveGangRoadblock(playerid)
{
	F_DestroyObject(pGangRoadblock[playerid]);
	pGangRoadblock[playerid] = 0;
}
public RemoveParedao(playerid)
{
	F_DestroyObject(PlayerInfo[playerid][pParedao]);
	PlayerInfo[playerid][pParedao] = 0;
}
public RemoveRoadPregos(playerid)
{
	SpikeInfo[playerid][sCreated]=0;
    SpikeInfo[playerid][sX]=0.0;
    SpikeInfo[playerid][sY]=0.0;
    SpikeInfo[playerid][sZ]=0.0;
    F_DestroyObject(SpikeInfo[playerid][sObject]);
}
public RemoveRoadCones(playerid)
{
	F_DestroyObject(pRoadCones[playerid]);
	pRoadCones[playerid] = 0;
}
public RemoveBarraca(playerid)
{
	F_DestroyObject(PlayerInfo[playerid][pBarraca]);
	PlayerInfo[playerid][pBarraca] = 0;
}
public ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return 1;
}
public NRouco(playerid)
{
	Rouco[playerid] = 0;
	SendClientMessage(playerid, CINZA, "Agora voc� j� pode gritar novamente.");
}
public NSemAn(playerid)
{
	SemAn[playerid] = 0;
	SendClientMessage(playerid, CINZA, "Agora voc� j� usar o /an.");
}
public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
                    if(IsACop(playerid))
						{
							SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de refor�o foi cancelado.");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de refor�o foi cancelado automaticamente.");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Voc� ainda n�o pediu refor�o.");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voc� n�o � COP");
			}
		}
	}
	return 1;
}
public CheckHack() // Anti Xiter de Armas e Jet Pack
{
	new string[128];
	new giveplayer[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(antixiter == 1)
 		{
		 		return 1;
   	 	}
	   	if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && !IsPlayerNPC(i) && spawnado[i] > 0 && PlayerInfo[i][pAdmin] < 1340)
	   	{
// JetPack
if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK)
 			   {
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando um Jetpack /tvon nele rapido!", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Tempo de Jogo
else if(PlayerInfo[i][pConnectTime] < 2 && GetPlayerWeapon(i) >= 1)
                {
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
				/*format(string, sizeof(string), "O NOVATO: %s[ID %d] est� usando alguma arma", giveplayer,i);
				ABroadCast(COLOR_YELLOW,string,1);*/
                SendClientMessage(i, COR_BALLAS, "Você precisa ter + de 3 horas de jogo para usar armas !");
                ResetPlayerWeapons(i);
                }
// Minigun
else if(GetPlayerWeapon(i) == 38)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma Minigun /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				ResetPlayerWeaponsEx(i);
				}
// Rocket Launcher
else if(GetPlayerWeapon(i) == 36)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando um Rocket Launcher /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}

// Lan�a chamas
else if(GetPlayerWeapon(i) == 37)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando um Lan�a Chamas /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
// Vis�o Noturna
else if(GetPlayerWeapon(i) == 44)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s ANTICHEAT: %s[ID %d] est� usando uma Vis�o Noturna /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
// Vis�o de Calor
else if(GetPlayerWeapon(i) == 45)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma Vis�o de Calor /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Serra Eletrica
else if(GetPlayerWeapon(i) == 9)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma Serra Eletrica /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Sawn-off
else if(GetPlayerWeapon(i) == 26)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma Sawn-off /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Combat shotgun
else if(GetPlayerWeapon(i) == 27)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma Combat shotgun /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Molotov
else if(GetPlayerWeapon(i) == 36)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando um Molotov /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Micro Uzi
else if(GetPlayerWeapon(i) == 28)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma Micro Uzi /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Tec 9
else if(GetPlayerWeapon(i) == 32)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma TEC-9 /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
//Bazooca
else if(GetPlayerWeapon(i) == 36)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] est� usando uma Bazooca  /tvon nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				//ResetPlayerWeaponsEx(i);
				}
    		}
	}
	return 1;
}
public GuerraAero(playerid)
{
	new string[256];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
	{
	    if(ProvocoAero[playerid] == 1)
	    {
			if(IsPlayerInAero(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "%s e os Mayans Dominaram a Pra�a do Aeroporto",playername);
				SendClientMessageToAll(COR_MAYANS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Pra�a do Pista do Aeroporto, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_MAYANS);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 1;
				KillTimer(TempoGuerraAero);
				return 1;
				}
					else
				{
				SendClientMessage(playerid, COR_MAYANS, "Voc� n�o est� na Pra�a do Pista do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, COR_MAYANS);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return 1;
			}
		}
		return 1;
	}
    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o 1�CIA Dominaram a Pra�a do Aeroporto",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Pra�a do Pista do Aeroporto, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_PM);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 2;
				KillTimer(TempoGuerraAero);
				return 1;
				}
					else
				{
				SendClientMessage(playerid, COR_PM, "Voc� n�o est� na Pra�a do Pista do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, COR_PM);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return 1;
			}
		}
		return 1;
	}
    if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
	{
	    if(ProvocoAero[playerid] == 1)
		{
			if(IsPlayerInAero(playerid))
			{
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Sons Of Anarchy Dominaram a Pra�a do Aeroporto",playername);
				SendClientMessageToAll(COR_SONS, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Pra�a do Pista do Aeroporto, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero,COR_SONS);
				Dominando[playerid] = 0;
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 3;
				KillTimer(TempoGuerraAero);
				return 1;
				}
					else
				{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voc� n�o est� na Pra�a do Pista do Aeroporto.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZAero);
				GangZoneShowForAll(GZAero, 0xFFFFFF96);
				ProvocoAero[playerid] = 0;
				GuerranoAero = 0;
				donoaero = 0;
				KillTimer(TempoGuerraAero);
				return 1;
			}
		}
		return 1;
	}
	return 1;
}
public GuerraRefinaria(playerid)
{
	new string[256];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
	{
	    if(ProvocoRefinaria[playerid] == 1)
	    {
			if(IsPlayerInRefinaria(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "%s e o Ex�rcito Dominaram a Refin�ria Abandonada",playername);
				SendClientMessageToAll(COR_EXE, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Refin�ria Abandonada, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZRefinaria);
				GangZoneShowForAll(GZRefinaria,COR_EXE);
				Dominando[playerid] = 0;
				ProvocoRefinaria[playerid] = 0;
				GuerranoRefinaria = 0;
				donoRefinaria = 1;
				KillTimer(TempoGuerraRefinaria);
				return 1;
				}
					else
				{
				SendClientMessage(playerid, COR_EXE, "Voc� n�o est� na Refin�ria Abandonada.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZRefinaria);
				GangZoneShowForAll(GZRefinaria, COR_EXE);
				ProvocoRefinaria[playerid] = 0;
				GuerranoRefinaria = 0;
				donoRefinaria = 0;
				KillTimer(TempoGuerraRefinaria);
				return 1;
			}
		}
		return 1;
	}
    if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
	{
	    if(ProvocoRefinaria[playerid] == 1)
		{
			if(IsPlayerInRefinaria(playerid))
			{
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Gavi�es Dominaram a Refin�ria Abandonada",playername);
				SendClientMessageToAll(COR_PF, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Refin�ria Abandonada, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZRefinaria);
				GangZoneShowForAll(GZRefinaria,COR_PF);
				Dominando[playerid] = 0;
				ProvocoRefinaria[playerid] = 0;
				GuerranoRefinaria = 0;
				donoRefinaria = 2;
				KillTimer(TempoGuerraRefinaria);
				return 1;
				}
					else
				{
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� n�o est� na Refin�ria Abandonada.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZRefinaria);
				GangZoneShowForAll(GZRefinaria, COR_PF);
				ProvocoRefinaria[playerid] = 0;
				GuerranoRefinaria = 0;
				donoRefinaria = 0;
				KillTimer(TempoGuerraRefinaria);
				return 1;
			}
		}
		return 1;
	}
    if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
	{
	    if(ProvocoRefinaria[playerid] == 1)
		{
			if(IsPlayerInRefinaria(playerid))
			{
				GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Mancha Verde Dominaram a Refin�ria Abandonada",playername);
				SendClientMessageToAll(COLOR_GREEN, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Refin�ria Abandonada, a cada 3 minutos nele ganhara grana.");
				GangZoneStopFlashForAll(GZRefinaria);
				GangZoneShowForAll(GZRefinaria,COLOR_GREEN);
				Dominando[playerid] = 0;
				ProvocoRefinaria[playerid] = 0;
				GuerranoRefinaria = 0;
				donoRefinaria = 3;
				KillTimer(TempoGuerraRefinaria);
				return 1;
				}
					else
				{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voc� n�o est� na Refin�ria Abandonada.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZRefinaria);
				GangZoneShowForAll(GZRefinaria, 0xFFFFFF96);
				ProvocoRefinaria[playerid] = 0;
				GuerranoRefinaria = 0;
				donoRefinaria = 0;
				KillTimer(TempoGuerraRefinaria);
				return 1;
			}
		}
		return 1;
	}
	return 1;
}
public GuerraEstacao(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a M�fia Cosa Nostra Dominaram a Esta��o!",playername);
				SendClientMessageToAll(COR_COSA, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a esta��o, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZEstacao);
 				GangZoneShowForAll(GZEstacao,COLORGZ_LH);
 				Dominando[playerid] = 0;
 				ProvocoEstacao[playerid] = 0;
 				GuerranaEstacao = 0;
 				donoestacao = 1;
 				KillTimer(TempoGuerraEstacao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_COSA, "Voc� n�o est� na esta��o.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Yakuza Dominaram a Esta��o!",playername);
				SendClientMessageToAll(COR_YAK, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a esta��o, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,COLORGZ_YAKUZA);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 2;
				KillTimer(TempoGuerraEstacao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_YAK, "Voc� n�o est� na esta��o.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o 1�CIA Dominaram a Esta��o!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a esta��o, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 3;
				KillTimer(TempoGuerraEstacao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voc� n�o est� na esta��o.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return 1;
			}
		}
		return 1;
	}
	return 1;
}
public GuerraCasarao(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a M�fia Cosa Nostra Dominaram o Casar�o!",playername);
				SendClientMessageToAll(COR_COSA, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou o casar�o, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COLORGZ_LH);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 1;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_COSA, "Voc� n�o est� no casar�o.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Yakuza Dominaram o Casar�o!",playername);
				SendClientMessageToAll(COR_YAK, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou o casar�o, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COLORGZ_YAKUZA);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 2;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_YAK, "Voc� n�o est� no casar�o.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
	{
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a 1�CIA Dominaram o Casar�o!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou o casar�o, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao,COLORGZ_PF);
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 3;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voc� n�o est� no casar�o.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
		}
		return 1;
	}
	return 1;
}
public BombTimer(playerid)
{
    CreateExplosion(BombX[playerid], BombY[playerid], BombZ[playerid], 10, 15);
	DestroyDynamicObject(BombObject[playerid]);
	BombObject[playerid] = 0;
    BombArmed[playerid] = false;
	return 1;
}

public GuerraFavela(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Favela, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 1;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Comando Vermelho Dominaram a Favela!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Favela, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,0xF60000AA);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 7;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tugas Dominaram a Favela!",playername);
				SendClientMessageToAll(0xCCFF99FF, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Favela, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,0xCCFF99AA);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 8;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, 0xCCFF99FF, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Favela, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 2;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Favela, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 3;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Terceiro Comando Puro Dominaram a Favela!",playername);
				SendClientMessageToAll(TEAM_AZTECAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Favela, a cada 5 minutos nela ganhar� grana.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,TEAM_AZTECAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 4;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a ROTA Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_PR, string);
				SendClientMessage(playerid, COR_PR, "Voc� dominou a Favela, mantenha a posi��o.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,COR_PR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 5;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PR, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o 18�BPM/M Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Favela, mantenha a posi��o.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,GCOP_COLOR);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 6;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoFavela[playerid] == 1)
		{
			if(IsPlayerInFavela(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a 2�CIA Dominaram a Favela!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COR_PM, "Voc� dominou a Favela, mantenha a posi��o.");
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela,COR_PM);
				Dominando[playerid] = 0;
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 6;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voc� n�o est� na Favela.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZFavela);
				GangZoneShowForAll(GZFavela, 0xFFFFFF96);
				ProvocoFavela[playerid] = 0;
				GuerranaFavela = 0;
				donoFavela = 0;
				KillTimer(TempoGuerraFavela);
				return 1;
			}
		}
		return 1;
	}
	return 1;
}
public GuerraSkate(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a Groove Street Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_GROVE_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a pista de skate, a cada 3 minutos nele ganhar� grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_GROVE_COLOR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 1;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Comando Vermelho Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(0xF6000000, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a pista de skate, a cada 3 minutos nele ganhar� grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,0xF60000AA);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 7;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, 0xF6000000, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Tugas Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(0xCCFF99FF, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a pista de skate, a cada 3 minutos nele ganhar� grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,0xCCFF99AA);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 8;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, 0xCCFF99FF, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e os Ballas Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_BALLAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a pista de skate, a cada 3 minutos nele ganhar� grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_BALLAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 2;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, TEAM_BALLAS_COLOR, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Vagos Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_VAGOS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a pista de skate, a cada 3 minutos nele ganhar� grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_VAGOS_COLOR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 3;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o Terceiro Comando Puro Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(TEAM_AZTECAS_COLOR, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a pista de skate, a cada 3 minutos nele ganhar� grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,TEAM_AZTECAS_COLOR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 4;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a ROTA Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PR, string);
				SendClientMessage(playerid, COR_PR, "Voc� dominou a Favela, mantenha a posi��o.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,COR_PR);
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 5;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PR, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
	if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e o 18�BPM/M Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Voc� dominou a Pista de Skate, mantenha a posi��o.");
				GangZoneStopFlashForAll(GZSkate);
 				GangZoneShowForAll(GZSkate,GCOP_COLOR);
 				Dominando[playerid] = 0;
 				ProvocoSkate[playerid] = 0;
 				GuerranoSkate = 0;
 				donoskate = 6;
 				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
  	if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
	{
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s e a 2�CIA Dominaram a Pista de Skate!",playername);
				SendClientMessageToAll(COR_PM, string);
				SendClientMessage(playerid, COR_PM, "Voc� dominou a Pista de Skate, mantenha a posi��o.");
				GangZoneStopFlashForAll(GZSkate);
 				GangZoneShowForAll(GZSkate,COR_PM);
 				Dominando[playerid] = 0;
 				ProvocoSkate[playerid] = 0;
 				GuerranoSkate = 0;
 				donoskate = 6;
 				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_PM, "Voc� n�o est� na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
	}
 	return 1;
}
public SBan(playerid, string[], string2[])
{
	new arquivo[64], tmp[20], tmp2[20], stri[64], ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(arquivo, sizeof(arquivo), "Banidos/%s.ini",PlayerName(playerid));
	getdate(Ano, Mes, Dia);
	format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
	gettime(Hora, Minuto, Segundo);
	format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
	format(gstring, 128, "[%d/%d/%d] [%d:%d:%d] %s IP:%s foi banido pelo admin %s, motivo: %s", v[2], v[1], v[0], v[3], v[4], v[5], PlayerName(playerid),
	ip, string2, string);
	SBanLog(gstring);
	if(dini_Exists(arquivo))
	{
		Kick(playerid);
	}
	else
	{
		dini_Create(arquivo);
		dini_Set(arquivo,"Motivo",string);
		dini_Set(arquivo,"Admin",string2);
		dini_Set(arquivo,"Data",tmp);
		dini_Set(arquivo,"Hora",tmp2);

		format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
		dini_Create(stri);
		dini_Set(stri,"Motivo",string);
		dini_Set(stri,"Admin",string2);
		dini_Set(stri,"Data",tmp);
		dini_Set(stri,"Hora",tmp2);
		dini_Set(stri,"Nick",PlayerName(playerid));
		Kick(playerid);
	}
	return 1;
}

public GranaTerritorios()
{
	new string[128];
 	for(new i=0; i<MAX_PLAYERS; i++)
	{
 // Favela
    if(IsPlayerConnected(i))
    {
    	if(PlayerInfo[i][pLider] == 11 && donoaero == 1) // mid
		{
		    if(IsPlayerInAero(i))
		    {
            GivePlayerMoney(i, GranadoAero);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 11 && donoaero == 1) // mid
		{
		    if(IsPlayerInAero(i))
		    {
            GivePlayerMoney(i, GranadoAero);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
           }
		}
        if(PlayerInfo[i][pLider] == 21 && donoaero == 1) // pf
		{
		    if(IsPlayerInAero(i))
		    {
            GivePlayerMoney(i, GranadoAero);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 21 && donoaero == 1) // pf
		{
		    if(IsPlayerInAero(i))
		    {
            GivePlayerMoney(i, GranadoAero);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pLider] == 23 && donoaero == 1) // sons
		{
		    if(IsPlayerInAero(i))
		    {
            GivePlayerMoney(i, GranadoAero);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 23 && donoaero == 1) // sons
		{
		    if(IsPlayerInAero(i))
		    {
            GivePlayerMoney(i, GranadoAero);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
    	if(PlayerInfo[i][pLider] == 3 && donoRefinaria == 1) // mid
		{
		    if(IsPlayerInRefinaria(i))
		    {
            GivePlayerMoney(i, GranadaRefinaria);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 3 && donoRefinaria == 1) // mid
		{
		    if(IsPlayerInRefinaria(i))
		    {
            GivePlayerMoney(i, GranadaRefinaria);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
        if(PlayerInfo[i][pLider] == 6 && donoRefinaria == 1) // pf
		{
		    if(IsPlayerInRefinaria(i))
		    {
            GivePlayerMoney(i, GranadaRefinaria);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 6 && donoRefinaria == 1) // pf
		{
		    if(IsPlayerInRefinaria(i))
		    {
            GivePlayerMoney(i, GranadaRefinaria);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pLider] == 15 && donoRefinaria == 1) // sons
		{
		    if(IsPlayerInRefinaria(i))
		    {
            GivePlayerMoney(i, GranadaRefinaria);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 15 && donoRefinaria == 1) // sons
		{
		    if(IsPlayerInRefinaria(i))
		    {
            GivePlayerMoney(i, GranadaRefinaria);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoAero);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
	    if(PlayerInfo[i][pLider] == 14 && donoFavela == 1) // GROOVE
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 14 && donoFavela == 1) // GROOVE
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 17 && donoFavela == 2) // BALLAS
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 17 && donoFavela == 2) // BALLAS
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 18 && donoFavela == 3) // VAGOS
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 18 && donoFavela == 3) // VAGOS
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 5 && donoFavela == 4) // AZTECAS
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 5 && donoFavela == 4) // AZTECAS
		{
		    if(IsPlayerInFavela(i))
		    {
            GivePlayerMoney(i, GranadaFavela);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaFavela);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
  		}
//---- Pista de Skate
		if(PlayerInfo[i][pLider] == 14 && donoskate == 1) // GROOVE
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 14 && donoskate == 1) // GROOVE
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 17 && donoskate == 2) // BALLAS
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 17 && donoskate == 2) // BALLAS
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 18 && donoskate == 3) // VAGOS
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 18 && donoskate == 3) // VAGOS
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 5 && donoskate == 4) // AZTECAS
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 5 && donoskate == 4) // AZTECAS
		{
		    if(IsPlayerInSkate(i))
		    {
            GivePlayerMoney(i, GranadoSkate);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoSkate);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
//CASARAO
		if(PlayerInfo[i][pMembro] == 12 && donocasarao == 1) // M�fia Cosa Nostra
		{
		    if(IsPlayerInCasarao(i))
		    {
            GivePlayerMoney(i, GranadoCasarao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoCasarao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 12 && donocasarao == 1) // M�fia Cosa Nostra
		{
		    if(IsPlayerInCasarao(i))
		    {
            GivePlayerMoney(i, GranadoCasarao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoCasarao);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 13 && donocasarao == 2) // M�fia Yakuza
		{
		    if(IsPlayerInCasarao(i))
		    {
            GivePlayerMoney(i, GranadoCasarao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoCasarao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 13 && donocasarao == 2) // M�fia Yakuza
		{
		    if(IsPlayerInCasarao(i))
		    {
            GivePlayerMoney(i, GranadoCasarao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoCasarao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 11 && donocasarao == 3) // PF
		{
		    if(IsPlayerInCasarao(i))
		    {
            GivePlayerMoney(i, GranadoCasarao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoCasarao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 11 && donocasarao == 3) // PF
		{
		    if(IsPlayerInCasarao(i))
		    {
            GivePlayerMoney(i, GranadoCasarao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadoCasarao);
            SendClientMessage(i, COLOR_GRAD3, string);
		    }
		}
//ESTACAO
		if(PlayerInfo[i][pMembro] == 12 && donoestacao == 1) // M�fia Cosa Nostra
		{
		    if(IsPlayerInEstacao(i))
		    {
            GivePlayerMoney(i, GranadaEstacao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaEstacao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 12 && donoestacao == 1) // M�fia Cosa Nostra
		{
		    if(IsPlayerInEstacao(i))
		    {
            GivePlayerMoney(i, GranadaEstacao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaEstacao);
            SendClientMessage(i, COLOR_GRAD3, string);
            }
		}
		if(PlayerInfo[i][pMembro] == 13 && donoestacao == 2) // M�fia Yakuza
		{
		    if(IsPlayerInEstacao(i))
		    {
            GivePlayerMoney(i, GranadaEstacao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaEstacao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 13 && donoestacao == 2) // M�fia Yakuza
		{
		    if(IsPlayerInEstacao(i))
		    {
            GivePlayerMoney(i, GranadaEstacao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaEstacao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pMembro] == 11 && donoestacao == 3) // PF
		{
		    if(IsPlayerInEstacao(i))
		    {
            GivePlayerMoney(i, GranadaEstacao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaEstacao);
            SendClientMessage(i, COLOR_GRAD3, string);
			}
		}
		if(PlayerInfo[i][pLider] == 11 && donoestacao == 3) // PF
		{
		    if(IsPlayerInEstacao(i))
		    {
            GivePlayerMoney(i, GranadaEstacao);
            format(string, sizeof(string), "Voc� recebeu R$%d, Por manter esta area sobre controle.",GranadaEstacao);
            SendClientMessage(i, COLOR_GRAD3, string);
		    }

		}
 	}
 	}
	return 1;
}
public LoginAgora(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		logouagora[playerid] = 0;
		KillTimer(TempoLogin);
	}
}
public KitVip3()
{
	if(pkitvip3 > 0)
	{
			pkitvip3 = 0;
	}
}
public KitVip2()
{
	if(pkitvip2 > 0)
	{
			pkitvip2 = 0;
	}
}
public KitVip1()
{
	if(pkitvip1 > 0)
	{
			pkitvip1 = 0;
	}
}
public Corrida()
{
	if(pcorrida > 0)
	{
			pcorrida = 0;
	}
}
public CorridaOni()
{
	if(pcorridaoni > 0)
	{
			pcorridaoni = 0;
	}
}
public hbomba()
{
	if(phbomba > 0)
	{
			phbomba = 0;
	}
}
public cbomba()
{
	if(pcbomba > 0)
	{
			pcbomba = 0;
	}
}
public Sinc()
{
	if(psinc > 0)
	{
			psinc = 0;
	}
}
public Sequestrar()
{
	if(psequestrar > 0)
	{
			psequestrar = 0;
	}
}
public Amarrar()
{
	if(pamarrar > 0)
	{
			pamarrar = 0;
	}
}

public CheckOwnerb(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Empresas Com interiores
 			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i;
	        	    return 1;
	        	}
			}
			// Empresas sem interiores
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i+100;
	        	    return 1;
	        	}
			}
			PlayerInfo[playerid][pPbiskey] = 255;
			return 1;
	}
	return 1;
}
public CheckOwnerh(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Casas
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
		    new playername[MAX_PLAYER_NAME];
        	GetPlayerName(playerid,playername,sizeof(playername));
        	if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
        	{
        	    PlayerInfo[playerid][pPHousekey] = h;
        	    PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+totalveiculosh;
        	    return 1;
        	}
		}
		PlayerInfo[playerid][pPHousekey] = 255;
		return 1;
	}
	return 1;
}
public LoadCar()
{
	new arrCoords[14][64];
	new strFromFile2[256];
	new File: file = fopen("Configs/Carros.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			CarInfo[idx][cModel] = strval(arrCoords[0]);
			CarInfo[idx][cLocationx] = floatstr(arrCoords[1]);
			CarInfo[idx][cLocationy] = floatstr(arrCoords[2]);
			CarInfo[idx][cLocationz] = floatstr(arrCoords[3]);
			CarInfo[idx][cAngle] = floatstr(arrCoords[4]);
			CarInfo[idx][cColorOne] = strval(arrCoords[5]);
			CarInfo[idx][cColorTwo] = strval(arrCoords[6]);
			strmid(CarInfo[idx][cOwner], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			strmid(CarInfo[idx][cDescription], arrCoords[8], 0, strlen(arrCoords[8]), 255);
			CarInfo[idx][cValue] = strval(arrCoords[9]);
			CarInfo[idx][cLicense] = strval(arrCoords[10]);
			CarInfo[idx][cOwned] = strval(arrCoords[11]);
			CarInfo[idx][cLock] = strval(arrCoords[12]);
			CarInfo[idx][cGrana] = strval(arrCoords[13]);
			CarInfo[idx][cID] = totalveiculosc+idx;
			//printf("Carro: %d Dono:%s[%d] LicensePlate %s ID[%d]",idx,CarInfo[idx][cOwner],CarInfo[idx][cOwned],CarInfo[idx][cLicense],CarInfo[idx][cID]);
			idx++;
		}
		printf("[]: %d Carros Carregados", idx);
	}
	return 1;
}
public SaveCars()
{
	new idx;
	new File: file2;
	while (idx < sizeof(CarInfo))
	{
	    new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d,%f,%f,%f,%f,%d,%d,%s,%s,%d,%s,%d,%d,%d\n",
		CarInfo[idx][cModel],
		CarInfo[idx][cLocationx],
		CarInfo[idx][cLocationy],
		CarInfo[idx][cLocationz],
		CarInfo[idx][cAngle],
		CarInfo[idx][cColorOne],
		CarInfo[idx][cColorTwo],
		CarInfo[idx][cOwner],
		CarInfo[idx][cDescription],
		CarInfo[idx][cValue],
		CarInfo[idx][cLicense],
		CarInfo[idx][cOwned],
		CarInfo[idx][cLock],
		CarInfo[idx][cGrana]);
		if(idx == 1)
		{
			file2 = fopen("Configs/Carros.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/Carros.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public CheckOwner(playerid)
{
	if(IsPlayerConnected(playerid))
	{
 		// Veiculos
 		new var03=0;
	    for(new i = 1; i < sizeof(CarInfo); i++)
	    {
	        new playername[MAX_PLAYER_NAME];
	        GetPlayerName(playerid,playername,sizeof(playername));
	        if(strcmp(playername,CarInfo[i][cOwner],true)==0)
			{
			    if(PlayerInfo[playerid][pVeiculo] == 0)
			    {
	            	PlayerInfo[playerid][pCarKey] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo] = i;
				}
				if(PlayerInfo[playerid][pVeiculo2] == 0 && PlayerInfo[playerid][pVeiculo] != i)
			    {
	            	PlayerInfo[playerid][pCarKey2] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo2] = i;
				}
				if(PlayerInfo[playerid][pVeiculo3] == 0 && PlayerInfo[playerid][pVeiculo] != i && PlayerInfo[playerid][pVeiculo2] != i)
			    {
	            	PlayerInfo[playerid][pCarKey3] = i+totalveiculosc;
	            	PlayerInfo[playerid][pVeiculo3] = i;
				}
				var03=1;
	        }
 		}
		if(var03 == 0)
		{
			PlayerInfo[playerid][pCarKey] = 0;
	    	PlayerInfo[playerid][pVeiculo] = 0;
	    	PlayerInfo[playerid][pCarKey2] = 0;
	    	PlayerInfo[playerid][pVeiculo2] = 0;
	    	PlayerInfo[playerid][pCarKey3] = 0;
	    	PlayerInfo[playerid][pVeiculo3] = 0;
   		}
	}
	return 1;
}

public Administrador(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] > 0 && admtrampando[playerid] > 0)
	{
	    ResetPlayerWeaponsEx(playerid);
		SetPlayerHealth(playerid,1500);
	}
}
public Sincronizar(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
		SetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
		SetPlayerFacingAngle(playerid,FaceAngle[playerid]);
		SetPlayerHealth(playerid,PlayerHPP[playerid]);
		SetPlayerVirtualWorld(playerid,virt[playerid]);
		SetPlayerInterior(playerid,interior[playerid]);
		SetPlayerSkin(playerid,skinneg[playerid]);
		SetPlayerArmour(playerid,APP[playerid]);
		ResetPlayerWeaponsEx(playerid);
		GivePlayerWeapon(playerid,gunsinc[1][playerid],ammoo[1][playerid]);
		GivePlayerWeapon(playerid,gunsinc[2][playerid],ammoo[2][playerid]);
		GivePlayerWeapon(playerid,gunsinc[3][playerid],ammoo[3][playerid]);
		GivePlayerWeapon(playerid,gunsinc[4][playerid],ammoo[4][playerid]);
		GivePlayerWeapon(playerid,gunsinc[5][playerid],ammoo[5][playerid]);
		GivePlayerWeapon(playerid,gunsinc[6][playerid],ammoo[6][playerid]);
		GivePlayerWeapon(playerid,gunsinc[7][playerid],ammoo[7][playerid]);
		GivePlayerWeapon(playerid,gunsinc[8][playerid],ammoo[8][playerid]);
		GivePlayerWeapon(playerid,gunsinc[9][playerid],ammoo[9][playerid]);
		GivePlayerWeapon(playerid,gunsinc[10][playerid],ammoo[10][playerid]);
		GivePlayerWeapon(playerid,gunsinc[11][playerid],ammoo[11][playerid]);
		GivePlayerWeapon(playerid,gunsinc[12][playerid],ammoo[12][playerid]);
		if(vehicledd[playerid] == 1) { PutPlayerInVehicle(playerid,VehicleIDD[playerid],1); vehicledd[playerid] = 0; }
		sincronizando[playerid] = 0;
		KillTimer(TempoSinc);
		SendClientMessage(playerid,COLOR_YELLOW," Sincronizado com sucesso!");
	}
}
/*public IsATruck(carid)
{
	if(carid >= 390 && carid <= 393)
	{
		return 1;
	}
	return 0;
}*/
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	new string[128];
	new pstring[128];
	new plname[MAX_PLAYER_NAME];
	LeonardoInfo[playerid][Tels] = 0;
    GetPlayerName(clickedplayerid, plname, sizeof(plname));
    format(string, sizeof(string), "Menu do(a) %s", plname);
    format(pstring, sizeof(pstring), "Ligar para %s\nMandar SMS para %s", plname,plname);
    ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, string, pstring, "Confirmar", "Cancelar");
    LeonardoInfo[playerid][Tels] = PlayerInfo[clickedplayerid][pPnumber];
	return 1;
}
/*public GuerraTerrorista(playerid)
{
    new string[128];
	new plname[MAX_PLAYER_NAME];
 	GetPlayerName(playerid, plname, MAX_PLAYER_NAME);
 	TendoGuerra = 0;
    if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    {
        KillTimer(TempoGuerra);
        LeonardoInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e o Ex�rcito Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COLOR_EXE, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    {
        KillTimer(TempoGuerra);
        LeonardoInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a Gavi Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_PF, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    {
        KillTimer(TempoGuerra);
        LeonardoInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a Mancha Verde Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COLOR_GREEN, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 	{
        format(string, sizeof(string), "O Ex�rcito venceu a guerra matando %d membros do Taliban e %d membros da Mancha Verde!",Territorio[talmortos], Territorio[almortos]);
       	SendClientMessageToAll(COLOR_EXE, string);
 	}
 	else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//Mancha Verde ownou
 	{
      	format(string, sizeof(string), "A Mancha Verde venceu a guerra matando %d membros do Taliban e %d membros do Ex�rcito!",Territorio[talmortos], Territorio[exemortos]);
       	SendClientMessageToAll(COLOR_GREEN, string);
 	}
 	else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 	{
 	  	format(string, sizeof(string), "O Taliban venceu a guerra matando %d membros da Mancha Verde e %d membros do Ex�rcito!",Territorio[almortos], Territorio[exemortos]);
       	SendClientMessageToAll(COR_PF, string);
 	}
 	else
 	{
 	  	format(string, sizeof(string), "Houve um empate na guerra! Morreram: %d membros da Mancha Verde, %d membros do Ex�rcito e %d membros do Taliban !",Territorio[almortos], Territorio[exemortos],Territorio[talmortos]);
       	SendClientMessageToAll(COR_PF, string);
 	}
	return 1;
}*/
public UsarNovamente(playerid)
{
	UsouComando[playerid] = 0;
}

public SaveTrunk()
{
	new idx;
	new File: file2;
	idx = 1;
	while (idx < sizeof(CarInfo))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%i,%i,%i,%i,%i,%i,%i,%i,%i,%f\n",
		vehTrunk[idx][1],
		vehTrunkAmmo[idx][1],
		vehTrunk[idx][2],
		vehTrunkAmmo[idx][2],
		vehTrunk[idx][3],
		vehTrunkAmmo[idx][3],
		vehTrunk[idx][4],
		vehTrunkAmmo[idx][4],
		vehTrunkCounter[idx],
		vehTrunkArmour[idx]);
		if(idx == 1)
		{
			file2 = fopen("Configs/trunk.cfg", io_write);
		}
		else
		{
			file2 = fopen("Configs/trunk.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public LoadTrunk()
{
	new arrCoords[13][64];
	new strFromFile2[128];
	new File: file = fopen("Configs/trunk.cfg", io_read);
	if (file)
	{
		new idx = 1;
		while (idx < sizeof(CarInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    vehTrunk[idx][1] = strval(arrCoords[0]);
		    vehTrunkAmmo[idx][1] = strval(arrCoords[1]);
		    vehTrunk[idx][2] = strval(arrCoords[2]);
		    vehTrunkAmmo[idx][2] = strval(arrCoords[3]);
		    vehTrunk[idx][3] = strval(arrCoords[4]);
		    vehTrunkAmmo[idx][3] = strval(arrCoords[5]);
		    vehTrunk[idx][4] = strval(arrCoords[6]);
		    vehTrunkAmmo[idx][4] = strval(arrCoords[7]);
		    vehTrunkCounter[idx] = strval(arrCoords[8]);
		    vehTrunkArmour[idx] = floatstr(arrCoords[9]);
		    idx++;
		}
	}
	return 1;
}

public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	ResetPlayerWeaponsEx(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			GivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}
public ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}
public CarroMala(vehicleid)
{
	if(vehicleid >= totalveiculosh && vehicleid < CAR_AMOUNT) { return 1; }
	return 0;
}
public VoltarBombas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(SemBombas[playerid] == 1)
	    {
			SemBombas[playerid] = 0;
	    }
	}
}
public PresoMulta(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(TicketOffer[playerid] < 999)
	    {
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			PlayerInfo[playerid][pJailed] = 1;
            SetPlayerWantedLevel(playerid, 0);
            WantedPoints[playerid] = 0;
      		SetPlayerWantedLevel(playerid, 0);
            PlayerInfo[playerid][pJailTime] = 600000;
		}
	}
}
/*public DropWeapons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    #define MAX 300
	    new weaponid,ammo,modelid,pickupid;
	    new success=false;
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    for(new i=1;i<12;i++)
	    {
			GetPlayerWeaponData(playerid,i,weaponid,ammo);
			if(weaponid)
			{
				if(ammo>MAX)
    				ammo=MAX;
				modelid=GetWeaponModel(weaponid);
				if(modelid)
				{
				    pickupid=CreatePickup(modelid,1,x+(random(10)-random(10)),y+(random(10)-random(10)),z);
				    PickupType[pickupid]=PICKUP_TYPE_WEAPON;
					PickupWeapon[pickupid]=weaponid;
					PickupAmmo[pickupid]=ammo;
					DestroyPickupTimer[pickupid]=SetTimerEx("DestroyWeaponPickup",10000,false,"i",pickupid);
					success=true;
				}
			}
	    }
	    ResetPlayerWeaponsEx(playerid);
	    #undef MAX
	    return success;
	}
	return 0;
}*/
public DestroyWeaponPickup(pickupid)
{
	if(PickupType[pickupid]==PICKUP_TYPE_WEAPON)
	{
	    PickupType[pickupid]=PICKUP_TYPE_NONE;
	    PickupWeapon[pickupid]=0;
		PickupAmmo[pickupid]=0;
		DestroyPickup(pickupid);
		return 1;
	}
	return 0;
}
/*public DropVida(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(playerid,x,y,z);
	    picVida=CreatePickup(1240,1,x+(random(10)-random(10)),y+(random(10)-random(10)),z);
	    DestroyPickupVidaTimer[picVida]=SetTimerEx("DestroyVidaPickup",10000,false,"i",picVida);
	}
	return 1;
}*/
public DestroyVidaPickup(pickupid)
{
	DestroyPickup(pickupid);
	return 1;
}
public OnPlayerExitedMenu(playerid)
{
    TogglePlayerControllable(playerid, 1);
	return 1;
}
//=================[NOVO ROUBAR]================
public Roubobar(playerid)
{
	KillTimer(tempobar);
	if(!PlayerToPoint(8.0,playerid,380.713836,-189.114303,1000.632812))
    {
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o caixa do Bar! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� no caixa do Bar.");
        ProvocoBar[playerid] = 0; roubando[playerid] = 0; roubobar = 0; KillTimer(tempobar); temporoubobar = 0;
        return 1;
    }
	ForPlayers(i)
	{
		new grana = 1000 + random(6000);
		if(PlayerToPoint(10.0,i,380.713836,-189.114303,1000.632812))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoBar[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o caixa do Bar! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; roubobar = 0; ProvocoBar[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto ao Bar");
				GivePlayerMoney(i, grana);
				format(gstring, sizeof(gstring), "Voc� e os %s roubaram $%d do caixa do Bar.!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}
public RouboBanco(playerid)
{
	KillTimer(tempobanco);
	if(!PlayerToPoint(8.0,playerid,2145.2815,1641.7383,993.5761))
    {
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� no cofre do banco.");
        ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
        return 1;
    }
	ForPlayers(i)
	{
		new grana = 1000 + random(6000);
		if(PlayerToPoint(10.0,i,2145.2815,1641.7383,993.5761))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoBanco[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; roubobanco = 0; ProvocoBanco[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto ao Banco");
				GivePlayerMoney(i, grana);
				format(gstring, sizeof(gstring), "Voc� e os %s roubaram $%d do cofre do Banco!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}
public RouboLot(playerid)
{
	KillTimer(tempolot);
	if(!PlayerToPoint(8.0,playerid,820.6042,8.3990,1004.1962))
    {
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre da Lot�rica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� no cofre da Lot�rica.");
        ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
        return 1;
    }
	ForPlayers(i)
	{
		new grana = 1000 + random(6000);
		if(PlayerToPoint(5.0,i,820.6042,8.3990,1004.1962))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLot[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre da Lot�rica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; roubolot = 0; ProvocoLot[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Lot�rica");
				GivePlayerMoney(i, grana);
				format(gstring, sizeof(gstring), "Voc� e os %s roubaram $%d do cofre da Lot�rica!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}
public RouboPuteiro(playerid)
{
	KillTimer(tempoputeiro);
	if(!PlayerToPoint(8.0,playerid,947.3466,-42.0509,1001.1166))
    {
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar o cofre do Puteiro! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� no cofre do Puteiro.");
        ProvocoPuteiro[playerid] = 0; roubando[playerid] = 0; rouboputeiro = 0; KillTimer(tempolot); temporouboputeiro = 0;
        return 1;
    }
	ForPlayers(i)
	{
		new grana = 1000 + random(6000);
		if(PlayerToPoint(5.0,i,947.3466,-42.0509,1001.1166))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoPuteiro[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre do Puteiro! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; rouboputeiro = 0; ProvocoPuteiro[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto ao Puteiro");
				GivePlayerMoney(i, grana);
				format(gstring, sizeof(gstring), "Voc� e os %s roubaram $%d do cofre do Puteiro!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}
public RouboLoja1(playerid)
{
	KillTimer(tempoloja1);
	if(!PlayerToPoint(8.0,playerid,2169.1516,1589.9265,999.9713))
    {
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� na Loja de Armas 1.");
        ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
        return 1;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,2169.1516,1589.9265,999.9713))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLoja1[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
           	 	roubando[playerid] = 0; rouboloja1 = 0; ProvocoLoja1[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Armas 1");
				GivePlayerWeapon(i, 4, 1);
				GivePlayerWeapon(i, 10, 100);
				GivePlayerWeapon(i, 17, 100);
				GivePlayerWeapon(i, 24, 100);
				GivePlayerWeapon(i, 25, 100);
				GivePlayerWeapon(i, 31, 100);
				GivePlayerWeapon(i, 29, 100);
				GivePlayerMoney(i, grana);
				format(gstring, sizeof(gstring), "Voc� e os %s roubaram R$%d da Loja de Armas 1!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}
public RouboLoja2(playerid)
{
	KillTimer(tempoloja2);
	if(!PlayerToPoint(8.0,playerid,451.3090,-79.8603,999.5547))
    {
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar a Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� na Loja de Armas 2.");
        ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
        return 1;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,451.3090,-79.8603,999.5547))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLoja2[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; rouboloja2 = 0; ProvocoLoja2[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Armas 2");
				GivePlayerWeapon(i, 4, 1);
				GivePlayerWeapon(i, 10, 100);
				GivePlayerWeapon(i, 17, 100);
				GivePlayerWeapon(i, 24, 100);
				GivePlayerWeapon(i, 25, 100);
				GivePlayerWeapon(i, 31, 100);
				GivePlayerWeapon(i, 29, 100);
				GivePlayerMoney(i, grana);
				format(gstring, sizeof(gstring), "Voc� e os %s roubaram R$%d da Loja de Armas 2!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}
public RouboBugger(playerid)
{
	KillTimer(tempobugger);
 	if(!PlayerToPoint(8.0,playerid,376.6777093,-117.256324,1001.492187))
 	{
 	    format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar a Pizzaria! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
  		SendClientMessageToAll(GetPlayerColor(playerid), gstring);
  		SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� na Pizzaria.");
  		ProvocoBugger[playerid] = 0; roubando[playerid] = 0; roubobugger = 0; KillTimer(tempobugger); temporoubobugger = 0;
		return 1;
	}
	ForPlayers(i)
	{
        if(PlayerToPoint(8.0,i,376.6777093,-117.256324,1001.492187))
        {
            new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoBugger[playerid] == 1)
			{
                format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Pizzaria! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
                SendClientMessageToAll(GetPlayerColor(playerid), gstring);
                roubando[playerid] = 0; roubobugger = 0; ProvocoBugger[playerid] = 0;
			}
			new grana = 1000 + random(6000);
            if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
            {
                SetPlayerCriminal(i,255, "Assalto a Pizzaria");
                GivePlayerMoney(i, grana);
                format(gstring, sizeof(gstring), "Voc� e os %s roubaram R$%d da Pizzaria!",NomeORG(playerid), grana);
                SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}
/*public RouboPrefe(playerid)
{
	KillTimer(tempoprefe);
	if(!PlayerToPoint(8.0,playerid,354.6608,172.0170,1008.3802))
    {
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram roubar a Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� na Prefeitura.");
        ProvocoPrefe[playerid] = 0; roubando[playerid] = 0; rouboprefe = 0; KillTimer(tempoprefe); temporouboprefe = 0;
        return 1;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,354.6608,172.0170,1008.3802))
		{
      		new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoPrefe[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; rouboprefe = 0; ProvocoPrefe[playerid] = 0;
			}
			new grana = 1000 + random(6000);
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Prefeitura");
				GivePlayerMoney(i, grana);
				format(gstring, sizeof(gstring), "Voc� e os %s roubaram R$%d da Prefeitura!",NomeORG(playerid), grana);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}*/
/*public FugadaPrisao(playerid)
{
	KillTimer(tempofuga);
	if(PlayerInfo[playerid][pJailed]==0)
	{
		format(gstring, sizeof(gstring), "%s e os %s n�o conseguiram Fugir! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Voc� n�o est� Preso.");
        ProvocoFuga[playerid] = 0; roubando[playerid] = 0; fugapr = 0; KillTimer(tempofuga); tempodafuga = 0;
        return 1;
    }
	ForPlayers(i)
	{
		if(PlayerInfo[playerid][pJailed]>=1)
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoFuga[playerid] == 1)
            {
            	format(gstring, sizeof(gstring), "%s e os %s conseguiram Fugir da Pris�o! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; fugapr = 0; ProvocoFuga[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Fuga da Pris�o");
				PlayerInfo[playerid][pJailTime] = 0;
				format(gstring, sizeof(gstring), "Voc� e os %s fugiram da Pris�o!",NomeORG(playerid));
            	SendClientMessage(i, COLOR_YELLOW, gstring);
			}
		}
	}
	return 1;
}*/
public Aroubo()
{
    temporoubobanco = 0;
}
public Aroubo2()
{
    temporoubolot = 0;
}
public Aroubo3()
{
    temporouboloja1 = 0;
}
public Aroubo4()
{
    temporouboloja2 = 0;
}
/*public Aroubo5()
{
    temporouboprefe = 0;
}*/
public Aroubo6()
{
	temporoubobugger = 0;
}
public Aroubo7()
{
	temporoubobar = 0;
}
/*public Aroubo8()
{
    tempodafuga = 0;
}*/
//=================[FIM ROUBAR]================
public OnPlayerHaveExtraCash(playerid,extraamount)
{
	return 1;
}
public OnGameModeExit()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    { OnPlayerSave(i); }
	}
	for(new objectid; objectid<F_MAX_OBJECTS; objectid++)
	{
	    F_DestroyObject(objectid);
	}
	F_ObjectUpdate(false);
	getdate(v[0], v[1], v[2]);
	gettime(v[3], v[4], v[5]);
	print("\n---------------------------------------------------------");
	printf("Server Desligado: [%02d/%02d/%d %02d:%02d:%02d]", v[2], v[1], v[0], v[3], v[4], v[5]);
	print("---------------------------------------------------------\n");
	return 1;
}
//=-=-=-=-=-AFK Mode=-=-=-=-=-=-=-
/*public CheckAFK()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
		if(AFKon == false) return 1;
		if(PlayerInfo[i][pAdmin] >= 1340) return 1;
        new Float:x, Float:y, Float:z, Float:Facingangleafk;
        GetPlayerPos(i, x, y, z);
        GetPlayerFacingAngle(i, Facingangleafk);
        //AUMENTA UN MINUTO DI AFK DEL PLAYER
		if(x == PlayerUpdateInfo[i][posxafk] && y == PlayerUpdateInfo[i][posyafk] &&
        z == PlayerUpdateInfo[i][poszafk] && Facingangleafk == PlayerUpdateInfo[i][angleafk])
        {
            PlayerInactivity[i]++;
            if(PlayerInactivity[i] >= AFK_TIME)
			{
				new nome[MAX_PLAYER_NAME], string[128];
    			GetPlayerName(i,nome,sizeof(nome));
				format(string, sizeof(string), "ADMIN: %s foi kickado por Administrador_BOT, Motivo: Inatividade", nome);
    			SendClientMessageToAll(COLOR_LIGHTRED, string);
    			SendClientMessage(i, COLOR_LIGHTRED,"Administrador_BOT te kickou do servidor, e n�o o contrarie novamente");
				Kick(i);
				return 1;
			}
        }
        else
        {
            PlayerInactivity[i] = 0;
        }
        //SALVA LE ATTUALI INFO
        GetPlayerPos(i, PlayerUpdateInfo[i][posxafk], PlayerUpdateInfo[i][posyafk], PlayerUpdateInfo[i][poszafk]);
        GetPlayerFacingAngle(i, PlayerUpdateInfo[i][angleafk]);
        }
	}
	return 0;
}*/
//=================================[pedagio]===========================================//
public ReduzTempo(playerid)
{
	Reduzido[playerid] = 0;
}
public ReduzTempoBot(playerid)
{
	ReduzidoBot[playerid] = 0;
}
stock ReturnPlayerZone(playerid)
{
	new location[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
    return location;
}

stock NomeORG(playerid)
{
	new gangtext[64];
	if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0) { gangtext = "Civil"; }
    else if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1) { gangtext = "18�BPM/M"; }
	else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2) { gangtext = "ROTA"; }
	else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3) { gangtext = "Exercito"; }
	else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4) { gangtext = "Medicos"; }
	else if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5) { gangtext = "Terceiro Comando Puro"; }
	else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6) { gangtext = "Gavi�es da Fiel"; }
	else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7) { gangtext = "Servidor P�blico"; }
    else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) { gangtext = "Assassino"; }
    else if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) { gangtext = "Rep�rter"; }
    else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) { gangtext = "Taxista"; }
	else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) { gangtext = "1�CIA"; }
   	else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) { gangtext = "Cosa Nostra"; }
   	else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) { gangtext = "Yakuza"; }
    else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) { gangtext = "Groove Street"; }
    else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) { gangtext = "Mancha Verde"; }
    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) { gangtext = "2�CIA"; }
    else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) { gangtext = "Ballas"; }
    else if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) { gangtext = "Los Vagos"; }
    else if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) { gangtext = "Comando Vermelho"; }
    else if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) { gangtext = "Los Tugas"; }
    else if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) { gangtext = "Sons Of Anarchy"; }
	else if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) { gangtext = "Bombeiros"; }
	else if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) { gangtext = "Mayans"; }
	return gangtext;
}
stock SendMessageToOthersAdmins(playerid, color, const message[])
{
	new ret=0;
	for (new i=0; i<MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i) && i!=playerid && PlayerInfo[i][pAdmin] > 0)
		{
			SendClientMessage(i, color, message);
			ret++;
		}
	}
	return ret;
}
public Clock()
{
	new str[128], str2[128];
	new ano, mes, dia;
	new hora, minuto, segundo;
	getdate(ano, mes, dia);
 	gettime(hora, minuto, segundo);
	new myeggtext[20];
	if(mes == 1) { myeggtext = "Janeiro"; }
	else if(mes == 2) { myeggtext = "Fevereiro"; }
	else if(mes == 3) { myeggtext = "Marco"; }
	else if(mes == 4) { myeggtext = "Abril"; }
	else if(mes == 5) { myeggtext = "Maio"; }
	else if(mes == 6) { myeggtext = "Junho"; }
	else if(mes == 7) { myeggtext = "Julho"; }
	else if(mes == 8) { myeggtext = "Agosto"; }
	else if(mes == 9) { myeggtext = "Setembro"; }
	else if(mes == 10) { myeggtext = "Outubro"; }
	else if(mes == 11) { myeggtext = "Novembro"; }
	else if(mes == 12) { myeggtext = "Dezembro"; }
	for (new i=0; i<MAX_PLAYERS; i++)
	{
		format(str, sizeof(str), "%d de %s", dia, myeggtext);
   		TextDrawSetString(TextDrawdeData[i], str);
   		format(str2, sizeof(str2), "%d:%d:%d", hora, minuto, segundo);
		TextDrawSetString(TextDrawdeHora[i], str2);
	}
	if(minuto == 55 && segundo == 1) { SendClientMessageToAll(COLOR_YELLOW, "Faltam 5 minutos pra come�ar a loteria, compre um bilhete na lot�rica"); }
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
  	if (VTrancado[vehicleid] >= 1)
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	}
	else
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
	}
	return 1;
}
forward LockCar(carid);
public LockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
		}
	}
}
forward UnLockCar(carid);
public UnLockCar(carid)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,0);
		}
	}
}
encode_tires(tires1, tires2, tires3, tires4)
{
	return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);
}
//=====================================[INFOORG]================================//
forward ConviteInfoOrg(nome[], org, cargo);
public ConviteInfoOrg(nome[], org, cargo)
{
	new arquivo[256];
	format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",org);
 	if(cargo >= 6)
	{
	    strmid(InfoOrg[org][Lider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		dini_Set(arquivo,"Lider",nome);
		return 1;
	}
	if(cargo == 5)
	{
		if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
		{
		    strmid(InfoOrg[org][SubLider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
       	    dini_Set(arquivo,"SubLider",nome);
			return 1;
		}
	}
	if(strcmp(InfoOrg[org][Membro1],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro1], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro1",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro2],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro2], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro2",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro3],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro3], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro3",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro4],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro4], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro4",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro5],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro5], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro5",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro6],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro6], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro6",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro7],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro7], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro7",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro8],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro8], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro8",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro9],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro9], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro9",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro10],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro10], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro10",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro11],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro11], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		dini_Set(arquivo,"Membro11",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro12],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro12], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro12",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro13],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro13], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro13",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro14],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro14], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro14",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro15],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro15], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro15",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro16],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro16], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro16",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro17],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro17], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro17",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro18],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro18], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro18",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro19],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro19], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro19",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro20],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro20], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro20",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro21],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro21], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro21",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro22],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro22], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro22",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro23],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro23], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro23",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro24],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro24], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro24",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro25],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro25], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro25",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro26],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro26], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro26",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro27],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro27], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro27",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro28],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro28], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro28",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro29],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro29], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro29",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro30],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro30], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro30",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro31],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro31], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro31",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro32],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro32], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro32",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro33],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro34], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro34",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro35],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro35], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro35",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro36],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro36], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro36",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro37],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro37], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro37",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro38],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro38], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro38",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro39],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro39], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro39",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro40],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro40], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro40",nome);
		return 1;
	}
	return 0;
}
forward CheckInfoOrg(playerid);
public CheckInfoOrg(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    new PlayerNick[MAX_PLAYER_NAME];
	    GetPlayerName(playerid,PlayerNick,sizeof(PlayerNick));
	    for(new i = 1; i < sizeof(InfoOrg); i++)
		{
	    	if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    {
		    	if(strcmp(PlayerNick,InfoOrg[i][Lider],true)==0)
		    	{
		    	    PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][SubLider],true)==0)
		    	{
   					PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro1],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro2],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro3],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro4],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro5],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro6],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro7],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro8],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro9],true)==0)
		    	{
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro10],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro11],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro12],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro13],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro14],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro15],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro16],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro17],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro18],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro19],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro20],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro21],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro22],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro23],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro24],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro25],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro26],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro27],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro28],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro29],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro30],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro31],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro32],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro33],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro34],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro35],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro36],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro37],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro38],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro39],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	if(strcmp(PlayerNick,InfoOrg[i][Membro40],true)==0)
		    	{
           			PlayerInfo[playerid][pCheckInfoOrg] = 0;
					return 1;
		    	}
		    	PlayerInfo[playerid][pCheckInfoOrg] = 1;
			}
		}
		if(PlayerInfo[playerid][pCheckInfoOrg] >= 1)
		{
		    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    {
       			if(PlayerInfo[playerid][pLider] > 0) { SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� foi demitido de l�der por um admin, agora voc� � um Civil !"); }
				else { SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� foi demitido pelo seu l�der, agora voc� � um Civil !"); }
				gTeam[playerid] = 3;
				MedicBill[playerid] = 0;
				PlayerInfo[playerid][pTeam] = 3;
				PlayerInfo[playerid][pMembro] = 0;
				PlayerInfo[playerid][pLider] = 0;
				PlayerInfo[playerid][pCargo] = 0;
				if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 7; } else { PlayerInfo[playerid][pSkin] = 12; }
				PlayerInfo[playerid][pCheckInfoOrg] = 0;
				SpawnPlayer(playerid);
				return 1;
			}
		}
    }
	return 1;
}
forward LoadOrgs();
public LoadOrgs()
{
	new arquivo[256];
	new idx = 1;
	while (idx < sizeof(InfoOrg))
	{
	    format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",idx);
		strmid(InfoOrg[idx][Lider], dini_Get(arquivo,"Lider"), 0, strlen(dini_Get(arquivo,"Lider")), 255);
		strmid(InfoOrg[idx][SubLider], dini_Get(arquivo,"SubLider"), 0, strlen(dini_Get(arquivo,"SubLider")), 255);
		strmid(InfoOrg[idx][Membro1], dini_Get(arquivo,"Membro1"), 0, strlen(dini_Get(arquivo,"Membro1")), 255);
		strmid(InfoOrg[idx][Membro2], dini_Get(arquivo,"Membro2"), 0, strlen(dini_Get(arquivo,"Membro2")), 255);
		strmid(InfoOrg[idx][Membro3], dini_Get(arquivo,"Membro3"), 0, strlen(dini_Get(arquivo,"Membro3")), 255);
		strmid(InfoOrg[idx][Membro4], dini_Get(arquivo,"Membro4"), 0, strlen(dini_Get(arquivo,"Membro4")), 255);
		strmid(InfoOrg[idx][Membro5], dini_Get(arquivo,"Membro5"), 0, strlen(dini_Get(arquivo,"Membro5")), 255);
		strmid(InfoOrg[idx][Membro6], dini_Get(arquivo,"Membro6"), 0, strlen(dini_Get(arquivo,"Membro6")), 255);
		strmid(InfoOrg[idx][Membro7], dini_Get(arquivo,"Membro7"), 0, strlen(dini_Get(arquivo,"Membro7")), 255);
		strmid(InfoOrg[idx][Membro8], dini_Get(arquivo,"Membro8"), 0, strlen(dini_Get(arquivo,"Membro8")), 255);
		strmid(InfoOrg[idx][Membro9], dini_Get(arquivo,"Membro9"), 0, strlen(dini_Get(arquivo,"Membro9")), 255);
		strmid(InfoOrg[idx][Membro10], dini_Get(arquivo,"Membro10"), 0, strlen(dini_Get(arquivo,"Membro10")), 255);
		strmid(InfoOrg[idx][Membro11], dini_Get(arquivo,"Membro11"), 0, strlen(dini_Get(arquivo,"Membro11")), 255);
		strmid(InfoOrg[idx][Membro12], dini_Get(arquivo,"Membro12"), 0, strlen(dini_Get(arquivo,"Membro12")), 255);
		strmid(InfoOrg[idx][Membro13], dini_Get(arquivo,"Membro13"), 0, strlen(dini_Get(arquivo,"Membro13")), 255);
		strmid(InfoOrg[idx][Membro14], dini_Get(arquivo,"Membro14"), 0, strlen(dini_Get(arquivo,"Membro14")), 255);
		strmid(InfoOrg[idx][Membro15], dini_Get(arquivo,"Membro15"), 0, strlen(dini_Get(arquivo,"Membro15")), 255);
		strmid(InfoOrg[idx][Membro16], dini_Get(arquivo,"Membro16"), 0, strlen(dini_Get(arquivo,"Membro16")), 255);
		strmid(InfoOrg[idx][Membro17], dini_Get(arquivo,"Membro17"), 0, strlen(dini_Get(arquivo,"Membro17")), 255);
		strmid(InfoOrg[idx][Membro18], dini_Get(arquivo,"Membro18"), 0, strlen(dini_Get(arquivo,"Membro18")), 255);
		strmid(InfoOrg[idx][Membro19], dini_Get(arquivo,"Membro19"), 0, strlen(dini_Get(arquivo,"Membro19")), 255);
		strmid(InfoOrg[idx][Membro20], dini_Get(arquivo,"Membro20"), 0, strlen(dini_Get(arquivo,"Membro20")), 255);
		strmid(InfoOrg[idx][Membro21], dini_Get(arquivo,"Membro21"), 0, strlen(dini_Get(arquivo,"Membro21")), 255);
		strmid(InfoOrg[idx][Membro22], dini_Get(arquivo,"Membro22"), 0, strlen(dini_Get(arquivo,"Membro22")), 255);
		strmid(InfoOrg[idx][Membro23], dini_Get(arquivo,"Membro23"), 0, strlen(dini_Get(arquivo,"Membro23")), 255);
		strmid(InfoOrg[idx][Membro24], dini_Get(arquivo,"Membro24"), 0, strlen(dini_Get(arquivo,"Membro24")), 255);
		strmid(InfoOrg[idx][Membro25], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro25")), 255);
		strmid(InfoOrg[idx][Membro26], dini_Get(arquivo,"Membro26"), 0, strlen(dini_Get(arquivo,"Membro26")), 255);
		strmid(InfoOrg[idx][Membro27], dini_Get(arquivo,"Membro27"), 0, strlen(dini_Get(arquivo,"Membro27")), 255);
		strmid(InfoOrg[idx][Membro28], dini_Get(arquivo,"Membro28"), 0, strlen(dini_Get(arquivo,"Membro28")), 255);
		strmid(InfoOrg[idx][Membro29], dini_Get(arquivo,"Membro29"), 0, strlen(dini_Get(arquivo,"Membro29")), 255);
		strmid(InfoOrg[idx][Membro30], dini_Get(arquivo,"Membro30"), 0, strlen(dini_Get(arquivo,"Membro30")), 255);
		strmid(InfoOrg[idx][Membro31], dini_Get(arquivo,"Membro31"), 0, strlen(dini_Get(arquivo,"Membro31")), 255);
		strmid(InfoOrg[idx][Membro32], dini_Get(arquivo,"Membro32"), 0, strlen(dini_Get(arquivo,"Membro32")), 255);
		strmid(InfoOrg[idx][Membro33], dini_Get(arquivo,"Membro33"), 0, strlen(dini_Get(arquivo,"Membro33")), 255);
		strmid(InfoOrg[idx][Membro34], dini_Get(arquivo,"Membro34"), 0, strlen(dini_Get(arquivo,"Membro34")), 255);
		strmid(InfoOrg[idx][Membro35], dini_Get(arquivo,"Membro35"), 0, strlen(dini_Get(arquivo,"Membro35")), 255);
		strmid(InfoOrg[idx][Membro36], dini_Get(arquivo,"Membro36"), 0, strlen(dini_Get(arquivo,"Membro36")), 255);
		strmid(InfoOrg[idx][Membro37], dini_Get(arquivo,"Membro37"), 0, strlen(dini_Get(arquivo,"Membro37")), 255);
		strmid(InfoOrg[idx][Membro38], dini_Get(arquivo,"Membro38"), 0, strlen(dini_Get(arquivo,"Membro38")), 255);
		strmid(InfoOrg[idx][Membro39], dini_Get(arquivo,"Membro39"), 0, strlen(dini_Get(arquivo,"Membro39")), 255);
		strmid(InfoOrg[idx][Membro40], dini_Get(arquivo,"Membro40"), 0, strlen(dini_Get(arquivo,"Membro40")), 255);
   		idx ++;
	}
	printf("[]: %d Orgs Carregadas", idx);
	return 1;
}
forward DemitirInfoOrg(nome[]);
public DemitirInfoOrg(nome[])
{
    new arquivo[256];
    for(new i = 1; i < sizeof(InfoOrg); i++)
	{
        format(arquivo, sizeof(arquivo), "ORG Arquivos/Org%d.cfg",i);
    	if(strcmp(nome,InfoOrg[i][Lider],true)==0)
    	{
    	    strmid(InfoOrg[i][Lider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
    		dini_Set(arquivo,"Lider","Ninguem");
    	    return 1;
    	}
		if(strcmp(nome,InfoOrg[i][SubLider],true)==0)
		{
		    strmid(InfoOrg[i][SubLider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"SubLider","Ninguem");
			return 1;
   		}
    	if(strcmp(nome,InfoOrg[i][Membro1],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro1], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro1","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro2],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro2], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro2","Ninguem");
  	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro3],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro3], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Membro3","Ninguem");
 	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro4],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro4], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro4","Ninguem");
  	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro5],true)==0)
    	{
		    strmid(InfoOrg[i][Membro5], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Membro5","Ninguem");
		    return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro6],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro6], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro6","Ninguem");
		    return 1;
    	}
		if(strcmp(nome,InfoOrg[i][Membro7],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro7], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro7","Ninguem");
  	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro8],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro8], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro8","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro9],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro9], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro9","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro10],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro10], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro10","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro11],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro11], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro11","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro12],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro12], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro12","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro13],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro13], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro13","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro14],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro14], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro14","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro15],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro15], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro15","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro16],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro16], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro16","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro17],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro17], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro17","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro18],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro18], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro18","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro19],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro19], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro19","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro20],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro20], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro20","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro21],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro21], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro21","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro22],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro22], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro22","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro23],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro23], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro23","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro24],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro24], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro24","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro24],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro24], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro24","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro25],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro25], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro25","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro26],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro26], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro26","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro27],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro27], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro27","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro28],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro28], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro28","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro29],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro29], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro29","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro30],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro30], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro30","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro31],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro31], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro31","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro32],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro32], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro32","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro33],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro33], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro33","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro34],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro34], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro34","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro35],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro35], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro35","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro36],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro36], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro36","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro37],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro37], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro37","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro38],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro38], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro38","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro39],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro39], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro39","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro40],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro40], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro40","Ninguem");
	    	return 1;
    	}
    }
	return 0;
}
stock Demitir(playerid, para1)
{
	format(gstring, sizeof(gstring), "* Voc� foi demitido pelo l�der %s Motivo: Limpou sua Vaga.", PlayerName(playerid));
	SendClientMessage(para1, COLOR_LIGHTRED, gstring);
	SendClientMessage(para1, COLOR_LIGHTRED, "* Agora voc� � um civil novamente.");
 	gTeam[para1] = 3;
	PlayerInfo[para1][pTeam] = 3;
	PlayerInfo[para1][pMembro] = 0;
	PlayerInfo[para1][pCargo] = 0;
	if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 293; } else { PlayerInfo[para1][pSkin] = 12; }
    SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	MedicBill[para1] = 0;
	SpawnPlayer(para1);
}
stock DemitirLider(playerid)
{
	SendClientMessage(playerid, COLOR_LIGHTRED, "Voc� foi demitido de l�der por um admin, agora voc� � um Civil !");
	gTeam[playerid] = 3;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 293; } else { PlayerInfo[playerid][pSkin] = 12; }
    SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	MedicBill[playerid] = 0;
	SpawnPlayer(playerid);
}
forward TemVaga(family);
public TemVaga(family)
{
	if(strcmp(InfoOrg[family][Membro1], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro2], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro3], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro4], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro5], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro6], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro7], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro8], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro9], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro10], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro11], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro12], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro13], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro14], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro15], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro16], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro17], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro18], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro19], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro20], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro21], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro22], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro23], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro24], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro25], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro26], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro27], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro28], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro29], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro30], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro31], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro32], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro33], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro34], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro35], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro36], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro37], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro38], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro39], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro40], "Ninguem", true) == 0)
   	{
		return 1;
	}
	return 0;
}
forward IsPlayerOnline(name[]);
public IsPlayerOnline(name[])
{
	new PlayerName2[MAX_PLAYER_NAME];
	for(new i=0; i<MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
		{
	    	GetPlayerName(i, PlayerName2, sizeof(PlayerName2));
	    	if(strcmp(name,PlayerName2,true)==0)
			{
		    	return 1;
			}
		}
	}
	return 0;
}
forward GetPlayerID(string[]);
public GetPlayerID(string[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
    	if(IsPlayerConnected(i))
		{
        	new testname[MAX_PLAYER_NAME];
	    	GetPlayerName(i, testname, sizeof(testname));
	    	if(strcmp(testname,string,true)==0)
	    	{
	    	    return i;
	    	}
		}
    }
    return INVALID_PLAYER_ID;
}
//==============================================================================//
public Incendio(playerid)
{
	new string[200], NickName[MAX_PLAYER_NAME];
    FogoID[0] = CreateObject(18690,FogoX[0],FogoY[0],FogoZ[0],0,0,0,0);
    FogoID[1] = CreateObject(18690,FogoX[1],FogoY[1],FogoZ[1],0,0,0,0);
    FogoID[2] = CreateObject(18690,FogoX[2],FogoY[2],FogoZ[2],0,0,0,0);
    FogoID[3] = CreateObject(18691,FogoX[3],FogoY[3],FogoZ[3],0,0,0,0);
    FogoID[4] = CreateObject(18690,FogoX[4],FogoY[4],FogoZ[4],0,0,0,0);
    FogoID[5] = CreateObject(18691,FogoX[5],FogoY[5],FogoZ[5],0,0,0,0);
    FogoID[6] = CreateObject(18690,FogoX[6],FogoY[6],FogoZ[6],0,0,0,0);
    FogoID[7] = CreateObject(18690,FogoX[7],FogoY[7],FogoZ[7],0,0,0,0);
    FogoID[8] = CreateObject(18691,FogoX[8],FogoY[8],FogoZ[8],0,0,0,0);
    KillTimer(SetTimerEx("Incendio", 5000, false, "i", playerid));
	GetPlayerName(playerid, NickName, sizeof(NickName));
	format(string, sizeof(string), "[AVISO] Um Novo Inc�ndio surgiu na cidade. Culpado: %s !",NickName);
	SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
	SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
	SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
	SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
	SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
	SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
	SendFamilyMessage(22, COLOR_DEPARTAMENTO, string);
	printf("%s", string);
	return 1;
}
public ApagarFogo(playerid)
{
	new NickName[MAX_PLAYER_NAME];
	if(Extintor[playerid] > 0 && ApagandoIncendio[playerid] == true && MeioDeApagar[playerid] > 0 && PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
	{
	    if(MeioDeApagar[playerid] == EXTINTOR)
	    {
            for(new e = 0; e < 9; e++)
			{
			    if(IsPlayerInRangeOfPoint(playerid, 10.0, FogoX[e], FogoY[e], FogoZ[e]))
			    {
		            DestroyObject(FogoID[e]);
		            FogoApagado[e] = true;
				}
			}
			if(FogoApagado[8] == true)
			{
			    IncendioAcontecendo = false;
			    ApagandoIncendio[playerid] = false;
			    Extintor[playerid] = 0;
			    GetPlayerName(playerid, NickName, sizeof(NickName));
			    MeioDeApagar[playerid] = 0;
			    GivePlayerMoney(playerid,1000);
		        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid, 0x33CCFFAA, "[] Voc� recebeu uma quantia de R$1.000 como Pr�mio !");
			    KillTimer(SetTimerEx("ApagarFogo", 12000, false, "i", playerid));
			}
		}
		if(MeioDeApagar[playerid] == CAMINHAO && IsPlayerInRangeOfPoint(playerid, 10.0, FogoX[1]-8.3718,FogoY[1]-8.429,FogoZ[1]) && PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
		{
		    for(new e = 0; e < 9; e++)
			{
			    DisablePlayerCheckpoint(playerid);
			    DestroyObject(FogoID[e]);
			    FogoApagado[e] = true;
			}
			if(FogoApagado[8] == true)
			{
			    IncendioAcontecendo = false;
			    ApagandoIncendio[playerid] = false;
			    Extintor[playerid] = 0;
			    GetPlayerName(playerid, NickName, sizeof(NickName));
			    GivePlayerMoney(playerid,1000);
		        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		        SendClientMessage(playerid, 0x33CCFFAA, "[] Voc� recebeu uma quantia de R$1.000 como Pr�mio !");
			    MeioDeApagar[playerid] = 0;
			    KillTimer(SetTimerEx("ApagarFogo", 12000, false, "i", playerid));
			}
		}
	}
	return 1;
}
//==============================================================================//
stock AtaqueLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Ataques.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock DivulgouLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Divulgou.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public IsAtBusStop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
    	if(IsPlayerInRangeOfPoint(playerid,3.0,2868.9622,-1416.5736,11.0518) || IsPlayerInRangeOfPoint(playerid,3.0,1860.4075,-1159.9828,23.8553) || IsPlayerInRangeOfPoint(playerid,3.0,1189.1868,-1354.8392,13.5687)
    	|| IsPlayerInRangeOfPoint(playerid,3.0,850.7612,-1333.9199,13.6376) || IsPlayerInRangeOfPoint(playerid,3.0,2243.9165,-1726.0015,13.5469) || IsPlayerInRangeOfPoint(playerid,3.0,2636.3699,-1692.7764,10.9063)
    	|| IsPlayerInRangeOfPoint(playerid,3.0,1948.7146,-1454.3983,13.5469) || IsPlayerInRangeOfPoint(playerid,3.0,393.6521,-1766.6113,5.5408) || IsPlayerInRangeOfPoint(playerid,3.0,1567.2344,-1725.5209,13.5469)
    	|| IsPlayerInRangeOfPoint(playerid,3.0,1705.7418,-1806.0801,13.5469) || IsPlayerInRangeOfPoint(playerid,3.0,1570.9974,-2188.0564,13.5469) || IsPlayerInRangeOfPoint(playerid,3.0,2295.2600,-2288.5183,13.5469))
		{
        	return 1;
		}
	}
	return 0;
}
stock IsNumero(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
stock CrashPlayer(playerid)
{
	for(new i=0;i<=1000;i++) CreatePlayerObject(playerid,4108,0,0,0,0,0,0);
	return 1;
}
stock IsPlayerInTerritorio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= Territorio[MinX] && y >= Territorio[MinY] && x <= Territorio[MaxX] && y <= Territorio[MaxY]) return 1;
    return 0;
}
/*stock TentouDivulgar(result[])
{
	if(strfind(result, "189.", true) != -1 || strfind(result, "201.", true) != -1 || strfind(result, "200.", true) != -1 || strfind(result, "75.", true) != -1 || strfind(result, "91.", true) != -1 || strfind(result, "67.", true) != -1 || strfind(result, "69.", true) != -1 || strfind(result, "205.", true) != -1 || strfind(result, ":7717", true) != -1 || strfind(result, ":7777", true) != -1 || strfind(result, ":1122", true) != -1 ||
	strfind(result, "168.", true) != -1 || strfind(result, "1 8 9", true) != -1 || strfind(result, "2 0 1", true) != -1 || strfind(result, "192.", true) != -1 || strfind(result, "254.", true) != -1 || strfind(result, "7 7 7 7.", true) != -1 || strfind(result, "169.", true) != -1 || strfind(result, ":8780", true) != -1 ||
    strfind(result, "2 0 0", true) != -1 || strfind(result, "1 6 9", true) != -1 || strfind(result, "63.", true) != -1 || strfind(result, "1 6 8", true) != -1)
    { return 1; }
	return 0;
}*/
stock TentouDivulgar(string[])
{
	new x=0;
	for (new i = 0, j = strlen(string); i <= j; i++)
	{
		if (string[i] >= 46 && string[i] <= 58)
		{
		    x+=1;
		}
	}
	if(x >= 8) return 1;
	return 0;
}
public fecharpc()
{
    F_MoveObject(ppc2,923.40002441406, -1229, 18.700000762939,10);
	F_MoveObject(ppc3,923.40002441406, -1217.5, 18.700000762939,10);
}
public fecharpc2()
{
    F_MoveObject(ppc2,923.40002441406, -1229, 18.700000762939,10);
	F_MoveObject(ppc3,923.40002441406, -1217.5, 18.700000762939,10);
}
public fecharcv()
{
    F_MoveObject(cv2,2424.8999023438, -2093.6799316406, 15.329999923706,10);
	F_MoveObject(cv3,2424.8999023438, -2082.1201171875, 15.329999923706,10);
}
public fecharcv2()
{
    F_MoveObject(cv2,2424.8999023438, -2093.6799316406, 15.329999923706,10);
	F_MoveObject(cv3,2424.8999023438, -2082.1201171875, 15.329999923706,10);
}
public fecharballas()
{
    F_MoveObject( Portaoballas, 1121.1999511719, -1159.3000488281, 25.5,3);
}
public fecharyakuza1()
{
	F_MoveObject(pyakuza1, 664.862,-1309.311,15.234,3);
}
public fecharyakuza3()
{
    F_MoveObject(pyakuza3, 785.128,-1152.442,25.430,3);
}
public fecharsons2()
{
	F_MoveObject(Portaosons2, 1128.3000488281, -1159, 25.60000038147,3);
}
public fecharsons3()
{
    F_MoveObject(Portaosons3, 664.40002441406, -479.60000610352, 18.10000038147,3);
}
forward fecharacn();
public fecharacn()
{
    F_MoveObject( acn, 1496.1875, -699.90942382813, 96.523391723633,3);
}
stock IsVehicleValid(id)
{
	new type=GetVehicleModel(id);
	new blocked[]={ 548, 425, 417, 487, 488, 497, 563, 447, 469, 520 };
	for(new i;i<sizeof(blocked);i++)
	{
		if(type == blocked[i])
		{
			return 0;
		}
	}
	return 1;
}
stock IsPlayerInArea(playerid, Float:max_x, Float:min_x, Float:max_y, Float:min_y)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if(X <= max_x && X >= min_x && Y <= max_y && Y >= min_y) return 1;
	return 0;
}

stock IsPlayerInWater(playerid)
{
	new Float:x,Float:y,Float:pz;
	GetPlayerPos(playerid,x,y,pz);
	if (
 	(IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && pz <= 9.0484) //lv piratenschiff
  	|| (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && pz <= 10.0792) //lv visage
  	|| (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && pz <= 41.06) //lv staucamm
  	|| (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && pz <= 5.24) //sf s�dwesten kleiner teich
  	|| (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && pz <= 5.72) //sf gammel teich
  	|| (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && pz <= 9.3145) //ls neben dem airport
  	|| (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && pz <= 18.45) //ls mitte teich
  	|| (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && pz <= 22.615) //ls weiter s�d�stlich
  	|| (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && pz <= 9.4171) //lv pool �stlich
  	|| (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && pz <= 112.45) //ls pool nordwestlich
  	|| (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && pz <= 87.123) //pool bei maddog's haus oben
  	|| (pz < 1.5)
	)
	{
	    return 1;
	}
	return 0;
}
stock SetHora()
{
	gettime(hour, minute, second);
	if(hour == 0 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
	if(hour == 1 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 2 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 3 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
	if(hour == 4 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 5 && minute >= 0 && minute <= 39) { SetWorldTime(5); }
	if(hour == 5 && minute >= 40 && minute <= 49) { SetWorldTime(23); }
	if(hour == 5 && minute >= 50 && minute <= 59) { SetWorldTime(22); }
	if(hour == 6 && minute >= 0 && minute <= 9) { SetWorldTime(21); }
	if(hour == 6 && minute >= 30 && minute <= 59) { SetWorldTime(7); }
	if(hour == 7 && minute >= 0 && minute <= 59) { SetWorldTime(7); }
	if(hour == 8 && minute >= 0 && minute <= 59) { SetWorldTime(8); }
	if(hour == 9 && minute >= 0 && minute <= 59) { SetWorldTime(9); }
	if(hour == 10 && minute >= 0 && minute <= 59) { SetWorldTime(10); }
	if(hour == 11 && minute >= 0 && minute <= 59) { SetWorldTime(11); }
	if(hour == 12 && minute >= 0 && minute <= 59) { SetWorldTime(12); }
	if(hour == 13 && minute >= 0 && minute <= 59) { SetWorldTime(13); }
	if(hour == 14 && minute >= 0 && minute <= 59) { SetWorldTime(14); }
	if(hour == 15 && minute >= 0 && minute <= 59) { SetWorldTime(15); }
	if(hour == 16 && minute >= 0 && minute <= 59) { SetWorldTime(16); }
	if(hour == 17 && minute >= 0 && minute <= 59) { SetWorldTime(17); }
	if(hour == 17 && minute >= 35 && minute <= 39) { SetWorldTime(20); }
	if(hour == 17 && minute >= 40 && minute <= 49) { SetWorldTime(21); }
	if(hour == 17 && minute >= 55 && minute <= 59) { SetWorldTime(23); }
	if(hour == 18 && minute >= 0 && minute <= 29) { SetWorldTime(5); }
	if(hour == 19 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 20 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
	if(hour == 21 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 22 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 23 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
}
forward Atualizar3Dtexts();
public Atualizar3Dtexts()
{
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
	    Delete3DTextLabel(HouseLabel[h]);
		if(HouseInfo[h][hOwned] == 0)
		{
			format(gstring, sizeof(gstring), "Casa A Venda\nTipo: %s\nValor: R$%d\nNivel: %d\nPara comprar digite /comprarcasa",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
			HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
		}
		if(HouseInfo[h][hOwned] == 1)
		{
			if(HouseInfo[h][hRentabil] == 0)
			{
				format(gstring, sizeof(gstring), "Dono: %s\nNivel: %d",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
			else
			{
				format(gstring, sizeof(gstring), "Dono: %s\nAluguel: R$%d\nNivel: %d\nDigite /alugarquarto para alugar um quarto",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
			}
		}
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		Delete3DTextLabel(BizzLabel[h]);
		if(BizzInfo[h][bOwned] == 0)
		{
			format(gstring, sizeof(gstring), "%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\nPara comprar digite /compraremp",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded]);
			BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
   			format(gstring, sizeof(gstring), "%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nAperte Enter Para Entrar",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded]);
   			BizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,20.0,0);
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
		Delete3DTextLabel(SBizzLabel[h]);
		if(SBizzInfo[h][sbOwned] == 0)
		{
			format(gstring, sizeof(gstring), "%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\nPara comprar digite /compraremp",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
		if(SBizzInfo[h][sbOwned] == 1)
		{
			format(gstring, sizeof(gstring), "%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\nAperte Enter Para Entrar",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(gstring,COLOR_AZULBB,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,20.0,0);
		}
	}
}
/*stock GetPlayerSpeed(playerid,bool:kmh)
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz); else GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}*/
forward ContarJogadores();
public ContarJogadores()
{
	new	Jogadores = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
			Jogadores++;
		}
	}
	return Jogadores;
}
/*stock SpamProtection(playerid)
{
	//if(PlayerInfo[playerid][pAdmin] == 1342 || admtrampando[playerid] > 0 || IsPlayerNPC(playerid)) return 1;
	if(gSpamCount[playerid][0] == 0) { gSpamCount[playerid][1] = TimeStamp(); }
    gSpamCount[playerid][0]++;
	if(TimeStamp() - gSpamCount[playerid][1] > SPAM_TIMELIMIT)
	{
		gSpamCount[playerid][0] = 1;
		gSpamCount[playerid][1] = TimeStamp();
	}
	else if(gSpamCount[playerid][0] == SPAM_MAX_MSGS)
	{
		format(gstring,sizeof(gstring),"|ATEN��O|: %s foi kickado por Capetinha_Bomzinho, Motivo: flood excessivo.",PlayerName(playerid));
		SendClientMessageToAll(COLOR_LIGHTRED,gstring);
		SendClientMessage(playerid, COLOR_LIGHTRED,"Administrador_BOT te kickou do servidor, e n�o o contrarie novamente");
		Kick(playerid);
	}
 	else if(gSpamCount[playerid][0] == SPAM_MAX_MSGS-2)
	{
	    SendClientMessage(playerid,COLOR_RED,".*** AVISO: PARE DE FLOODAR, OU VOC� SER� KICKADO. ***.");
	}
 	return 1;
}
stock TimeStamp()
{
	new time = GetTickCount() / 1000;
	return time;
}*/
forward Anuncio();
public Anuncio()
{
	if(panuncio > 0)
	{
			panuncio = 0;
	}
}
stock RemovePlayerFromVehicleEx(playerid)
{
	RemovePlayerFromVehicle(playerid);
	TogglePlayerControllable(playerid, 1);
}
public GetHealthAndVerify()//sniper one shot
{
	for(new i = 0; i < MAX_PLAYERS; i++)
    {
    	GetPlayerHealth(i,ss[i]);
        GetPlayerArmour(i,ss2[i]);
       	hp_new[i] = ss[i]+ss2[i];
        hp_counter[i] = hp_old[i] - hp_new[i];
        if(hp_counter[i] >= 41 && hp_counter[i] <= 42)
        {
        	if(ss2[i] > 0 && ss[i] == 100)
         	{
          		SetPlayerArmour(i,0);
          		SetPlayerHealth(i,armour_old[i]);
          	}
           	if(ss2[i] > 0 && ss[i] != 100)
            {
            	SetPlayerArmour(i,0);
             	SetPlayerHealth(i,(ss[i]-(100-armour_old[i])));
            }
            if(ss2[i] == 0) SetPlayerHealth(i,0);
        }
        hp_old[i] = hp_new[i];
        GetPlayerArmour(i,armour_old[i]);
     }
}
stock GetPlayerOrg(playerid)
{
    new org;
	if(PlayerInfo[playerid][pLider] > 0)
	{
		org = PlayerInfo[playerid][pLider];
		return org;
	}
	if(PlayerInfo[playerid][pMembro] > 0)
	{
		org = PlayerInfo[playerid][pMembro];
		return org;
	}
	return 0;
}
IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	while (text[pos] < 0x21) // Strip out leading spaces
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID; // No passed text
		pos++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos])) // Check whole passed string
	{
		// If they have a numeric name you have a problem (although names are checked on id failure)
		userid = strval(text[pos]);
		if (userid >=0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid))
			{
				/*if (playerid != INVALID_PLAYER_ID)
				{
					SendClientMessage(playerid, 0xFF0000AA, "User not connected");
				}*/
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid; // A player was found
			}
		}
		/*else
		{
			if (playerid != INVALID_PLAYER_ID)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Invalid user ID");
			}
			userid = INVALID_PLAYER_ID;
		}
		return userid;*/
		// Removed for fallthrough code
	}
	// They entered [part of] a name or the id search failed (check names just incase)
	new len = strlen(text[pos]);
	new count = 0;
	new name[MAX_PLAYER_NAME];
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof (name));
			if (strcmp(name, text[pos], true, len) == 0) // Check segment of name
			{
				if (len == strlen(name)) // Exact match
				{
					return i; // Return the exact player on an exact match
					// Otherwise if there are two players:
					// Me and MeYou any time you entered Me it would find both
					// And never be able to return just Me's id
				}
				else // Partial match
				{
					count++;
					userid = i;
				}
			}
		}
	}
	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
			}
		}
		userid = INVALID_PLAYER_ID;
	}
	return userid; // INVALID_USER_ID for bad return
}
//=========================================================//
forward IsAGMOBCar(carid); //534ate544
public IsAGMOBCar(carid)
{
	if((carid >= 534) && (carid <= 544))
	{
		return 1;
	}
	return 0;
}
forward IsAPCCCar(carid);
public IsAPCCCar(carid)
{
	if((carid >= 545) && (carid <= 557))//427ate432
	{
		return 1;
	}
	return 0;
}
forward IsACaminhoneiroCar(carid);
public IsACaminhoneiroCar(carid)
{
	if((carid >= 558) && (carid <= 560))//558 ate 560
	{
		return 1;
	}
	return 0;
}
forward BusrouteEnd(playerid);
public BusrouteEnd(playerid)
{
    if (gPlayerTerminal[playerid] == 13)
	{
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
  		TransportMoney[playerid] += 3900;
		DisablePlayerCheckpoint(playerid);
		gPlayerTerminal[playerid] = 0;
	}
	else
	{
		new conta;
		conta = gPlayerTerminal[playerid]*300;
	    format(gstring, 128, "Voc� encerrou seu servi�o de �nibus e ganhou R$%d.", conta-300);
		SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
		TransportMoney[playerid] += conta-300;
		DisablePlayerCheckpoint(playerid);
		gPlayerTerminal[playerid] = 0;
	}
	return 1;
}
forward busstoptimer(playerid);
public busstoptimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new newcar = GetPlayerVehicleID(playerid);
	    if(IsABus(newcar))
	    {
	        TogglePlayerControllable(playerid, 1);
	        SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Agora voc� pode seguir at� a pr�xima parada de �nibus!");
	    }
	}
}
forward IsABus(carid);
public IsABus(carid)
{
	if(carid >= 367 && carid <= 370)//367ate370
	{
		return 1;
	}
	return 0;
}
forward AnuncioHitmans();
public AnuncioHitmans()
{
	if(panunciohitmans > 0)
	{
		panunciohitmans = 0;
	}
}
forward Anunciomerce();
public Anunciomerce()
{
	if(panunciomerce > 0)
	{
		panunciomerce = 0;
	}
}
forward RelatoAdm();
public RelatoAdm()
{
	if(prelatoadm > 0)
	{
		prelatoadm = 0;
	}
}
forward Equipargg();
public Equipargg()
{
	if(pequipargg > 0)
	{
	    pequipargg = 0;
	}
}
forward AnuncioMafia();
public AnuncioMafia()
{
	if(panunciomafia > 0)
	{
		panunciomafia = 0;
	}
}
forward AnuncioGang();
public AnuncioGang()
{
	if(panunciogang > 0)
	{
		panunciogang = 0;
	}
}
forward AnuncioTaxi();
public AnuncioTaxi()
{
	if(panunciotaxi > 0)
	{
		panunciotaxi = 0;
	}
}
forward AnuncioAlqaeda();
public AnuncioAlqaeda()
{
	if(panuncioalqaeda > 0)
	{
		panuncioalqaeda = 0;
	}
}
forward AnuncioTaliban();
public AnuncioTaliban()
{
	if(panunciotaliban > 0)
	{
		panunciotaliban = 0;
	}
}
stock ResetPlayerWeaponsEx(playerid)
{
    ResetPlayerWeapons(playerid);
	PlayerInfo[playerid][pGun1] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
	PlayerInfo[playerid][pGun4] = 0;
	PlayerInfo[playerid][pGun5] = 0;
	PlayerInfo[playerid][pGun6] = 0;
	PlayerInfo[playerid][pGun7] = 0;
	PlayerInfo[playerid][pGun8] = 0;
	PlayerInfo[playerid][pGun9] = 0;
	PlayerInfo[playerid][pGun10] = 0;
	PlayerInfo[playerid][pGun11] = 0;
	PlayerInfo[playerid][pGun12] = 0;
	PlayerInfo[playerid][pAmmo1] = 0;
	PlayerInfo[playerid][pAmmo2] = 0;
	PlayerInfo[playerid][pAmmo3] = 0;
	PlayerInfo[playerid][pAmmo4] = 0;
	PlayerInfo[playerid][pAmmo5] = 0;
	PlayerInfo[playerid][pAmmo6] = 0;
	PlayerInfo[playerid][pAmmo7] = 0;
	PlayerInfo[playerid][pAmmo8] = 0;
	PlayerInfo[playerid][pAmmo9] = 0;
	PlayerInfo[playerid][pAmmo10] = 0;
	PlayerInfo[playerid][pAmmo11] = 0;
	PlayerInfo[playerid][pAmmo12] = 0;
}
forward IsACaminhoneiro(playerid);
public IsACaminhoneiro(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new emprego = PlayerInfo[playerid][pEmprego];
	    if(emprego==11)
		{
		    return 1;
		}
	}
	return 0;
}
forward ZerarRecarga(playerid);
public ZerarRecarga(playerid)
{
	if(var1[playerid] != 0) var1[playerid] = 0;
}
public RandomServerNames()
{
	SyncTime();
	new string[64];
	new random1 = random(sizeof(SVNAMES));
	format(string, sizeof(string), "hostname %s", SVNAMES[random1]);
	SendRconCommand(string);
}
stock IPlog(playerid)
{
	new PlayerIP[17];
   	GetPlayerIp(playerid,PlayerIP, sizeof(PlayerIP));
	getdate(year, month, day);
	gettime(hour,minute);
	format(gstring, sizeof(gstring), "[%d/%d/%d - %d:%d] IP: %s - %s[%d]\n", day, month, year, hour, minute, PlayerIP, PlayerName(playerid), playerid);
	new File:hFile;
	hFile = fopen("Logs/IP.log", io_append);
	fwrite(hFile, gstring);
	fclose(hFile);
}
stock AdminLog(string[])
{
    new File:hFile;
	hFile = fopen("Logs/AdmTeste.log", io_append);
	fwrite(hFile, string);
	fclose(hFile);
	return 1;
}
stock LideresLog(string[])
{
    new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Lideres.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}
stock AChatLog(string[])
{
    new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/AChat.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}
stock AComandosLog(string[])
{
    new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/ComandosAdmin.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}
forward DateProp(playerid);
public DateProp(playerid)
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if (strcmp(playername, HouseInfo[h][hOwner], true) == 0)
		{
			HouseInfo[h][hDate] = curdate;
			OnPropUpdate();
		}
	}
	return 1;
}
GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{
	new Float:a;

	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);

	if (GetPlayerVehicleID(playerid)) {
	    GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}

	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}
forward Checkprop();
public Checkprop()
{
	new olddate;
	new string[128];
	new curdate = getdate();
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 9)
		{
			olddate = HouseInfo[h][hDate];
			if(curdate-olddate >= 10)
			{
				getdate(v[0], v[1], v[2]);
				gettime(v[3], v[4], v[5]);
				format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Casa ID:%d vendida, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], h, HouseInfo[h][hOwner], curdate-olddate);
				new File:hFile;
				hFile = fopen("Logs/CheckProp.log", io_append);
				fwrite(hFile, string);
				fclose(hFile); // grava��o concluida
				HouseInfo[h][hHel] = 0;
				HouseInfo[h][hArm] = 0;
				HouseInfo[h][hHealthx] = 0;
				HouseInfo[h][hHealthy] = 0;
				HouseInfo[h][hHealthz] = 0;
				HouseInfo[h][hArmorrx] = 0;
				HouseInfo[h][hArmorry] = 0;
				HouseInfo[h][hArmorrz] = 0;
				HouseInfo[h][hLock] = 1;
				HouseInfo[h][hOwned] = 0;
				HouseInfo[h][hVec] = 475;
				HouseInfo[h][hVcol1] = -1;
				HouseInfo[h][hVcol2] = -1;
				strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 255);
				OnPropUpdate();
	}
		}
	}
	return 1;
}
